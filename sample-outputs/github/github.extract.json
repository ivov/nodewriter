{
  "descriptors": {
    "name": "GitHub",
    "description": "GitHub's v3 REST API",
    "baseUrl": "https://api.github.com",
    "specVersion": "1.1.4",
    "openApiVersion": "3.0.3",
    "nodeTypeClassName": "GitHub",
    "auth": [],
    "docsUrl": "https://docs.github.com/rest/",
    "resources": [
      "meta",
      "app",
      "codes-of-conduct",
      "emoji",
      "dependabot",
      "secret-scanning",
      "activity",
      "gist",
      "gitignore",
      "issue",
      "license",
      "markdown",
      "org",
      "action",
      "oidc",
      "code-scanning",
      "codespace",
      "interaction",
      "migration",
      "package",
      "project",
      "repo",
      "billing",
      "team",
      "reaction",
      "rate-limit",
      "check",
      "dependency-graph",
      "git",
      "pull",
      "search",
      "user"
    ]
  },
  "operations": {
    "meta/root": {
      "displayName": "GitHub API Root",
      "description": "Get Hypermedia links to resources accessible in GitHub's REST API",
      "method": "get",
      "endpoint": "/",
      "tags": [
        "meta"
      ],
      "params": []
    },
    "apps/get-authenticated": {
      "displayName": "Get the authenticated app",
      "description": "Returns the GitHub App associated with the authentication credentials used. To see how many app installations are associ...",
      "method": "get",
      "endpoint": "/app",
      "tags": [
        "app"
      ],
      "params": []
    },
    "apps/create-from-manifest": {
      "displayName": "Create a GitHub App from a manifest",
      "description": "Use this endpoint to complete the handshake necessary when implementing the [GitHub App Manifest flow](https://docs.gith...",
      "method": "post",
      "endpoint": "/app-manifests/{code}/conversions",
      "tags": [
        "app"
      ],
      "params": [
        {
          "name": "code",
          "location": "path",
          "required": true,
          "description": "",
          "type": "string",
          "default": ""
        }
      ]
    },
    "apps/get-webhook-config-for-app": {
      "displayName": "Get a webhook configuration for an app",
      "description": "Returns the webhook configuration for a GitHub App. For more information about configuring a webhook for your app, see \"...",
      "method": "get",
      "endpoint": "/app/hook/config",
      "tags": [
        "app"
      ],
      "params": []
    },
    "apps/update-webhook-config-for-app": {
      "displayName": "Update a webhook configuration for an app",
      "description": "Updates the webhook configuration for a GitHub App. For more information about configuring a webhook for your app, see \"...",
      "method": "patch",
      "endpoint": "/app/hook/config",
      "tags": [
        "app"
      ],
      "params": [
        {
          "name": "content_type",
          "location": "body",
          "required": false,
          "description": "The media type used to serialize the payloads. Supported values include `json` and `form`. The default is `form`",
          "type": "string",
          "default": "",
          "placeholder": "e.g. \"json\""
        },
        {
          "name": "insecure_ssl",
          "location": "body",
          "required": false,
          "description": "Determines whether the SSL certificate of the host for `url` will be verified when delivering payloads. Supported values...",
          "type": "string",
          "default": "",
          "placeholder": "e.g. \"0\""
        },
        {
          "name": "secret",
          "location": "body",
          "required": false,
          "description": "If provided, the `secret` will be used as the `key` to generate the HMAC hex digest value for [delivery signature header...",
          "type": "string",
          "default": "",
          "placeholder": "e.g. \"********\""
        },
        {
          "name": "url",
          "location": "body",
          "required": false,
          "description": "The URL to which the payloads will be delivered",
          "type": "string",
          "default": "",
          "placeholder": "e.g. https://example.com/webhook"
        }
      ]
    },
    "apps/list-webhook-deliveries": {
      "displayName": "List deliveries for an app webhook",
      "description": "Returns a list of webhook deliveries for the webhook configured for a GitHub App.  You must use a [JWT](https://docs.git...",
      "method": "get",
      "endpoint": "/app/hook/deliveries",
      "tags": [
        "app"
      ],
      "params": [
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "cursor",
          "location": "query",
          "required": false,
          "description": "Used for pagination: the starting delivery from which the page of deliveries is fetched. Refer to the `link` header for ...",
          "type": "string",
          "default": ""
        },
        {
          "name": "redelivery",
          "location": "query",
          "required": false,
          "description": "",
          "type": "boolean",
          "default": false
        }
      ]
    },
    "apps/get-webhook-delivery": {
      "displayName": "Get a delivery for an app webhook",
      "description": "Returns a delivery for the webhook configured for a GitHub App.  You must use a [JWT](https://docs.github.com/apps/build...",
      "method": "get",
      "endpoint": "/app/hook/deliveries/{delivery_id}",
      "tags": [
        "app"
      ],
      "params": [
        {
          "name": "delivery_id",
          "location": "path",
          "required": true,
          "description": "",
          "type": "number",
          "default": 0
        }
      ]
    },
    "apps/redeliver-webhook-delivery": {
      "displayName": "Redeliver a delivery for an app webhook",
      "description": "Redeliver a delivery for the webhook configured for a GitHub App.  You must use a [JWT](https://docs.github.com/apps/bui...",
      "method": "post",
      "endpoint": "/app/hook/deliveries/{delivery_id}/attempts",
      "tags": [
        "app"
      ],
      "params": [
        {
          "name": "delivery_id",
          "location": "path",
          "required": true,
          "description": "",
          "type": "number",
          "default": 0
        }
      ]
    },
    "apps/list-installations": {
      "displayName": "List installations for the authenticated app",
      "description": "You must use a [JWT](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-a...",
      "method": "get",
      "endpoint": "/app/installations",
      "tags": [
        "app"
      ],
      "params": [
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        },
        {
          "name": "since",
          "location": "query",
          "required": false,
          "description": "Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/IS...",
          "type": "string",
          "default": ""
        },
        {
          "name": "outdated",
          "location": "query",
          "required": false,
          "description": "",
          "type": "string",
          "default": ""
        }
      ]
    },
    "apps/delete-installation": {
      "displayName": "Delete an installation for the authenticated app",
      "description": "Uninstalls a GitHub App on a user, organization, or business account. If you prefer to temporarily suspend an app's acce...",
      "method": "delete",
      "endpoint": "/app/installations/{installation_id}",
      "tags": [
        "app"
      ],
      "params": [
        {
          "name": "installation_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the installation",
          "type": "number",
          "default": 0
        }
      ]
    },
    "apps/get-installation": {
      "displayName": "Get an installation for the authenticated app",
      "description": "Enables an authenticated GitHub App to find an installation's information using the installation id.  You must use a [JW...",
      "method": "get",
      "endpoint": "/app/installations/{installation_id}",
      "tags": [
        "app"
      ],
      "params": [
        {
          "name": "installation_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the installation",
          "type": "number",
          "default": 0
        }
      ]
    },
    "apps/create-installation-access-token": {
      "displayName": "Create an installation access token for an app",
      "description": "Creates an installation access token that enables a GitHub App to make authenticated API requests for the app's installa...",
      "method": "post",
      "endpoint": "/app/installations/{installation_id}/access_tokens",
      "tags": [
        "app"
      ],
      "params": [
        {
          "name": "installation_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the installation",
          "type": "number",
          "default": 0
        },
        {
          "name": "permissions",
          "location": "body",
          "required": false,
          "description": "The permissions granted to the user-to-server access token",
          "type": "json",
          "default": "{}"
        },
        {
          "name": "repositories",
          "location": "body",
          "required": false,
          "description": "List of repository names that the token should have access to",
          "type": "string",
          "default": ""
        },
        {
          "name": "repository_ids",
          "location": "body",
          "required": false,
          "description": "List of repository IDs that the token should have access to",
          "type": "json",
          "default": "{}"
        }
      ]
    },
    "apps/unsuspend-installation": {
      "displayName": "Unsuspend an app installation",
      "description": "Removes a GitHub App installation suspension.  You must use a [JWT](https://docs.github.com/apps/building-github-apps/au...",
      "method": "delete",
      "endpoint": "/app/installations/{installation_id}/suspended",
      "tags": [
        "app"
      ],
      "params": [
        {
          "name": "installation_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the installation",
          "type": "number",
          "default": 0
        }
      ]
    },
    "apps/suspend-installation": {
      "displayName": "Suspend an app installation",
      "description": "Suspends a GitHub App on a user, organization, or business account, which blocks the app from accessing the account's re...",
      "method": "put",
      "endpoint": "/app/installations/{installation_id}/suspended",
      "tags": [
        "app"
      ],
      "params": [
        {
          "name": "installation_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the installation",
          "type": "number",
          "default": 0
        }
      ]
    },
    "apps/delete-authorization": {
      "displayName": "Delete an app authorization",
      "description": "OAuth application owners can revoke a grant for their OAuth application and a specific user. You must use [Basic Authent...",
      "method": "delete",
      "endpoint": "/applications/{client_id}/grant",
      "tags": [
        "app"
      ],
      "params": [
        {
          "name": "client_id",
          "location": "path",
          "required": true,
          "description": "The client ID of the GitHub app",
          "type": "string",
          "default": ""
        },
        {
          "name": "access_token",
          "location": "body",
          "required": true,
          "description": "The OAuth access token used to authenticate to the GitHub API",
          "type": "string",
          "default": ""
        }
      ]
    },
    "apps/delete-token": {
      "displayName": "Delete an app token",
      "description": "OAuth application owners can revoke a single token for an OAuth application. You must use [Basic Authentication](https:/...",
      "method": "delete",
      "endpoint": "/applications/{client_id}/token",
      "tags": [
        "app"
      ],
      "params": [
        {
          "name": "client_id",
          "location": "path",
          "required": true,
          "description": "The client ID of the GitHub app",
          "type": "string",
          "default": ""
        },
        {
          "name": "access_token",
          "location": "body",
          "required": true,
          "description": "The OAuth access token used to authenticate to the GitHub API",
          "type": "string",
          "default": ""
        }
      ]
    },
    "apps/reset-token": {
      "displayName": "Reset a token",
      "description": "OAuth applications can use this API method to reset a valid OAuth token without end-user involvement. Applications must ...",
      "method": "patch",
      "endpoint": "/applications/{client_id}/token",
      "tags": [
        "app"
      ],
      "params": [
        {
          "name": "client_id",
          "location": "path",
          "required": true,
          "description": "The client ID of the GitHub app",
          "type": "string",
          "default": ""
        },
        {
          "name": "access_token",
          "location": "body",
          "required": true,
          "description": "The access_token of the OAuth application",
          "type": "string",
          "default": ""
        }
      ]
    },
    "apps/check-token": {
      "displayName": "Check a token",
      "description": "OAuth applications can use a special API method for checking OAuth token validity without exceeding the normal rate limi...",
      "method": "post",
      "endpoint": "/applications/{client_id}/token",
      "tags": [
        "app"
      ],
      "params": [
        {
          "name": "client_id",
          "location": "path",
          "required": true,
          "description": "The client ID of the GitHub app",
          "type": "string",
          "default": ""
        },
        {
          "name": "access_token",
          "location": "body",
          "required": true,
          "description": "The access_token of the OAuth application",
          "type": "string",
          "default": ""
        }
      ]
    },
    "apps/scope-token": {
      "displayName": "Create a scoped access token",
      "description": "Use a non-scoped user-to-server access token to create a repository scoped and/or permission scoped user-to-server acces...",
      "method": "post",
      "endpoint": "/applications/{client_id}/token/scoped",
      "tags": [
        "app"
      ],
      "params": [
        {
          "name": "client_id",
          "location": "path",
          "required": true,
          "description": "The client ID of the GitHub app",
          "type": "string",
          "default": ""
        },
        {
          "name": "access_token",
          "location": "body",
          "required": true,
          "description": "The access token used to authenticate to the GitHub API",
          "type": "string",
          "default": "",
          "placeholder": "e.g. e72e16c7e42f292c6912e7710c838347ae178b4a"
        },
        {
          "name": "permissions",
          "location": "body",
          "required": false,
          "description": "The permissions granted to the user-to-server access token",
          "type": "json",
          "default": "{}"
        },
        {
          "name": "repositories",
          "location": "body",
          "required": false,
          "description": "The list of repository names to scope the user-to-server access token to. `repositories` may not be specified if `reposi...",
          "type": "string",
          "default": ""
        },
        {
          "name": "repository_ids",
          "location": "body",
          "required": false,
          "description": "The list of repository IDs to scope the user-to-server access token to. `repository_ids` may not be specified if `reposi...",
          "type": "json",
          "default": "{}"
        },
        {
          "name": "target",
          "location": "body",
          "required": false,
          "description": "The name of the user or organization to scope the user-to-server access token to. **Required** unless `target_id` is spe...",
          "type": "string",
          "default": "",
          "placeholder": "e.g. octocat"
        },
        {
          "name": "target_id",
          "location": "body",
          "required": false,
          "description": "The ID of the user or organization to scope the user-to-server access token to. **Required** unless `target` is specifie...",
          "type": "number",
          "default": 0
        }
      ]
    },
    "apps/get-by-slug": {
      "displayName": "Get an app",
      "description": "**Note**: The `:app_slug` is just the URL-friendly name of your GitHub App. You can find this on the settings page for y...",
      "method": "get",
      "endpoint": "/apps/{app_slug}",
      "tags": [
        "app"
      ],
      "params": [
        {
          "name": "app_slug",
          "location": "path",
          "required": true,
          "description": "",
          "type": "string",
          "default": ""
        }
      ]
    },
    "codes-of-conduct/get-all-codes-of-conduct": {
      "displayName": "Get all codes of conduct",
      "description": "",
      "method": "get",
      "endpoint": "/codes_of_conduct",
      "tags": [
        "codes-of-conduct"
      ],
      "params": []
    },
    "codes-of-conduct/get-conduct-code": {
      "displayName": "Get a code of conduct",
      "description": "",
      "method": "get",
      "endpoint": "/codes_of_conduct/{key}",
      "tags": [
        "codes-of-conduct"
      ],
      "params": [
        {
          "name": "key",
          "location": "path",
          "required": true,
          "description": "",
          "type": "string",
          "default": ""
        }
      ]
    },
    "emojis/get": {
      "displayName": "Get emojis",
      "description": "Lists all the emojis available to use on GitHub",
      "method": "get",
      "endpoint": "/emojis",
      "tags": [
        "emoji"
      ],
      "params": []
    },
    "dependabot/list-alerts-for-enterprise": {
      "displayName": "List Dependabot alerts for an enterprise",
      "description": "Lists Dependabot alerts for repositories that are owned by the specified enterprise. To use this endpoint, you must be a...",
      "method": "get",
      "endpoint": "/enterprises/{enterprise}/dependabot/alerts",
      "tags": [
        "dependabot"
      ],
      "params": [
        {
          "name": "enterprise",
          "location": "path",
          "required": true,
          "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id",
          "type": "string",
          "default": ""
        },
        {
          "name": "state",
          "location": "query",
          "required": false,
          "description": "A comma-separated list of states. If specified, only alerts with these states will be returned.  Can be: `dismissed`, `f...",
          "type": "string",
          "default": ""
        },
        {
          "name": "severity",
          "location": "query",
          "required": false,
          "description": "A comma-separated list of severities. If specified, only alerts with these severities will be returned.  Can be: `low`, ...",
          "type": "string",
          "default": ""
        },
        {
          "name": "ecosystem",
          "location": "query",
          "required": false,
          "description": "A comma-separated list of ecosystems. If specified, only alerts for these ecosystems will be returned.  Can be: `compose...",
          "type": "string",
          "default": ""
        },
        {
          "name": "package",
          "location": "query",
          "required": false,
          "description": "A comma-separated list of package names. If specified, only alerts for these packages will be returned",
          "type": "string",
          "default": ""
        },
        {
          "name": "scope",
          "location": "query",
          "required": false,
          "description": "The scope of the vulnerable dependency. If specified, only alerts with this scope will be returned",
          "type": "options",
          "default": "development",
          "options": [
            "development",
            "runtime"
          ]
        },
        {
          "name": "sort",
          "location": "query",
          "required": false,
          "description": "The property by which to sort the results. `created` means when the alert was created. `updated` means when the alert's ...",
          "type": "options",
          "default": "created",
          "options": [
            "created",
            "updated"
          ]
        },
        {
          "name": "direction",
          "location": "query",
          "required": false,
          "description": "The direction to sort the results by",
          "type": "options",
          "default": "desc",
          "options": [
            "asc",
            "desc"
          ]
        },
        {
          "name": "before",
          "location": "query",
          "required": false,
          "description": "A cursor, as given in the [Link header](https://docs.github.com/rest/overview/resources-in-the-rest-api#link-header). If...",
          "type": "string",
          "default": ""
        },
        {
          "name": "after",
          "location": "query",
          "required": false,
          "description": "A cursor, as given in the [Link header](https://docs.github.com/rest/overview/resources-in-the-rest-api#link-header). If...",
          "type": "string",
          "default": ""
        },
        {
          "name": "first",
          "location": "query",
          "required": false,
          "description": "**Deprecated**. The number of results per page (max 100), starting from the first matching result. This parameter must n...",
          "type": "number",
          "default": 30
        },
        {
          "name": "last",
          "location": "query",
          "required": false,
          "description": "**Deprecated**. The number of results per page (max 100), starting from the last matching result. This parameter must no...",
          "type": "number",
          "default": 0
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        }
      ]
    },
    "secret-scanning/list-alerts-for-enterprise": {
      "displayName": "List secret scanning alerts for an enterprise",
      "description": "Lists secret scanning alerts for eligible repositories in an enterprise, from newest to oldest. To use this endpoint, yo...",
      "method": "get",
      "endpoint": "/enterprises/{enterprise}/secret-scanning/alerts",
      "tags": [
        "secret-scanning"
      ],
      "params": [
        {
          "name": "enterprise",
          "location": "path",
          "required": true,
          "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id",
          "type": "string",
          "default": ""
        },
        {
          "name": "state",
          "location": "query",
          "required": false,
          "description": "Set to `open` or `resolved` to only list secret scanning alerts in a specific state",
          "type": "options",
          "default": "open",
          "options": [
            "open",
            "resolved"
          ]
        },
        {
          "name": "secret_type",
          "location": "query",
          "required": false,
          "description": "A comma-separated list of secret types to return. By default all secret types are returned. See \"[Secret scanning patter...",
          "type": "string",
          "default": ""
        },
        {
          "name": "resolution",
          "location": "query",
          "required": false,
          "description": "A comma-separated list of resolutions. Only secret scanning alerts with one of these resolutions are listed. Valid resol...",
          "type": "string",
          "default": ""
        },
        {
          "name": "sort",
          "location": "query",
          "required": false,
          "description": "The property to sort the results by. `created` means when the alert was created. `updated` means when the alert was upda...",
          "type": "options",
          "default": "created",
          "options": [
            "created",
            "updated"
          ]
        },
        {
          "name": "direction",
          "location": "query",
          "required": false,
          "description": "The direction to sort the results by",
          "type": "options",
          "default": "desc",
          "options": [
            "asc",
            "desc"
          ]
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "before",
          "location": "query",
          "required": false,
          "description": "A cursor, as given in the [Link header](https://docs.github.com/rest/overview/resources-in-the-rest-api#link-header). If...",
          "type": "string",
          "default": ""
        },
        {
          "name": "after",
          "location": "query",
          "required": false,
          "description": "A cursor, as given in the [Link header](https://docs.github.com/rest/overview/resources-in-the-rest-api#link-header). If...",
          "type": "string",
          "default": ""
        }
      ]
    },
    "activity/list-public-events": {
      "displayName": "List public events",
      "description": "We delay the public events feed by five minutes, which means the most recent event returned by the public events API act...",
      "method": "get",
      "endpoint": "/events",
      "tags": [
        "activity"
      ],
      "params": [
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "activity/get-feeds": {
      "displayName": "Get feeds",
      "description": "GitHub provides several timeline resources in [Atom](http://en.wikipedia.org/wiki/Atom_(standard)) format. The Feeds API...",
      "method": "get",
      "endpoint": "/feeds",
      "tags": [
        "activity"
      ],
      "params": []
    },
    "gists/list": {
      "displayName": "List gists for the authenticated user",
      "description": "Lists the authenticated user's gists or if called anonymously, this endpoint returns all public gists:",
      "method": "get",
      "endpoint": "/gists",
      "tags": [
        "gist"
      ],
      "params": [
        {
          "name": "since",
          "location": "query",
          "required": false,
          "description": "Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/IS...",
          "type": "string",
          "default": ""
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "gists/create": {
      "displayName": "Create a gist",
      "description": "Allows you to add a new gist with one or more files.  **Note:** Don't name your files \"gistfile\" with a numerical suffix...",
      "method": "post",
      "endpoint": "/gists",
      "tags": [
        "gist"
      ],
      "params": [
        {
          "name": "description",
          "location": "body",
          "required": false,
          "description": "Description of the gist",
          "type": "string",
          "default": "",
          "placeholder": "e.g. Example Ruby script"
        },
        {
          "name": "files",
          "location": "body",
          "required": true,
          "description": "Names and content for the files that make up the gist",
          "type": "json",
          "default": "{}"
        },
        {
          "name": "public",
          "location": "body",
          "required": false,
          "description": "Flag indicating whether the gist is public",
          "type": "boolean",
          "default": false
        }
      ]
    },
    "gists/list-public": {
      "displayName": "List public gists",
      "description": "List public gists sorted by most recently updated to least recently updated.  Note: With [pagination](https://docs.githu...",
      "method": "get",
      "endpoint": "/gists/public",
      "tags": [
        "gist"
      ],
      "params": [
        {
          "name": "since",
          "location": "query",
          "required": false,
          "description": "Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/IS...",
          "type": "string",
          "default": ""
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "gists/list-starred": {
      "displayName": "List starred gists",
      "description": "List the authenticated user's starred gists:",
      "method": "get",
      "endpoint": "/gists/starred",
      "tags": [
        "gist"
      ],
      "params": [
        {
          "name": "since",
          "location": "query",
          "required": false,
          "description": "Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/IS...",
          "type": "string",
          "default": ""
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "gists/delete": {
      "displayName": "Delete a gist",
      "description": "",
      "method": "delete",
      "endpoint": "/gists/{gist_id}",
      "tags": [
        "gist"
      ],
      "params": [
        {
          "name": "gist_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the gist",
          "type": "string",
          "default": ""
        }
      ]
    },
    "gists/get": {
      "displayName": "Get a gist",
      "description": "",
      "method": "get",
      "endpoint": "/gists/{gist_id}",
      "tags": [
        "gist"
      ],
      "params": [
        {
          "name": "gist_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the gist",
          "type": "string",
          "default": ""
        }
      ]
    },
    "gists/update": {
      "displayName": "Update a gist",
      "description": "Allows you to update a gist's description and to update, delete, or rename gist files. Files from the previous version o...",
      "method": "patch",
      "endpoint": "/gists/{gist_id}",
      "tags": [
        "gist"
      ],
      "params": [
        {
          "name": "gist_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the gist",
          "type": "string",
          "default": ""
        },
        {
          "name": "description",
          "location": "body",
          "required": false,
          "description": "The description of the gist",
          "type": "string",
          "default": "",
          "placeholder": "e.g. Example Ruby script"
        },
        {
          "name": "files",
          "location": "body",
          "required": false,
          "description": "The gist files to be updated, renamed, or deleted. Each `key` must match the current filename (including extension) of t...",
          "type": "json",
          "default": "{}"
        }
      ]
    },
    "gists/list-comments": {
      "displayName": "List gist comments",
      "description": "",
      "method": "get",
      "endpoint": "/gists/{gist_id}/comments",
      "tags": [
        "gist"
      ],
      "params": [
        {
          "name": "gist_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the gist",
          "type": "string",
          "default": ""
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "gists/create-comment": {
      "displayName": "Create a gist comment",
      "description": "",
      "method": "post",
      "endpoint": "/gists/{gist_id}/comments",
      "tags": [
        "gist"
      ],
      "params": [
        {
          "name": "gist_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the gist",
          "type": "string",
          "default": ""
        },
        {
          "name": "body",
          "location": "body",
          "required": true,
          "description": "The comment text",
          "type": "string",
          "default": "",
          "placeholder": "e.g. Body of the attachment"
        }
      ]
    },
    "gists/delete-comment": {
      "displayName": "Delete a gist comment",
      "description": "",
      "method": "delete",
      "endpoint": "/gists/{gist_id}/comments/{comment_id}",
      "tags": [
        "gist"
      ],
      "params": [
        {
          "name": "gist_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the gist",
          "type": "string",
          "default": ""
        },
        {
          "name": "comment_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the comment",
          "type": "number",
          "default": 0
        }
      ]
    },
    "gists/get-comment": {
      "displayName": "Get a gist comment",
      "description": "",
      "method": "get",
      "endpoint": "/gists/{gist_id}/comments/{comment_id}",
      "tags": [
        "gist"
      ],
      "params": [
        {
          "name": "gist_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the gist",
          "type": "string",
          "default": ""
        },
        {
          "name": "comment_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the comment",
          "type": "number",
          "default": 0
        }
      ]
    },
    "gists/update-comment": {
      "displayName": "Update a gist comment",
      "description": "",
      "method": "patch",
      "endpoint": "/gists/{gist_id}/comments/{comment_id}",
      "tags": [
        "gist"
      ],
      "params": [
        {
          "name": "gist_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the gist",
          "type": "string",
          "default": ""
        },
        {
          "name": "comment_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the comment",
          "type": "number",
          "default": 0
        },
        {
          "name": "body",
          "location": "body",
          "required": true,
          "description": "The comment text",
          "type": "string",
          "default": "",
          "placeholder": "e.g. Body of the attachment"
        }
      ]
    },
    "gists/list-commits": {
      "displayName": "List gist commits",
      "description": "",
      "method": "get",
      "endpoint": "/gists/{gist_id}/commits",
      "tags": [
        "gist"
      ],
      "params": [
        {
          "name": "gist_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the gist",
          "type": "string",
          "default": ""
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "gists/list-forks": {
      "displayName": "List gist forks",
      "description": "",
      "method": "get",
      "endpoint": "/gists/{gist_id}/forks",
      "tags": [
        "gist"
      ],
      "params": [
        {
          "name": "gist_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the gist",
          "type": "string",
          "default": ""
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "gists/fork": {
      "displayName": "Fork a gist",
      "description": "",
      "method": "post",
      "endpoint": "/gists/{gist_id}/forks",
      "tags": [
        "gist"
      ],
      "params": [
        {
          "name": "gist_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the gist",
          "type": "string",
          "default": ""
        }
      ]
    },
    "gists/unstar": {
      "displayName": "Unstar a gist",
      "description": "",
      "method": "delete",
      "endpoint": "/gists/{gist_id}/star",
      "tags": [
        "gist"
      ],
      "params": [
        {
          "name": "gist_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the gist",
          "type": "string",
          "default": ""
        }
      ]
    },
    "gists/check-is-starred": {
      "displayName": "Check if a gist is starred",
      "description": "",
      "method": "get",
      "endpoint": "/gists/{gist_id}/star",
      "tags": [
        "gist"
      ],
      "params": [
        {
          "name": "gist_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the gist",
          "type": "string",
          "default": ""
        }
      ]
    },
    "gists/star": {
      "displayName": "Star a gist",
      "description": "Note that you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see \"[HTT...",
      "method": "put",
      "endpoint": "/gists/{gist_id}/star",
      "tags": [
        "gist"
      ],
      "params": [
        {
          "name": "gist_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the gist",
          "type": "string",
          "default": ""
        }
      ]
    },
    "gists/get-revision": {
      "displayName": "Get a gist revision",
      "description": "",
      "method": "get",
      "endpoint": "/gists/{gist_id}/{sha}",
      "tags": [
        "gist"
      ],
      "params": [
        {
          "name": "gist_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the gist",
          "type": "string",
          "default": ""
        },
        {
          "name": "sha",
          "location": "path",
          "required": true,
          "description": "",
          "type": "string",
          "default": ""
        }
      ]
    },
    "gitignore/get-all-templates": {
      "displayName": "Get all gitignore templates",
      "description": "List all templates available to pass as an option when [creating a repository](https://docs.github.com/rest/reference/re...",
      "method": "get",
      "endpoint": "/gitignore/templates",
      "tags": [
        "gitignore"
      ],
      "params": []
    },
    "gitignore/get-template": {
      "displayName": "Get a gitignore template",
      "description": "The API also allows fetching the source of a single template. Use the raw [media type](https://docs.github.com/rest/over...",
      "method": "get",
      "endpoint": "/gitignore/templates/{name}",
      "tags": [
        "gitignore"
      ],
      "params": [
        {
          "name": "name",
          "location": "path",
          "required": true,
          "description": "",
          "type": "string",
          "default": ""
        }
      ]
    },
    "apps/list-repos-accessible-to-installation": {
      "displayName": "List repositories accessible to the app installation",
      "description": "List repositories that an app installation can access.  You must use an [installation access token](https://docs.github....",
      "method": "get",
      "endpoint": "/installation/repositories",
      "tags": [
        "app"
      ],
      "params": [
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "apps/revoke-installation-access-token": {
      "displayName": "Revoke an installation access token",
      "description": "Revokes the installation token you're using to authenticate as an installation and access this endpoint.  Once an instal...",
      "method": "delete",
      "endpoint": "/installation/token",
      "tags": [
        "app"
      ],
      "params": []
    },
    "issues/list": {
      "displayName": "List issues assigned to the authenticated user",
      "description": "List issues assigned to the authenticated user across all visible repositories including owned repositories, member repo...",
      "method": "get",
      "endpoint": "/issues",
      "tags": [
        "issue"
      ],
      "params": [
        {
          "name": "filter",
          "location": "query",
          "required": false,
          "description": "Indicates which sorts of issues to return. `assigned` means issues assigned to you. `created` means issues created by yo...",
          "type": "options",
          "default": "assigned",
          "options": [
            "assigned",
            "created",
            "mentioned",
            "subscribed",
            "repos",
            "all"
          ]
        },
        {
          "name": "state",
          "location": "query",
          "required": false,
          "description": "Indicates the state of the issues to return",
          "type": "options",
          "default": "open",
          "options": [
            "open",
            "closed",
            "all"
          ]
        },
        {
          "name": "labels",
          "location": "query",
          "required": false,
          "description": "A list of comma separated label names. Example: `bug,ui,@high`",
          "type": "string",
          "default": ""
        },
        {
          "name": "sort",
          "location": "query",
          "required": false,
          "description": "What to sort results by",
          "type": "options",
          "default": "created",
          "options": [
            "created",
            "updated",
            "comments"
          ]
        },
        {
          "name": "direction",
          "location": "query",
          "required": false,
          "description": "The direction to sort the results by",
          "type": "options",
          "default": "desc",
          "options": [
            "asc",
            "desc"
          ]
        },
        {
          "name": "since",
          "location": "query",
          "required": false,
          "description": "Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/IS...",
          "type": "string",
          "default": ""
        },
        {
          "name": "collab",
          "location": "query",
          "required": false,
          "description": "",
          "type": "boolean",
          "default": false
        },
        {
          "name": "orgs",
          "location": "query",
          "required": false,
          "description": "",
          "type": "boolean",
          "default": false
        },
        {
          "name": "owned",
          "location": "query",
          "required": false,
          "description": "",
          "type": "boolean",
          "default": false
        },
        {
          "name": "pulls",
          "location": "query",
          "required": false,
          "description": "",
          "type": "boolean",
          "default": false
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "licenses/get-all-commonly-used": {
      "displayName": "Get all commonly used licenses",
      "description": "",
      "method": "get",
      "endpoint": "/licenses",
      "tags": [
        "license"
      ],
      "params": [
        {
          "name": "featured",
          "location": "query",
          "required": false,
          "description": "",
          "type": "boolean",
          "default": false
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "licenses/get": {
      "displayName": "Get a license",
      "description": "",
      "method": "get",
      "endpoint": "/licenses/{license}",
      "tags": [
        "license"
      ],
      "params": [
        {
          "name": "license",
          "location": "path",
          "required": true,
          "description": "",
          "type": "string",
          "default": ""
        }
      ]
    },
    "markdown/render": {
      "displayName": "Render a Markdown document",
      "description": "",
      "method": "post",
      "endpoint": "/markdown",
      "tags": [
        "markdown"
      ],
      "params": [
        {
          "name": "context",
          "location": "body",
          "required": false,
          "description": "The repository context to use when creating references in `gfm` mode.  For example, setting `context` to `octo-org/octo-...",
          "type": "string",
          "default": ""
        },
        {
          "name": "mode",
          "location": "body",
          "required": false,
          "description": "The rendering mode",
          "type": "string",
          "default": "",
          "placeholder": "e.g. markdown"
        },
        {
          "name": "text",
          "location": "body",
          "required": true,
          "description": "The Markdown text to render in HTML",
          "type": "string",
          "default": ""
        }
      ]
    },
    "markdown/render-raw": {
      "displayName": "Render a Markdown document in raw mode",
      "description": "You must send Markdown as plain text (using a `Content-Type` header of `text/plain` or `text/x-markdown`) to this endpoi...",
      "method": "post",
      "endpoint": "/markdown/raw",
      "tags": [
        "markdown"
      ],
      "params": [
        {
          "name": "text",
          "location": "body",
          "required": true,
          "type": "string",
          "default": ""
        }
      ],
      "headers": {
        "Content-Type": "text/plain"
      }
    },
    "apps/get-subscription-plan-for-account": {
      "displayName": "Get a subscription plan for an account",
      "description": "Shows whether the user or organization account actively subscribes to a plan listed by the authenticated GitHub App. Whe...",
      "method": "get",
      "endpoint": "/marketplace_listing/accounts/{account_id}",
      "tags": [
        "app"
      ],
      "params": [
        {
          "name": "account_id",
          "location": "path",
          "required": true,
          "description": "account_id parameter",
          "type": "number",
          "default": 0
        }
      ]
    },
    "apps/list-plans": {
      "displayName": "List plans",
      "description": "Lists all plans that are part of your GitHub Marketplace listing.  GitHub Apps must use a [JWT](https://docs.github.com/...",
      "method": "get",
      "endpoint": "/marketplace_listing/plans",
      "tags": [
        "app"
      ],
      "params": [
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "apps/list-accounts-for-plan": {
      "displayName": "List accounts for a plan",
      "description": "Returns user and organization accounts associated with the specified plan, including free plans. For per-seat pricing, y...",
      "method": "get",
      "endpoint": "/marketplace_listing/plans/{plan_id}/accounts",
      "tags": [
        "app"
      ],
      "params": [
        {
          "name": "plan_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the plan",
          "type": "number",
          "default": 0
        },
        {
          "name": "sort",
          "location": "query",
          "required": false,
          "description": "The property to sort the results by. `created` means when the repository was starred. `updated` means when the repositor...",
          "type": "options",
          "default": "created",
          "options": [
            "created",
            "updated"
          ]
        },
        {
          "name": "direction",
          "location": "query",
          "required": false,
          "description": "To return the oldest accounts first, set to `asc`. Ignored without the `sort` parameter",
          "type": "options",
          "default": "asc",
          "options": [
            "asc",
            "desc"
          ]
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "apps/get-subscription-plan-for-account-stubbed": {
      "displayName": "Get a subscription plan for an account (stubbed)",
      "description": "Shows whether the user or organization account actively subscribes to a plan listed by the authenticated GitHub App. Whe...",
      "method": "get",
      "endpoint": "/marketplace_listing/stubbed/accounts/{account_id}",
      "tags": [
        "app"
      ],
      "params": [
        {
          "name": "account_id",
          "location": "path",
          "required": true,
          "description": "account_id parameter",
          "type": "number",
          "default": 0
        }
      ]
    },
    "apps/list-plans-stubbed": {
      "displayName": "List plans (stubbed)",
      "description": "Lists all plans that are part of your GitHub Marketplace listing.  GitHub Apps must use a [JWT](https://docs.github.com/...",
      "method": "get",
      "endpoint": "/marketplace_listing/stubbed/plans",
      "tags": [
        "app"
      ],
      "params": [
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "apps/list-accounts-for-plan-stubbed": {
      "displayName": "List accounts for a plan (stubbed)",
      "description": "Returns repository and organization accounts associated with the specified plan, including free plans. For per-seat pric...",
      "method": "get",
      "endpoint": "/marketplace_listing/stubbed/plans/{plan_id}/accounts",
      "tags": [
        "app"
      ],
      "params": [
        {
          "name": "plan_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the plan",
          "type": "number",
          "default": 0
        },
        {
          "name": "sort",
          "location": "query",
          "required": false,
          "description": "The property to sort the results by. `created` means when the repository was starred. `updated` means when the repositor...",
          "type": "options",
          "default": "created",
          "options": [
            "created",
            "updated"
          ]
        },
        {
          "name": "direction",
          "location": "query",
          "required": false,
          "description": "To return the oldest accounts first, set to `asc`. Ignored without the `sort` parameter",
          "type": "options",
          "default": "asc",
          "options": [
            "asc",
            "desc"
          ]
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "meta/get": {
      "displayName": "Get GitHub meta information",
      "description": "Returns meta information about GitHub, including a list of GitHub's IP addresses. For more information, see \"[About GitH...",
      "method": "get",
      "endpoint": "/meta",
      "tags": [
        "meta"
      ],
      "params": []
    },
    "activity/list-public-events-for-repo-network": {
      "displayName": "List public events for a network of repositories",
      "description": "",
      "method": "get",
      "endpoint": "/networks/{owner}/{repo}/events",
      "tags": [
        "activity"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "activity/list-notifications-for-authenticated-user": {
      "displayName": "List notifications for the authenticated user",
      "description": "List all notifications for the current user, sorted by most recently updated",
      "method": "get",
      "endpoint": "/notifications",
      "tags": [
        "activity"
      ],
      "params": [
        {
          "name": "all",
          "location": "query",
          "required": false,
          "description": "If `true`, show notifications marked as read",
          "type": "boolean",
          "default": false
        },
        {
          "name": "participating",
          "location": "query",
          "required": false,
          "description": "If `true`, only shows notifications in which the user is directly participating or mentioned",
          "type": "boolean",
          "default": false
        },
        {
          "name": "since",
          "location": "query",
          "required": false,
          "description": "Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/IS...",
          "type": "string",
          "default": ""
        },
        {
          "name": "before",
          "location": "query",
          "required": false,
          "description": "Only show notifications updated before the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/I...",
          "type": "string",
          "default": ""
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 50)",
          "type": "number",
          "default": 50
        }
      ]
    },
    "activity/mark-notifications-as-read": {
      "displayName": "Mark notifications as read",
      "description": "Marks all notifications as \"read\" for the current user. If the number of notifications is too large to complete in one r...",
      "method": "put",
      "endpoint": "/notifications",
      "tags": [
        "activity"
      ],
      "params": [
        {
          "name": "last_read_at",
          "location": "body",
          "required": false,
          "description": "Describes the last point that notifications were checked. Anything updated since this time will not be marked as read. I...",
          "type": "string",
          "default": ""
        },
        {
          "name": "read",
          "location": "body",
          "required": false,
          "description": "Whether the notification has been read",
          "type": "boolean",
          "default": false
        }
      ]
    },
    "activity/get-thread": {
      "displayName": "Get a thread",
      "description": "Gets information about a notification thread",
      "method": "get",
      "endpoint": "/notifications/threads/{thread_id}",
      "tags": [
        "activity"
      ],
      "params": [
        {
          "name": "thread_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the notification thread. This corresponds to the value returned in the `id` field when you retr...",
          "type": "number",
          "default": 0
        }
      ]
    },
    "activity/mark-thread-as-read": {
      "displayName": "Mark a thread as read",
      "description": "Marks a thread as \"read.\" Marking a thread as \"read\" is equivalent to clicking a notification in your notification inbox...",
      "method": "patch",
      "endpoint": "/notifications/threads/{thread_id}",
      "tags": [
        "activity"
      ],
      "params": [
        {
          "name": "thread_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the notification thread. This corresponds to the value returned in the `id` field when you retr...",
          "type": "number",
          "default": 0
        }
      ]
    },
    "activity/delete-thread-subscription": {
      "displayName": "Delete a thread subscription",
      "description": "Mutes all future notifications for a conversation until you comment on the thread or get an **@mention**. If you are wat...",
      "method": "delete",
      "endpoint": "/notifications/threads/{thread_id}/subscription",
      "tags": [
        "activity"
      ],
      "params": [
        {
          "name": "thread_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the notification thread. This corresponds to the value returned in the `id` field when you retr...",
          "type": "number",
          "default": 0
        }
      ]
    },
    "activity/get-thread-subscription-for-authenticated-user": {
      "displayName": "Get a thread subscription for the authenticated user",
      "description": "This checks to see if the current user is subscribed to a thread. You can also [get a repository subscription](https://d...",
      "method": "get",
      "endpoint": "/notifications/threads/{thread_id}/subscription",
      "tags": [
        "activity"
      ],
      "params": [
        {
          "name": "thread_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the notification thread. This corresponds to the value returned in the `id` field when you retr...",
          "type": "number",
          "default": 0
        }
      ]
    },
    "activity/set-thread-subscription": {
      "displayName": "Set a thread subscription",
      "description": "If you are watching a repository, you receive notifications for all threads by default. Use this endpoint to ignore futu...",
      "method": "put",
      "endpoint": "/notifications/threads/{thread_id}/subscription",
      "tags": [
        "activity"
      ],
      "params": [
        {
          "name": "thread_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the notification thread. This corresponds to the value returned in the `id` field when you retr...",
          "type": "number",
          "default": 0
        },
        {
          "name": "ignored",
          "location": "body",
          "required": false,
          "description": "Whether to block all notifications from a thread",
          "type": "boolean",
          "default": false
        }
      ]
    },
    "meta/get-octocat": {
      "displayName": "Get Octocat",
      "description": "Get the octocat as ASCII art",
      "method": "get",
      "endpoint": "/octocat",
      "tags": [
        "meta"
      ],
      "params": [
        {
          "name": "s",
          "location": "query",
          "required": false,
          "description": "The words to show in Octocat's speech bubble",
          "type": "string",
          "default": ""
        }
      ]
    },
    "orgs/list": {
      "displayName": "List organizations",
      "description": "Lists all organizations, in the order that they were created on GitHub.  **Note:** Pagination is powered exclusively by ...",
      "method": "get",
      "endpoint": "/organizations",
      "tags": [
        "org"
      ],
      "params": [
        {
          "name": "since",
          "location": "query",
          "required": false,
          "description": "An organization ID. Only return organizations with an ID greater than this ID",
          "type": "number",
          "default": 0
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        }
      ]
    },
    "orgs/get": {
      "displayName": "Get an organization",
      "description": "To see many of the organization response values, you need to be an authenticated organization owner with the `admin:org`...",
      "method": "get",
      "endpoint": "/orgs/{org}",
      "tags": [
        "org"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        }
      ]
    },
    "orgs/update": {
      "displayName": "Update an organization",
      "description": "**Parameter Deprecation Notice:** GitHub will replace and discontinue `members_allowed_repository_creation_type` in favo...",
      "method": "patch",
      "endpoint": "/orgs/{org}",
      "tags": [
        "org"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "advanced_security_enabled_for_new_repositories",
          "location": "body",
          "required": false,
          "description": "Whether GitHub Advanced Security is automatically enabled for new repositories.  To use this parameter, you must have ad...",
          "type": "boolean",
          "default": false
        },
        {
          "name": "billing_email",
          "location": "body",
          "required": false,
          "description": "Billing email address. This address is not publicized",
          "type": "string",
          "default": ""
        },
        {
          "name": "blog",
          "location": "body",
          "required": false,
          "description": "",
          "type": "string",
          "default": "",
          "placeholder": "e.g. \"http://github.blog\""
        },
        {
          "name": "company",
          "location": "body",
          "required": false,
          "description": "The company name",
          "type": "string",
          "default": ""
        },
        {
          "name": "default_repository_permission",
          "location": "body",
          "required": false,
          "description": "Default permission level members have for organization repositories",
          "type": "string",
          "default": ""
        },
        {
          "name": "dependabot_alerts_enabled_for_new_repositories",
          "location": "body",
          "required": false,
          "description": "Whether Dependabot alerts is automatically enabled for new repositories.  To use this parameter, you must have admin per...",
          "type": "boolean",
          "default": false
        },
        {
          "name": "dependabot_security_updates_enabled_for_new_repositories",
          "location": "body",
          "required": false,
          "description": "Whether Dependabot security updates is automatically enabled for new repositories.  To use this parameter, you must have...",
          "type": "boolean",
          "default": false
        },
        {
          "name": "dependency_graph_enabled_for_new_repositories",
          "location": "body",
          "required": false,
          "description": "Whether dependency graph is automatically enabled for new repositories.  To use this parameter, you must have admin perm...",
          "type": "boolean",
          "default": false
        },
        {
          "name": "description",
          "location": "body",
          "required": false,
          "description": "The description of the company",
          "type": "string",
          "default": ""
        },
        {
          "name": "email",
          "location": "body",
          "required": false,
          "description": "The publicly visible email address",
          "type": "string",
          "default": ""
        },
        {
          "name": "has_organization_projects",
          "location": "body",
          "required": false,
          "description": "Whether an organization can use organization projects",
          "type": "boolean",
          "default": false
        },
        {
          "name": "has_repository_projects",
          "location": "body",
          "required": false,
          "description": "Whether repositories that belong to the organization can use repository projects",
          "type": "boolean",
          "default": false
        },
        {
          "name": "location",
          "location": "body",
          "required": false,
          "description": "The location",
          "type": "string",
          "default": ""
        },
        {
          "name": "members_allowed_repository_creation_type",
          "location": "body",
          "required": false,
          "description": "Specifies which types of repositories non-admin organization members can create. `private` is only available to reposito...",
          "type": "string",
          "default": ""
        },
        {
          "name": "members_can_create_internal_repositories",
          "location": "body",
          "required": false,
          "description": "Whether organization members can create internal repositories, which are visible to all enterprise members. You can only...",
          "type": "boolean",
          "default": false
        },
        {
          "name": "members_can_create_pages",
          "location": "body",
          "required": false,
          "description": "Whether organization members can create GitHub Pages sites. Existing published sites will not be impacted",
          "type": "boolean",
          "default": false
        },
        {
          "name": "members_can_create_private_pages",
          "location": "body",
          "required": false,
          "description": "Whether organization members can create private GitHub Pages sites. Existing published sites will not be impacted",
          "type": "boolean",
          "default": false
        },
        {
          "name": "members_can_create_private_repositories",
          "location": "body",
          "required": false,
          "description": "Whether organization members can create private repositories, which are visible to organization members with permission....",
          "type": "boolean",
          "default": false
        },
        {
          "name": "members_can_create_public_pages",
          "location": "body",
          "required": false,
          "description": "Whether organization members can create public GitHub Pages sites. Existing published sites will not be impacted",
          "type": "boolean",
          "default": false
        },
        {
          "name": "members_can_create_public_repositories",
          "location": "body",
          "required": false,
          "description": "Whether organization members can create public repositories, which are visible to anyone. For more information, see \"[Re...",
          "type": "boolean",
          "default": false
        },
        {
          "name": "members_can_create_repositories",
          "location": "body",
          "required": false,
          "description": "Whether of non-admin organization members can create repositories. **Note:** A parameter can override this parameter. Se...",
          "type": "boolean",
          "default": false
        },
        {
          "name": "members_can_fork_private_repositories",
          "location": "body",
          "required": false,
          "description": "Whether organization members can fork private organization repositories",
          "type": "boolean",
          "default": false
        },
        {
          "name": "name",
          "location": "body",
          "required": false,
          "description": "The shorthand name of the company",
          "type": "string",
          "default": ""
        },
        {
          "name": "secret_scanning_enabled_for_new_repositories",
          "location": "body",
          "required": false,
          "description": "Whether secret scanning is automatically enabled for new repositories.  To use this parameter, you must have admin permi...",
          "type": "boolean",
          "default": false
        },
        {
          "name": "secret_scanning_push_protection_custom_link",
          "location": "body",
          "required": false,
          "description": "If `secret_scanning_push_protection_custom_link_enabled` is true, the URL that will be displayed to contributors who are...",
          "type": "string",
          "default": ""
        },
        {
          "name": "secret_scanning_push_protection_custom_link_enabled",
          "location": "body",
          "required": false,
          "description": "Whether a custom link is shown to contributors who are blocked from pushing a secret by push protection",
          "type": "boolean",
          "default": false
        },
        {
          "name": "secret_scanning_push_protection_enabled_for_new_repositories",
          "location": "body",
          "required": false,
          "description": "Whether secret scanning push protection is automatically enabled for new repositories.  To use this parameter, you must ...",
          "type": "boolean",
          "default": false
        },
        {
          "name": "twitter_username",
          "location": "body",
          "required": false,
          "description": "The Twitter username of the company",
          "type": "string",
          "default": ""
        },
        {
          "name": "web_commit_signoff_required",
          "location": "body",
          "required": false,
          "description": "Whether contributors to organization repositories are required to sign off on commits they make through GitHub's web int...",
          "type": "boolean",
          "default": false
        }
      ]
    },
    "actions/get-actions-cache-usage-for-org": {
      "displayName": "Get GitHub Actions cache usage for an organization",
      "description": "Gets the total GitHub Actions cache usage for an organization. The data fetched using this API is refreshed approximatel...",
      "method": "get",
      "endpoint": "/orgs/{org}/actions/cache/usage",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        }
      ]
    },
    "actions/get-actions-cache-usage-by-repo-for-org": {
      "displayName": "List repositories with GitHub Actions cache usage for an organization",
      "description": "Lists repositories and their GitHub Actions cache usage for an organization. The data fetched using this API is refreshe...",
      "method": "get",
      "endpoint": "/orgs/{org}/actions/cache/usage-by-repository",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "oidc/get-oidc-custom-sub-template-for-org": {
      "displayName": "Get the customization template for an OIDC subject claim for an organization",
      "description": "Gets the customization template for an OpenID Connect (OIDC) subject claim. You must authenticate using an access token ...",
      "method": "get",
      "endpoint": "/orgs/{org}/actions/oidc/customization/sub",
      "tags": [
        "oidc"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        }
      ]
    },
    "oidc/update-oidc-custom-sub-template-for-org": {
      "displayName": "Set the customization template for an OIDC subject claim for an organization",
      "description": "Creates or updates the customization template for an OpenID Connect (OIDC) subject claim. You must authenticate using an...",
      "method": "put",
      "endpoint": "/orgs/{org}/actions/oidc/customization/sub",
      "tags": [
        "oidc"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "include_claim_keys",
          "location": "body",
          "required": true,
          "description": "Array of unique strings. Each claim key can only contain alphanumeric characters and underscores",
          "type": "string",
          "default": ""
        }
      ]
    },
    "actions/get-github-actions-permissions-organization": {
      "displayName": "Get GitHub Actions permissions for an organization",
      "description": "Gets the GitHub Actions permissions policy for repositories and allowed actions and reusable workflows in an organizatio...",
      "method": "get",
      "endpoint": "/orgs/{org}/actions/permissions",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        }
      ]
    },
    "actions/set-github-actions-permissions-organization": {
      "displayName": "Set GitHub Actions permissions for an organization",
      "description": "Sets the GitHub Actions permissions policy for repositories and allowed actions and reusable workflows in an organizatio...",
      "method": "put",
      "endpoint": "/orgs/{org}/actions/permissions",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "allowed_actions",
          "location": "body",
          "required": false,
          "description": "The permissions policy that controls the actions and reusable workflows that are allowed to run",
          "type": "string",
          "default": ""
        },
        {
          "name": "enabled_repositories",
          "location": "body",
          "required": true,
          "description": "The policy that controls the repositories in the organization that are allowed to run GitHub Actions",
          "type": "string",
          "default": ""
        }
      ]
    },
    "actions/list-selected-repositories-enabled-github-actions-organization": {
      "displayName": "List selected repositories enabled for GitHub Actions in an organization",
      "description": "Lists the selected repositories that are enabled for GitHub Actions in an organization. To use this endpoint, the organi...",
      "method": "get",
      "endpoint": "/orgs/{org}/actions/permissions/repositories",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "actions/set-selected-repositories-enabled-github-actions-organization": {
      "displayName": "Set selected repositories enabled for GitHub Actions in an organization",
      "description": "Replaces the list of selected repositories that are enabled for GitHub Actions in an organization. To use this endpoint,...",
      "method": "put",
      "endpoint": "/orgs/{org}/actions/permissions/repositories",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "selected_repository_ids",
          "location": "body",
          "required": true,
          "description": "List of repository IDs to enable for GitHub Actions",
          "type": "json",
          "default": "{}"
        }
      ]
    },
    "actions/disable-selected-repository-github-actions-organization": {
      "displayName": "Disable a selected repository for GitHub Actions in an organization",
      "description": "Removes a repository from the list of selected repositories that are enabled for GitHub Actions in an organization. To u...",
      "method": "delete",
      "endpoint": "/orgs/{org}/actions/permissions/repositories/{repository_id}",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repository_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the repository",
          "type": "number",
          "default": 0
        }
      ]
    },
    "actions/enable-selected-repository-github-actions-organization": {
      "displayName": "Enable a selected repository for GitHub Actions in an organization",
      "description": "Adds a repository to the list of selected repositories that are enabled for GitHub Actions in an organization. To use th...",
      "method": "put",
      "endpoint": "/orgs/{org}/actions/permissions/repositories/{repository_id}",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repository_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the repository",
          "type": "number",
          "default": 0
        }
      ]
    },
    "actions/get-allowed-actions-organization": {
      "displayName": "Get allowed actions and reusable workflows for an organization",
      "description": "Gets the selected actions and reusable workflows that are allowed in an organization. To use this endpoint, the organiza...",
      "method": "get",
      "endpoint": "/orgs/{org}/actions/permissions/selected-actions",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        }
      ]
    },
    "actions/set-allowed-actions-organization": {
      "displayName": "Set allowed actions and reusable workflows for an organization",
      "description": "Sets the actions and reusable workflows that are allowed in an organization. To use this endpoint, the organization perm...",
      "method": "put",
      "endpoint": "/orgs/{org}/actions/permissions/selected-actions",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "github_owned_allowed",
          "location": "body",
          "required": false,
          "description": "Whether GitHub-owned actions are allowed. For example, this includes the actions in the `actions` organization",
          "type": "boolean",
          "default": false
        },
        {
          "name": "patterns_allowed",
          "location": "body",
          "required": false,
          "description": "Specifies a list of string-matching patterns to allow specific action(s) and reusable workflow(s). Wildcards, tags, and ...",
          "type": "string",
          "default": ""
        },
        {
          "name": "verified_allowed",
          "location": "body",
          "required": false,
          "description": "Whether actions from GitHub Marketplace verified creators are allowed. Set to `true` to allow all actions by GitHub Mark...",
          "type": "boolean",
          "default": false
        }
      ]
    },
    "actions/get-github-actions-default-workflow-permissions-organization": {
      "displayName": "Get default workflow permissions for an organization",
      "description": "Gets the default workflow permissions granted to the `GITHUB_TOKEN` when running workflows in an organization, as well a...",
      "method": "get",
      "endpoint": "/orgs/{org}/actions/permissions/workflow",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        }
      ]
    },
    "actions/set-github-actions-default-workflow-permissions-organization": {
      "displayName": "Set default workflow permissions for an organization",
      "description": "Sets the default workflow permissions granted to the `GITHUB_TOKEN` when running workflows in an organization, and sets ...",
      "method": "put",
      "endpoint": "/orgs/{org}/actions/permissions/workflow",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "can_approve_pull_request_reviews",
          "location": "body",
          "required": false,
          "description": "Whether GitHub Actions can approve pull requests. Enabling this can be a security risk",
          "type": "boolean",
          "default": false
        },
        {
          "name": "default_workflow_permissions",
          "location": "body",
          "required": false,
          "description": "The default workflow permissions granted to the GITHUB_TOKEN when running workflows",
          "type": "string",
          "default": ""
        }
      ]
    },
    "actions/list-required-workflows": {
      "displayName": "List required workflows",
      "description": "List all required workflows in an organization.  You must authenticate using an access token with the `read:org` scope t...",
      "method": "get",
      "endpoint": "/orgs/{org}/actions/required_workflows",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "actions/create-required-workflow": {
      "displayName": "Create a required workflow",
      "description": "Create a required workflow in an organization.  You must authenticate using an access token with the `admin:org` scope t...",
      "method": "post",
      "endpoint": "/orgs/{org}/actions/required_workflows",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repository_id",
          "location": "body",
          "required": true,
          "description": "The ID of the repository that contains the workflow file",
          "type": "string",
          "default": ""
        },
        {
          "name": "scope",
          "location": "body",
          "required": false,
          "description": "Enable the required workflow for all repositories or selected repositories in the organization",
          "type": "string",
          "default": ""
        },
        {
          "name": "selected_repository_ids",
          "location": "body",
          "required": false,
          "description": "A list of repository IDs where you want to enable the required workflow. You can only provide a list of repository ids w...",
          "type": "json",
          "default": "{}"
        },
        {
          "name": "workflow_file_path",
          "location": "body",
          "required": true,
          "description": "Path of the workflow file to be configured as a required workflow",
          "type": "string",
          "default": ""
        }
      ]
    },
    "actions/delete-required-workflow": {
      "displayName": "Delete a required workflow",
      "description": "Deletes a required workflow configured in an organization.  You must authenticate using an access token with the `admin:...",
      "method": "delete",
      "endpoint": "/orgs/{org}/actions/required_workflows/{required_workflow_id}",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "required_workflow_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the required workflow",
          "type": "number",
          "default": 0
        }
      ]
    },
    "actions/get-required-workflow": {
      "displayName": "Get a required workflow",
      "description": "Get a required workflow configured in an organization.  You must authenticate using an access token with the `read:org` ...",
      "method": "get",
      "endpoint": "/orgs/{org}/actions/required_workflows/{required_workflow_id}",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "required_workflow_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the required workflow",
          "type": "number",
          "default": 0
        }
      ]
    },
    "actions/update-required-workflow": {
      "displayName": "Update a required workflow",
      "description": "Update a required workflow in an organization.  You must authenticate using an access token with the `admin:org` scope t...",
      "method": "patch",
      "endpoint": "/orgs/{org}/actions/required_workflows/{required_workflow_id}",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "required_workflow_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the required workflow",
          "type": "number",
          "default": 0
        },
        {
          "name": "repository_id",
          "location": "body",
          "required": false,
          "description": "The ID of the repository that contains the workflow file",
          "type": "string",
          "default": ""
        },
        {
          "name": "scope",
          "location": "body",
          "required": false,
          "description": "Enable the required workflow for all repositories or selected repositories in the organization",
          "type": "string",
          "default": ""
        },
        {
          "name": "selected_repository_ids",
          "location": "body",
          "required": false,
          "description": "A list of repository IDs where you want to enable the required workflow. A list of repository IDs where you want to enab...",
          "type": "json",
          "default": "{}"
        },
        {
          "name": "workflow_file_path",
          "location": "body",
          "required": false,
          "description": "Path of the workflow file to be configured as a required workflow",
          "type": "string",
          "default": ""
        }
      ]
    },
    "actions/list-selected-repositories-required-workflow": {
      "displayName": "List selected repositories for a required workflow",
      "description": "Lists the selected repositories that are configured for a required workflow in an organization. To use this endpoint, th...",
      "method": "get",
      "endpoint": "/orgs/{org}/actions/required_workflows/{required_workflow_id}/repositories",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "required_workflow_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the required workflow",
          "type": "number",
          "default": 0
        }
      ]
    },
    "actions/set-selected-repos-to-required-workflow": {
      "displayName": "Sets repositories for a required workflow",
      "description": "Sets the repositories for a required workflow that is required for selected repositories.  You must authenticate using a...",
      "method": "put",
      "endpoint": "/orgs/{org}/actions/required_workflows/{required_workflow_id}/repositories",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "required_workflow_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the required workflow",
          "type": "number",
          "default": 0
        },
        {
          "name": "selected_repository_ids",
          "location": "body",
          "required": true,
          "description": "The IDs of the repositories for which the workflow should be required",
          "type": "json",
          "default": "{}"
        }
      ]
    },
    "actions/remove-selected-repo-from-required-workflow": {
      "displayName": "Remove a selected repository from required workflow",
      "description": "Removes a repository from a required workflow. To use this endpoint, the required workflow must be configured to run on ...",
      "method": "delete",
      "endpoint": "/orgs/{org}/actions/required_workflows/{required_workflow_id}/repositories/{repository_id}",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "required_workflow_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the required workflow",
          "type": "number",
          "default": 0
        },
        {
          "name": "repository_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the repository",
          "type": "number",
          "default": 0
        }
      ]
    },
    "actions/add-selected-repo-to-required-workflow": {
      "displayName": "Add a repository to a required workflow",
      "description": "Adds a repository to a required workflow. To use this endpoint, the required workflow must be configured to run on selec...",
      "method": "put",
      "endpoint": "/orgs/{org}/actions/required_workflows/{required_workflow_id}/repositories/{repository_id}",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "required_workflow_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the required workflow",
          "type": "number",
          "default": 0
        },
        {
          "name": "repository_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the repository",
          "type": "number",
          "default": 0
        }
      ]
    },
    "actions/list-self-hosted-runners-for-org": {
      "displayName": "List self-hosted runners for an organization",
      "description": "Lists all self-hosted runners configured in an organization.  You must authenticate using an access token with the `admi...",
      "method": "get",
      "endpoint": "/orgs/{org}/actions/runners",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "actions/list-runner-applications-for-org": {
      "displayName": "List runner applications for an organization",
      "description": "Lists binaries for the runner application that you can download and run.  You must authenticate using an access token wi...",
      "method": "get",
      "endpoint": "/orgs/{org}/actions/runners/downloads",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        }
      ]
    },
    "actions/create-registration-token-for-org": {
      "displayName": "Create a registration token for an organization",
      "description": "Returns a token that you can pass to the `config` script. The token expires after one hour.  You must authenticate using...",
      "method": "post",
      "endpoint": "/orgs/{org}/actions/runners/registration-token",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        }
      ]
    },
    "actions/create-remove-token-for-org": {
      "displayName": "Create a remove token for an organization",
      "description": "Returns a token that you can pass to the `config` script to remove a self-hosted runner from an organization. The token ...",
      "method": "post",
      "endpoint": "/orgs/{org}/actions/runners/remove-token",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        }
      ]
    },
    "actions/delete-self-hosted-runner-from-org": {
      "displayName": "Delete a self-hosted runner from an organization",
      "description": "Forces the removal of a self-hosted runner from an organization. You can use this endpoint to completely remove the runn...",
      "method": "delete",
      "endpoint": "/orgs/{org}/actions/runners/{runner_id}",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "runner_id",
          "location": "path",
          "required": true,
          "description": "Unique identifier of the self-hosted runner",
          "type": "number",
          "default": 0
        }
      ]
    },
    "actions/get-self-hosted-runner-for-org": {
      "displayName": "Get a self-hosted runner for an organization",
      "description": "Gets a specific self-hosted runner configured in an organization.  You must authenticate using an access token with the ...",
      "method": "get",
      "endpoint": "/orgs/{org}/actions/runners/{runner_id}",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "runner_id",
          "location": "path",
          "required": true,
          "description": "Unique identifier of the self-hosted runner",
          "type": "number",
          "default": 0
        }
      ]
    },
    "actions/remove-all-custom-labels-from-self-hosted-runner-for-org": {
      "displayName": "Remove all custom labels from a self-hosted runner for an organization",
      "description": "Remove all custom labels from a self-hosted runner configured in an organization. Returns the remaining read-only labels...",
      "method": "delete",
      "endpoint": "/orgs/{org}/actions/runners/{runner_id}/labels",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "runner_id",
          "location": "path",
          "required": true,
          "description": "Unique identifier of the self-hosted runner",
          "type": "number",
          "default": 0
        }
      ]
    },
    "actions/list-labels-for-self-hosted-runner-for-org": {
      "displayName": "List labels for a self-hosted runner for an organization",
      "description": "Lists all labels for a self-hosted runner configured in an organization.  You must authenticate using an access token wi...",
      "method": "get",
      "endpoint": "/orgs/{org}/actions/runners/{runner_id}/labels",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "runner_id",
          "location": "path",
          "required": true,
          "description": "Unique identifier of the self-hosted runner",
          "type": "number",
          "default": 0
        }
      ]
    },
    "actions/add-custom-labels-to-self-hosted-runner-for-org": {
      "displayName": "Add custom labels to a self-hosted runner for an organization",
      "description": "Add custom labels to a self-hosted runner configured in an organization.  You must authenticate using an access token wi...",
      "method": "post",
      "endpoint": "/orgs/{org}/actions/runners/{runner_id}/labels",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "runner_id",
          "location": "path",
          "required": true,
          "description": "Unique identifier of the self-hosted runner",
          "type": "number",
          "default": 0
        },
        {
          "name": "labels",
          "location": "body",
          "required": true,
          "description": "The names of the custom labels to add to the runner",
          "type": "string",
          "default": ""
        }
      ]
    },
    "actions/set-custom-labels-for-self-hosted-runner-for-org": {
      "displayName": "Set custom labels for a self-hosted runner for an organization",
      "description": "Remove all previous custom labels and set the new custom labels for a specific self-hosted runner configured in an organ...",
      "method": "put",
      "endpoint": "/orgs/{org}/actions/runners/{runner_id}/labels",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "runner_id",
          "location": "path",
          "required": true,
          "description": "Unique identifier of the self-hosted runner",
          "type": "number",
          "default": 0
        },
        {
          "name": "labels",
          "location": "body",
          "required": true,
          "description": "The names of the custom labels to set for the runner. You can pass an empty array to remove all custom labels",
          "type": "string",
          "default": ""
        }
      ]
    },
    "actions/remove-custom-label-from-self-hosted-runner-for-org": {
      "displayName": "Remove a custom label from a self-hosted runner for an organization",
      "description": "Remove a custom label from a self-hosted runner configured in an organization. Returns the remaining labels from the run...",
      "method": "delete",
      "endpoint": "/orgs/{org}/actions/runners/{runner_id}/labels/{name}",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "runner_id",
          "location": "path",
          "required": true,
          "description": "Unique identifier of the self-hosted runner",
          "type": "number",
          "default": 0
        },
        {
          "name": "name",
          "location": "path",
          "required": true,
          "description": "The name of a self-hosted runner's custom label",
          "type": "string",
          "default": ""
        }
      ]
    },
    "actions/list-org-secrets": {
      "displayName": "List organization secrets",
      "description": "Lists all secrets available in an organization without revealing their encrypted values. You must authenticate using an ...",
      "method": "get",
      "endpoint": "/orgs/{org}/actions/secrets",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "actions/get-org-public-key": {
      "displayName": "Get an organization public key",
      "description": "Gets your public key, which you need to encrypt secrets. You need to encrypt a secret before you can create or update se...",
      "method": "get",
      "endpoint": "/orgs/{org}/actions/secrets/public-key",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        }
      ]
    },
    "actions/delete-org-secret": {
      "displayName": "Delete an organization secret",
      "description": "Deletes a secret in an organization using the secret name. You must authenticate using an access token with the `admin:o...",
      "method": "delete",
      "endpoint": "/orgs/{org}/actions/secrets/{secret_name}",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "secret_name",
          "location": "path",
          "required": true,
          "description": "The name of the secret",
          "type": "string",
          "default": ""
        }
      ]
    },
    "actions/get-org-secret": {
      "displayName": "Get an organization secret",
      "description": "Gets a single organization secret without revealing its encrypted value. You must authenticate using an access token wit...",
      "method": "get",
      "endpoint": "/orgs/{org}/actions/secrets/{secret_name}",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "secret_name",
          "location": "path",
          "required": true,
          "description": "The name of the secret",
          "type": "string",
          "default": ""
        }
      ]
    },
    "actions/create-or-update-org-secret": {
      "displayName": "Create or update an organization secret",
      "description": "Creates or updates an organization secret with an encrypted value. Encrypt your secret using [LibSodium](https://libsodi...",
      "method": "put",
      "endpoint": "/orgs/{org}/actions/secrets/{secret_name}",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "secret_name",
          "location": "path",
          "required": true,
          "description": "The name of the secret",
          "type": "string",
          "default": ""
        },
        {
          "name": "encrypted_value",
          "location": "body",
          "required": false,
          "description": "Value for your secret, encrypted with [LibSodium](https://libsodium.gitbook.io/doc/bindings_for_other_languages) using t...",
          "type": "string",
          "default": ""
        },
        {
          "name": "key_id",
          "location": "body",
          "required": false,
          "description": "ID of the key you used to encrypt the secret",
          "type": "string",
          "default": ""
        },
        {
          "name": "selected_repository_ids",
          "location": "body",
          "required": false,
          "description": "An array of repository ids that can access the organization secret. You can only provide a list of repository ids when t...",
          "type": "json",
          "default": "{}"
        },
        {
          "name": "visibility",
          "location": "body",
          "required": true,
          "description": "Which type of organization repositories have access to the organization secret. `selected` means only the repositories s...",
          "type": "string",
          "default": ""
        }
      ]
    },
    "actions/list-selected-repos-for-org-secret": {
      "displayName": "List selected repositories for an organization secret",
      "description": "Lists all repositories that have been selected when the `visibility` for repository access to a secret is set to `select...",
      "method": "get",
      "endpoint": "/orgs/{org}/actions/secrets/{secret_name}/repositories",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "secret_name",
          "location": "path",
          "required": true,
          "description": "The name of the secret",
          "type": "string",
          "default": ""
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        }
      ]
    },
    "actions/set-selected-repos-for-org-secret": {
      "displayName": "Set selected repositories for an organization secret",
      "description": "Replaces all repositories for an organization secret when the `visibility` for repository access is set to `selected`. T...",
      "method": "put",
      "endpoint": "/orgs/{org}/actions/secrets/{secret_name}/repositories",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "secret_name",
          "location": "path",
          "required": true,
          "description": "The name of the secret",
          "type": "string",
          "default": ""
        },
        {
          "name": "selected_repository_ids",
          "location": "body",
          "required": true,
          "description": "An array of repository ids that can access the organization secret. You can only provide a list of repository ids when t...",
          "type": "json",
          "default": "{}"
        }
      ]
    },
    "actions/remove-selected-repo-from-org-secret": {
      "displayName": "Remove selected repository from an organization secret",
      "description": "Removes a repository from an organization secret when the `visibility` for repository access is set to `selected`. The v...",
      "method": "delete",
      "endpoint": "/orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "secret_name",
          "location": "path",
          "required": true,
          "description": "The name of the secret",
          "type": "string",
          "default": ""
        },
        {
          "name": "repository_id",
          "location": "path",
          "required": true,
          "description": "",
          "type": "number",
          "default": 0
        }
      ]
    },
    "actions/add-selected-repo-to-org-secret": {
      "displayName": "Add selected repository to an organization secret",
      "description": "Adds a repository to an organization secret when the `visibility` for repository access is set to `selected`. The visibi...",
      "method": "put",
      "endpoint": "/orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "secret_name",
          "location": "path",
          "required": true,
          "description": "The name of the secret",
          "type": "string",
          "default": ""
        },
        {
          "name": "repository_id",
          "location": "path",
          "required": true,
          "description": "",
          "type": "number",
          "default": 0
        }
      ]
    },
    "actions/list-org-variables": {
      "displayName": "List organization variables",
      "description": "Lists all organization variables. You must authenticate using an access token with the `admin:org` scope to use this end...",
      "method": "get",
      "endpoint": "/orgs/{org}/actions/variables",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 30)",
          "type": "number",
          "default": 10
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "actions/create-org-variable": {
      "displayName": "Create an organization variable",
      "description": "Creates an organization variable that you can reference in a GitHub Actions workflow. You must authenticate using an acc...",
      "method": "post",
      "endpoint": "/orgs/{org}/actions/variables",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "name",
          "location": "body",
          "required": true,
          "description": "The name of the variable",
          "type": "string",
          "default": ""
        },
        {
          "name": "selected_repository_ids",
          "location": "body",
          "required": false,
          "description": "An array of repository ids that can access the organization variable. You can only provide a list of repository ids when...",
          "type": "json",
          "default": "{}"
        },
        {
          "name": "value",
          "location": "body",
          "required": true,
          "description": "The value of the variable",
          "type": "string",
          "default": ""
        },
        {
          "name": "visibility",
          "location": "body",
          "required": true,
          "description": "The type of repositories in the organization that can access the variable. `selected` means only the repositories specif...",
          "type": "string",
          "default": ""
        }
      ]
    },
    "actions/delete-org-variable": {
      "displayName": "Delete an organization variable",
      "description": "Deletes an organization variable using the variable name. You must authenticate using an access token with the `admin:or...",
      "method": "delete",
      "endpoint": "/orgs/{org}/actions/variables/{name}",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "name",
          "location": "path",
          "required": true,
          "description": "The name of the variable",
          "type": "string",
          "default": ""
        }
      ]
    },
    "actions/get-org-variable": {
      "displayName": "Get an organization variable",
      "description": "Gets a specific variable in an organization. You must authenticate using an access token with the `admin:org` scope to u...",
      "method": "get",
      "endpoint": "/orgs/{org}/actions/variables/{name}",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "name",
          "location": "path",
          "required": true,
          "description": "The name of the variable",
          "type": "string",
          "default": ""
        }
      ]
    },
    "actions/update-org-variable": {
      "displayName": "Update an organization variable",
      "description": "Updates an organization variable that you can reference in a GitHub Actions workflow. You must authenticate using an acc...",
      "method": "patch",
      "endpoint": "/orgs/{org}/actions/variables/{name}",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "name",
          "location": "path",
          "required": true,
          "description": "The name of the variable",
          "type": "string",
          "default": ""
        },
        {
          "name": "name",
          "location": "body",
          "required": false,
          "description": "The name of the variable",
          "type": "string",
          "default": ""
        },
        {
          "name": "selected_repository_ids",
          "location": "body",
          "required": false,
          "description": "An array of repository ids that can access the organization variable. You can only provide a list of repository ids when...",
          "type": "json",
          "default": "{}"
        },
        {
          "name": "value",
          "location": "body",
          "required": false,
          "description": "The value of the variable",
          "type": "string",
          "default": ""
        },
        {
          "name": "visibility",
          "location": "body",
          "required": false,
          "description": "The type of repositories in the organization that can access the variable. `selected` means only the repositories specif...",
          "type": "string",
          "default": ""
        }
      ]
    },
    "actions/list-selected-repos-for-org-variable": {
      "displayName": "List selected repositories for an organization variable",
      "description": "Lists all repositories that can access an organization variable that is available to selected repositories. You must aut...",
      "method": "get",
      "endpoint": "/orgs/{org}/actions/variables/{name}/repositories",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "name",
          "location": "path",
          "required": true,
          "description": "The name of the variable",
          "type": "string",
          "default": ""
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        }
      ]
    },
    "actions/set-selected-repos-for-org-variable": {
      "displayName": "Set selected repositories for an organization variable",
      "description": "Replaces all repositories for an organization variable that is available to selected repositories. Organization variable...",
      "method": "put",
      "endpoint": "/orgs/{org}/actions/variables/{name}/repositories",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "name",
          "location": "path",
          "required": true,
          "description": "The name of the variable",
          "type": "string",
          "default": ""
        },
        {
          "name": "selected_repository_ids",
          "location": "body",
          "required": true,
          "description": "The IDs of the repositories that can access the organization variable",
          "type": "json",
          "default": "{}"
        }
      ]
    },
    "actions/remove-selected-repo-from-org-variable": {
      "displayName": "Remove selected repository from an organization variable",
      "description": "Removes a repository from an organization variable that is available to selected repositories. Organization variables th...",
      "method": "delete",
      "endpoint": "/orgs/{org}/actions/variables/{name}/repositories/{repository_id}",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "name",
          "location": "path",
          "required": true,
          "description": "The name of the variable",
          "type": "string",
          "default": ""
        },
        {
          "name": "repository_id",
          "location": "path",
          "required": true,
          "description": "",
          "type": "number",
          "default": 0
        }
      ]
    },
    "actions/add-selected-repo-to-org-variable": {
      "displayName": "Add selected repository to an organization variable",
      "description": "Adds a repository to an organization variable that is available to selected repositories. Organization variables that ar...",
      "method": "put",
      "endpoint": "/orgs/{org}/actions/variables/{name}/repositories/{repository_id}",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "name",
          "location": "path",
          "required": true,
          "description": "The name of the variable",
          "type": "string",
          "default": ""
        },
        {
          "name": "repository_id",
          "location": "path",
          "required": true,
          "description": "",
          "type": "number",
          "default": 0
        }
      ]
    },
    "orgs/list-blocked-users": {
      "displayName": "List users blocked by an organization",
      "description": "List the users blocked by an organization",
      "method": "get",
      "endpoint": "/orgs/{org}/blocks",
      "tags": [
        "org"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "orgs/unblock-user": {
      "displayName": "Unblock a user from an organization",
      "description": "",
      "method": "delete",
      "endpoint": "/orgs/{org}/blocks/{username}",
      "tags": [
        "org"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "username",
          "location": "path",
          "required": true,
          "description": "The handle for the GitHub user account",
          "type": "string",
          "default": ""
        }
      ]
    },
    "orgs/check-blocked-user": {
      "displayName": "Check if a user is blocked by an organization",
      "description": "",
      "method": "get",
      "endpoint": "/orgs/{org}/blocks/{username}",
      "tags": [
        "org"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "username",
          "location": "path",
          "required": true,
          "description": "The handle for the GitHub user account",
          "type": "string",
          "default": ""
        }
      ]
    },
    "orgs/block-user": {
      "displayName": "Block a user from an organization",
      "description": "",
      "method": "put",
      "endpoint": "/orgs/{org}/blocks/{username}",
      "tags": [
        "org"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "username",
          "location": "path",
          "required": true,
          "description": "The handle for the GitHub user account",
          "type": "string",
          "default": ""
        }
      ]
    },
    "code-scanning/list-alerts-for-org": {
      "displayName": "List code scanning alerts for an organization",
      "description": "Lists code scanning alerts for the default branch for all eligible repositories in an organization. Eligible repositorie...",
      "method": "get",
      "endpoint": "/orgs/{org}/code-scanning/alerts",
      "tags": [
        "code-scanning"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "tool_name",
          "location": "query",
          "required": false,
          "description": "The name of a code scanning tool. Only results by this tool will be listed. You can specify the tool by using either `to...",
          "type": "string",
          "default": ""
        },
        {
          "name": "tool_guid",
          "location": "query",
          "required": false,
          "description": "The GUID of a code scanning tool. Only results by this tool will be listed. Note that some code scanning tools may not i...",
          "type": "string",
          "default": ""
        },
        {
          "name": "before",
          "location": "query",
          "required": false,
          "description": "A cursor, as given in the [Link header](https://docs.github.com/rest/overview/resources-in-the-rest-api#link-header). If...",
          "type": "string",
          "default": ""
        },
        {
          "name": "after",
          "location": "query",
          "required": false,
          "description": "A cursor, as given in the [Link header](https://docs.github.com/rest/overview/resources-in-the-rest-api#link-header). If...",
          "type": "string",
          "default": ""
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "direction",
          "location": "query",
          "required": false,
          "description": "The direction to sort the results by",
          "type": "options",
          "default": "desc",
          "options": [
            "asc",
            "desc"
          ]
        },
        {
          "name": "state",
          "location": "query",
          "required": false,
          "description": "If specified, only code scanning alerts with this state will be returned",
          "type": "options",
          "default": "open",
          "options": [
            "open",
            "closed",
            "dismissed",
            "fixed"
          ]
        },
        {
          "name": "sort",
          "location": "query",
          "required": false,
          "description": "The property by which to sort the results",
          "type": "options",
          "default": "created",
          "options": [
            "created",
            "updated"
          ]
        },
        {
          "name": "severity",
          "location": "query",
          "required": false,
          "description": "If specified, only code scanning alerts with this severity will be returned",
          "type": "options",
          "default": "critical",
          "options": [
            "critical",
            "high",
            "medium",
            "low",
            "warning",
            "note",
            "error"
          ]
        }
      ]
    },
    "codespaces/list-in-organization": {
      "displayName": "List codespaces for the organization",
      "description": "Lists the codespaces associated to a specified organization.  You must authenticate using an access token with the `admi...",
      "method": "get",
      "endpoint": "/orgs/{org}/codespaces",
      "tags": [
        "codespace"
      ],
      "params": [
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        },
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        }
      ]
    },
    "codespaces/set-codespaces-billing": {
      "displayName": "Manage access control for organization codespaces",
      "description": "Sets which users can access codespaces in an organization. This is synonymous with granting or revoking codespaces billi...",
      "method": "put",
      "endpoint": "/orgs/{org}/codespaces/billing",
      "tags": [
        "codespace"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "selected_usernames",
          "location": "body",
          "required": false,
          "description": "The usernames of the organization members who should have access to codespaces in the organization. Required when `visib...",
          "type": "string",
          "default": ""
        },
        {
          "name": "visibility",
          "location": "body",
          "required": true,
          "description": "Which users can access codespaces in the organization. `disabled` means that no users can access codespaces in the organ...",
          "type": "string",
          "default": ""
        }
      ]
    },
    "codespaces/delete-codespaces-billing-users": {
      "displayName": "Removes users from Codespaces billing for an organization",
      "description": "Codespaces for the specified users will no longer be billed to the organization. To use this endpoint, the billing setti...",
      "method": "delete",
      "endpoint": "/orgs/{org}/codespaces/billing/selected_users",
      "tags": [
        "codespace"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "selected_usernames",
          "location": "body",
          "required": true,
          "description": "The usernames of the organization members whose codespaces should not be billed to the organization",
          "type": "string",
          "default": ""
        }
      ]
    },
    "codespaces/set-codespaces-billing-users": {
      "displayName": "Add users to Codespaces billing for an organization",
      "description": "Codespaces for the specified users will be billed to the organization. To use this endpoint, the billing settings for th...",
      "method": "post",
      "endpoint": "/orgs/{org}/codespaces/billing/selected_users",
      "tags": [
        "codespace"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "selected_usernames",
          "location": "body",
          "required": true,
          "description": "The usernames of the organization members whose codespaces be billed to the organization",
          "type": "string",
          "default": ""
        }
      ]
    },
    "codespaces/list-org-secrets": {
      "displayName": "List organization secrets",
      "description": "Lists all Codespaces secrets available at the organization-level without revealing their encrypted values. You must auth...",
      "method": "get",
      "endpoint": "/orgs/{org}/codespaces/secrets",
      "tags": [
        "codespace"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "codespaces/get-org-public-key": {
      "displayName": "Get an organization public key",
      "description": "Gets a public key for an organization, which is required in order to encrypt secrets. You need to encrypt the value of a...",
      "method": "get",
      "endpoint": "/orgs/{org}/codespaces/secrets/public-key",
      "tags": [
        "codespace"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        }
      ]
    },
    "codespaces/delete-org-secret": {
      "displayName": "Delete an organization secret",
      "description": "Deletes an organization secret using the secret name. You must authenticate using an access token with the `admin:org` s...",
      "method": "delete",
      "endpoint": "/orgs/{org}/codespaces/secrets/{secret_name}",
      "tags": [
        "codespace"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "secret_name",
          "location": "path",
          "required": true,
          "description": "The name of the secret",
          "type": "string",
          "default": ""
        }
      ]
    },
    "codespaces/get-org-secret": {
      "displayName": "Get an organization secret",
      "description": "Gets an organization secret without revealing its encrypted value. You must authenticate using an access token with the ...",
      "method": "get",
      "endpoint": "/orgs/{org}/codespaces/secrets/{secret_name}",
      "tags": [
        "codespace"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "secret_name",
          "location": "path",
          "required": true,
          "description": "The name of the secret",
          "type": "string",
          "default": ""
        }
      ]
    },
    "codespaces/create-or-update-org-secret": {
      "displayName": "Create or update an organization secret",
      "description": "Creates or updates an organization secret with an encrypted value. Encrypt your secret using [LibSodium](https://libsodi...",
      "method": "put",
      "endpoint": "/orgs/{org}/codespaces/secrets/{secret_name}",
      "tags": [
        "codespace"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "secret_name",
          "location": "path",
          "required": true,
          "description": "The name of the secret",
          "type": "string",
          "default": ""
        },
        {
          "name": "encrypted_value",
          "location": "body",
          "required": false,
          "description": "The value for your secret, encrypted with [LibSodium](https://libsodium.gitbook.io/doc/bindings_for_other_languages) usi...",
          "type": "string",
          "default": ""
        },
        {
          "name": "key_id",
          "location": "body",
          "required": false,
          "description": "The ID of the key you used to encrypt the secret",
          "type": "string",
          "default": ""
        },
        {
          "name": "selected_repository_ids",
          "location": "body",
          "required": false,
          "description": "An array of repository IDs that can access the organization secret. You can only provide a list of repository IDs when t...",
          "type": "json",
          "default": "{}"
        },
        {
          "name": "visibility",
          "location": "body",
          "required": true,
          "description": "Which type of organization repositories have access to the organization secret. `selected` means only the repositories s...",
          "type": "string",
          "default": ""
        }
      ]
    },
    "codespaces/list-selected-repos-for-org-secret": {
      "displayName": "List selected repositories for an organization secret",
      "description": "Lists all repositories that have been selected when the `visibility` for repository access to a secret is set to `select...",
      "method": "get",
      "endpoint": "/orgs/{org}/codespaces/secrets/{secret_name}/repositories",
      "tags": [
        "codespace"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "secret_name",
          "location": "path",
          "required": true,
          "description": "The name of the secret",
          "type": "string",
          "default": ""
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        }
      ]
    },
    "codespaces/set-selected-repos-for-org-secret": {
      "displayName": "Set selected repositories for an organization secret",
      "description": "Replaces all repositories for an organization secret when the `visibility` for repository access is set to `selected`. T...",
      "method": "put",
      "endpoint": "/orgs/{org}/codespaces/secrets/{secret_name}/repositories",
      "tags": [
        "codespace"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "secret_name",
          "location": "path",
          "required": true,
          "description": "The name of the secret",
          "type": "string",
          "default": ""
        },
        {
          "name": "selected_repository_ids",
          "location": "body",
          "required": true,
          "description": "An array of repository ids that can access the organization secret. You can only provide a list of repository ids when t...",
          "type": "json",
          "default": "{}"
        }
      ]
    },
    "codespaces/remove-selected-repo-from-org-secret": {
      "displayName": "Remove selected repository from an organization secret",
      "description": "Removes a repository from an organization secret when the `visibility` for repository access is set to `selected`. The v...",
      "method": "delete",
      "endpoint": "/orgs/{org}/codespaces/secrets/{secret_name}/repositories/{repository_id}",
      "tags": [
        "codespace"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "secret_name",
          "location": "path",
          "required": true,
          "description": "The name of the secret",
          "type": "string",
          "default": ""
        },
        {
          "name": "repository_id",
          "location": "path",
          "required": true,
          "description": "",
          "type": "number",
          "default": 0
        }
      ]
    },
    "codespaces/add-selected-repo-to-org-secret": {
      "displayName": "Add selected repository to an organization secret",
      "description": "Adds a repository to an organization secret when the `visibility` for repository access is set to `selected`. The visibi...",
      "method": "put",
      "endpoint": "/orgs/{org}/codespaces/secrets/{secret_name}/repositories/{repository_id}",
      "tags": [
        "codespace"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "secret_name",
          "location": "path",
          "required": true,
          "description": "The name of the secret",
          "type": "string",
          "default": ""
        },
        {
          "name": "repository_id",
          "location": "path",
          "required": true,
          "description": "",
          "type": "number",
          "default": 0
        }
      ]
    },
    "dependabot/list-alerts-for-org": {
      "displayName": "List Dependabot alerts for an organization",
      "description": "Lists Dependabot alerts for an organization.  To use this endpoint, you must be an owner or security manager for the org...",
      "method": "get",
      "endpoint": "/orgs/{org}/dependabot/alerts",
      "tags": [
        "dependabot"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "state",
          "location": "query",
          "required": false,
          "description": "A comma-separated list of states. If specified, only alerts with these states will be returned.  Can be: `dismissed`, `f...",
          "type": "string",
          "default": ""
        },
        {
          "name": "severity",
          "location": "query",
          "required": false,
          "description": "A comma-separated list of severities. If specified, only alerts with these severities will be returned.  Can be: `low`, ...",
          "type": "string",
          "default": ""
        },
        {
          "name": "ecosystem",
          "location": "query",
          "required": false,
          "description": "A comma-separated list of ecosystems. If specified, only alerts for these ecosystems will be returned.  Can be: `compose...",
          "type": "string",
          "default": ""
        },
        {
          "name": "package",
          "location": "query",
          "required": false,
          "description": "A comma-separated list of package names. If specified, only alerts for these packages will be returned",
          "type": "string",
          "default": ""
        },
        {
          "name": "scope",
          "location": "query",
          "required": false,
          "description": "The scope of the vulnerable dependency. If specified, only alerts with this scope will be returned",
          "type": "options",
          "default": "development",
          "options": [
            "development",
            "runtime"
          ]
        },
        {
          "name": "sort",
          "location": "query",
          "required": false,
          "description": "The property by which to sort the results. `created` means when the alert was created. `updated` means when the alert's ...",
          "type": "options",
          "default": "created",
          "options": [
            "created",
            "updated"
          ]
        },
        {
          "name": "direction",
          "location": "query",
          "required": false,
          "description": "The direction to sort the results by",
          "type": "options",
          "default": "desc",
          "options": [
            "asc",
            "desc"
          ]
        },
        {
          "name": "before",
          "location": "query",
          "required": false,
          "description": "A cursor, as given in the [Link header](https://docs.github.com/rest/overview/resources-in-the-rest-api#link-header). If...",
          "type": "string",
          "default": ""
        },
        {
          "name": "after",
          "location": "query",
          "required": false,
          "description": "A cursor, as given in the [Link header](https://docs.github.com/rest/overview/resources-in-the-rest-api#link-header). If...",
          "type": "string",
          "default": ""
        },
        {
          "name": "first",
          "location": "query",
          "required": false,
          "description": "**Deprecated**. The number of results per page (max 100), starting from the first matching result. This parameter must n...",
          "type": "number",
          "default": 30
        },
        {
          "name": "last",
          "location": "query",
          "required": false,
          "description": "**Deprecated**. The number of results per page (max 100), starting from the last matching result. This parameter must no...",
          "type": "number",
          "default": 0
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        }
      ]
    },
    "dependabot/list-org-secrets": {
      "displayName": "List organization secrets",
      "description": "Lists all secrets available in an organization without revealing their encrypted values. You must authenticate using an ...",
      "method": "get",
      "endpoint": "/orgs/{org}/dependabot/secrets",
      "tags": [
        "dependabot"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "dependabot/get-org-public-key": {
      "displayName": "Get an organization public key",
      "description": "Gets your public key, which you need to encrypt secrets. You need to encrypt a secret before you can create or update se...",
      "method": "get",
      "endpoint": "/orgs/{org}/dependabot/secrets/public-key",
      "tags": [
        "dependabot"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        }
      ]
    },
    "dependabot/delete-org-secret": {
      "displayName": "Delete an organization secret",
      "description": "Deletes a secret in an organization using the secret name. You must authenticate using an access token with the `admin:o...",
      "method": "delete",
      "endpoint": "/orgs/{org}/dependabot/secrets/{secret_name}",
      "tags": [
        "dependabot"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "secret_name",
          "location": "path",
          "required": true,
          "description": "The name of the secret",
          "type": "string",
          "default": ""
        }
      ]
    },
    "dependabot/get-org-secret": {
      "displayName": "Get an organization secret",
      "description": "Gets a single organization secret without revealing its encrypted value. You must authenticate using an access token wit...",
      "method": "get",
      "endpoint": "/orgs/{org}/dependabot/secrets/{secret_name}",
      "tags": [
        "dependabot"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "secret_name",
          "location": "path",
          "required": true,
          "description": "The name of the secret",
          "type": "string",
          "default": ""
        }
      ]
    },
    "dependabot/create-or-update-org-secret": {
      "displayName": "Create or update an organization secret",
      "description": "Creates or updates an organization secret with an encrypted value. Encrypt your secret using [LibSodium](https://libsodi...",
      "method": "put",
      "endpoint": "/orgs/{org}/dependabot/secrets/{secret_name}",
      "tags": [
        "dependabot"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "secret_name",
          "location": "path",
          "required": true,
          "description": "The name of the secret",
          "type": "string",
          "default": ""
        },
        {
          "name": "encrypted_value",
          "location": "body",
          "required": false,
          "description": "Value for your secret, encrypted with [LibSodium](https://libsodium.gitbook.io/doc/bindings_for_other_languages) using t...",
          "type": "string",
          "default": ""
        },
        {
          "name": "key_id",
          "location": "body",
          "required": false,
          "description": "ID of the key you used to encrypt the secret",
          "type": "string",
          "default": ""
        },
        {
          "name": "selected_repository_ids",
          "location": "body",
          "required": false,
          "description": "An array of repository ids that can access the organization secret. You can only provide a list of repository ids when t...",
          "type": "string",
          "default": ""
        },
        {
          "name": "visibility",
          "location": "body",
          "required": true,
          "description": "Which type of organization repositories have access to the organization secret. `selected` means only the repositories s...",
          "type": "string",
          "default": ""
        }
      ]
    },
    "dependabot/list-selected-repos-for-org-secret": {
      "displayName": "List selected repositories for an organization secret",
      "description": "Lists all repositories that have been selected when the `visibility` for repository access to a secret is set to `select...",
      "method": "get",
      "endpoint": "/orgs/{org}/dependabot/secrets/{secret_name}/repositories",
      "tags": [
        "dependabot"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "secret_name",
          "location": "path",
          "required": true,
          "description": "The name of the secret",
          "type": "string",
          "default": ""
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        }
      ]
    },
    "dependabot/set-selected-repos-for-org-secret": {
      "displayName": "Set selected repositories for an organization secret",
      "description": "Replaces all repositories for an organization secret when the `visibility` for repository access is set to `selected`. T...",
      "method": "put",
      "endpoint": "/orgs/{org}/dependabot/secrets/{secret_name}/repositories",
      "tags": [
        "dependabot"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "secret_name",
          "location": "path",
          "required": true,
          "description": "The name of the secret",
          "type": "string",
          "default": ""
        },
        {
          "name": "selected_repository_ids",
          "location": "body",
          "required": true,
          "description": "An array of repository ids that can access the organization secret. You can only provide a list of repository ids when t...",
          "type": "json",
          "default": "{}"
        }
      ]
    },
    "dependabot/remove-selected-repo-from-org-secret": {
      "displayName": "Remove selected repository from an organization secret",
      "description": "Removes a repository from an organization secret when the `visibility` for repository access is set to `selected`. The v...",
      "method": "delete",
      "endpoint": "/orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}",
      "tags": [
        "dependabot"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "secret_name",
          "location": "path",
          "required": true,
          "description": "The name of the secret",
          "type": "string",
          "default": ""
        },
        {
          "name": "repository_id",
          "location": "path",
          "required": true,
          "description": "",
          "type": "number",
          "default": 0
        }
      ]
    },
    "dependabot/add-selected-repo-to-org-secret": {
      "displayName": "Add selected repository to an organization secret",
      "description": "Adds a repository to an organization secret when the `visibility` for repository access is set to `selected`. The visibi...",
      "method": "put",
      "endpoint": "/orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}",
      "tags": [
        "dependabot"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "secret_name",
          "location": "path",
          "required": true,
          "description": "The name of the secret",
          "type": "string",
          "default": ""
        },
        {
          "name": "repository_id",
          "location": "path",
          "required": true,
          "description": "",
          "type": "number",
          "default": 0
        }
      ]
    },
    "activity/list-public-org-events": {
      "displayName": "List public organization events",
      "description": "",
      "method": "get",
      "endpoint": "/orgs/{org}/events",
      "tags": [
        "activity"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "orgs/list-failed-invitations": {
      "displayName": "List failed organization invitations",
      "description": "The return hash contains `failed_at` and `failed_reason` fields which represent the time at which the invitation failed ...",
      "method": "get",
      "endpoint": "/orgs/{org}/failed_invitations",
      "tags": [
        "org"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "orgs/list-webhooks": {
      "displayName": "List organization webhooks",
      "description": "",
      "method": "get",
      "endpoint": "/orgs/{org}/hooks",
      "tags": [
        "org"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "orgs/create-webhook": {
      "displayName": "Create an organization webhook",
      "description": "Here's how you can create a hook that posts payloads in JSON format:",
      "method": "post",
      "endpoint": "/orgs/{org}/hooks",
      "tags": [
        "org"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "active",
          "location": "body",
          "required": false,
          "description": "Determines if notifications are sent when the webhook is triggered. Set to `true` to send notifications",
          "type": "boolean",
          "default": false
        },
        {
          "name": "config",
          "location": "body",
          "required": true,
          "description": "Key/value pairs to provide settings for this webhook. [These are defined below](https://docs.github.com/rest/reference/o...",
          "type": "json",
          "default": "{}"
        },
        {
          "name": "events",
          "location": "body",
          "required": false,
          "description": "Determines what [events](https://docs.github.com/webhooks/event-payloads) the hook is triggered for. Set to `[\"*\"]` to r...",
          "type": "string",
          "default": ""
        },
        {
          "name": "name",
          "location": "body",
          "required": true,
          "description": "Must be passed as \"web\"",
          "type": "string",
          "default": ""
        }
      ]
    },
    "orgs/delete-webhook": {
      "displayName": "Delete an organization webhook",
      "description": "",
      "method": "delete",
      "endpoint": "/orgs/{org}/hooks/{hook_id}",
      "tags": [
        "org"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "hook_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the hook",
          "type": "number",
          "default": 0
        }
      ]
    },
    "orgs/get-webhook": {
      "displayName": "Get an organization webhook",
      "description": "Returns a webhook configured in an organization. To get only the webhook `config` properties, see \"[Get a webhook config...",
      "method": "get",
      "endpoint": "/orgs/{org}/hooks/{hook_id}",
      "tags": [
        "org"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "hook_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the hook",
          "type": "number",
          "default": 0
        }
      ]
    },
    "orgs/update-webhook": {
      "displayName": "Update an organization webhook",
      "description": "Updates a webhook configured in an organization. When you update a webhook, the `secret` will be overwritten. If you pre...",
      "method": "patch",
      "endpoint": "/orgs/{org}/hooks/{hook_id}",
      "tags": [
        "org"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "hook_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the hook",
          "type": "number",
          "default": 0
        },
        {
          "name": "active",
          "location": "body",
          "required": false,
          "description": "Determines if notifications are sent when the webhook is triggered. Set to `true` to send notifications",
          "type": "boolean",
          "default": false
        },
        {
          "name": "config",
          "location": "body",
          "required": false,
          "description": "Key/value pairs to provide settings for this webhook. [These are defined below](https://docs.github.com/rest/reference/o...",
          "type": "json",
          "default": "{}"
        },
        {
          "name": "events",
          "location": "body",
          "required": false,
          "description": "Determines what [events](https://docs.github.com/webhooks/event-payloads) the hook is triggered for",
          "type": "string",
          "default": ""
        },
        {
          "name": "name",
          "location": "body",
          "required": false,
          "description": "",
          "type": "string",
          "default": "",
          "placeholder": "e.g. \"web\""
        }
      ]
    },
    "orgs/get-webhook-config-for-org": {
      "displayName": "Get a webhook configuration for an organization",
      "description": "Returns the webhook configuration for an organization. To get more information about the webhook, including the `active`...",
      "method": "get",
      "endpoint": "/orgs/{org}/hooks/{hook_id}/config",
      "tags": [
        "org"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "hook_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the hook",
          "type": "number",
          "default": 0
        }
      ]
    },
    "orgs/update-webhook-config-for-org": {
      "displayName": "Update a webhook configuration for an organization",
      "description": "Updates the webhook configuration for an organization. To update more information about the webhook, including the `acti...",
      "method": "patch",
      "endpoint": "/orgs/{org}/hooks/{hook_id}/config",
      "tags": [
        "org"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "hook_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the hook",
          "type": "number",
          "default": 0
        },
        {
          "name": "content_type",
          "location": "body",
          "required": false,
          "description": "The media type used to serialize the payloads. Supported values include `json` and `form`. The default is `form`",
          "type": "string",
          "default": "",
          "placeholder": "e.g. \"json\""
        },
        {
          "name": "insecure_ssl",
          "location": "body",
          "required": false,
          "description": "Determines whether the SSL certificate of the host for `url` will be verified when delivering payloads. Supported values...",
          "type": "string",
          "default": "",
          "placeholder": "e.g. \"0\""
        },
        {
          "name": "secret",
          "location": "body",
          "required": false,
          "description": "If provided, the `secret` will be used as the `key` to generate the HMAC hex digest value for [delivery signature header...",
          "type": "string",
          "default": "",
          "placeholder": "e.g. \"********\""
        },
        {
          "name": "url",
          "location": "body",
          "required": false,
          "description": "The URL to which the payloads will be delivered",
          "type": "string",
          "default": "",
          "placeholder": "e.g. https://example.com/webhook"
        }
      ]
    },
    "orgs/list-webhook-deliveries": {
      "displayName": "List deliveries for an organization webhook",
      "description": "Returns a list of webhook deliveries for a webhook configured in an organization",
      "method": "get",
      "endpoint": "/orgs/{org}/hooks/{hook_id}/deliveries",
      "tags": [
        "org"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "hook_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the hook",
          "type": "number",
          "default": 0
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "cursor",
          "location": "query",
          "required": false,
          "description": "Used for pagination: the starting delivery from which the page of deliveries is fetched. Refer to the `link` header for ...",
          "type": "string",
          "default": ""
        },
        {
          "name": "redelivery",
          "location": "query",
          "required": false,
          "description": "",
          "type": "boolean",
          "default": false
        }
      ]
    },
    "orgs/get-webhook-delivery": {
      "displayName": "Get a webhook delivery for an organization webhook",
      "description": "Returns a delivery for a webhook configured in an organization",
      "method": "get",
      "endpoint": "/orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}",
      "tags": [
        "org"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "hook_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the hook",
          "type": "number",
          "default": 0
        },
        {
          "name": "delivery_id",
          "location": "path",
          "required": true,
          "description": "",
          "type": "number",
          "default": 0
        }
      ]
    },
    "orgs/redeliver-webhook-delivery": {
      "displayName": "Redeliver a delivery for an organization webhook",
      "description": "Redeliver a delivery for a webhook configured in an organization",
      "method": "post",
      "endpoint": "/orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}/attempts",
      "tags": [
        "org"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "hook_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the hook",
          "type": "number",
          "default": 0
        },
        {
          "name": "delivery_id",
          "location": "path",
          "required": true,
          "description": "",
          "type": "number",
          "default": 0
        }
      ]
    },
    "orgs/ping-webhook": {
      "displayName": "Ping an organization webhook",
      "description": "This will trigger a [ping event](https://docs.github.com/webhooks/#ping-event) to be sent to the hook",
      "method": "post",
      "endpoint": "/orgs/{org}/hooks/{hook_id}/pings",
      "tags": [
        "org"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "hook_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the hook",
          "type": "number",
          "default": 0
        }
      ]
    },
    "apps/get-org-installation": {
      "displayName": "Get an organization installation for the authenticated app",
      "description": "Enables an authenticated GitHub App to find the organization's installation information.  You must use a [JWT](https://d...",
      "method": "get",
      "endpoint": "/orgs/{org}/installation",
      "tags": [
        "app"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        }
      ]
    },
    "orgs/list-app-installations": {
      "displayName": "List app installations for an organization",
      "description": "Lists all GitHub Apps in an organization. The installation count includes all GitHub Apps installed on repositories in t...",
      "method": "get",
      "endpoint": "/orgs/{org}/installations",
      "tags": [
        "org"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "interactions/remove-restrictions-for-org": {
      "displayName": "Remove interaction restrictions for an organization",
      "description": "Removes all interaction restrictions from public repositories in the given organization. You must be an organization own...",
      "method": "delete",
      "endpoint": "/orgs/{org}/interaction-limits",
      "tags": [
        "interaction"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        }
      ]
    },
    "interactions/get-restrictions-for-org": {
      "displayName": "Get interaction restrictions for an organization",
      "description": "Shows which type of GitHub user can interact with this organization and when the restriction expires. If there is no res...",
      "method": "get",
      "endpoint": "/orgs/{org}/interaction-limits",
      "tags": [
        "interaction"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        }
      ]
    },
    "interactions/set-restrictions-for-org": {
      "displayName": "Set interaction restrictions for an organization",
      "description": "Temporarily restricts interactions to a certain type of GitHub user in any public repository in the given organization. ...",
      "method": "put",
      "endpoint": "/orgs/{org}/interaction-limits",
      "tags": [
        "interaction"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "expiry",
          "location": "body",
          "required": false,
          "description": "The duration of the interaction restriction. Default: `one_day`",
          "type": "string",
          "default": "",
          "placeholder": "e.g. one_month"
        },
        {
          "name": "limit",
          "location": "body",
          "required": true,
          "description": "The type of GitHub user that can comment, open issues, or create pull requests while the interaction limit is in effect",
          "type": "string",
          "default": "",
          "placeholder": "e.g. collaborators_only"
        }
      ]
    },
    "orgs/list-pending-invitations": {
      "displayName": "List pending organization invitations",
      "description": "The return hash contains a `role` field which refers to the Organization Invitation role and will be one of the followin...",
      "method": "get",
      "endpoint": "/orgs/{org}/invitations",
      "tags": [
        "org"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        },
        {
          "name": "role",
          "location": "query",
          "required": false,
          "description": "Filter invitations by their member role",
          "type": "options",
          "default": "all",
          "options": [
            "all",
            "admin",
            "direct_member",
            "billing_manager",
            "hiring_manager"
          ]
        },
        {
          "name": "invitation_source",
          "location": "query",
          "required": false,
          "description": "Filter invitations by their invitation source",
          "type": "options",
          "default": "all",
          "options": [
            "all",
            "member",
            "scim"
          ]
        }
      ]
    },
    "orgs/create-invitation": {
      "displayName": "Create an organization invitation",
      "description": "Invite people to an organization by using their GitHub user ID or their email address. In order to create invitations in...",
      "method": "post",
      "endpoint": "/orgs/{org}/invitations",
      "tags": [
        "org"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "email",
          "location": "body",
          "required": false,
          "description": "**Required unless you provide `invitee_id`**. Email address of the person you are inviting, which can be an existing Git...",
          "type": "string",
          "default": ""
        },
        {
          "name": "invitee_id",
          "location": "body",
          "required": false,
          "description": "**Required unless you provide `email`**. GitHub user ID for the person you are inviting",
          "type": "number",
          "default": 0
        },
        {
          "name": "role",
          "location": "body",
          "required": false,
          "description": "The role for the new member.   * `admin` - Organization owners with full administrative rights to the organization and c...",
          "type": "string",
          "default": ""
        },
        {
          "name": "team_ids",
          "location": "body",
          "required": false,
          "description": "Specify IDs for the teams you want to invite new members to",
          "type": "json",
          "default": "{}"
        }
      ]
    },
    "orgs/cancel-invitation": {
      "displayName": "Cancel an organization invitation",
      "description": "Cancel an organization invitation. In order to cancel an organization invitation, the authenticated user must be an orga...",
      "method": "delete",
      "endpoint": "/orgs/{org}/invitations/{invitation_id}",
      "tags": [
        "org"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "invitation_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the invitation",
          "type": "number",
          "default": 0
        }
      ]
    },
    "orgs/list-invitation-teams": {
      "displayName": "List organization invitation teams",
      "description": "List all teams associated with an invitation. In order to see invitations in an organization, the authenticated user mus...",
      "method": "get",
      "endpoint": "/orgs/{org}/invitations/{invitation_id}/teams",
      "tags": [
        "org"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "invitation_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the invitation",
          "type": "number",
          "default": 0
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "issues/list-for-org": {
      "displayName": "List organization issues assigned to the authenticated user",
      "description": "List issues in an organization assigned to the authenticated user.  **Note**: GitHub's REST API considers every pull req...",
      "method": "get",
      "endpoint": "/orgs/{org}/issues",
      "tags": [
        "issue"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "filter",
          "location": "query",
          "required": false,
          "description": "Indicates which sorts of issues to return. `assigned` means issues assigned to you. `created` means issues created by yo...",
          "type": "options",
          "default": "assigned",
          "options": [
            "assigned",
            "created",
            "mentioned",
            "subscribed",
            "repos",
            "all"
          ]
        },
        {
          "name": "state",
          "location": "query",
          "required": false,
          "description": "Indicates the state of the issues to return",
          "type": "options",
          "default": "open",
          "options": [
            "open",
            "closed",
            "all"
          ]
        },
        {
          "name": "labels",
          "location": "query",
          "required": false,
          "description": "A list of comma separated label names. Example: `bug,ui,@high`",
          "type": "string",
          "default": ""
        },
        {
          "name": "sort",
          "location": "query",
          "required": false,
          "description": "What to sort results by",
          "type": "options",
          "default": "created",
          "options": [
            "created",
            "updated",
            "comments"
          ]
        },
        {
          "name": "direction",
          "location": "query",
          "required": false,
          "description": "The direction to sort the results by",
          "type": "options",
          "default": "desc",
          "options": [
            "asc",
            "desc"
          ]
        },
        {
          "name": "since",
          "location": "query",
          "required": false,
          "description": "Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/IS...",
          "type": "string",
          "default": ""
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "orgs/list-members": {
      "displayName": "List organization members",
      "description": "List all users who are members of an organization. If the authenticated user is also a member of this organization then ...",
      "method": "get",
      "endpoint": "/orgs/{org}/members",
      "tags": [
        "org"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "filter",
          "location": "query",
          "required": false,
          "description": "Filter members returned in the list. `2fa_disabled` means that only members without [two-factor authentication](https://...",
          "type": "options",
          "default": "all",
          "options": [
            "2fa_disabled",
            "all"
          ]
        },
        {
          "name": "role",
          "location": "query",
          "required": false,
          "description": "Filter members returned by their role",
          "type": "options",
          "default": "all",
          "options": [
            "all",
            "admin",
            "member"
          ]
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "orgs/remove-member": {
      "displayName": "Remove an organization member",
      "description": "Removing a user from this list will remove them from all teams and they will no longer have any access to the organizati...",
      "method": "delete",
      "endpoint": "/orgs/{org}/members/{username}",
      "tags": [
        "org"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "username",
          "location": "path",
          "required": true,
          "description": "The handle for the GitHub user account",
          "type": "string",
          "default": ""
        }
      ]
    },
    "orgs/check-membership-for-user": {
      "displayName": "Check organization membership for a user",
      "description": "Check if a user is, publicly or privately, a member of the organization",
      "method": "get",
      "endpoint": "/orgs/{org}/members/{username}",
      "tags": [
        "org"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "username",
          "location": "path",
          "required": true,
          "description": "The handle for the GitHub user account",
          "type": "string",
          "default": ""
        }
      ]
    },
    "codespaces/get-codespaces-for-user-in-org": {
      "displayName": "List codespaces for a user in organization",
      "description": "Lists the codespaces that a member of an organization has for repositories in that organization.  You must authenticate ...",
      "method": "get",
      "endpoint": "/orgs/{org}/members/{username}/codespaces",
      "tags": [
        "codespace"
      ],
      "params": [
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        },
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "username",
          "location": "path",
          "required": true,
          "description": "The handle for the GitHub user account",
          "type": "string",
          "default": ""
        }
      ]
    },
    "codespaces/delete-from-organization": {
      "displayName": "Delete a codespace from the organization",
      "description": "Deletes a user's codespace.  You must authenticate using an access token with the `admin:org` scope to use this endpoint",
      "method": "delete",
      "endpoint": "/orgs/{org}/members/{username}/codespaces/{codespace_name}",
      "tags": [
        "codespace"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "username",
          "location": "path",
          "required": true,
          "description": "The handle for the GitHub user account",
          "type": "string",
          "default": ""
        },
        {
          "name": "codespace_name",
          "location": "path",
          "required": true,
          "description": "The name of the codespace",
          "type": "string",
          "default": ""
        }
      ]
    },
    "codespaces/stop-in-organization": {
      "displayName": "Stop a codespace for an organization user",
      "description": "Stops a user's codespace.  You must authenticate using an access token with the `admin:org` scope to use this endpoint",
      "method": "post",
      "endpoint": "/orgs/{org}/members/{username}/codespaces/{codespace_name}/stop",
      "tags": [
        "codespace"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "username",
          "location": "path",
          "required": true,
          "description": "The handle for the GitHub user account",
          "type": "string",
          "default": ""
        },
        {
          "name": "codespace_name",
          "location": "path",
          "required": true,
          "description": "The name of the codespace",
          "type": "string",
          "default": ""
        }
      ]
    },
    "orgs/remove-membership-for-user": {
      "displayName": "Remove organization membership for a user",
      "description": "In order to remove a user's membership with an organization, the authenticated user must be an organization owner.  If t...",
      "method": "delete",
      "endpoint": "/orgs/{org}/memberships/{username}",
      "tags": [
        "org"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "username",
          "location": "path",
          "required": true,
          "description": "The handle for the GitHub user account",
          "type": "string",
          "default": ""
        }
      ]
    },
    "orgs/get-membership-for-user": {
      "displayName": "Get organization membership for a user",
      "description": "In order to get a user's membership with an organization, the authenticated user must be an organization member. The `st...",
      "method": "get",
      "endpoint": "/orgs/{org}/memberships/{username}",
      "tags": [
        "org"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "username",
          "location": "path",
          "required": true,
          "description": "The handle for the GitHub user account",
          "type": "string",
          "default": ""
        }
      ]
    },
    "orgs/set-membership-for-user": {
      "displayName": "Set organization membership for a user",
      "description": "Only authenticated organization owners can add a member to the organization or update the member's role.  *   If the aut...",
      "method": "put",
      "endpoint": "/orgs/{org}/memberships/{username}",
      "tags": [
        "org"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "username",
          "location": "path",
          "required": true,
          "description": "The handle for the GitHub user account",
          "type": "string",
          "default": ""
        },
        {
          "name": "role",
          "location": "body",
          "required": false,
          "description": "The role to give the user in the organization. Can be one of:    * `admin` - The user will become an owner of the organi...",
          "type": "string",
          "default": ""
        }
      ]
    },
    "migrations/list-for-org": {
      "displayName": "List organization migrations",
      "description": "Lists the most recent migrations, including both exports (which can be started through the REST API) and imports (which ...",
      "method": "get",
      "endpoint": "/orgs/{org}/migrations",
      "tags": [
        "migration"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        },
        {
          "name": "exclude",
          "location": "query",
          "required": false,
          "description": "Exclude attributes from the API response to improve performance",
          "type": "string",
          "default": ""
        }
      ]
    },
    "migrations/start-for-org": {
      "displayName": "Start an organization migration",
      "description": "Initiates the generation of a migration archive",
      "method": "post",
      "endpoint": "/orgs/{org}/migrations",
      "tags": [
        "migration"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "exclude",
          "location": "body",
          "required": false,
          "description": "Exclude related items from being returned in the response in order to improve performance of the request. The array can ...",
          "type": "string",
          "default": ""
        },
        {
          "name": "exclude_attachments",
          "location": "body",
          "required": false,
          "description": "Indicates whether attachments should be excluded from the migration (to reduce migration archive file size)",
          "type": "boolean",
          "default": false
        },
        {
          "name": "exclude_git_data",
          "location": "body",
          "required": false,
          "description": "Indicates whether the repository git data should be excluded from the migration",
          "type": "boolean",
          "default": false
        },
        {
          "name": "exclude_metadata",
          "location": "body",
          "required": false,
          "description": "Indicates whether metadata should be excluded and only git source should be included for the migration",
          "type": "boolean",
          "default": false
        },
        {
          "name": "exclude_owner_projects",
          "location": "body",
          "required": false,
          "description": "Indicates whether projects owned by the organization or users should be excluded. from the migration",
          "type": "boolean",
          "default": false
        },
        {
          "name": "exclude_releases",
          "location": "body",
          "required": false,
          "description": "Indicates whether releases should be excluded from the migration (to reduce migration archive file size)",
          "type": "boolean",
          "default": false
        },
        {
          "name": "lock_repositories",
          "location": "body",
          "required": false,
          "description": "Indicates whether repositories should be locked (to prevent manipulation) while migrating data",
          "type": "boolean",
          "default": false
        },
        {
          "name": "org_metadata_only",
          "location": "body",
          "required": false,
          "description": "Indicates whether this should only include organization metadata (repositories array should be empty and will ignore oth...",
          "type": "boolean",
          "default": false
        },
        {
          "name": "repositories",
          "location": "body",
          "required": true,
          "description": "A list of arrays indicating which repositories should be migrated",
          "type": "string",
          "default": ""
        }
      ]
    },
    "migrations/get-status-for-org": {
      "displayName": "Get an organization migration status",
      "description": "Fetches the status of a migration.  The `state` of a migration can be one of the following values:  *   `pending`, which...",
      "method": "get",
      "endpoint": "/orgs/{org}/migrations/{migration_id}",
      "tags": [
        "migration"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "migration_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the migration",
          "type": "number",
          "default": 0
        },
        {
          "name": "exclude",
          "location": "query",
          "required": false,
          "description": "Exclude attributes from the API response to improve performance",
          "type": "string",
          "default": ""
        }
      ]
    },
    "migrations/delete-archive-for-org": {
      "displayName": "Delete an organization migration archive",
      "description": "Deletes a previous migration archive. Migration archives are automatically deleted after seven days",
      "method": "delete",
      "endpoint": "/orgs/{org}/migrations/{migration_id}/archive",
      "tags": [
        "migration"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "migration_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the migration",
          "type": "number",
          "default": 0
        }
      ]
    },
    "migrations/download-archive-for-org": {
      "displayName": "Download an organization migration archive",
      "description": "Fetches the URL to a migration archive",
      "method": "get",
      "endpoint": "/orgs/{org}/migrations/{migration_id}/archive",
      "tags": [
        "migration"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "migration_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the migration",
          "type": "number",
          "default": 0
        }
      ]
    },
    "migrations/unlock-repo-for-org": {
      "displayName": "Unlock an organization repository",
      "description": "Unlocks a repository that was locked for migration. You should unlock each migrated repository and [delete them](https:/...",
      "method": "delete",
      "endpoint": "/orgs/{org}/migrations/{migration_id}/repos/{repo_name}/lock",
      "tags": [
        "migration"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "migration_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the migration",
          "type": "number",
          "default": 0
        },
        {
          "name": "repo_name",
          "location": "path",
          "required": true,
          "description": "repo_name parameter",
          "type": "string",
          "default": ""
        }
      ]
    },
    "migrations/list-repos-for-org": {
      "displayName": "List repositories in an organization migration",
      "description": "List all the repositories for this organization migration",
      "method": "get",
      "endpoint": "/orgs/{org}/migrations/{migration_id}/repositories",
      "tags": [
        "migration"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "migration_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the migration",
          "type": "number",
          "default": 0
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "orgs/list-outside-collaborators": {
      "displayName": "List outside collaborators for an organization",
      "description": "List all users who are outside collaborators of an organization",
      "method": "get",
      "endpoint": "/orgs/{org}/outside_collaborators",
      "tags": [
        "org"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "filter",
          "location": "query",
          "required": false,
          "description": "Filter the list of outside collaborators. `2fa_disabled` means that only outside collaborators without [two-factor authe...",
          "type": "options",
          "default": "all",
          "options": [
            "2fa_disabled",
            "all"
          ]
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "orgs/remove-outside-collaborator": {
      "displayName": "Remove outside collaborator from an organization",
      "description": "Removing a user from this list will remove them from all the organization's repositories",
      "method": "delete",
      "endpoint": "/orgs/{org}/outside_collaborators/{username}",
      "tags": [
        "org"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "username",
          "location": "path",
          "required": true,
          "description": "The handle for the GitHub user account",
          "type": "string",
          "default": ""
        }
      ]
    },
    "orgs/convert-member-to-outside-collaborator": {
      "displayName": "Convert an organization member to outside collaborator",
      "description": "When an organization member is converted to an outside collaborator, they'll only have access to the repositories that t...",
      "method": "put",
      "endpoint": "/orgs/{org}/outside_collaborators/{username}",
      "tags": [
        "org"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "username",
          "location": "path",
          "required": true,
          "description": "The handle for the GitHub user account",
          "type": "string",
          "default": ""
        },
        {
          "name": "async",
          "location": "body",
          "required": false,
          "description": "When set to `true`, the request will be performed asynchronously. Returns a 202 status code when the job is successfully...",
          "type": "boolean",
          "default": false
        }
      ]
    },
    "packages/list-packages-for-organization": {
      "displayName": "List packages for an organization",
      "description": "Lists packages in an organization readable by the user.  To use this endpoint, you must authenticate using an access tok...",
      "method": "get",
      "endpoint": "/orgs/{org}/packages",
      "tags": [
        "package"
      ],
      "params": [
        {
          "name": "package_type",
          "location": "query",
          "required": true,
          "description": "The type of supported package. Packages in GitHub's Gradle registry have the type `maven`. Docker images pushed to GitHu...",
          "type": "options",
          "default": "npm",
          "options": [
            "npm",
            "maven",
            "rubygems",
            "docker",
            "nuget",
            "container"
          ]
        },
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "visibility",
          "location": "query",
          "required": false,
          "description": "The selected visibility of the packages.  This parameter is optional and only filters an existing result set.  The `inte...",
          "type": "options",
          "default": "public",
          "options": [
            "public",
            "private",
            "internal"
          ]
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        }
      ]
    },
    "packages/delete-package-for-org": {
      "displayName": "Delete a package for an organization",
      "description": "Deletes an entire package in an organization. You cannot delete a public package if any version of the package has more ...",
      "method": "delete",
      "endpoint": "/orgs/{org}/packages/{package_type}/{package_name}",
      "tags": [
        "package"
      ],
      "params": [
        {
          "name": "package_type",
          "location": "path",
          "required": true,
          "description": "The type of supported package. Packages in GitHub's Gradle registry have the type `maven`. Docker images pushed to GitHu...",
          "type": "options",
          "default": "npm",
          "options": [
            "npm",
            "maven",
            "rubygems",
            "docker",
            "nuget",
            "container"
          ]
        },
        {
          "name": "package_name",
          "location": "path",
          "required": true,
          "description": "The name of the package",
          "type": "string",
          "default": ""
        },
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        }
      ]
    },
    "packages/get-package-for-organization": {
      "displayName": "Get a package for an organization",
      "description": "Gets a specific package in an organization.  To use this endpoint, you must authenticate using an access token with the ...",
      "method": "get",
      "endpoint": "/orgs/{org}/packages/{package_type}/{package_name}",
      "tags": [
        "package"
      ],
      "params": [
        {
          "name": "package_type",
          "location": "path",
          "required": true,
          "description": "The type of supported package. Packages in GitHub's Gradle registry have the type `maven`. Docker images pushed to GitHu...",
          "type": "options",
          "default": "npm",
          "options": [
            "npm",
            "maven",
            "rubygems",
            "docker",
            "nuget",
            "container"
          ]
        },
        {
          "name": "package_name",
          "location": "path",
          "required": true,
          "description": "The name of the package",
          "type": "string",
          "default": ""
        },
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        }
      ]
    },
    "packages/restore-package-for-org": {
      "displayName": "Restore a package for an organization",
      "description": "Restores an entire package in an organization.  You can restore a deleted package under the following conditions:   - Th...",
      "method": "post",
      "endpoint": "/orgs/{org}/packages/{package_type}/{package_name}/restore",
      "tags": [
        "package"
      ],
      "params": [
        {
          "name": "package_type",
          "location": "path",
          "required": true,
          "description": "The type of supported package. Packages in GitHub's Gradle registry have the type `maven`. Docker images pushed to GitHu...",
          "type": "options",
          "default": "npm",
          "options": [
            "npm",
            "maven",
            "rubygems",
            "docker",
            "nuget",
            "container"
          ]
        },
        {
          "name": "package_name",
          "location": "path",
          "required": true,
          "description": "The name of the package",
          "type": "string",
          "default": ""
        },
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "token",
          "location": "query",
          "required": false,
          "description": "package token",
          "type": "string",
          "default": ""
        }
      ]
    },
    "packages/get-all-package-versions-for-package-owned-by-org": {
      "displayName": "List package versions for a package owned by an organization",
      "description": "Lists package versions for a package owned by an organization.  If the `package_type` belongs to a GitHub Packages regis...",
      "method": "get",
      "endpoint": "/orgs/{org}/packages/{package_type}/{package_name}/versions",
      "tags": [
        "package"
      ],
      "params": [
        {
          "name": "package_type",
          "location": "path",
          "required": true,
          "description": "The type of supported package. Packages in GitHub's Gradle registry have the type `maven`. Docker images pushed to GitHu...",
          "type": "options",
          "default": "npm",
          "options": [
            "npm",
            "maven",
            "rubygems",
            "docker",
            "nuget",
            "container"
          ]
        },
        {
          "name": "package_name",
          "location": "path",
          "required": true,
          "description": "The name of the package",
          "type": "string",
          "default": ""
        },
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "state",
          "location": "query",
          "required": false,
          "description": "The state of the package, either active or deleted",
          "type": "options",
          "default": "active",
          "options": [
            "active",
            "deleted"
          ]
        }
      ]
    },
    "packages/delete-package-version-for-org": {
      "displayName": "Delete package version for an organization",
      "description": "Deletes a specific package version in an organization. If the package is public and the package version has more than 5,...",
      "method": "delete",
      "endpoint": "/orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}",
      "tags": [
        "package"
      ],
      "params": [
        {
          "name": "package_type",
          "location": "path",
          "required": true,
          "description": "The type of supported package. Packages in GitHub's Gradle registry have the type `maven`. Docker images pushed to GitHu...",
          "type": "options",
          "default": "npm",
          "options": [
            "npm",
            "maven",
            "rubygems",
            "docker",
            "nuget",
            "container"
          ]
        },
        {
          "name": "package_name",
          "location": "path",
          "required": true,
          "description": "The name of the package",
          "type": "string",
          "default": ""
        },
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "package_version_id",
          "location": "path",
          "required": true,
          "description": "Unique identifier of the package version",
          "type": "number",
          "default": 0
        }
      ]
    },
    "packages/get-package-version-for-organization": {
      "displayName": "Get a package version for an organization",
      "description": "Gets a specific package version in an organization.  You must authenticate using an access token with the `read:packages...",
      "method": "get",
      "endpoint": "/orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}",
      "tags": [
        "package"
      ],
      "params": [
        {
          "name": "package_type",
          "location": "path",
          "required": true,
          "description": "The type of supported package. Packages in GitHub's Gradle registry have the type `maven`. Docker images pushed to GitHu...",
          "type": "options",
          "default": "npm",
          "options": [
            "npm",
            "maven",
            "rubygems",
            "docker",
            "nuget",
            "container"
          ]
        },
        {
          "name": "package_name",
          "location": "path",
          "required": true,
          "description": "The name of the package",
          "type": "string",
          "default": ""
        },
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "package_version_id",
          "location": "path",
          "required": true,
          "description": "Unique identifier of the package version",
          "type": "number",
          "default": 0
        }
      ]
    },
    "packages/restore-package-version-for-org": {
      "displayName": "Restore package version for an organization",
      "description": "Restores a specific package version in an organization.  You can restore a deleted package under the following condition...",
      "method": "post",
      "endpoint": "/orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore",
      "tags": [
        "package"
      ],
      "params": [
        {
          "name": "package_type",
          "location": "path",
          "required": true,
          "description": "The type of supported package. Packages in GitHub's Gradle registry have the type `maven`. Docker images pushed to GitHu...",
          "type": "options",
          "default": "npm",
          "options": [
            "npm",
            "maven",
            "rubygems",
            "docker",
            "nuget",
            "container"
          ]
        },
        {
          "name": "package_name",
          "location": "path",
          "required": true,
          "description": "The name of the package",
          "type": "string",
          "default": ""
        },
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "package_version_id",
          "location": "path",
          "required": true,
          "description": "Unique identifier of the package version",
          "type": "number",
          "default": 0
        }
      ]
    },
    "projects/list-for-org": {
      "displayName": "List organization projects",
      "description": "Lists the projects in an organization. Returns a `404 Not Found` status if projects are disabled in the organization. If...",
      "method": "get",
      "endpoint": "/orgs/{org}/projects",
      "tags": [
        "project"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "state",
          "location": "query",
          "required": false,
          "description": "Indicates the state of the projects to return",
          "type": "options",
          "default": "open",
          "options": [
            "open",
            "closed",
            "all"
          ]
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "projects/create-for-org": {
      "displayName": "Create an organization project",
      "description": "Creates an organization project board. Returns a `410 Gone` status if projects are disabled in the organization or if th...",
      "method": "post",
      "endpoint": "/orgs/{org}/projects",
      "tags": [
        "project"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "body",
          "location": "body",
          "required": false,
          "description": "The description of the project",
          "type": "string",
          "default": ""
        },
        {
          "name": "name",
          "location": "body",
          "required": true,
          "description": "The name of the project",
          "type": "string",
          "default": ""
        }
      ]
    },
    "orgs/list-public-members": {
      "displayName": "List public organization members",
      "description": "Members of an organization can choose to have their membership publicized or not",
      "method": "get",
      "endpoint": "/orgs/{org}/public_members",
      "tags": [
        "org"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "orgs/remove-public-membership-for-authenticated-user": {
      "displayName": "Remove public organization membership for the authenticated user",
      "description": "",
      "method": "delete",
      "endpoint": "/orgs/{org}/public_members/{username}",
      "tags": [
        "org"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "username",
          "location": "path",
          "required": true,
          "description": "The handle for the GitHub user account",
          "type": "string",
          "default": ""
        }
      ]
    },
    "orgs/check-public-membership-for-user": {
      "displayName": "Check public organization membership for a user",
      "description": "",
      "method": "get",
      "endpoint": "/orgs/{org}/public_members/{username}",
      "tags": [
        "org"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "username",
          "location": "path",
          "required": true,
          "description": "The handle for the GitHub user account",
          "type": "string",
          "default": ""
        }
      ]
    },
    "orgs/set-public-membership-for-authenticated-user": {
      "displayName": "Set public organization membership for the authenticated user",
      "description": "The user can publicize their own membership. (A user cannot publicize the membership for another user.)  Note that you'l...",
      "method": "put",
      "endpoint": "/orgs/{org}/public_members/{username}",
      "tags": [
        "org"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "username",
          "location": "path",
          "required": true,
          "description": "The handle for the GitHub user account",
          "type": "string",
          "default": ""
        }
      ]
    },
    "repos/list-for-org": {
      "displayName": "List organization repositories",
      "description": "Lists repositories for the specified organization.  **Note:** In order to see the `security_and_analysis` block for a re...",
      "method": "get",
      "endpoint": "/orgs/{org}/repos",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "type",
          "location": "query",
          "required": false,
          "description": "Specifies the types of repositories you want returned",
          "type": "options",
          "default": "all",
          "options": [
            "all",
            "public",
            "private",
            "forks",
            "sources",
            "member"
          ]
        },
        {
          "name": "sort",
          "location": "query",
          "required": false,
          "description": "The property to sort the results by",
          "type": "options",
          "default": "created",
          "options": [
            "created",
            "updated",
            "pushed",
            "full_name"
          ]
        },
        {
          "name": "direction",
          "location": "query",
          "required": false,
          "description": "The order to sort by. Default: `asc` when using `full_name`, otherwise `desc`",
          "type": "options",
          "default": "asc",
          "options": [
            "asc",
            "desc"
          ]
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "repos/create-in-org": {
      "displayName": "Create an organization repository",
      "description": "Creates a new repository in the specified organization. The authenticated user must be a member of the organization.  **...",
      "method": "post",
      "endpoint": "/orgs/{org}/repos",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "allow_auto_merge",
          "location": "body",
          "required": false,
          "description": "Either `true` to allow auto-merge on pull requests, or `false` to disallow auto-merge",
          "type": "boolean",
          "default": false
        },
        {
          "name": "allow_merge_commit",
          "location": "body",
          "required": false,
          "description": "Either `true` to allow merging pull requests with a merge commit, or `false` to prevent merging pull requests with merge...",
          "type": "boolean",
          "default": false
        },
        {
          "name": "allow_rebase_merge",
          "location": "body",
          "required": false,
          "description": "Either `true` to allow rebase-merging pull requests, or `false` to prevent rebase-merging",
          "type": "boolean",
          "default": false
        },
        {
          "name": "allow_squash_merge",
          "location": "body",
          "required": false,
          "description": "Either `true` to allow squash-merging pull requests, or `false` to prevent squash-merging",
          "type": "boolean",
          "default": false
        },
        {
          "name": "auto_init",
          "location": "body",
          "required": false,
          "description": "Pass `true` to create an initial commit with empty README",
          "type": "boolean",
          "default": false
        },
        {
          "name": "delete_branch_on_merge",
          "location": "body",
          "required": false,
          "description": "Either `true` to allow automatically deleting head branches when pull requests are merged, or `false` to prevent automat...",
          "type": "boolean",
          "default": false
        },
        {
          "name": "description",
          "location": "body",
          "required": false,
          "description": "A short description of the repository",
          "type": "string",
          "default": ""
        },
        {
          "name": "gitignore_template",
          "location": "body",
          "required": false,
          "description": "Desired language or platform [.gitignore template](https://github.com/github/gitignore) to apply. Use the name of the te...",
          "type": "string",
          "default": ""
        },
        {
          "name": "has_downloads",
          "location": "body",
          "required": false,
          "description": "Whether downloads are enabled",
          "type": "boolean",
          "default": false
        },
        {
          "name": "has_issues",
          "location": "body",
          "required": false,
          "description": "Either `true` to enable issues for this repository or `false` to disable them",
          "type": "boolean",
          "default": false
        },
        {
          "name": "has_projects",
          "location": "body",
          "required": false,
          "description": "Either `true` to enable projects for this repository or `false` to disable them. **Note:** If you're creating a reposito...",
          "type": "boolean",
          "default": false
        },
        {
          "name": "has_wiki",
          "location": "body",
          "required": false,
          "description": "Either `true` to enable the wiki for this repository or `false` to disable it",
          "type": "boolean",
          "default": false
        },
        {
          "name": "homepage",
          "location": "body",
          "required": false,
          "description": "A URL with more information about the repository",
          "type": "string",
          "default": ""
        },
        {
          "name": "is_template",
          "location": "body",
          "required": false,
          "description": "Either `true` to make this repo available as a template repository or `false` to prevent it",
          "type": "boolean",
          "default": false
        },
        {
          "name": "license_template",
          "location": "body",
          "required": false,
          "description": "Choose an [open source license template](https://choosealicense.com/) that best suits your needs, and then use the [lice...",
          "type": "string",
          "default": ""
        },
        {
          "name": "merge_commit_message",
          "location": "body",
          "required": false,
          "description": "The default value for a merge commit message.  - `PR_TITLE` - default to the pull request's title. - `PR_BODY` - default...",
          "type": "string",
          "default": ""
        },
        {
          "name": "merge_commit_title",
          "location": "body",
          "required": false,
          "description": "The default value for a merge commit title.  - `PR_TITLE` - default to the pull request's title. - `MERGE_MESSAGE` - def...",
          "type": "string",
          "default": ""
        },
        {
          "name": "name",
          "location": "body",
          "required": true,
          "description": "The name of the repository",
          "type": "string",
          "default": ""
        },
        {
          "name": "private",
          "location": "body",
          "required": false,
          "description": "Whether the repository is private",
          "type": "boolean",
          "default": false
        },
        {
          "name": "squash_merge_commit_message",
          "location": "body",
          "required": false,
          "description": "The default value for a squash merge commit message:  - `PR_BODY` - default to the pull request's body. - `COMMIT_MESSAG...",
          "type": "string",
          "default": ""
        },
        {
          "name": "squash_merge_commit_title",
          "location": "body",
          "required": false,
          "description": "The default value for a squash merge commit title:  - `PR_TITLE` - default to the pull request's title. - `COMMIT_OR_PR_...",
          "type": "string",
          "default": ""
        },
        {
          "name": "team_id",
          "location": "body",
          "required": false,
          "description": "The id of the team that will be granted access to this repository. This is only valid when creating a repository in an o...",
          "type": "number",
          "default": 0
        },
        {
          "name": "use_squash_pr_title_as_default",
          "location": "body",
          "required": false,
          "description": "Either `true` to allow squash-merge commits to use pull request title, or `false` to use commit message. **This property...",
          "type": "boolean",
          "default": false
        },
        {
          "name": "visibility",
          "location": "body",
          "required": false,
          "description": "The visibility of the repository",
          "type": "string",
          "default": ""
        }
      ]
    },
    "secret-scanning/list-alerts-for-org": {
      "displayName": "List secret scanning alerts for an organization",
      "description": "Lists secret scanning alerts for eligible repositories in an organization, from newest to oldest. To use this endpoint, ...",
      "method": "get",
      "endpoint": "/orgs/{org}/secret-scanning/alerts",
      "tags": [
        "secret-scanning"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "state",
          "location": "query",
          "required": false,
          "description": "Set to `open` or `resolved` to only list secret scanning alerts in a specific state",
          "type": "options",
          "default": "open",
          "options": [
            "open",
            "resolved"
          ]
        },
        {
          "name": "secret_type",
          "location": "query",
          "required": false,
          "description": "A comma-separated list of secret types to return. By default all secret types are returned. See \"[Secret scanning patter...",
          "type": "string",
          "default": ""
        },
        {
          "name": "resolution",
          "location": "query",
          "required": false,
          "description": "A comma-separated list of resolutions. Only secret scanning alerts with one of these resolutions are listed. Valid resol...",
          "type": "string",
          "default": ""
        },
        {
          "name": "sort",
          "location": "query",
          "required": false,
          "description": "The property to sort the results by. `created` means when the alert was created. `updated` means when the alert was upda...",
          "type": "options",
          "default": "created",
          "options": [
            "created",
            "updated"
          ]
        },
        {
          "name": "direction",
          "location": "query",
          "required": false,
          "description": "The direction to sort the results by",
          "type": "options",
          "default": "desc",
          "options": [
            "asc",
            "desc"
          ]
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "before",
          "location": "query",
          "required": false,
          "description": "A cursor, as given in the [Link header](https://docs.github.com/rest/overview/resources-in-the-rest-api#link-header). If...",
          "type": "string",
          "default": ""
        },
        {
          "name": "after",
          "location": "query",
          "required": false,
          "description": "A cursor, as given in the [Link header](https://docs.github.com/rest/overview/resources-in-the-rest-api#link-header). If...",
          "type": "string",
          "default": ""
        }
      ]
    },
    "orgs/list-security-manager-teams": {
      "displayName": "List security manager teams",
      "description": "Lists teams that are security managers for an organization. For more information, see \"[Managing security managers in yo...",
      "method": "get",
      "endpoint": "/orgs/{org}/security-managers",
      "tags": [
        "org"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        }
      ]
    },
    "orgs/remove-security-manager-team": {
      "displayName": "Remove a security manager team",
      "description": "Removes the security manager role from a team for an organization. For more information, see \"[Managing security manager...",
      "method": "delete",
      "endpoint": "/orgs/{org}/security-managers/teams/{team_slug}",
      "tags": [
        "org"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "team_slug",
          "location": "path",
          "required": true,
          "description": "The slug of the team name",
          "type": "string",
          "default": ""
        }
      ]
    },
    "orgs/add-security-manager-team": {
      "displayName": "Add a security manager team",
      "description": "Adds a team as a security manager for an organization. For more information, see \"[Managing security for an organization...",
      "method": "put",
      "endpoint": "/orgs/{org}/security-managers/teams/{team_slug}",
      "tags": [
        "org"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "team_slug",
          "location": "path",
          "required": true,
          "description": "The slug of the team name",
          "type": "string",
          "default": ""
        }
      ]
    },
    "billing/get-github-actions-billing-org": {
      "displayName": "Get GitHub Actions billing for an organization",
      "description": "Gets the summary of the free and paid GitHub Actions minutes used.  Paid minutes only apply to workflows in private repo...",
      "method": "get",
      "endpoint": "/orgs/{org}/settings/billing/actions",
      "tags": [
        "billing"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        }
      ]
    },
    "billing/get-github-packages-billing-org": {
      "displayName": "Get GitHub Packages billing for an organization",
      "description": "Gets the free and paid storage used for GitHub Packages in gigabytes.  Paid minutes only apply to packages stored for pr...",
      "method": "get",
      "endpoint": "/orgs/{org}/settings/billing/packages",
      "tags": [
        "billing"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        }
      ]
    },
    "billing/get-shared-storage-billing-org": {
      "displayName": "Get shared storage billing for an organization",
      "description": "Gets the estimated paid and estimated total storage used for GitHub Actions and GitHub Packages.  Paid minutes only appl...",
      "method": "get",
      "endpoint": "/orgs/{org}/settings/billing/shared-storage",
      "tags": [
        "billing"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        }
      ]
    },
    "teams/list": {
      "displayName": "List teams",
      "description": "Lists all teams in an organization that are visible to the authenticated user",
      "method": "get",
      "endpoint": "/orgs/{org}/teams",
      "tags": [
        "team"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "teams/create": {
      "displayName": "Create a team",
      "description": "To create a team, the authenticated user must be a member or owner of `{org}`. By default, organization members can crea...",
      "method": "post",
      "endpoint": "/orgs/{org}/teams",
      "tags": [
        "team"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "description",
          "location": "body",
          "required": false,
          "description": "The description of the team",
          "type": "string",
          "default": ""
        },
        {
          "name": "maintainers",
          "location": "body",
          "required": false,
          "description": "List GitHub IDs for organization members who will become team maintainers",
          "type": "string",
          "default": ""
        },
        {
          "name": "name",
          "location": "body",
          "required": true,
          "description": "The name of the team",
          "type": "string",
          "default": ""
        },
        {
          "name": "parent_team_id",
          "location": "body",
          "required": false,
          "description": "The ID of a team to set as the parent team",
          "type": "number",
          "default": 0
        },
        {
          "name": "permission",
          "location": "body",
          "required": false,
          "description": "**Deprecated**. The permission that new repositories will be added to the team with when none is specified",
          "type": "string",
          "default": ""
        },
        {
          "name": "privacy",
          "location": "body",
          "required": false,
          "description": "The level of privacy this team should have. The options are:   **For a non-nested team:**    * `secret` - only visible t...",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo_names",
          "location": "body",
          "required": false,
          "description": "The full name (e.g., \"organization-name/repository-name\") of repositories to add the team to",
          "type": "string",
          "default": ""
        }
      ]
    },
    "teams/delete-in-org": {
      "displayName": "Delete a team",
      "description": "To delete a team, the authenticated user must be an organization owner or team maintainer.  If you are an organization o...",
      "method": "delete",
      "endpoint": "/orgs/{org}/teams/{team_slug}",
      "tags": [
        "team"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "team_slug",
          "location": "path",
          "required": true,
          "description": "The slug of the team name",
          "type": "string",
          "default": ""
        }
      ]
    },
    "teams/get-by-name": {
      "displayName": "Get a team by name",
      "description": "Gets a team using the team's `slug`. To create the `slug`, GitHub replaces special characters in the `name` string, chan...",
      "method": "get",
      "endpoint": "/orgs/{org}/teams/{team_slug}",
      "tags": [
        "team"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "team_slug",
          "location": "path",
          "required": true,
          "description": "The slug of the team name",
          "type": "string",
          "default": ""
        }
      ]
    },
    "teams/update-in-org": {
      "displayName": "Update a team",
      "description": "To edit a team, the authenticated user must either be an organization owner or a team maintainer.  **Note:** You can als...",
      "method": "patch",
      "endpoint": "/orgs/{org}/teams/{team_slug}",
      "tags": [
        "team"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "team_slug",
          "location": "path",
          "required": true,
          "description": "The slug of the team name",
          "type": "string",
          "default": ""
        },
        {
          "name": "description",
          "location": "body",
          "required": false,
          "description": "The description of the team",
          "type": "string",
          "default": ""
        },
        {
          "name": "name",
          "location": "body",
          "required": false,
          "description": "The name of the team",
          "type": "string",
          "default": ""
        },
        {
          "name": "parent_team_id",
          "location": "body",
          "required": false,
          "description": "The ID of a team to set as the parent team",
          "type": "number",
          "default": 0
        },
        {
          "name": "permission",
          "location": "body",
          "required": false,
          "description": "**Deprecated**. The permission that new repositories will be added to the team with when none is specified",
          "type": "string",
          "default": ""
        },
        {
          "name": "privacy",
          "location": "body",
          "required": false,
          "description": "The level of privacy this team should have. Editing teams without specifying this parameter leaves `privacy` intact. Whe...",
          "type": "string",
          "default": ""
        }
      ]
    },
    "teams/list-discussions-in-org": {
      "displayName": "List discussions",
      "description": "List all discussions on a team's page. OAuth access tokens require the `read:discussion` [scope](https://docs.github.com...",
      "method": "get",
      "endpoint": "/orgs/{org}/teams/{team_slug}/discussions",
      "tags": [
        "team"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "team_slug",
          "location": "path",
          "required": true,
          "description": "The slug of the team name",
          "type": "string",
          "default": ""
        },
        {
          "name": "direction",
          "location": "query",
          "required": false,
          "description": "The direction to sort the results by",
          "type": "options",
          "default": "desc",
          "options": [
            "asc",
            "desc"
          ]
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        },
        {
          "name": "pinned",
          "location": "query",
          "required": false,
          "description": "Pinned discussions only filter",
          "type": "string",
          "default": ""
        }
      ]
    },
    "teams/create-discussion-in-org": {
      "displayName": "Create a discussion",
      "description": "Creates a new discussion post on a team's page. OAuth access tokens require the `write:discussion` [scope](https://docs....",
      "method": "post",
      "endpoint": "/orgs/{org}/teams/{team_slug}/discussions",
      "tags": [
        "team"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "team_slug",
          "location": "path",
          "required": true,
          "description": "The slug of the team name",
          "type": "string",
          "default": ""
        },
        {
          "name": "body",
          "location": "body",
          "required": true,
          "description": "The discussion post's body text",
          "type": "string",
          "default": ""
        },
        {
          "name": "private",
          "location": "body",
          "required": false,
          "description": "Private posts are only visible to team members, organization owners, and team maintainers. Public posts are visible to a...",
          "type": "boolean",
          "default": false
        },
        {
          "name": "title",
          "location": "body",
          "required": true,
          "description": "The discussion post's title",
          "type": "string",
          "default": ""
        }
      ]
    },
    "teams/delete-discussion-in-org": {
      "displayName": "Delete a discussion",
      "description": "Delete a discussion from a team's page. OAuth access tokens require the `write:discussion` [scope](https://docs.github.c...",
      "method": "delete",
      "endpoint": "/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}",
      "tags": [
        "team"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "team_slug",
          "location": "path",
          "required": true,
          "description": "The slug of the team name",
          "type": "string",
          "default": ""
        },
        {
          "name": "discussion_number",
          "location": "path",
          "required": true,
          "description": "The number that identifies the discussion",
          "type": "number",
          "default": 0
        }
      ]
    },
    "teams/get-discussion-in-org": {
      "displayName": "Get a discussion",
      "description": "Get a specific discussion on a team's page. OAuth access tokens require the `read:discussion` [scope](https://docs.githu...",
      "method": "get",
      "endpoint": "/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}",
      "tags": [
        "team"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "team_slug",
          "location": "path",
          "required": true,
          "description": "The slug of the team name",
          "type": "string",
          "default": ""
        },
        {
          "name": "discussion_number",
          "location": "path",
          "required": true,
          "description": "The number that identifies the discussion",
          "type": "number",
          "default": 0
        }
      ]
    },
    "teams/update-discussion-in-org": {
      "displayName": "Update a discussion",
      "description": "Edits the title and body text of a discussion post. Only the parameters you provide are updated. OAuth access tokens req...",
      "method": "patch",
      "endpoint": "/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}",
      "tags": [
        "team"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "team_slug",
          "location": "path",
          "required": true,
          "description": "The slug of the team name",
          "type": "string",
          "default": ""
        },
        {
          "name": "discussion_number",
          "location": "path",
          "required": true,
          "description": "The number that identifies the discussion",
          "type": "number",
          "default": 0
        },
        {
          "name": "body",
          "location": "body",
          "required": false,
          "description": "The discussion post's body text",
          "type": "string",
          "default": ""
        },
        {
          "name": "title",
          "location": "body",
          "required": false,
          "description": "The discussion post's title",
          "type": "string",
          "default": ""
        }
      ]
    },
    "teams/list-discussion-comments-in-org": {
      "displayName": "List discussion comments",
      "description": "List all comments on a team discussion. OAuth access tokens require the `read:discussion` [scope](https://docs.github.co...",
      "method": "get",
      "endpoint": "/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments",
      "tags": [
        "team"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "team_slug",
          "location": "path",
          "required": true,
          "description": "The slug of the team name",
          "type": "string",
          "default": ""
        },
        {
          "name": "discussion_number",
          "location": "path",
          "required": true,
          "description": "The number that identifies the discussion",
          "type": "number",
          "default": 0
        },
        {
          "name": "direction",
          "location": "query",
          "required": false,
          "description": "The direction to sort the results by",
          "type": "options",
          "default": "desc",
          "options": [
            "asc",
            "desc"
          ]
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "teams/create-discussion-comment-in-org": {
      "displayName": "Create a discussion comment",
      "description": "Creates a new comment on a team discussion. OAuth access tokens require the `write:discussion` [scope](https://docs.gith...",
      "method": "post",
      "endpoint": "/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments",
      "tags": [
        "team"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "team_slug",
          "location": "path",
          "required": true,
          "description": "The slug of the team name",
          "type": "string",
          "default": ""
        },
        {
          "name": "discussion_number",
          "location": "path",
          "required": true,
          "description": "The number that identifies the discussion",
          "type": "number",
          "default": 0
        },
        {
          "name": "body",
          "location": "body",
          "required": true,
          "description": "The discussion comment's body text",
          "type": "string",
          "default": ""
        }
      ]
    },
    "teams/delete-discussion-comment-in-org": {
      "displayName": "Delete a discussion comment",
      "description": "Deletes a comment on a team discussion. OAuth access tokens require the `write:discussion` [scope](https://docs.github.c...",
      "method": "delete",
      "endpoint": "/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}",
      "tags": [
        "team"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "team_slug",
          "location": "path",
          "required": true,
          "description": "The slug of the team name",
          "type": "string",
          "default": ""
        },
        {
          "name": "discussion_number",
          "location": "path",
          "required": true,
          "description": "The number that identifies the discussion",
          "type": "number",
          "default": 0
        },
        {
          "name": "comment_number",
          "location": "path",
          "required": true,
          "description": "The number that identifies the comment",
          "type": "number",
          "default": 0
        }
      ]
    },
    "teams/get-discussion-comment-in-org": {
      "displayName": "Get a discussion comment",
      "description": "Get a specific comment on a team discussion. OAuth access tokens require the `read:discussion` [scope](https://docs.gith...",
      "method": "get",
      "endpoint": "/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}",
      "tags": [
        "team"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "team_slug",
          "location": "path",
          "required": true,
          "description": "The slug of the team name",
          "type": "string",
          "default": ""
        },
        {
          "name": "discussion_number",
          "location": "path",
          "required": true,
          "description": "The number that identifies the discussion",
          "type": "number",
          "default": 0
        },
        {
          "name": "comment_number",
          "location": "path",
          "required": true,
          "description": "The number that identifies the comment",
          "type": "number",
          "default": 0
        }
      ]
    },
    "teams/update-discussion-comment-in-org": {
      "displayName": "Update a discussion comment",
      "description": "Edits the body text of a discussion comment. OAuth access tokens require the `write:discussion` [scope](https://docs.git...",
      "method": "patch",
      "endpoint": "/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}",
      "tags": [
        "team"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "team_slug",
          "location": "path",
          "required": true,
          "description": "The slug of the team name",
          "type": "string",
          "default": ""
        },
        {
          "name": "discussion_number",
          "location": "path",
          "required": true,
          "description": "The number that identifies the discussion",
          "type": "number",
          "default": 0
        },
        {
          "name": "comment_number",
          "location": "path",
          "required": true,
          "description": "The number that identifies the comment",
          "type": "number",
          "default": 0
        },
        {
          "name": "body",
          "location": "body",
          "required": true,
          "description": "The discussion comment's body text",
          "type": "string",
          "default": ""
        }
      ]
    },
    "reactions/list-for-team-discussion-comment-in-org": {
      "displayName": "List reactions for a team discussion comment",
      "description": "List the reactions to a [team discussion comment](https://docs.github.com/rest/reference/teams#discussion-comments/). OA...",
      "method": "get",
      "endpoint": "/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions",
      "tags": [
        "reaction"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "team_slug",
          "location": "path",
          "required": true,
          "description": "The slug of the team name",
          "type": "string",
          "default": ""
        },
        {
          "name": "discussion_number",
          "location": "path",
          "required": true,
          "description": "The number that identifies the discussion",
          "type": "number",
          "default": 0
        },
        {
          "name": "comment_number",
          "location": "path",
          "required": true,
          "description": "The number that identifies the comment",
          "type": "number",
          "default": 0
        },
        {
          "name": "content",
          "location": "query",
          "required": false,
          "description": "Returns a single [reaction type](https://docs.github.com/rest/reference/reactions#reaction-types). Omit this parameter t...",
          "type": "options",
          "default": "+1",
          "options": [
            "+1",
            "-1",
            "laugh",
            "confused",
            "heart",
            "hooray",
            "rocket",
            "eyes"
          ]
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "reactions/create-for-team-discussion-comment-in-org": {
      "displayName": "Create reaction for a team discussion comment",
      "description": "Create a reaction to a [team discussion comment](https://docs.github.com/rest/reference/teams#discussion-comments). OAut...",
      "method": "post",
      "endpoint": "/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions",
      "tags": [
        "reaction"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "team_slug",
          "location": "path",
          "required": true,
          "description": "The slug of the team name",
          "type": "string",
          "default": ""
        },
        {
          "name": "discussion_number",
          "location": "path",
          "required": true,
          "description": "The number that identifies the discussion",
          "type": "number",
          "default": 0
        },
        {
          "name": "comment_number",
          "location": "path",
          "required": true,
          "description": "The number that identifies the comment",
          "type": "number",
          "default": 0
        },
        {
          "name": "content",
          "location": "body",
          "required": true,
          "description": "The [reaction type](https://docs.github.com/rest/reference/reactions#reaction-types) to add to the team discussion comme...",
          "type": "string",
          "default": ""
        }
      ]
    },
    "reactions/delete-for-team-discussion-comment": {
      "displayName": "Delete team discussion comment reaction",
      "description": "**Note:** You can also specify a team or organization with `team_id` and `org_id` using the route `DELETE /organizations...",
      "method": "delete",
      "endpoint": "/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions/{reaction_id}",
      "tags": [
        "reaction"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "team_slug",
          "location": "path",
          "required": true,
          "description": "The slug of the team name",
          "type": "string",
          "default": ""
        },
        {
          "name": "discussion_number",
          "location": "path",
          "required": true,
          "description": "The number that identifies the discussion",
          "type": "number",
          "default": 0
        },
        {
          "name": "comment_number",
          "location": "path",
          "required": true,
          "description": "The number that identifies the comment",
          "type": "number",
          "default": 0
        },
        {
          "name": "reaction_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the reaction",
          "type": "number",
          "default": 0
        }
      ]
    },
    "reactions/list-for-team-discussion-in-org": {
      "displayName": "List reactions for a team discussion",
      "description": "List the reactions to a [team discussion](https://docs.github.com/rest/reference/teams#discussions). OAuth access tokens...",
      "method": "get",
      "endpoint": "/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions",
      "tags": [
        "reaction"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "team_slug",
          "location": "path",
          "required": true,
          "description": "The slug of the team name",
          "type": "string",
          "default": ""
        },
        {
          "name": "discussion_number",
          "location": "path",
          "required": true,
          "description": "The number that identifies the discussion",
          "type": "number",
          "default": 0
        },
        {
          "name": "content",
          "location": "query",
          "required": false,
          "description": "Returns a single [reaction type](https://docs.github.com/rest/reference/reactions#reaction-types). Omit this parameter t...",
          "type": "options",
          "default": "+1",
          "options": [
            "+1",
            "-1",
            "laugh",
            "confused",
            "heart",
            "hooray",
            "rocket",
            "eyes"
          ]
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "reactions/create-for-team-discussion-in-org": {
      "displayName": "Create reaction for a team discussion",
      "description": "Create a reaction to a [team discussion](https://docs.github.com/rest/reference/teams#discussions). OAuth access tokens ...",
      "method": "post",
      "endpoint": "/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions",
      "tags": [
        "reaction"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "team_slug",
          "location": "path",
          "required": true,
          "description": "The slug of the team name",
          "type": "string",
          "default": ""
        },
        {
          "name": "discussion_number",
          "location": "path",
          "required": true,
          "description": "The number that identifies the discussion",
          "type": "number",
          "default": 0
        },
        {
          "name": "content",
          "location": "body",
          "required": true,
          "description": "The [reaction type](https://docs.github.com/rest/reference/reactions#reaction-types) to add to the team discussion",
          "type": "string",
          "default": ""
        }
      ]
    },
    "reactions/delete-for-team-discussion": {
      "displayName": "Delete team discussion reaction",
      "description": "**Note:** You can also specify a team or organization with `team_id` and `org_id` using the route `DELETE /organizations...",
      "method": "delete",
      "endpoint": "/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions/{reaction_id}",
      "tags": [
        "reaction"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "team_slug",
          "location": "path",
          "required": true,
          "description": "The slug of the team name",
          "type": "string",
          "default": ""
        },
        {
          "name": "discussion_number",
          "location": "path",
          "required": true,
          "description": "The number that identifies the discussion",
          "type": "number",
          "default": 0
        },
        {
          "name": "reaction_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the reaction",
          "type": "number",
          "default": 0
        }
      ]
    },
    "teams/list-pending-invitations-in-org": {
      "displayName": "List pending team invitations",
      "description": "The return hash contains a `role` field which refers to the Organization Invitation role and will be one of the followin...",
      "method": "get",
      "endpoint": "/orgs/{org}/teams/{team_slug}/invitations",
      "tags": [
        "team"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "team_slug",
          "location": "path",
          "required": true,
          "description": "The slug of the team name",
          "type": "string",
          "default": ""
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "teams/list-members-in-org": {
      "displayName": "List team members",
      "description": "Team members will include the members of child teams.  To list members in a team, the team must be visible to the authen...",
      "method": "get",
      "endpoint": "/orgs/{org}/teams/{team_slug}/members",
      "tags": [
        "team"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "team_slug",
          "location": "path",
          "required": true,
          "description": "The slug of the team name",
          "type": "string",
          "default": ""
        },
        {
          "name": "role",
          "location": "query",
          "required": false,
          "description": "Filters members returned by their role in the team",
          "type": "options",
          "default": "all",
          "options": [
            "member",
            "maintainer",
            "all"
          ]
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "teams/remove-membership-for-user-in-org": {
      "displayName": "Remove team membership for a user",
      "description": "To remove a membership between a user and a team, the authenticated user must have 'admin' permissions to the team or be...",
      "method": "delete",
      "endpoint": "/orgs/{org}/teams/{team_slug}/memberships/{username}",
      "tags": [
        "team"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "team_slug",
          "location": "path",
          "required": true,
          "description": "The slug of the team name",
          "type": "string",
          "default": ""
        },
        {
          "name": "username",
          "location": "path",
          "required": true,
          "description": "The handle for the GitHub user account",
          "type": "string",
          "default": ""
        }
      ]
    },
    "teams/get-membership-for-user-in-org": {
      "displayName": "Get team membership for a user",
      "description": "Team members will include the members of child teams.  To get a user's membership with a team, the team must be visible ...",
      "method": "get",
      "endpoint": "/orgs/{org}/teams/{team_slug}/memberships/{username}",
      "tags": [
        "team"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "team_slug",
          "location": "path",
          "required": true,
          "description": "The slug of the team name",
          "type": "string",
          "default": ""
        },
        {
          "name": "username",
          "location": "path",
          "required": true,
          "description": "The handle for the GitHub user account",
          "type": "string",
          "default": ""
        }
      ]
    },
    "teams/add-or-update-membership-for-user-in-org": {
      "displayName": "Add or update team membership for a user",
      "description": "Adds an organization member to a team. An authenticated organization owner or team maintainer can add organization membe...",
      "method": "put",
      "endpoint": "/orgs/{org}/teams/{team_slug}/memberships/{username}",
      "tags": [
        "team"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "team_slug",
          "location": "path",
          "required": true,
          "description": "The slug of the team name",
          "type": "string",
          "default": ""
        },
        {
          "name": "username",
          "location": "path",
          "required": true,
          "description": "The handle for the GitHub user account",
          "type": "string",
          "default": ""
        },
        {
          "name": "role",
          "location": "body",
          "required": false,
          "description": "The role that this user should have in the team",
          "type": "string",
          "default": ""
        }
      ]
    },
    "teams/list-projects-in-org": {
      "displayName": "List team projects",
      "description": "Lists the organization projects for a team.  **Note:** You can also specify a team by `org_id` and `team_id` using the r...",
      "method": "get",
      "endpoint": "/orgs/{org}/teams/{team_slug}/projects",
      "tags": [
        "team"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "team_slug",
          "location": "path",
          "required": true,
          "description": "The slug of the team name",
          "type": "string",
          "default": ""
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "teams/remove-project-in-org": {
      "displayName": "Remove a project from a team",
      "description": "Removes an organization project from a team. An organization owner or a team maintainer can remove any project from the ...",
      "method": "delete",
      "endpoint": "/orgs/{org}/teams/{team_slug}/projects/{project_id}",
      "tags": [
        "team"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "team_slug",
          "location": "path",
          "required": true,
          "description": "The slug of the team name",
          "type": "string",
          "default": ""
        },
        {
          "name": "project_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the project",
          "type": "number",
          "default": 0
        }
      ]
    },
    "teams/check-permissions-for-project-in-org": {
      "displayName": "Check team permissions for a project",
      "description": "Checks whether a team has `read`, `write`, or `admin` permissions for an organization project. The response includes pro...",
      "method": "get",
      "endpoint": "/orgs/{org}/teams/{team_slug}/projects/{project_id}",
      "tags": [
        "team"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "team_slug",
          "location": "path",
          "required": true,
          "description": "The slug of the team name",
          "type": "string",
          "default": ""
        },
        {
          "name": "project_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the project",
          "type": "number",
          "default": 0
        }
      ]
    },
    "teams/add-or-update-project-permissions-in-org": {
      "displayName": "Add or update team project permissions",
      "description": "Adds an organization project to a team. To add a project to a team or update the team's permission on a project, the aut...",
      "method": "put",
      "endpoint": "/orgs/{org}/teams/{team_slug}/projects/{project_id}",
      "tags": [
        "team"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "team_slug",
          "location": "path",
          "required": true,
          "description": "The slug of the team name",
          "type": "string",
          "default": ""
        },
        {
          "name": "project_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the project",
          "type": "number",
          "default": 0
        },
        {
          "name": "permission",
          "location": "body",
          "required": false,
          "description": "The permission to grant to the team for this project. Default: the team's `permission` attribute will be used to determi...",
          "type": "string",
          "default": ""
        }
      ]
    },
    "teams/list-repos-in-org": {
      "displayName": "List team repositories",
      "description": "Lists a team's repositories visible to the authenticated user.  **Note:** You can also specify a team by `org_id` and `t...",
      "method": "get",
      "endpoint": "/orgs/{org}/teams/{team_slug}/repos",
      "tags": [
        "team"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "team_slug",
          "location": "path",
          "required": true,
          "description": "The slug of the team name",
          "type": "string",
          "default": ""
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "teams/remove-repo-in-org": {
      "displayName": "Remove a repository from a team",
      "description": "If the authenticated user is an organization owner or a team maintainer, they can remove any repositories from the team....",
      "method": "delete",
      "endpoint": "/orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}",
      "tags": [
        "team"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "team_slug",
          "location": "path",
          "required": true,
          "description": "The slug of the team name",
          "type": "string",
          "default": ""
        },
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        }
      ]
    },
    "teams/check-permissions-for-repo-in-org": {
      "displayName": "Check team permissions for a repository",
      "description": "Checks whether a team has `admin`, `push`, `maintain`, `triage`, or `pull` permission for a repository. Repositories inh...",
      "method": "get",
      "endpoint": "/orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}",
      "tags": [
        "team"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "team_slug",
          "location": "path",
          "required": true,
          "description": "The slug of the team name",
          "type": "string",
          "default": ""
        },
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        }
      ]
    },
    "teams/add-or-update-repo-permissions-in-org": {
      "displayName": "Add or update team repository permissions",
      "description": "To add a repository to a team or update the team's permission on a repository, the authenticated user must have admin ac...",
      "method": "put",
      "endpoint": "/orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}",
      "tags": [
        "team"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "team_slug",
          "location": "path",
          "required": true,
          "description": "The slug of the team name",
          "type": "string",
          "default": ""
        },
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "permission",
          "location": "body",
          "required": false,
          "description": "The permission to grant the team on this repository. We accept the following permissions to be set: `pull`, `triage`, `p...",
          "type": "string",
          "default": ""
        }
      ]
    },
    "teams/list-child-in-org": {
      "displayName": "List child teams",
      "description": "Lists the child teams of the team specified by `{team_slug}`.  **Note:** You can also specify a team by `org_id` and `te...",
      "method": "get",
      "endpoint": "/orgs/{org}/teams/{team_slug}/teams",
      "tags": [
        "team"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "team_slug",
          "location": "path",
          "required": true,
          "description": "The slug of the team name",
          "type": "string",
          "default": ""
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "orgs/enable-or-disable-security-product-on-all-org-repos": {
      "displayName": "Enable or disable a security feature for an organization",
      "description": "Enables or disables the specified security feature for all repositories in an organization.  To use this endpoint, you m...",
      "method": "post",
      "endpoint": "/orgs/{org}/{security_product}/{enablement}",
      "tags": [
        "org"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "security_product",
          "location": "path",
          "required": true,
          "description": "The security feature to enable or disable",
          "type": "options",
          "default": "dependency_graph",
          "options": [
            "dependency_graph",
            "dependabot_alerts",
            "dependabot_security_updates",
            "advanced_security",
            "secret_scanning",
            "secret_scanning_push_protection"
          ]
        },
        {
          "name": "enablement",
          "location": "path",
          "required": true,
          "description": "The action to take.  `enable_all` means to enable the specified security feature for all repositories in the organizatio...",
          "type": "options",
          "default": "enable_all",
          "options": [
            "enable_all",
            "disable_all"
          ]
        }
      ]
    },
    "projects/delete-card": {
      "displayName": "Delete a project card",
      "description": "",
      "method": "delete",
      "endpoint": "/projects/columns/cards/{card_id}",
      "tags": [
        "project"
      ],
      "params": [
        {
          "name": "card_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the card",
          "type": "number",
          "default": 0
        }
      ]
    },
    "projects/get-card": {
      "displayName": "Get a project card",
      "description": "",
      "method": "get",
      "endpoint": "/projects/columns/cards/{card_id}",
      "tags": [
        "project"
      ],
      "params": [
        {
          "name": "card_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the card",
          "type": "number",
          "default": 0
        }
      ]
    },
    "projects/update-card": {
      "displayName": "Update an existing project card",
      "description": "",
      "method": "patch",
      "endpoint": "/projects/columns/cards/{card_id}",
      "tags": [
        "project"
      ],
      "params": [
        {
          "name": "card_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the card",
          "type": "number",
          "default": 0
        },
        {
          "name": "archived",
          "location": "body",
          "required": false,
          "description": "Whether or not the card is archived",
          "type": "boolean",
          "default": false
        },
        {
          "name": "note",
          "location": "body",
          "required": false,
          "description": "The project card's note",
          "type": "string",
          "default": "",
          "placeholder": "e.g. Update all gems"
        }
      ]
    },
    "projects/move-card": {
      "displayName": "Move a project card",
      "description": "",
      "method": "post",
      "endpoint": "/projects/columns/cards/{card_id}/moves",
      "tags": [
        "project"
      ],
      "params": [
        {
          "name": "card_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the card",
          "type": "number",
          "default": 0
        },
        {
          "name": "column_id",
          "location": "body",
          "required": false,
          "description": "The unique identifier of the column the card should be moved to",
          "type": "number",
          "default": 0
        },
        {
          "name": "position",
          "location": "body",
          "required": true,
          "description": "The position of the card in a column. Can be one of: `top`, `bottom`, or `after:<card_id>` to place after the specified ...",
          "type": "string",
          "default": "",
          "placeholder": "e.g. bottom"
        }
      ]
    },
    "projects/delete-column": {
      "displayName": "Delete a project column",
      "description": "",
      "method": "delete",
      "endpoint": "/projects/columns/{column_id}",
      "tags": [
        "project"
      ],
      "params": [
        {
          "name": "column_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the column",
          "type": "number",
          "default": 0
        }
      ]
    },
    "projects/get-column": {
      "displayName": "Get a project column",
      "description": "",
      "method": "get",
      "endpoint": "/projects/columns/{column_id}",
      "tags": [
        "project"
      ],
      "params": [
        {
          "name": "column_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the column",
          "type": "number",
          "default": 0
        }
      ]
    },
    "projects/update-column": {
      "displayName": "Update an existing project column",
      "description": "",
      "method": "patch",
      "endpoint": "/projects/columns/{column_id}",
      "tags": [
        "project"
      ],
      "params": [
        {
          "name": "column_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the column",
          "type": "number",
          "default": 0
        },
        {
          "name": "name",
          "location": "body",
          "required": true,
          "description": "Name of the project column",
          "type": "string",
          "default": "",
          "placeholder": "e.g. Remaining tasks"
        }
      ]
    },
    "projects/list-cards": {
      "displayName": "List project cards",
      "description": "",
      "method": "get",
      "endpoint": "/projects/columns/{column_id}/cards",
      "tags": [
        "project"
      ],
      "params": [
        {
          "name": "column_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the column",
          "type": "number",
          "default": 0
        },
        {
          "name": "archived_state",
          "location": "query",
          "required": false,
          "description": "Filters the project cards that are returned by the card's state",
          "type": "options",
          "default": "not_archived",
          "options": [
            "all",
            "archived",
            "not_archived"
          ]
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "projects/create-card": {
      "displayName": "Create a project card",
      "description": "",
      "method": "post",
      "endpoint": "/projects/columns/{column_id}/cards",
      "tags": [
        "project"
      ],
      "params": [
        {
          "name": "column_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the column",
          "type": "number",
          "default": 0
        }
      ]
    },
    "projects/move-column": {
      "displayName": "Move a project column",
      "description": "",
      "method": "post",
      "endpoint": "/projects/columns/{column_id}/moves",
      "tags": [
        "project"
      ],
      "params": [
        {
          "name": "column_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the column",
          "type": "number",
          "default": 0
        },
        {
          "name": "position",
          "location": "body",
          "required": true,
          "description": "The position of the column in a project. Can be one of: `first`, `last`, or `after:<column_id>` to place after the speci...",
          "type": "string",
          "default": "",
          "placeholder": "e.g. last"
        }
      ]
    },
    "projects/delete": {
      "displayName": "Delete a project",
      "description": "Deletes a project board. Returns a `404 Not Found` status if projects are disabled",
      "method": "delete",
      "endpoint": "/projects/{project_id}",
      "tags": [
        "project"
      ],
      "params": [
        {
          "name": "project_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the project",
          "type": "number",
          "default": 0
        }
      ]
    },
    "projects/get": {
      "displayName": "Get a project",
      "description": "Gets a project by its `id`. Returns a `404 Not Found` status if projects are disabled. If you do not have sufficient pri...",
      "method": "get",
      "endpoint": "/projects/{project_id}",
      "tags": [
        "project"
      ],
      "params": [
        {
          "name": "project_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the project",
          "type": "number",
          "default": 0
        }
      ]
    },
    "projects/update": {
      "displayName": "Update a project",
      "description": "Updates a project board's information. Returns a `404 Not Found` status if projects are disabled. If you do not have suf...",
      "method": "patch",
      "endpoint": "/projects/{project_id}",
      "tags": [
        "project"
      ],
      "params": [
        {
          "name": "project_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the project",
          "type": "number",
          "default": 0
        },
        {
          "name": "body",
          "location": "body",
          "required": false,
          "description": "Body of the project",
          "type": "string",
          "default": "",
          "placeholder": "e.g. This project represents the sprint of the first week in January"
        },
        {
          "name": "name",
          "location": "body",
          "required": false,
          "description": "Name of the project",
          "type": "string",
          "default": "",
          "placeholder": "e.g. Week One Sprint"
        },
        {
          "name": "organization_permission",
          "location": "body",
          "required": false,
          "description": "The baseline permission that all organization members have on this project",
          "type": "string",
          "default": ""
        },
        {
          "name": "private",
          "location": "body",
          "required": false,
          "description": "Whether or not this project can be seen by everyone",
          "type": "boolean",
          "default": false
        },
        {
          "name": "state",
          "location": "body",
          "required": false,
          "description": "State of the project; either 'open' or 'closed'",
          "type": "string",
          "default": "",
          "placeholder": "e.g. open"
        }
      ]
    },
    "projects/list-collaborators": {
      "displayName": "List project collaborators",
      "description": "Lists the collaborators for an organization project. For a project, the list of collaborators includes outside collabora...",
      "method": "get",
      "endpoint": "/projects/{project_id}/collaborators",
      "tags": [
        "project"
      ],
      "params": [
        {
          "name": "project_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the project",
          "type": "number",
          "default": 0
        },
        {
          "name": "affiliation",
          "location": "query",
          "required": false,
          "description": "Filters the collaborators by their affiliation. `outside` means outside collaborators of a project that are not a member...",
          "type": "options",
          "default": "all",
          "options": [
            "outside",
            "direct",
            "all"
          ]
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "projects/remove-collaborator": {
      "displayName": "Remove user as a collaborator",
      "description": "Removes a collaborator from an organization project. You must be an organization owner or a project `admin` to remove a ...",
      "method": "delete",
      "endpoint": "/projects/{project_id}/collaborators/{username}",
      "tags": [
        "project"
      ],
      "params": [
        {
          "name": "project_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the project",
          "type": "number",
          "default": 0
        },
        {
          "name": "username",
          "location": "path",
          "required": true,
          "description": "The handle for the GitHub user account",
          "type": "string",
          "default": ""
        }
      ]
    },
    "projects/add-collaborator": {
      "displayName": "Add project collaborator",
      "description": "Adds a collaborator to an organization project and sets their permission level. You must be an organization owner or a p...",
      "method": "put",
      "endpoint": "/projects/{project_id}/collaborators/{username}",
      "tags": [
        "project"
      ],
      "params": [
        {
          "name": "project_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the project",
          "type": "number",
          "default": 0
        },
        {
          "name": "username",
          "location": "path",
          "required": true,
          "description": "The handle for the GitHub user account",
          "type": "string",
          "default": ""
        },
        {
          "name": "permission",
          "location": "body",
          "required": false,
          "description": "The permission to grant the collaborator",
          "type": "string",
          "default": "",
          "placeholder": "e.g. write"
        }
      ]
    },
    "projects/get-permission-for-user": {
      "displayName": "Get project permission for a user",
      "description": "Returns the collaborator's permission level for an organization project. Possible values for the `permission` key: `admi...",
      "method": "get",
      "endpoint": "/projects/{project_id}/collaborators/{username}/permission",
      "tags": [
        "project"
      ],
      "params": [
        {
          "name": "project_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the project",
          "type": "number",
          "default": 0
        },
        {
          "name": "username",
          "location": "path",
          "required": true,
          "description": "The handle for the GitHub user account",
          "type": "string",
          "default": ""
        }
      ]
    },
    "projects/list-columns": {
      "displayName": "List project columns",
      "description": "",
      "method": "get",
      "endpoint": "/projects/{project_id}/columns",
      "tags": [
        "project"
      ],
      "params": [
        {
          "name": "project_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the project",
          "type": "number",
          "default": 0
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "projects/create-column": {
      "displayName": "Create a project column",
      "description": "",
      "method": "post",
      "endpoint": "/projects/{project_id}/columns",
      "tags": [
        "project"
      ],
      "params": [
        {
          "name": "project_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the project",
          "type": "number",
          "default": 0
        },
        {
          "name": "name",
          "location": "body",
          "required": true,
          "description": "Name of the project column",
          "type": "string",
          "default": "",
          "placeholder": "e.g. Remaining tasks"
        }
      ]
    },
    "rate-limit/get": {
      "displayName": "Get rate limit status for the authenticated user",
      "description": "**Note:** Accessing this endpoint does not count against your REST API rate limit.  **Note:** The `rate` object is depre...",
      "method": "get",
      "endpoint": "/rate_limit",
      "tags": [
        "rate-limit"
      ],
      "params": []
    },
    "actions/list-repo-required-workflows": {
      "displayName": "List repository required workflows",
      "description": "Lists the required workflows in a repository. Anyone with read access to the repository can use this endpoint. If the re...",
      "method": "get",
      "endpoint": "/repos/{org}/{repo}/actions/required_workflows",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "actions/get-repo-required-workflow": {
      "displayName": "Get a required workflow entity for a repository",
      "description": "Gets a specific required workflow present in a repository. Anyone with read access to the repository can use this endpoi...",
      "method": "get",
      "endpoint": "/repos/{org}/{repo}/actions/required_workflows/{required_workflow_id_for_repo}",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "required_workflow_id_for_repo",
          "location": "path",
          "required": true,
          "description": "The ID of the required workflow that has run at least once in a repository",
          "type": "number",
          "default": 0
        }
      ]
    },
    "actions/get-repo-required-workflow-usage": {
      "displayName": "Get required workflow usage",
      "description": "Gets the number of billable minutes used by a specific required workflow during the current billing cycle.  Billable min...",
      "method": "get",
      "endpoint": "/repos/{org}/{repo}/actions/required_workflows/{required_workflow_id_for_repo}/timing",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "required_workflow_id_for_repo",
          "location": "path",
          "required": true,
          "description": "The ID of the required workflow that has run at least once in a repository",
          "type": "number",
          "default": 0
        }
      ]
    },
    "repos/delete": {
      "displayName": "Delete a repository",
      "description": "Deleting a repository requires admin access. If OAuth is used, the `delete_repo` scope is required.  If an organization ...",
      "method": "delete",
      "endpoint": "/repos/{owner}/{repo}",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        }
      ]
    },
    "repos/get": {
      "displayName": "Get a repository",
      "description": "The `parent` and `source` objects are present when the repository is a fork. `parent` is the repository this repository ...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        }
      ]
    },
    "repos/update": {
      "displayName": "Update a repository",
      "description": "**Note**: To edit a repository's topics, use the [Replace all repository topics](https://docs.github.com/rest/reference/...",
      "method": "patch",
      "endpoint": "/repos/{owner}/{repo}",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "allow_auto_merge",
          "location": "body",
          "required": false,
          "description": "Either `true` to allow auto-merge on pull requests, or `false` to disallow auto-merge",
          "type": "boolean",
          "default": false
        },
        {
          "name": "allow_forking",
          "location": "body",
          "required": false,
          "description": "Either `true` to allow private forks, or `false` to prevent private forks",
          "type": "boolean",
          "default": false
        },
        {
          "name": "allow_merge_commit",
          "location": "body",
          "required": false,
          "description": "Either `true` to allow merging pull requests with a merge commit, or `false` to prevent merging pull requests with merge...",
          "type": "boolean",
          "default": false
        },
        {
          "name": "allow_rebase_merge",
          "location": "body",
          "required": false,
          "description": "Either `true` to allow rebase-merging pull requests, or `false` to prevent rebase-merging",
          "type": "boolean",
          "default": false
        },
        {
          "name": "allow_squash_merge",
          "location": "body",
          "required": false,
          "description": "Either `true` to allow squash-merging pull requests, or `false` to prevent squash-merging",
          "type": "boolean",
          "default": false
        },
        {
          "name": "allow_update_branch",
          "location": "body",
          "required": false,
          "description": "Either `true` to always allow a pull request head branch that is behind its base branch to be updated even if it is not ...",
          "type": "boolean",
          "default": false
        },
        {
          "name": "archived",
          "location": "body",
          "required": false,
          "description": "Whether to archive this repository. `false` will unarchive a previously archived repository",
          "type": "boolean",
          "default": false
        },
        {
          "name": "default_branch",
          "location": "body",
          "required": false,
          "description": "Updates the default branch for this repository",
          "type": "string",
          "default": ""
        },
        {
          "name": "delete_branch_on_merge",
          "location": "body",
          "required": false,
          "description": "Either `true` to allow automatically deleting head branches when pull requests are merged, or `false` to prevent automat...",
          "type": "boolean",
          "default": false
        },
        {
          "name": "description",
          "location": "body",
          "required": false,
          "description": "A short description of the repository",
          "type": "string",
          "default": ""
        },
        {
          "name": "has_issues",
          "location": "body",
          "required": false,
          "description": "Either `true` to enable issues for this repository or `false` to disable them",
          "type": "boolean",
          "default": false
        },
        {
          "name": "has_projects",
          "location": "body",
          "required": false,
          "description": "Either `true` to enable projects for this repository or `false` to disable them. **Note:** If you're creating a reposito...",
          "type": "boolean",
          "default": false
        },
        {
          "name": "has_wiki",
          "location": "body",
          "required": false,
          "description": "Either `true` to enable the wiki for this repository or `false` to disable it",
          "type": "boolean",
          "default": false
        },
        {
          "name": "homepage",
          "location": "body",
          "required": false,
          "description": "A URL with more information about the repository",
          "type": "string",
          "default": ""
        },
        {
          "name": "is_template",
          "location": "body",
          "required": false,
          "description": "Either `true` to make this repo available as a template repository or `false` to prevent it",
          "type": "boolean",
          "default": false
        },
        {
          "name": "merge_commit_message",
          "location": "body",
          "required": false,
          "description": "The default value for a merge commit message.  - `PR_TITLE` - default to the pull request's title. - `PR_BODY` - default...",
          "type": "string",
          "default": ""
        },
        {
          "name": "merge_commit_title",
          "location": "body",
          "required": false,
          "description": "The default value for a merge commit title.  - `PR_TITLE` - default to the pull request's title. - `MERGE_MESSAGE` - def...",
          "type": "string",
          "default": ""
        },
        {
          "name": "name",
          "location": "body",
          "required": false,
          "description": "The name of the repository",
          "type": "string",
          "default": ""
        },
        {
          "name": "private",
          "location": "body",
          "required": false,
          "description": "Either `true` to make the repository private or `false` to make it public. Default: `false`.   **Note**: You will get a ...",
          "type": "boolean",
          "default": false
        },
        {
          "name": "security_and_analysis",
          "location": "body",
          "required": false,
          "description": "Specify which security and analysis features to enable or disable for the repository.  To use this parameter, you must h...",
          "type": "json",
          "default": "{}"
        },
        {
          "name": "squash_merge_commit_message",
          "location": "body",
          "required": false,
          "description": "The default value for a squash merge commit message:  - `PR_BODY` - default to the pull request's body. - `COMMIT_MESSAG...",
          "type": "string",
          "default": ""
        },
        {
          "name": "squash_merge_commit_title",
          "location": "body",
          "required": false,
          "description": "The default value for a squash merge commit title:  - `PR_TITLE` - default to the pull request's title. - `COMMIT_OR_PR_...",
          "type": "string",
          "default": ""
        },
        {
          "name": "use_squash_pr_title_as_default",
          "location": "body",
          "required": false,
          "description": "Either `true` to allow squash-merge commits to use pull request title, or `false` to use commit message. **This property...",
          "type": "boolean",
          "default": false
        },
        {
          "name": "visibility",
          "location": "body",
          "required": false,
          "description": "The visibility of the repository",
          "type": "string",
          "default": ""
        },
        {
          "name": "web_commit_signoff_required",
          "location": "body",
          "required": false,
          "description": "Either `true` to require contributors to sign off on web-based commits, or `false` to not require contributors to sign o...",
          "type": "boolean",
          "default": false
        }
      ]
    },
    "actions/list-artifacts-for-repo": {
      "displayName": "List artifacts for a repository",
      "description": "Lists all artifacts for a repository. Anyone with read access to the repository can use this endpoint. If the repository...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/actions/artifacts",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        },
        {
          "name": "name",
          "location": "query",
          "required": false,
          "description": "Filters artifacts by exact match on their name field",
          "type": "string",
          "default": ""
        }
      ]
    },
    "actions/delete-artifact": {
      "displayName": "Delete an artifact",
      "description": "Deletes an artifact for a workflow run. You must authenticate using an access token with the `repo` scope to use this en...",
      "method": "delete",
      "endpoint": "/repos/{owner}/{repo}/actions/artifacts/{artifact_id}",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "artifact_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the artifact",
          "type": "number",
          "default": 0
        }
      ]
    },
    "actions/get-artifact": {
      "displayName": "Get an artifact",
      "description": "Gets a specific artifact for a workflow run. Anyone with read access to the repository can use this endpoint. If the rep...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/actions/artifacts/{artifact_id}",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "artifact_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the artifact",
          "type": "number",
          "default": 0
        }
      ]
    },
    "actions/download-artifact": {
      "displayName": "Download an artifact",
      "description": "Gets a redirect URL to download an archive for a repository. This URL expires after 1 minute. Look for `Location:` in th...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/actions/artifacts/{artifact_id}/{archive_format}",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "artifact_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the artifact",
          "type": "number",
          "default": 0
        },
        {
          "name": "archive_format",
          "location": "path",
          "required": true,
          "description": "",
          "type": "string",
          "default": ""
        }
      ]
    },
    "actions/get-actions-cache-usage": {
      "displayName": "Get GitHub Actions cache usage for a repository",
      "description": "Gets GitHub Actions cache usage for a repository. The data fetched using this API is refreshed approximately every 5 min...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/actions/cache/usage",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        }
      ]
    },
    "actions/delete-actions-cache-by-key": {
      "displayName": "Delete GitHub Actions caches for a repository (using a cache key)",
      "description": "Deletes one or more GitHub Actions caches for a repository, using a complete cache key. By default, all caches that matc...",
      "method": "delete",
      "endpoint": "/repos/{owner}/{repo}/actions/caches",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "key",
          "location": "query",
          "required": true,
          "description": "A key for identifying the cache",
          "type": "string",
          "default": ""
        },
        {
          "name": "ref",
          "location": "query",
          "required": false,
          "description": "The Git reference for the results you want to list. The `ref` for a branch can be formatted either as `refs/heads/<branc...",
          "type": "string",
          "default": ""
        }
      ]
    },
    "actions/get-actions-cache-list": {
      "displayName": "List GitHub Actions caches for a repository",
      "description": "Lists the GitHub Actions caches for a repository. You must authenticate using an access token with the `repo` scope to u...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/actions/caches",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        },
        {
          "name": "ref",
          "location": "query",
          "required": false,
          "description": "The Git reference for the results you want to list. The `ref` for a branch can be formatted either as `refs/heads/<branc...",
          "type": "string",
          "default": ""
        },
        {
          "name": "key",
          "location": "query",
          "required": false,
          "description": "An explicit key or prefix for identifying the cache",
          "type": "string",
          "default": ""
        },
        {
          "name": "sort",
          "location": "query",
          "required": false,
          "description": "The property to sort the results by. `created_at` means when the cache was created. `last_accessed_at` means when the ca...",
          "type": "options",
          "default": "last_accessed_at",
          "options": [
            "created_at",
            "last_accessed_at",
            "size_in_bytes"
          ]
        },
        {
          "name": "direction",
          "location": "query",
          "required": false,
          "description": "The direction to sort the results by",
          "type": "options",
          "default": "desc",
          "options": [
            "asc",
            "desc"
          ]
        }
      ]
    },
    "actions/delete-actions-cache-by-id": {
      "displayName": "Delete a GitHub Actions cache for a repository (using a cache ID)",
      "description": "Deletes a GitHub Actions cache for a repository, using a cache ID.  You must authenticate using an access token with the...",
      "method": "delete",
      "endpoint": "/repos/{owner}/{repo}/actions/caches/{cache_id}",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "cache_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the GitHub Actions cache",
          "type": "number",
          "default": 0
        }
      ]
    },
    "actions/get-job-for-workflow-run": {
      "displayName": "Get a job for a workflow run",
      "description": "Gets a specific job in a workflow run. Anyone with read access to the repository can use this endpoint. If the repositor...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/actions/jobs/{job_id}",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "job_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the job",
          "type": "number",
          "default": 0
        }
      ]
    },
    "actions/download-job-logs-for-workflow-run": {
      "displayName": "Download job logs for a workflow run",
      "description": "Gets a redirect URL to download a plain text file of logs for a workflow job. This link expires after 1 minute. Look for...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/actions/jobs/{job_id}/logs",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "job_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the job",
          "type": "number",
          "default": 0
        }
      ]
    },
    "actions/re-run-job-for-workflow-run": {
      "displayName": "Re-run a job from a workflow run",
      "description": "Re-run a job and its dependent jobs in a workflow run. You must authenticate using an access token with the `repo` scope...",
      "method": "post",
      "endpoint": "/repos/{owner}/{repo}/actions/jobs/{job_id}/rerun",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "job_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the job",
          "type": "number",
          "default": 0
        },
        {
          "name": "enable_debug_logging",
          "location": "body",
          "required": false,
          "description": "Whether to enable debug logging for the re-run",
          "type": "boolean",
          "default": false
        }
      ]
    },
    "actions/get-custom-oidc-sub-claim-for-repo": {
      "displayName": "Get the customization template for an OIDC subject claim for a repository",
      "description": "Gets the customization template for an OpenID Connect (OIDC) subject claim. You must authenticate using an access token ...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/actions/oidc/customization/sub",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        }
      ]
    },
    "actions/set-custom-oidc-sub-claim-for-repo": {
      "displayName": "Set the customization template for an OIDC subject claim for a repository",
      "description": "Sets the customization template and `opt-in` or `opt-out` flag for an OpenID Connect (OIDC) subject claim for a reposito...",
      "method": "put",
      "endpoint": "/repos/{owner}/{repo}/actions/oidc/customization/sub",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "include_claim_keys",
          "location": "body",
          "required": false,
          "description": "Array of unique strings. Each claim key can only contain alphanumeric characters and underscores",
          "type": "string",
          "default": ""
        },
        {
          "name": "use_default",
          "location": "body",
          "required": true,
          "description": "Whether to use the default template or not. If `true`, the `include_claim_keys` field is ignored",
          "type": "boolean",
          "default": false
        }
      ]
    },
    "actions/get-github-actions-permissions-repository": {
      "displayName": "Get GitHub Actions permissions for a repository",
      "description": "Gets the GitHub Actions permissions policy for a repository, including whether GitHub Actions is enabled and the actions...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/actions/permissions",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        }
      ]
    },
    "actions/set-github-actions-permissions-repository": {
      "displayName": "Set GitHub Actions permissions for a repository",
      "description": "Sets the GitHub Actions permissions policy for enabling GitHub Actions and allowed actions and reusable workflows in the...",
      "method": "put",
      "endpoint": "/repos/{owner}/{repo}/actions/permissions",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "allowed_actions",
          "location": "body",
          "required": false,
          "description": "The permissions policy that controls the actions and reusable workflows that are allowed to run",
          "type": "string",
          "default": ""
        },
        {
          "name": "enabled",
          "location": "body",
          "required": true,
          "description": "Whether GitHub Actions is enabled on the repository",
          "type": "boolean",
          "default": false
        }
      ]
    },
    "actions/get-workflow-access-to-repository": {
      "displayName": "Get the level of access for workflows outside of the repository",
      "description": "Gets the level of access that workflows outside of the repository have to actions and reusable workflows in the reposito...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/actions/permissions/access",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        }
      ]
    },
    "actions/set-workflow-access-to-repository": {
      "displayName": "Set the level of access for workflows outside of the repository",
      "description": "Sets the level of access that workflows outside of the repository have to actions and reusable workflows in the reposito...",
      "method": "put",
      "endpoint": "/repos/{owner}/{repo}/actions/permissions/access",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "access_level",
          "location": "body",
          "required": true,
          "description": "Defines the level of access that workflows outside of the repository have to actions and reusable workflows within the r...",
          "type": "string",
          "default": ""
        }
      ]
    },
    "actions/get-allowed-actions-repository": {
      "displayName": "Get allowed actions and reusable workflows for a repository",
      "description": "Gets the settings for selected actions and reusable workflows that are allowed in a repository. To use this endpoint, th...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/actions/permissions/selected-actions",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        }
      ]
    },
    "actions/set-allowed-actions-repository": {
      "displayName": "Set allowed actions and reusable workflows for a repository",
      "description": "Sets the actions and reusable workflows that are allowed in a repository. To use this endpoint, the repository permissio...",
      "method": "put",
      "endpoint": "/repos/{owner}/{repo}/actions/permissions/selected-actions",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "github_owned_allowed",
          "location": "body",
          "required": false,
          "description": "Whether GitHub-owned actions are allowed. For example, this includes the actions in the `actions` organization",
          "type": "boolean",
          "default": false
        },
        {
          "name": "patterns_allowed",
          "location": "body",
          "required": false,
          "description": "Specifies a list of string-matching patterns to allow specific action(s) and reusable workflow(s). Wildcards, tags, and ...",
          "type": "string",
          "default": ""
        },
        {
          "name": "verified_allowed",
          "location": "body",
          "required": false,
          "description": "Whether actions from GitHub Marketplace verified creators are allowed. Set to `true` to allow all actions by GitHub Mark...",
          "type": "boolean",
          "default": false
        }
      ]
    },
    "actions/get-github-actions-default-workflow-permissions-repository": {
      "displayName": "Get default workflow permissions for a repository",
      "description": "Gets the default workflow permissions granted to the `GITHUB_TOKEN` when running workflows in a repository, as well as i...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/actions/permissions/workflow",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        }
      ]
    },
    "actions/set-github-actions-default-workflow-permissions-repository": {
      "displayName": "Set default workflow permissions for a repository",
      "description": "Sets the default workflow permissions granted to the `GITHUB_TOKEN` when running workflows in a repository, and sets if ...",
      "method": "put",
      "endpoint": "/repos/{owner}/{repo}/actions/permissions/workflow",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "can_approve_pull_request_reviews",
          "location": "body",
          "required": false,
          "description": "Whether GitHub Actions can approve pull requests. Enabling this can be a security risk",
          "type": "boolean",
          "default": false
        },
        {
          "name": "default_workflow_permissions",
          "location": "body",
          "required": false,
          "description": "The default workflow permissions granted to the GITHUB_TOKEN when running workflows",
          "type": "string",
          "default": ""
        }
      ]
    },
    "actions/list-required-workflow-runs": {
      "displayName": "List workflow runs for a required workflow",
      "description": "List all workflow runs for a required workflow. You can use parameters to narrow the list of results. For more informati...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/actions/required_workflows/{required_workflow_id_for_repo}/runs",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "required_workflow_id_for_repo",
          "location": "path",
          "required": true,
          "description": "The ID of the required workflow that has run at least once in a repository",
          "type": "number",
          "default": 0
        },
        {
          "name": "actor",
          "location": "query",
          "required": false,
          "description": "Returns someone's workflow runs. Use the login for the user who created the `push` associated with the check suite or wo...",
          "type": "string",
          "default": ""
        },
        {
          "name": "branch",
          "location": "query",
          "required": false,
          "description": "Returns workflow runs associated with a branch. Use the name of the branch of the `push`",
          "type": "string",
          "default": ""
        },
        {
          "name": "event",
          "location": "query",
          "required": false,
          "description": "Returns workflow run triggered by the event you specify. For example, `push`, `pull_request` or `issue`. For more inform...",
          "type": "string",
          "default": ""
        },
        {
          "name": "status",
          "location": "query",
          "required": false,
          "description": "Returns workflow runs with the check run `status` or `conclusion` that you specify. For example, a conclusion can be `su...",
          "type": "options",
          "default": "completed",
          "options": [
            "completed",
            "action_required",
            "cancelled",
            "failure",
            "neutral",
            "skipped",
            "stale",
            "success",
            "timed_out",
            "in_progress",
            "queued",
            "requested",
            "waiting",
            "pending"
          ]
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        },
        {
          "name": "created",
          "location": "query",
          "required": false,
          "description": "Returns workflow runs created within the given date-time range. For more information on the syntax, see \"[Understanding ...",
          "type": "string",
          "default": ""
        },
        {
          "name": "exclude_pull_requests",
          "location": "query",
          "required": false,
          "description": "If `true` pull requests are omitted from the response (empty array)",
          "type": "boolean",
          "default": false
        },
        {
          "name": "check_suite_id",
          "location": "query",
          "required": false,
          "description": "Returns workflow runs with the `check_suite_id` that you specify",
          "type": "number",
          "default": 0
        },
        {
          "name": "head_sha",
          "location": "query",
          "required": false,
          "description": "Only returns workflow runs that are associated with the specified `head_sha`",
          "type": "string",
          "default": ""
        }
      ]
    },
    "actions/list-self-hosted-runners-for-repo": {
      "displayName": "List self-hosted runners for a repository",
      "description": "Lists all self-hosted runners configured in a repository. You must authenticate using an access token with the `repo` sc...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/actions/runners",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "actions/list-runner-applications-for-repo": {
      "displayName": "List runner applications for a repository",
      "description": "Lists binaries for the runner application that you can download and run.  You must authenticate using an access token wi...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/actions/runners/downloads",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        }
      ]
    },
    "actions/create-registration-token-for-repo": {
      "displayName": "Create a registration token for a repository",
      "description": "Returns a token that you can pass to the `config` script. The token expires after one hour. You must authenticate using ...",
      "method": "post",
      "endpoint": "/repos/{owner}/{repo}/actions/runners/registration-token",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        }
      ]
    },
    "actions/create-remove-token-for-repo": {
      "displayName": "Create a remove token for a repository",
      "description": "Returns a token that you can pass to remove a self-hosted runner from a repository. The token expires after one hour. Yo...",
      "method": "post",
      "endpoint": "/repos/{owner}/{repo}/actions/runners/remove-token",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        }
      ]
    },
    "actions/delete-self-hosted-runner-from-repo": {
      "displayName": "Delete a self-hosted runner from a repository",
      "description": "Forces the removal of a self-hosted runner from a repository. You can use this endpoint to completely remove the runner ...",
      "method": "delete",
      "endpoint": "/repos/{owner}/{repo}/actions/runners/{runner_id}",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "runner_id",
          "location": "path",
          "required": true,
          "description": "Unique identifier of the self-hosted runner",
          "type": "number",
          "default": 0
        }
      ]
    },
    "actions/get-self-hosted-runner-for-repo": {
      "displayName": "Get a self-hosted runner for a repository",
      "description": "Gets a specific self-hosted runner configured in a repository.  You must authenticate using an access token with the `re...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/actions/runners/{runner_id}",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "runner_id",
          "location": "path",
          "required": true,
          "description": "Unique identifier of the self-hosted runner",
          "type": "number",
          "default": 0
        }
      ]
    },
    "actions/remove-all-custom-labels-from-self-hosted-runner-for-repo": {
      "displayName": "Remove all custom labels from a self-hosted runner for a repository",
      "description": "Remove all custom labels from a self-hosted runner configured in a repository. Returns the remaining read-only labels fr...",
      "method": "delete",
      "endpoint": "/repos/{owner}/{repo}/actions/runners/{runner_id}/labels",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "runner_id",
          "location": "path",
          "required": true,
          "description": "Unique identifier of the self-hosted runner",
          "type": "number",
          "default": 0
        }
      ]
    },
    "actions/list-labels-for-self-hosted-runner-for-repo": {
      "displayName": "List labels for a self-hosted runner for a repository",
      "description": "Lists all labels for a self-hosted runner configured in a repository.  You must authenticate using an access token with ...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/actions/runners/{runner_id}/labels",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "runner_id",
          "location": "path",
          "required": true,
          "description": "Unique identifier of the self-hosted runner",
          "type": "number",
          "default": 0
        }
      ]
    },
    "actions/add-custom-labels-to-self-hosted-runner-for-repo": {
      "displayName": "Add custom labels to a self-hosted runner for a repository",
      "description": "Add custom labels to a self-hosted runner configured in a repository.  You must authenticate using an access token with ...",
      "method": "post",
      "endpoint": "/repos/{owner}/{repo}/actions/runners/{runner_id}/labels",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "runner_id",
          "location": "path",
          "required": true,
          "description": "Unique identifier of the self-hosted runner",
          "type": "number",
          "default": 0
        },
        {
          "name": "labels",
          "location": "body",
          "required": true,
          "description": "The names of the custom labels to add to the runner",
          "type": "string",
          "default": ""
        }
      ]
    },
    "actions/set-custom-labels-for-self-hosted-runner-for-repo": {
      "displayName": "Set custom labels for a self-hosted runner for a repository",
      "description": "Remove all previous custom labels and set the new custom labels for a specific self-hosted runner configured in a reposi...",
      "method": "put",
      "endpoint": "/repos/{owner}/{repo}/actions/runners/{runner_id}/labels",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "runner_id",
          "location": "path",
          "required": true,
          "description": "Unique identifier of the self-hosted runner",
          "type": "number",
          "default": 0
        },
        {
          "name": "labels",
          "location": "body",
          "required": true,
          "description": "The names of the custom labels to set for the runner. You can pass an empty array to remove all custom labels",
          "type": "string",
          "default": ""
        }
      ]
    },
    "actions/remove-custom-label-from-self-hosted-runner-for-repo": {
      "displayName": "Remove a custom label from a self-hosted runner for a repository",
      "description": "Remove a custom label from a self-hosted runner configured in a repository. Returns the remaining labels from the runner...",
      "method": "delete",
      "endpoint": "/repos/{owner}/{repo}/actions/runners/{runner_id}/labels/{name}",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "runner_id",
          "location": "path",
          "required": true,
          "description": "Unique identifier of the self-hosted runner",
          "type": "number",
          "default": 0
        },
        {
          "name": "name",
          "location": "path",
          "required": true,
          "description": "The name of a self-hosted runner's custom label",
          "type": "string",
          "default": ""
        }
      ]
    },
    "actions/list-workflow-runs-for-repo": {
      "displayName": "List workflow runs for a repository",
      "description": "Lists all workflow runs for a repository. You can use parameters to narrow the list of results. For more information abo...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/actions/runs",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "actor",
          "location": "query",
          "required": false,
          "description": "Returns someone's workflow runs. Use the login for the user who created the `push` associated with the check suite or wo...",
          "type": "string",
          "default": ""
        },
        {
          "name": "branch",
          "location": "query",
          "required": false,
          "description": "Returns workflow runs associated with a branch. Use the name of the branch of the `push`",
          "type": "string",
          "default": ""
        },
        {
          "name": "event",
          "location": "query",
          "required": false,
          "description": "Returns workflow run triggered by the event you specify. For example, `push`, `pull_request` or `issue`. For more inform...",
          "type": "string",
          "default": ""
        },
        {
          "name": "status",
          "location": "query",
          "required": false,
          "description": "Returns workflow runs with the check run `status` or `conclusion` that you specify. For example, a conclusion can be `su...",
          "type": "options",
          "default": "completed",
          "options": [
            "completed",
            "action_required",
            "cancelled",
            "failure",
            "neutral",
            "skipped",
            "stale",
            "success",
            "timed_out",
            "in_progress",
            "queued",
            "requested",
            "waiting",
            "pending"
          ]
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        },
        {
          "name": "created",
          "location": "query",
          "required": false,
          "description": "Returns workflow runs created within the given date-time range. For more information on the syntax, see \"[Understanding ...",
          "type": "string",
          "default": ""
        },
        {
          "name": "exclude_pull_requests",
          "location": "query",
          "required": false,
          "description": "If `true` pull requests are omitted from the response (empty array)",
          "type": "boolean",
          "default": false
        },
        {
          "name": "check_suite_id",
          "location": "query",
          "required": false,
          "description": "Returns workflow runs with the `check_suite_id` that you specify",
          "type": "number",
          "default": 0
        },
        {
          "name": "head_sha",
          "location": "query",
          "required": false,
          "description": "Only returns workflow runs that are associated with the specified `head_sha`",
          "type": "string",
          "default": ""
        }
      ]
    },
    "actions/delete-workflow-run": {
      "displayName": "Delete a workflow run",
      "description": "Delete a specific workflow run. Anyone with write access to the repository can use this endpoint. If the repository is p...",
      "method": "delete",
      "endpoint": "/repos/{owner}/{repo}/actions/runs/{run_id}",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "run_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the workflow run",
          "type": "number",
          "default": 0
        }
      ]
    },
    "actions/get-workflow-run": {
      "displayName": "Get a workflow run",
      "description": "Gets a specific workflow run. Anyone with read access to the repository can use this endpoint. If the repository is priv...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/actions/runs/{run_id}",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "run_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the workflow run",
          "type": "number",
          "default": 0
        },
        {
          "name": "exclude_pull_requests",
          "location": "query",
          "required": false,
          "description": "If `true` pull requests are omitted from the response (empty array)",
          "type": "boolean",
          "default": false
        }
      ]
    },
    "actions/get-reviews-for-run": {
      "displayName": "Get the review history for a workflow run",
      "description": "Anyone with read access to the repository can use this endpoint. If the repository is private, you must use an access to...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/actions/runs/{run_id}/approvals",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "run_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the workflow run",
          "type": "number",
          "default": 0
        }
      ]
    },
    "actions/approve-workflow-run": {
      "displayName": "Approve a workflow run for a fork pull request",
      "description": "Approves a workflow run for a pull request from a public fork of a first time contributor. For more information, see [\"A...",
      "method": "post",
      "endpoint": "/repos/{owner}/{repo}/actions/runs/{run_id}/approve",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "run_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the workflow run",
          "type": "number",
          "default": 0
        }
      ]
    },
    "actions/list-workflow-run-artifacts": {
      "displayName": "List workflow run artifacts",
      "description": "Lists artifacts for a workflow run. Anyone with read access to the repository can use this endpoint. If the repository i...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/actions/runs/{run_id}/artifacts",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "run_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the workflow run",
          "type": "number",
          "default": 0
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "actions/get-workflow-run-attempt": {
      "displayName": "Get a workflow run attempt",
      "description": "Gets a specific workflow run attempt. Anyone with read access to the repository can use this endpoint. If the repository...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "run_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the workflow run",
          "type": "number",
          "default": 0
        },
        {
          "name": "attempt_number",
          "location": "path",
          "required": true,
          "description": "The attempt number of the workflow run",
          "type": "number",
          "default": 0
        },
        {
          "name": "exclude_pull_requests",
          "location": "query",
          "required": false,
          "description": "If `true` pull requests are omitted from the response (empty array)",
          "type": "boolean",
          "default": false
        }
      ]
    },
    "actions/list-jobs-for-workflow-run-attempt": {
      "displayName": "List jobs for a workflow run attempt",
      "description": "Lists jobs for a specific workflow run attempt. Anyone with read access to the repository can use this endpoint. If the ...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/jobs",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "run_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the workflow run",
          "type": "number",
          "default": 0
        },
        {
          "name": "attempt_number",
          "location": "path",
          "required": true,
          "description": "The attempt number of the workflow run",
          "type": "number",
          "default": 0
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "actions/download-workflow-run-attempt-logs": {
      "displayName": "Download workflow run attempt logs",
      "description": "Gets a redirect URL to download an archive of log files for a specific workflow run attempt. This link expires after 1 m...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/logs",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "run_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the workflow run",
          "type": "number",
          "default": 0
        },
        {
          "name": "attempt_number",
          "location": "path",
          "required": true,
          "description": "The attempt number of the workflow run",
          "type": "number",
          "default": 0
        }
      ]
    },
    "actions/cancel-workflow-run": {
      "displayName": "Cancel a workflow run",
      "description": "Cancels a workflow run using its `id`. You must authenticate using an access token with the `repo` scope to use this end...",
      "method": "post",
      "endpoint": "/repos/{owner}/{repo}/actions/runs/{run_id}/cancel",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "run_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the workflow run",
          "type": "number",
          "default": 0
        }
      ]
    },
    "actions/list-jobs-for-workflow-run": {
      "displayName": "List jobs for a workflow run",
      "description": "Lists jobs for a workflow run. Anyone with read access to the repository can use this endpoint. If the repository is pri...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/actions/runs/{run_id}/jobs",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "run_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the workflow run",
          "type": "number",
          "default": 0
        },
        {
          "name": "filter",
          "location": "query",
          "required": false,
          "description": "Filters jobs by their `completed_at` timestamp. `latest` returns jobs from the most recent execution of the workflow run...",
          "type": "options",
          "default": "latest",
          "options": [
            "latest",
            "all"
          ]
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "actions/delete-workflow-run-logs": {
      "displayName": "Delete workflow run logs",
      "description": "Deletes all logs for a workflow run. You must authenticate using an access token with the `repo` scope to use this endpo...",
      "method": "delete",
      "endpoint": "/repos/{owner}/{repo}/actions/runs/{run_id}/logs",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "run_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the workflow run",
          "type": "number",
          "default": 0
        }
      ]
    },
    "actions/download-workflow-run-logs": {
      "displayName": "Download workflow run logs",
      "description": "Gets a redirect URL to download an archive of log files for a workflow run. This link expires after 1 minute. Look for `...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/actions/runs/{run_id}/logs",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "run_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the workflow run",
          "type": "number",
          "default": 0
        }
      ]
    },
    "actions/get-pending-deployments-for-run": {
      "displayName": "Get pending deployments for a workflow run",
      "description": "Get all deployment environments for a workflow run that are waiting for protection rules to pass.  Anyone with read acce...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "run_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the workflow run",
          "type": "number",
          "default": 0
        }
      ]
    },
    "actions/review-pending-deployments-for-run": {
      "displayName": "Review pending deployments for a workflow run",
      "description": "Approve or reject pending deployments that are waiting on approval by a required reviewer.  Required reviewers with read...",
      "method": "post",
      "endpoint": "/repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "run_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the workflow run",
          "type": "number",
          "default": 0
        },
        {
          "name": "comment",
          "location": "body",
          "required": true,
          "description": "A comment to accompany the deployment review",
          "type": "string",
          "default": "",
          "placeholder": "e.g. Ship it!"
        },
        {
          "name": "environment_ids",
          "location": "body",
          "required": true,
          "description": "The list of environment ids to approve or reject",
          "type": "json",
          "default": "{}"
        },
        {
          "name": "state",
          "location": "body",
          "required": true,
          "description": "Whether to approve or reject deployment to the specified environments",
          "type": "string",
          "default": "",
          "placeholder": "e.g. approved"
        }
      ]
    },
    "actions/re-run-workflow": {
      "displayName": "Re-run a workflow",
      "description": "Re-runs your workflow run using its `id`. You must authenticate using an access token with the `repo` scope to use this ...",
      "method": "post",
      "endpoint": "/repos/{owner}/{repo}/actions/runs/{run_id}/rerun",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "run_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the workflow run",
          "type": "number",
          "default": 0
        },
        {
          "name": "enable_debug_logging",
          "location": "body",
          "required": false,
          "description": "Whether to enable debug logging for the re-run",
          "type": "boolean",
          "default": false
        }
      ]
    },
    "actions/re-run-workflow-failed-jobs": {
      "displayName": "Re-run failed jobs from a workflow run",
      "description": "Re-run all of the failed jobs and their dependent jobs in a workflow run using the `id` of the workflow run. You must au...",
      "method": "post",
      "endpoint": "/repos/{owner}/{repo}/actions/runs/{run_id}/rerun-failed-jobs",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "run_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the workflow run",
          "type": "number",
          "default": 0
        },
        {
          "name": "enable_debug_logging",
          "location": "body",
          "required": false,
          "description": "Whether to enable debug logging for the re-run",
          "type": "boolean",
          "default": false
        }
      ]
    },
    "actions/get-workflow-run-usage": {
      "displayName": "Get workflow run usage",
      "description": "Gets the number of billable minutes and total run time for a specific workflow run. Billable minutes only apply to workf...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/actions/runs/{run_id}/timing",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "run_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the workflow run",
          "type": "number",
          "default": 0
        }
      ]
    },
    "actions/list-repo-secrets": {
      "displayName": "List repository secrets",
      "description": "Lists all secrets available in a repository without revealing their encrypted values. You must authenticate using an acc...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/actions/secrets",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "actions/get-repo-public-key": {
      "displayName": "Get a repository public key",
      "description": "Gets your public key, which you need to encrypt secrets. You need to encrypt a secret before you can create or update se...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/actions/secrets/public-key",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        }
      ]
    },
    "actions/delete-repo-secret": {
      "displayName": "Delete a repository secret",
      "description": "Deletes a secret in a repository using the secret name. You must authenticate using an access token with the `repo` scop...",
      "method": "delete",
      "endpoint": "/repos/{owner}/{repo}/actions/secrets/{secret_name}",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "secret_name",
          "location": "path",
          "required": true,
          "description": "The name of the secret",
          "type": "string",
          "default": ""
        }
      ]
    },
    "actions/get-repo-secret": {
      "displayName": "Get a repository secret",
      "description": "Gets a single repository secret without revealing its encrypted value. You must authenticate using an access token with ...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/actions/secrets/{secret_name}",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "secret_name",
          "location": "path",
          "required": true,
          "description": "The name of the secret",
          "type": "string",
          "default": ""
        }
      ]
    },
    "actions/create-or-update-repo-secret": {
      "displayName": "Create or update a repository secret",
      "description": "Creates or updates a repository secret with an encrypted value. Encrypt your secret using [LibSodium](https://libsodium....",
      "method": "put",
      "endpoint": "/repos/{owner}/{repo}/actions/secrets/{secret_name}",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "secret_name",
          "location": "path",
          "required": true,
          "description": "The name of the secret",
          "type": "string",
          "default": ""
        },
        {
          "name": "encrypted_value",
          "location": "body",
          "required": false,
          "description": "Value for your secret, encrypted with [LibSodium](https://libsodium.gitbook.io/doc/bindings_for_other_languages) using t...",
          "type": "string",
          "default": ""
        },
        {
          "name": "key_id",
          "location": "body",
          "required": false,
          "description": "ID of the key you used to encrypt the secret",
          "type": "string",
          "default": ""
        }
      ]
    },
    "actions/list-repo-variables": {
      "displayName": "List repository variables",
      "description": "Lists all repository variables. You must authenticate using an access token with the `repo` scope to use this endpoint. ...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/actions/variables",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 30)",
          "type": "number",
          "default": 10
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "actions/create-repo-variable": {
      "displayName": "Create a repository variable",
      "description": "Creates a repository variable that you can reference in a GitHub Actions workflow. You must authenticate using an access...",
      "method": "post",
      "endpoint": "/repos/{owner}/{repo}/actions/variables",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "name",
          "location": "body",
          "required": true,
          "description": "The name of the variable",
          "type": "string",
          "default": ""
        },
        {
          "name": "value",
          "location": "body",
          "required": true,
          "description": "The value of the variable",
          "type": "string",
          "default": ""
        }
      ]
    },
    "actions/delete-repo-variable": {
      "displayName": "Delete a repository variable",
      "description": "Deletes a repository variable using the variable name. You must authenticate using an access token with the `repo` scope...",
      "method": "delete",
      "endpoint": "/repos/{owner}/{repo}/actions/variables/{name}",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "name",
          "location": "path",
          "required": true,
          "description": "The name of the variable",
          "type": "string",
          "default": ""
        }
      ]
    },
    "actions/get-repo-variable": {
      "displayName": "Get a repository variable",
      "description": "Gets a specific variable in a repository. You must authenticate using an access token with the `repo` scope to use this ...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/actions/variables/{name}",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "name",
          "location": "path",
          "required": true,
          "description": "The name of the variable",
          "type": "string",
          "default": ""
        }
      ]
    },
    "actions/update-repo-variable": {
      "displayName": "Update a repository variable",
      "description": "Updates a repository variable that you can reference in a GitHub Actions workflow. You must authenticate using an access...",
      "method": "patch",
      "endpoint": "/repos/{owner}/{repo}/actions/variables/{name}",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "name",
          "location": "path",
          "required": true,
          "description": "The name of the variable",
          "type": "string",
          "default": ""
        },
        {
          "name": "name",
          "location": "body",
          "required": false,
          "description": "The name of the variable",
          "type": "string",
          "default": ""
        },
        {
          "name": "value",
          "location": "body",
          "required": false,
          "description": "The value of the variable",
          "type": "string",
          "default": ""
        }
      ]
    },
    "actions/list-repo-workflows": {
      "displayName": "List repository workflows",
      "description": "Lists the workflows in a repository. Anyone with read access to the repository can use this endpoint. If the repository ...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/actions/workflows",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "actions/get-workflow": {
      "displayName": "Get a workflow",
      "description": "Gets a specific workflow. You can replace `workflow_id` with the workflow file name. For example, you could use `main.ya...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/actions/workflows/{workflow_id}",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "workflow_id",
          "location": "path",
          "required": true,
          "description": "The ID of the workflow. You can also pass the workflow file name as a string",
          "type": "number",
          "default": 0
        }
      ]
    },
    "actions/disable-workflow": {
      "displayName": "Disable a workflow",
      "description": "Disables a workflow and sets the `state` of the workflow to `disabled_manually`. You can replace `workflow_id` with the ...",
      "method": "put",
      "endpoint": "/repos/{owner}/{repo}/actions/workflows/{workflow_id}/disable",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "workflow_id",
          "location": "path",
          "required": true,
          "description": "The ID of the workflow. You can also pass the workflow file name as a string",
          "type": "number",
          "default": 0
        }
      ]
    },
    "actions/create-workflow-dispatch": {
      "displayName": "Create a workflow dispatch event",
      "description": "You can use this endpoint to manually trigger a GitHub Actions workflow run. You can replace `workflow_id` with the work...",
      "method": "post",
      "endpoint": "/repos/{owner}/{repo}/actions/workflows/{workflow_id}/dispatches",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "workflow_id",
          "location": "path",
          "required": true,
          "description": "The ID of the workflow. You can also pass the workflow file name as a string",
          "type": "number",
          "default": 0
        },
        {
          "name": "inputs",
          "location": "body",
          "required": false,
          "description": "Input keys and values configured in the workflow file. The maximum number of properties is 10. Any default properties co...",
          "type": "json",
          "default": "{}"
        },
        {
          "name": "ref",
          "location": "body",
          "required": true,
          "description": "The git reference for the workflow. The reference can be a branch or tag name",
          "type": "string",
          "default": ""
        }
      ]
    },
    "actions/enable-workflow": {
      "displayName": "Enable a workflow",
      "description": "Enables a workflow and sets the `state` of the workflow to `active`. You can replace `workflow_id` with the workflow fil...",
      "method": "put",
      "endpoint": "/repos/{owner}/{repo}/actions/workflows/{workflow_id}/enable",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "workflow_id",
          "location": "path",
          "required": true,
          "description": "The ID of the workflow. You can also pass the workflow file name as a string",
          "type": "number",
          "default": 0
        }
      ]
    },
    "actions/list-workflow-runs": {
      "displayName": "List workflow runs for a workflow",
      "description": "List all workflow runs for a workflow. You can replace `workflow_id` with the workflow file name. For example, you could...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "workflow_id",
          "location": "path",
          "required": true,
          "description": "The ID of the workflow. You can also pass the workflow file name as a string",
          "type": "number",
          "default": 0
        },
        {
          "name": "actor",
          "location": "query",
          "required": false,
          "description": "Returns someone's workflow runs. Use the login for the user who created the `push` associated with the check suite or wo...",
          "type": "string",
          "default": ""
        },
        {
          "name": "branch",
          "location": "query",
          "required": false,
          "description": "Returns workflow runs associated with a branch. Use the name of the branch of the `push`",
          "type": "string",
          "default": ""
        },
        {
          "name": "event",
          "location": "query",
          "required": false,
          "description": "Returns workflow run triggered by the event you specify. For example, `push`, `pull_request` or `issue`. For more inform...",
          "type": "string",
          "default": ""
        },
        {
          "name": "status",
          "location": "query",
          "required": false,
          "description": "Returns workflow runs with the check run `status` or `conclusion` that you specify. For example, a conclusion can be `su...",
          "type": "options",
          "default": "completed",
          "options": [
            "completed",
            "action_required",
            "cancelled",
            "failure",
            "neutral",
            "skipped",
            "stale",
            "success",
            "timed_out",
            "in_progress",
            "queued",
            "requested",
            "waiting",
            "pending"
          ]
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        },
        {
          "name": "created",
          "location": "query",
          "required": false,
          "description": "Returns workflow runs created within the given date-time range. For more information on the syntax, see \"[Understanding ...",
          "type": "string",
          "default": ""
        },
        {
          "name": "exclude_pull_requests",
          "location": "query",
          "required": false,
          "description": "If `true` pull requests are omitted from the response (empty array)",
          "type": "boolean",
          "default": false
        },
        {
          "name": "check_suite_id",
          "location": "query",
          "required": false,
          "description": "Returns workflow runs with the `check_suite_id` that you specify",
          "type": "number",
          "default": 0
        },
        {
          "name": "head_sha",
          "location": "query",
          "required": false,
          "description": "Only returns workflow runs that are associated with the specified `head_sha`",
          "type": "string",
          "default": ""
        }
      ]
    },
    "actions/get-workflow-usage": {
      "displayName": "Get workflow usage",
      "description": "Gets the number of billable minutes used by a specific workflow during the current billing cycle. Billable minutes only ...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/actions/workflows/{workflow_id}/timing",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "workflow_id",
          "location": "path",
          "required": true,
          "description": "The ID of the workflow. You can also pass the workflow file name as a string",
          "type": "number",
          "default": 0
        }
      ]
    },
    "issues/list-assignees": {
      "displayName": "List assignees",
      "description": "Lists the [available assignees](https://docs.github.com/articles/assigning-issues-and-pull-requests-to-other-github-user...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/assignees",
      "tags": [
        "issue"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "issues/check-user-can-be-assigned": {
      "displayName": "Check if a user can be assigned",
      "description": "Checks if a user has permission to be assigned to an issue in this repository.  If the `assignee` can be assigned to iss...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/assignees/{assignee}",
      "tags": [
        "issue"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "assignee",
          "location": "path",
          "required": true,
          "description": "",
          "type": "string",
          "default": ""
        }
      ]
    },
    "repos/list-autolinks": {
      "displayName": "List all autolinks of a repository",
      "description": "This returns a list of autolinks configured for the given repository.  Information about autolinks are only available to...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/autolinks",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "repos/create-autolink": {
      "displayName": "Create an autolink reference for a repository",
      "description": "Users with admin access to the repository can create an autolink",
      "method": "post",
      "endpoint": "/repos/{owner}/{repo}/autolinks",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "is_alphanumeric",
          "location": "body",
          "required": false,
          "description": "Whether this autolink reference matches alphanumeric characters. If true, the `<num>` parameter of the `url_template` ma...",
          "type": "boolean",
          "default": false
        },
        {
          "name": "key_prefix",
          "location": "body",
          "required": true,
          "description": "This prefix appended by certain characters will generate a link any time it is found in an issue, pull request, or commi...",
          "type": "string",
          "default": ""
        },
        {
          "name": "url_template",
          "location": "body",
          "required": true,
          "description": "The URL must contain `<num>` for the reference number. `<num>` matches different characters depending on the value of `i...",
          "type": "string",
          "default": ""
        }
      ]
    },
    "repos/delete-autolink": {
      "displayName": "Delete an autolink reference from a repository",
      "description": "This deletes a single autolink reference by ID that was configured for the given repository.  Information about autolink...",
      "method": "delete",
      "endpoint": "/repos/{owner}/{repo}/autolinks/{autolink_id}",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "autolink_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the autolink",
          "type": "number",
          "default": 0
        }
      ]
    },
    "repos/get-autolink": {
      "displayName": "Get an autolink reference of a repository",
      "description": "This returns a single autolink reference by ID that was configured for the given repository.  Information about autolink...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/autolinks/{autolink_id}",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "autolink_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the autolink",
          "type": "number",
          "default": 0
        }
      ]
    },
    "repos/disable-automated-security-fixes": {
      "displayName": "Disable automated security fixes",
      "description": "Disables automated security fixes for a repository. The authenticated user must have admin access to the repository. For...",
      "method": "delete",
      "endpoint": "/repos/{owner}/{repo}/automated-security-fixes",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        }
      ]
    },
    "repos/enable-automated-security-fixes": {
      "displayName": "Enable automated security fixes",
      "description": "Enables automated security fixes for a repository. The authenticated user must have admin access to the repository. For ...",
      "method": "put",
      "endpoint": "/repos/{owner}/{repo}/automated-security-fixes",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        }
      ]
    },
    "repos/list-branches": {
      "displayName": "List branches",
      "description": "",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/branches",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "protected",
          "location": "query",
          "required": false,
          "description": "Setting to `true` returns only protected branches. When set to `false`, only unprotected branches are returned. Omitting...",
          "type": "boolean",
          "default": false
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "repos/get-branch": {
      "displayName": "Get a branch",
      "description": "",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/branches/{branch}",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "branch",
          "location": "path",
          "required": true,
          "description": "The name of the branch. Cannot contain wildcard characters. To use wildcard characters in branch names, use [the GraphQL...",
          "type": "string",
          "default": ""
        }
      ]
    },
    "repos/delete-branch-protection": {
      "displayName": "Delete branch protection",
      "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in publi...",
      "method": "delete",
      "endpoint": "/repos/{owner}/{repo}/branches/{branch}/protection",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "branch",
          "location": "path",
          "required": true,
          "description": "The name of the branch. Cannot contain wildcard characters. To use wildcard characters in branch names, use [the GraphQL...",
          "type": "string",
          "default": ""
        }
      ]
    },
    "repos/get-branch-protection": {
      "displayName": "Get branch protection",
      "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in publi...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/branches/{branch}/protection",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "branch",
          "location": "path",
          "required": true,
          "description": "The name of the branch. Cannot contain wildcard characters. To use wildcard characters in branch names, use [the GraphQL...",
          "type": "string",
          "default": ""
        }
      ]
    },
    "repos/update-branch-protection": {
      "displayName": "Update branch protection",
      "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in publi...",
      "method": "put",
      "endpoint": "/repos/{owner}/{repo}/branches/{branch}/protection",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "branch",
          "location": "path",
          "required": true,
          "description": "The name of the branch. Cannot contain wildcard characters. To use wildcard characters in branch names, use [the GraphQL...",
          "type": "string",
          "default": ""
        },
        {
          "name": "allow_deletions",
          "location": "body",
          "required": false,
          "description": "Allows deletion of the protected branch by anyone with write access to the repository. Set to `false` to prevent deletio...",
          "type": "boolean",
          "default": false
        },
        {
          "name": "allow_force_pushes",
          "location": "body",
          "required": false,
          "description": "Permits force pushes to the protected branch by anyone with write access to the repository. Set to `true` to allow force...",
          "type": "boolean",
          "default": false
        },
        {
          "name": "allow_fork_syncing",
          "location": "body",
          "required": false,
          "description": "Whether users can pull changes from upstream when the branch is locked. Set to `true` to allow fork syncing. Set to `fal...",
          "type": "boolean",
          "default": false
        },
        {
          "name": "block_creations",
          "location": "body",
          "required": false,
          "description": "If set to `true`, the `restrictions` branch protection settings which limits who can push will also block pushes which c...",
          "type": "boolean",
          "default": false
        },
        {
          "name": "enforce_admins",
          "location": "body",
          "required": true,
          "description": "Enforce all configured restrictions for administrators. Set to `true` to enforce required status checks for repository a...",
          "type": "boolean",
          "default": false
        },
        {
          "name": "lock_branch",
          "location": "body",
          "required": false,
          "description": "Whether to set the branch as read-only. If this is true, users will not be able to push to the branch. Default: `false`",
          "type": "boolean",
          "default": false
        },
        {
          "name": "required_conversation_resolution",
          "location": "body",
          "required": false,
          "description": "Requires all conversations on code to be resolved before a pull request can be merged into a branch that matches this ru...",
          "type": "boolean",
          "default": false
        },
        {
          "name": "required_linear_history",
          "location": "body",
          "required": false,
          "description": "Enforces a linear commit Git history, which prevents anyone from pushing merge commits to a branch. Set to `true` to enf...",
          "type": "boolean",
          "default": false
        },
        {
          "name": "required_pull_request_reviews",
          "location": "body",
          "required": true,
          "description": "Require at least one approving review on a pull request, before merging. Set to `null` to disable",
          "type": "json",
          "default": "{}"
        },
        {
          "name": "required_status_checks",
          "location": "body",
          "required": true,
          "description": "Require status checks to pass before merging. Set to `null` to disable",
          "type": "json",
          "default": "{}"
        },
        {
          "name": "restrictions",
          "location": "body",
          "required": true,
          "description": "Restrict who can push to the protected branch. User, app, and team `restrictions` are only available for organization-ow...",
          "type": "json",
          "default": "{}"
        }
      ]
    },
    "repos/delete-admin-branch-protection": {
      "displayName": "Delete admin branch protection",
      "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in publi...",
      "method": "delete",
      "endpoint": "/repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "branch",
          "location": "path",
          "required": true,
          "description": "The name of the branch. Cannot contain wildcard characters. To use wildcard characters in branch names, use [the GraphQL...",
          "type": "string",
          "default": ""
        }
      ]
    },
    "repos/get-admin-branch-protection": {
      "displayName": "Get admin branch protection",
      "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in publi...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "branch",
          "location": "path",
          "required": true,
          "description": "The name of the branch. Cannot contain wildcard characters. To use wildcard characters in branch names, use [the GraphQL...",
          "type": "string",
          "default": ""
        }
      ]
    },
    "repos/set-admin-branch-protection": {
      "displayName": "Set admin branch protection",
      "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in publi...",
      "method": "post",
      "endpoint": "/repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "branch",
          "location": "path",
          "required": true,
          "description": "The name of the branch. Cannot contain wildcard characters. To use wildcard characters in branch names, use [the GraphQL...",
          "type": "string",
          "default": ""
        }
      ]
    },
    "repos/delete-pull-request-review-protection": {
      "displayName": "Delete pull request review protection",
      "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in publi...",
      "method": "delete",
      "endpoint": "/repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "branch",
          "location": "path",
          "required": true,
          "description": "The name of the branch. Cannot contain wildcard characters. To use wildcard characters in branch names, use [the GraphQL...",
          "type": "string",
          "default": ""
        }
      ]
    },
    "repos/get-pull-request-review-protection": {
      "displayName": "Get pull request review protection",
      "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in publi...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "branch",
          "location": "path",
          "required": true,
          "description": "The name of the branch. Cannot contain wildcard characters. To use wildcard characters in branch names, use [the GraphQL...",
          "type": "string",
          "default": ""
        }
      ]
    },
    "repos/update-pull-request-review-protection": {
      "displayName": "Update pull request review protection",
      "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in publi...",
      "method": "patch",
      "endpoint": "/repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "branch",
          "location": "path",
          "required": true,
          "description": "The name of the branch. Cannot contain wildcard characters. To use wildcard characters in branch names, use [the GraphQL...",
          "type": "string",
          "default": ""
        },
        {
          "name": "bypass_pull_request_allowances",
          "location": "body",
          "required": false,
          "description": "Allow specific users, teams, or apps to bypass pull request requirements",
          "type": "json",
          "default": "{}"
        },
        {
          "name": "dismiss_stale_reviews",
          "location": "body",
          "required": false,
          "description": "Set to `true` if you want to automatically dismiss approving reviews when someone pushes a new commit",
          "type": "boolean",
          "default": false
        },
        {
          "name": "dismissal_restrictions",
          "location": "body",
          "required": false,
          "description": "Specify which users, teams, and apps can dismiss pull request reviews. Pass an empty `dismissal_restrictions` object to ...",
          "type": "json",
          "default": "{}"
        },
        {
          "name": "require_code_owner_reviews",
          "location": "body",
          "required": false,
          "description": "Blocks merging pull requests until [code owners](https://docs.github.com/articles/about-code-owners/) have reviewed",
          "type": "boolean",
          "default": false
        },
        {
          "name": "require_last_push_approval",
          "location": "body",
          "required": false,
          "description": "Whether the most recent push must be approved by someone other than the person who pushed it. Default: `false`",
          "type": "boolean",
          "default": false
        },
        {
          "name": "required_approving_review_count",
          "location": "body",
          "required": false,
          "description": "Specifies the number of reviewers required to approve pull requests. Use a number between 1 and 6 or 0 to not require re...",
          "type": "number",
          "default": 0
        }
      ]
    },
    "repos/delete-commit-signature-protection": {
      "displayName": "Delete commit signature protection",
      "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in publi...",
      "method": "delete",
      "endpoint": "/repos/{owner}/{repo}/branches/{branch}/protection/required_signatures",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "branch",
          "location": "path",
          "required": true,
          "description": "The name of the branch. Cannot contain wildcard characters. To use wildcard characters in branch names, use [the GraphQL...",
          "type": "string",
          "default": ""
        }
      ]
    },
    "repos/get-commit-signature-protection": {
      "displayName": "Get commit signature protection",
      "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in publi...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/branches/{branch}/protection/required_signatures",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "branch",
          "location": "path",
          "required": true,
          "description": "The name of the branch. Cannot contain wildcard characters. To use wildcard characters in branch names, use [the GraphQL...",
          "type": "string",
          "default": ""
        }
      ]
    },
    "repos/create-commit-signature-protection": {
      "displayName": "Create commit signature protection",
      "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in publi...",
      "method": "post",
      "endpoint": "/repos/{owner}/{repo}/branches/{branch}/protection/required_signatures",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "branch",
          "location": "path",
          "required": true,
          "description": "The name of the branch. Cannot contain wildcard characters. To use wildcard characters in branch names, use [the GraphQL...",
          "type": "string",
          "default": ""
        }
      ]
    },
    "repos/remove-status-check-protection": {
      "displayName": "Remove status check protection",
      "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in publi...",
      "method": "delete",
      "endpoint": "/repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "branch",
          "location": "path",
          "required": true,
          "description": "The name of the branch. Cannot contain wildcard characters. To use wildcard characters in branch names, use [the GraphQL...",
          "type": "string",
          "default": ""
        }
      ]
    },
    "repos/get-status-checks-protection": {
      "displayName": "Get status checks protection",
      "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in publi...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "branch",
          "location": "path",
          "required": true,
          "description": "The name of the branch. Cannot contain wildcard characters. To use wildcard characters in branch names, use [the GraphQL...",
          "type": "string",
          "default": ""
        }
      ]
    },
    "repos/update-status-check-protection": {
      "displayName": "Update status check protection",
      "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in publi...",
      "method": "patch",
      "endpoint": "/repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "branch",
          "location": "path",
          "required": true,
          "description": "The name of the branch. Cannot contain wildcard characters. To use wildcard characters in branch names, use [the GraphQL...",
          "type": "string",
          "default": ""
        },
        {
          "name": "checks",
          "location": "body",
          "required": false,
          "description": "The list of status checks to require in order to merge into this branch",
          "type": "json",
          "default": "{}"
        },
        {
          "name": "contexts",
          "location": "body",
          "required": false,
          "description": "**Deprecated**: The list of status checks to require in order to merge into this branch. If any of these checks have rec...",
          "type": "string",
          "default": ""
        },
        {
          "name": "strict",
          "location": "body",
          "required": false,
          "description": "Require branches to be up to date before merging",
          "type": "boolean",
          "default": false
        }
      ]
    },
    "repos/remove-status-check-contexts": {
      "displayName": "Remove status check contexts",
      "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in publi...",
      "method": "delete",
      "endpoint": "/repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "branch",
          "location": "path",
          "required": true,
          "description": "The name of the branch. Cannot contain wildcard characters. To use wildcard characters in branch names, use [the GraphQL...",
          "type": "string",
          "default": ""
        }
      ]
    },
    "repos/get-all-status-check-contexts": {
      "displayName": "Get all status check contexts",
      "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in publi...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "branch",
          "location": "path",
          "required": true,
          "description": "The name of the branch. Cannot contain wildcard characters. To use wildcard characters in branch names, use [the GraphQL...",
          "type": "string",
          "default": ""
        }
      ]
    },
    "repos/add-status-check-contexts": {
      "displayName": "Add status check contexts",
      "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in publi...",
      "method": "post",
      "endpoint": "/repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "branch",
          "location": "path",
          "required": true,
          "description": "The name of the branch. Cannot contain wildcard characters. To use wildcard characters in branch names, use [the GraphQL...",
          "type": "string",
          "default": ""
        }
      ]
    },
    "repos/set-status-check-contexts": {
      "displayName": "Set status check contexts",
      "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in publi...",
      "method": "put",
      "endpoint": "/repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "branch",
          "location": "path",
          "required": true,
          "description": "The name of the branch. Cannot contain wildcard characters. To use wildcard characters in branch names, use [the GraphQL...",
          "type": "string",
          "default": ""
        }
      ]
    },
    "repos/delete-access-restrictions": {
      "displayName": "Delete access restrictions",
      "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in publi...",
      "method": "delete",
      "endpoint": "/repos/{owner}/{repo}/branches/{branch}/protection/restrictions",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "branch",
          "location": "path",
          "required": true,
          "description": "The name of the branch. Cannot contain wildcard characters. To use wildcard characters in branch names, use [the GraphQL...",
          "type": "string",
          "default": ""
        }
      ]
    },
    "repos/get-access-restrictions": {
      "displayName": "Get access restrictions",
      "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in publi...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/branches/{branch}/protection/restrictions",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "branch",
          "location": "path",
          "required": true,
          "description": "The name of the branch. Cannot contain wildcard characters. To use wildcard characters in branch names, use [the GraphQL...",
          "type": "string",
          "default": ""
        }
      ]
    },
    "repos/remove-app-access-restrictions": {
      "displayName": "Remove app access restrictions",
      "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in publi...",
      "method": "delete",
      "endpoint": "/repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "branch",
          "location": "path",
          "required": true,
          "description": "The name of the branch. Cannot contain wildcard characters. To use wildcard characters in branch names, use [the GraphQL...",
          "type": "string",
          "default": ""
        }
      ]
    },
    "repos/get-apps-with-access-to-protected-branch": {
      "displayName": "Get apps with access to the protected branch",
      "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in publi...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "branch",
          "location": "path",
          "required": true,
          "description": "The name of the branch. Cannot contain wildcard characters. To use wildcard characters in branch names, use [the GraphQL...",
          "type": "string",
          "default": ""
        }
      ]
    },
    "repos/add-app-access-restrictions": {
      "displayName": "Add app access restrictions",
      "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in publi...",
      "method": "post",
      "endpoint": "/repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "branch",
          "location": "path",
          "required": true,
          "description": "The name of the branch. Cannot contain wildcard characters. To use wildcard characters in branch names, use [the GraphQL...",
          "type": "string",
          "default": ""
        }
      ]
    },
    "repos/set-app-access-restrictions": {
      "displayName": "Set app access restrictions",
      "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in publi...",
      "method": "put",
      "endpoint": "/repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "branch",
          "location": "path",
          "required": true,
          "description": "The name of the branch. Cannot contain wildcard characters. To use wildcard characters in branch names, use [the GraphQL...",
          "type": "string",
          "default": ""
        }
      ]
    },
    "repos/remove-team-access-restrictions": {
      "displayName": "Remove team access restrictions",
      "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in publi...",
      "method": "delete",
      "endpoint": "/repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "branch",
          "location": "path",
          "required": true,
          "description": "The name of the branch. Cannot contain wildcard characters. To use wildcard characters in branch names, use [the GraphQL...",
          "type": "string",
          "default": ""
        }
      ]
    },
    "repos/get-teams-with-access-to-protected-branch": {
      "displayName": "Get teams with access to the protected branch",
      "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in publi...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "branch",
          "location": "path",
          "required": true,
          "description": "The name of the branch. Cannot contain wildcard characters. To use wildcard characters in branch names, use [the GraphQL...",
          "type": "string",
          "default": ""
        }
      ]
    },
    "repos/add-team-access-restrictions": {
      "displayName": "Add team access restrictions",
      "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in publi...",
      "method": "post",
      "endpoint": "/repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "branch",
          "location": "path",
          "required": true,
          "description": "The name of the branch. Cannot contain wildcard characters. To use wildcard characters in branch names, use [the GraphQL...",
          "type": "string",
          "default": ""
        }
      ]
    },
    "repos/set-team-access-restrictions": {
      "displayName": "Set team access restrictions",
      "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in publi...",
      "method": "put",
      "endpoint": "/repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "branch",
          "location": "path",
          "required": true,
          "description": "The name of the branch. Cannot contain wildcard characters. To use wildcard characters in branch names, use [the GraphQL...",
          "type": "string",
          "default": ""
        }
      ]
    },
    "repos/remove-user-access-restrictions": {
      "displayName": "Remove user access restrictions",
      "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in publi...",
      "method": "delete",
      "endpoint": "/repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "branch",
          "location": "path",
          "required": true,
          "description": "The name of the branch. Cannot contain wildcard characters. To use wildcard characters in branch names, use [the GraphQL...",
          "type": "string",
          "default": ""
        }
      ]
    },
    "repos/get-users-with-access-to-protected-branch": {
      "displayName": "Get users with access to the protected branch",
      "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in publi...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "branch",
          "location": "path",
          "required": true,
          "description": "The name of the branch. Cannot contain wildcard characters. To use wildcard characters in branch names, use [the GraphQL...",
          "type": "string",
          "default": ""
        }
      ]
    },
    "repos/add-user-access-restrictions": {
      "displayName": "Add user access restrictions",
      "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in publi...",
      "method": "post",
      "endpoint": "/repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "branch",
          "location": "path",
          "required": true,
          "description": "The name of the branch. Cannot contain wildcard characters. To use wildcard characters in branch names, use [the GraphQL...",
          "type": "string",
          "default": ""
        }
      ]
    },
    "repos/set-user-access-restrictions": {
      "displayName": "Set user access restrictions",
      "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in publi...",
      "method": "put",
      "endpoint": "/repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "branch",
          "location": "path",
          "required": true,
          "description": "The name of the branch. Cannot contain wildcard characters. To use wildcard characters in branch names, use [the GraphQL...",
          "type": "string",
          "default": ""
        }
      ]
    },
    "repos/rename-branch": {
      "displayName": "Rename a branch",
      "description": "Renames a branch in a repository.  **Note:** Although the API responds immediately, the branch rename process might take...",
      "method": "post",
      "endpoint": "/repos/{owner}/{repo}/branches/{branch}/rename",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "branch",
          "location": "path",
          "required": true,
          "description": "The name of the branch. Cannot contain wildcard characters. To use wildcard characters in branch names, use [the GraphQL...",
          "type": "string",
          "default": ""
        },
        {
          "name": "new_name",
          "location": "body",
          "required": true,
          "description": "The new name of the branch",
          "type": "string",
          "default": ""
        }
      ]
    },
    "checks/create": {
      "displayName": "Create a check run",
      "description": "**Note:** The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes...",
      "method": "post",
      "endpoint": "/repos/{owner}/{repo}/check-runs",
      "tags": [
        "check"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "actions",
          "location": "body",
          "required": false,
          "description": "Displays a button on GitHub that can be clicked to alert your app to do additional tasks. For example, a code linting ap...",
          "type": "json",
          "default": "{}"
        },
        {
          "name": "completed_at",
          "location": "body",
          "required": false,
          "description": "The time the check completed. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM...",
          "type": "string",
          "default": ""
        },
        {
          "name": "conclusion",
          "location": "body",
          "required": false,
          "description": "**Required if you provide `completed_at` or a `status` of `completed`**. The final conclusion of the check.  **Note:** P...",
          "type": "string",
          "default": ""
        },
        {
          "name": "details_url",
          "location": "body",
          "required": false,
          "description": "The URL of the integrator's site that has the full details of the check. If the integrator does not provide this, then t...",
          "type": "string",
          "default": ""
        },
        {
          "name": "external_id",
          "location": "body",
          "required": false,
          "description": "A reference for the run on the integrator's system",
          "type": "string",
          "default": ""
        },
        {
          "name": "head_sha",
          "location": "body",
          "required": true,
          "description": "The SHA of the commit",
          "type": "string",
          "default": ""
        },
        {
          "name": "name",
          "location": "body",
          "required": true,
          "description": "The name of the check. For example, \"code-coverage\"",
          "type": "string",
          "default": ""
        },
        {
          "name": "output",
          "location": "body",
          "required": false,
          "description": "Check runs can accept a variety of data in the `output` object, including a `title` and `summary` and can optionally pro...",
          "type": "json",
          "default": "{}"
        },
        {
          "name": "started_at",
          "location": "body",
          "required": false,
          "description": "The time that the check run began. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YY...",
          "type": "string",
          "default": ""
        },
        {
          "name": "status",
          "location": "body",
          "required": false,
          "description": "The current status",
          "type": "string",
          "default": ""
        }
      ]
    },
    "checks/get": {
      "displayName": "Get a check run",
      "description": "**Note:** The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/check-runs/{check_run_id}",
      "tags": [
        "check"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "check_run_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the check run",
          "type": "number",
          "default": 0
        }
      ]
    },
    "checks/update": {
      "displayName": "Update a check run",
      "description": "**Note:** The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes...",
      "method": "patch",
      "endpoint": "/repos/{owner}/{repo}/check-runs/{check_run_id}",
      "tags": [
        "check"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "check_run_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the check run",
          "type": "number",
          "default": 0
        },
        {
          "name": "actions",
          "location": "body",
          "required": false,
          "description": "Possible further actions the integrator can perform, which a user may trigger. Each action includes a `label`, `identifi...",
          "type": "json",
          "default": "{}"
        },
        {
          "name": "completed_at",
          "location": "body",
          "required": false,
          "description": "The time the check completed. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM...",
          "type": "string",
          "default": ""
        },
        {
          "name": "conclusion",
          "location": "body",
          "required": false,
          "description": "**Required if you provide `completed_at` or a `status` of `completed`**. The final conclusion of the check.  **Note:** P...",
          "type": "string",
          "default": ""
        },
        {
          "name": "details_url",
          "location": "body",
          "required": false,
          "description": "The URL of the integrator's site that has the full details of the check",
          "type": "string",
          "default": ""
        },
        {
          "name": "external_id",
          "location": "body",
          "required": false,
          "description": "A reference for the run on the integrator's system",
          "type": "string",
          "default": ""
        },
        {
          "name": "name",
          "location": "body",
          "required": false,
          "description": "The name of the check. For example, \"code-coverage\"",
          "type": "string",
          "default": ""
        },
        {
          "name": "output",
          "location": "body",
          "required": false,
          "description": "Check runs can accept a variety of data in the `output` object, including a `title` and `summary` and can optionally pro...",
          "type": "json",
          "default": "{}"
        },
        {
          "name": "started_at",
          "location": "body",
          "required": false,
          "description": "This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`",
          "type": "string",
          "default": ""
        },
        {
          "name": "status",
          "location": "body",
          "required": false,
          "description": "The current status",
          "type": "string",
          "default": ""
        }
      ]
    },
    "checks/list-annotations": {
      "displayName": "List check run annotations",
      "description": "Lists annotations for a check run using the annotation `id`. GitHub Apps must have the `checks:read` permission on a pri...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/check-runs/{check_run_id}/annotations",
      "tags": [
        "check"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "check_run_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the check run",
          "type": "number",
          "default": 0
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "checks/rerequest-run": {
      "displayName": "Rerequest a check run",
      "description": "Triggers GitHub to rerequest an existing check run, without pushing new code to a repository. This endpoint will trigger...",
      "method": "post",
      "endpoint": "/repos/{owner}/{repo}/check-runs/{check_run_id}/rerequest",
      "tags": [
        "check"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "check_run_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the check run",
          "type": "number",
          "default": 0
        }
      ]
    },
    "checks/create-suite": {
      "displayName": "Create a check suite",
      "description": "**Note:** The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes...",
      "method": "post",
      "endpoint": "/repos/{owner}/{repo}/check-suites",
      "tags": [
        "check"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "head_sha",
          "location": "body",
          "required": true,
          "description": "The sha of the head commit",
          "type": "string",
          "default": ""
        }
      ]
    },
    "checks/set-suites-preferences": {
      "displayName": "Update repository preferences for check suites",
      "description": "Changes the default automatic flow when creating check suites. By default, a check suite is automatically created each t...",
      "method": "patch",
      "endpoint": "/repos/{owner}/{repo}/check-suites/preferences",
      "tags": [
        "check"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "auto_trigger_checks",
          "location": "body",
          "required": false,
          "description": "Enables or disables automatic creation of CheckSuite events upon pushes to the repository. Enabled by default",
          "type": "json",
          "default": "{}"
        }
      ]
    },
    "checks/get-suite": {
      "displayName": "Get a check suite",
      "description": "**Note:** The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/check-suites/{check_suite_id}",
      "tags": [
        "check"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "check_suite_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the check suite",
          "type": "number",
          "default": 0
        }
      ]
    },
    "checks/list-for-suite": {
      "displayName": "List check runs in a check suite",
      "description": "**Note:** The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/check-suites/{check_suite_id}/check-runs",
      "tags": [
        "check"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "check_suite_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the check suite",
          "type": "number",
          "default": 0
        },
        {
          "name": "check_name",
          "location": "query",
          "required": false,
          "description": "Returns check runs with the specified `name`",
          "type": "string",
          "default": ""
        },
        {
          "name": "status",
          "location": "query",
          "required": false,
          "description": "Returns check runs with the specified `status`",
          "type": "options",
          "default": "queued",
          "options": [
            "queued",
            "in_progress",
            "completed"
          ]
        },
        {
          "name": "filter",
          "location": "query",
          "required": false,
          "description": "Filters check runs by their `completed_at` timestamp. `latest` returns the most recent check runs",
          "type": "options",
          "default": "latest",
          "options": [
            "latest",
            "all"
          ]
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "checks/rerequest-suite": {
      "displayName": "Rerequest a check suite",
      "description": "Triggers GitHub to rerequest an existing check suite, without pushing new code to a repository. This endpoint will trigg...",
      "method": "post",
      "endpoint": "/repos/{owner}/{repo}/check-suites/{check_suite_id}/rerequest",
      "tags": [
        "check"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "check_suite_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the check suite",
          "type": "number",
          "default": 0
        }
      ]
    },
    "code-scanning/list-alerts-for-repo": {
      "displayName": "List code scanning alerts for a repository",
      "description": "Lists code scanning alerts.  To use this endpoint, you must use an access token with the `security_events` scope or, for...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/code-scanning/alerts",
      "tags": [
        "code-scanning"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "tool_name",
          "location": "query",
          "required": false,
          "description": "The name of a code scanning tool. Only results by this tool will be listed. You can specify the tool by using either `to...",
          "type": "string",
          "default": ""
        },
        {
          "name": "tool_guid",
          "location": "query",
          "required": false,
          "description": "The GUID of a code scanning tool. Only results by this tool will be listed. Note that some code scanning tools may not i...",
          "type": "string",
          "default": ""
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "ref",
          "location": "query",
          "required": false,
          "description": "The Git reference for the results you want to list. The `ref` for a branch can be formatted either as `refs/heads/<branc...",
          "type": "string",
          "default": ""
        },
        {
          "name": "direction",
          "location": "query",
          "required": false,
          "description": "The direction to sort the results by",
          "type": "options",
          "default": "desc",
          "options": [
            "asc",
            "desc"
          ]
        },
        {
          "name": "sort",
          "location": "query",
          "required": false,
          "description": "The property by which to sort the results",
          "type": "options",
          "default": "created",
          "options": [
            "created",
            "updated"
          ]
        },
        {
          "name": "state",
          "location": "query",
          "required": false,
          "description": "If specified, only code scanning alerts with this state will be returned",
          "type": "options",
          "default": "open",
          "options": [
            "open",
            "closed",
            "dismissed",
            "fixed"
          ]
        },
        {
          "name": "severity",
          "location": "query",
          "required": false,
          "description": "If specified, only code scanning alerts with this severity will be returned",
          "type": "options",
          "default": "critical",
          "options": [
            "critical",
            "high",
            "medium",
            "low",
            "warning",
            "note",
            "error"
          ]
        }
      ]
    },
    "code-scanning/get-alert": {
      "displayName": "Get a code scanning alert",
      "description": "Gets a single code scanning alert. You must use an access token with the `security_events` scope to use this endpoint wi...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/code-scanning/alerts/{alert_number}",
      "tags": [
        "code-scanning"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "alert_number",
          "location": "path",
          "required": true,
          "description": "The number that identifies an alert. You can find this at the end of the URL for a code scanning alert within GitHub, an...",
          "type": "number",
          "default": 0
        }
      ]
    },
    "code-scanning/update-alert": {
      "displayName": "Update a code scanning alert",
      "description": "Updates the status of a single code scanning alert. You must use an access token with the `security_events` scope to use...",
      "method": "patch",
      "endpoint": "/repos/{owner}/{repo}/code-scanning/alerts/{alert_number}",
      "tags": [
        "code-scanning"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "alert_number",
          "location": "path",
          "required": true,
          "description": "The number that identifies an alert. You can find this at the end of the URL for a code scanning alert within GitHub, an...",
          "type": "number",
          "default": 0
        },
        {
          "name": "dismissed_comment",
          "location": "body",
          "required": false,
          "description": "The dismissal comment associated with the dismissal of the alert",
          "type": "string",
          "default": ""
        },
        {
          "name": "dismissed_reason",
          "location": "body",
          "required": false,
          "description": "**Required when the state is dismissed.** The reason for dismissing or closing the alert",
          "type": "string",
          "default": ""
        },
        {
          "name": "state",
          "location": "body",
          "required": true,
          "description": "Sets the state of the code scanning alert. You must provide `dismissed_reason` when you set the state to `dismissed`",
          "type": "string",
          "default": ""
        }
      ]
    },
    "code-scanning/list-alert-instances": {
      "displayName": "List instances of a code scanning alert",
      "description": "Lists all instances of the specified code scanning alert. You must use an access token with the `security_events` scope ...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances",
      "tags": [
        "code-scanning"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "alert_number",
          "location": "path",
          "required": true,
          "description": "The number that identifies an alert. You can find this at the end of the URL for a code scanning alert within GitHub, an...",
          "type": "number",
          "default": 0
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "ref",
          "location": "query",
          "required": false,
          "description": "The Git reference for the results you want to list. The `ref` for a branch can be formatted either as `refs/heads/<branc...",
          "type": "string",
          "default": ""
        }
      ]
    },
    "code-scanning/list-recent-analyses": {
      "displayName": "List code scanning analyses for a repository",
      "description": "Lists the details of all code scanning analyses for a repository, starting with the most recent. The response is paginat...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/code-scanning/analyses",
      "tags": [
        "code-scanning"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "tool_name",
          "location": "query",
          "required": false,
          "description": "The name of a code scanning tool. Only results by this tool will be listed. You can specify the tool by using either `to...",
          "type": "string",
          "default": ""
        },
        {
          "name": "tool_guid",
          "location": "query",
          "required": false,
          "description": "The GUID of a code scanning tool. Only results by this tool will be listed. Note that some code scanning tools may not i...",
          "type": "string",
          "default": ""
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "ref",
          "location": "query",
          "required": false,
          "description": "The Git reference for the analyses you want to list. The `ref` for a branch can be formatted either as `refs/heads/<bran...",
          "type": "string",
          "default": ""
        },
        {
          "name": "sarif_id",
          "location": "query",
          "required": false,
          "description": "Filter analyses belonging to the same SARIF upload",
          "type": "string",
          "default": ""
        },
        {
          "name": "direction",
          "location": "query",
          "required": false,
          "description": "The direction to sort the results by",
          "type": "options",
          "default": "desc",
          "options": [
            "asc",
            "desc"
          ]
        },
        {
          "name": "sort",
          "location": "query",
          "required": false,
          "description": "The property by which to sort the results",
          "type": "options",
          "default": "created",
          "options": [
            "created"
          ]
        }
      ]
    },
    "code-scanning/delete-analysis": {
      "displayName": "Delete a code scanning analysis from a repository",
      "description": "Deletes a specified code scanning analysis from a repository. For private repositories, you must use an access token wit...",
      "method": "delete",
      "endpoint": "/repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}",
      "tags": [
        "code-scanning"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "analysis_id",
          "location": "path",
          "required": true,
          "description": "The ID of the analysis, as returned from the `GET /repos/{owner}/{repo}/code-scanning/analyses` operation",
          "type": "number",
          "default": 0
        },
        {
          "name": "confirm_delete",
          "location": "query",
          "required": false,
          "description": "Allow deletion if the specified analysis is the last in a set. If you attempt to delete the final analysis in a set with...",
          "type": "string",
          "default": ""
        }
      ]
    },
    "code-scanning/get-analysis": {
      "displayName": "Get a code scanning analysis for a repository",
      "description": "Gets a specified code scanning analysis for a repository. You must use an access token with the `security_events` scope ...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}",
      "tags": [
        "code-scanning"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "analysis_id",
          "location": "path",
          "required": true,
          "description": "The ID of the analysis, as returned from the `GET /repos/{owner}/{repo}/code-scanning/analyses` operation",
          "type": "number",
          "default": 0
        }
      ]
    },
    "code-scanning/list-codeql-databases": {
      "displayName": "List CodeQL databases for a repository",
      "description": "Lists the CodeQL databases that are available in a repository.  For private repositories, you must use an access token w...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/code-scanning/codeql/databases",
      "tags": [
        "code-scanning"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        }
      ]
    },
    "code-scanning/get-codeql-database": {
      "displayName": "Get a CodeQL database for a repository",
      "description": "Gets a CodeQL database for a language in a repository.  By default this endpoint returns JSON metadata about the CodeQL ...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/code-scanning/codeql/databases/{language}",
      "tags": [
        "code-scanning"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "language",
          "location": "path",
          "required": true,
          "description": "The language of the CodeQL database",
          "type": "string",
          "default": ""
        }
      ]
    },
    "code-scanning/upload-sarif": {
      "displayName": "Upload an analysis as SARIF data",
      "description": "Uploads SARIF data containing the results of a code scanning analysis to make the results available in a repository. You...",
      "method": "post",
      "endpoint": "/repos/{owner}/{repo}/code-scanning/sarifs",
      "tags": [
        "code-scanning"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "checkout_uri",
          "location": "body",
          "required": false,
          "description": "The base directory used in the analysis, as it appears in the SARIF file. This property is used to convert file paths fr...",
          "type": "string",
          "default": "",
          "placeholder": "e.g. file:///github/workspace/"
        },
        {
          "name": "commit_sha",
          "location": "body",
          "required": true,
          "description": "The SHA of the commit to which the analysis you are uploading relates",
          "type": "string",
          "default": ""
        },
        {
          "name": "ref",
          "location": "body",
          "required": true,
          "description": "The full Git reference, formatted as `refs/heads/<branch name>`, `refs/pull/<number>/merge`, or `refs/pull/<number>/head...",
          "type": "string",
          "default": ""
        },
        {
          "name": "sarif",
          "location": "body",
          "required": true,
          "description": "A Base64 string representing the SARIF file to upload. You must first compress your SARIF file using [`gzip`](http://www...",
          "type": "string",
          "default": ""
        },
        {
          "name": "started_at",
          "location": "body",
          "required": false,
          "description": "The time that the analysis run began. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: ...",
          "type": "string",
          "default": ""
        },
        {
          "name": "tool_name",
          "location": "body",
          "required": false,
          "description": "The name of the tool used to generate the code scanning analysis. If this parameter is not used, the tool name defaults ...",
          "type": "string",
          "default": ""
        },
        {
          "name": "validate",
          "location": "body",
          "required": false,
          "description": "Whether the SARIF file will be validated according to the code scanning specifications. This parameter is intended to he...",
          "type": "boolean",
          "default": false
        }
      ]
    },
    "code-scanning/get-sarif": {
      "displayName": "Get information about a SARIF upload",
      "description": "Gets information about a SARIF upload, including the status and the URL of the analysis that was uploaded so that you ca...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/code-scanning/sarifs/{sarif_id}",
      "tags": [
        "code-scanning"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "sarif_id",
          "location": "path",
          "required": true,
          "description": "The SARIF ID obtained after uploading",
          "type": "string",
          "default": ""
        }
      ]
    },
    "repos/codeowners-errors": {
      "displayName": "List CODEOWNERS errors",
      "description": "List any syntax errors that are detected in the CODEOWNERS file.  For more information about the correct CODEOWNERS synt...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/codeowners/errors",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "ref",
          "location": "query",
          "required": false,
          "description": "A branch, tag or commit name used to determine which version of the CODEOWNERS file to use. Default: the repository's de...",
          "type": "string",
          "default": ""
        }
      ]
    },
    "codespaces/list-in-repository-for-authenticated-user": {
      "displayName": "List codespaces in a repository for the authenticated user",
      "description": "Lists the codespaces associated to a specified repository and the authenticated user.  You must authenticate using an ac...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/codespaces",
      "tags": [
        "codespace"
      ],
      "params": [
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        },
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        }
      ]
    },
    "codespaces/create-with-repo-for-authenticated-user": {
      "displayName": "Create a codespace in a repository",
      "description": "Creates a codespace owned by the authenticated user in the specified repository.  You must authenticate using an access ...",
      "method": "post",
      "endpoint": "/repos/{owner}/{repo}/codespaces",
      "tags": [
        "codespace"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "client_ip",
          "location": "body",
          "required": false,
          "description": "IP for location auto-detection when proxying a request",
          "type": "string",
          "default": ""
        },
        {
          "name": "devcontainer_path",
          "location": "body",
          "required": false,
          "description": "Path to devcontainer.json config to use for this codespace",
          "type": "string",
          "default": ""
        },
        {
          "name": "display_name",
          "location": "body",
          "required": false,
          "description": "Display name for this codespace",
          "type": "string",
          "default": ""
        },
        {
          "name": "idle_timeout_minutes",
          "location": "body",
          "required": false,
          "description": "Time in minutes before codespace stops from inactivity",
          "type": "number",
          "default": 0
        },
        {
          "name": "location",
          "location": "body",
          "required": false,
          "description": "Location for this codespace. Assigned by IP if not provided",
          "type": "string",
          "default": ""
        },
        {
          "name": "machine",
          "location": "body",
          "required": false,
          "description": "Machine type to use for this codespace",
          "type": "string",
          "default": ""
        },
        {
          "name": "multi_repo_permissions_opt_out",
          "location": "body",
          "required": false,
          "description": "Whether to authorize requested permissions from devcontainer.json",
          "type": "boolean",
          "default": false
        },
        {
          "name": "ref",
          "location": "body",
          "required": false,
          "description": "Git ref (typically a branch name) for this codespace",
          "type": "string",
          "default": ""
        },
        {
          "name": "retention_period_minutes",
          "location": "body",
          "required": false,
          "description": "Duration in minutes after codespace has gone idle in which it will be deleted. Must be integer minutes between 0 and 432...",
          "type": "number",
          "default": 0
        },
        {
          "name": "working_directory",
          "location": "body",
          "required": false,
          "description": "Working directory for this codespace",
          "type": "string",
          "default": ""
        }
      ]
    },
    "codespaces/list-devcontainers-in-repository-for-authenticated-user": {
      "displayName": "List devcontainer configurations in a repository for the authenticated user",
      "description": "Lists the devcontainer.json files associated with a specified repository and the authenticated user. These files specify...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/codespaces/devcontainers",
      "tags": [
        "codespace"
      ],
      "params": [
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        },
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        }
      ]
    },
    "codespaces/repo-machines-for-authenticated-user": {
      "displayName": "List available machine types for a repository",
      "description": "List the machine types available for a given repository based on its configuration.  You must authenticate using an acce...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/codespaces/machines",
      "tags": [
        "codespace"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "location",
          "location": "query",
          "required": false,
          "description": "The location to check for available machines. Assigned by IP if not provided",
          "type": "string",
          "default": ""
        },
        {
          "name": "client_ip",
          "location": "query",
          "required": false,
          "description": "IP for location auto-detection when proxying a request",
          "type": "string",
          "default": ""
        }
      ]
    },
    "codespaces/pre-flight-with-repo-for-authenticated-user": {
      "displayName": "Get default attributes for a codespace",
      "description": "Gets the default attributes for codespaces created by the user with the repository.  You must authenticate using an acce...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/codespaces/new",
      "tags": [
        "codespace"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "ref",
          "location": "query",
          "required": false,
          "description": "The branch or commit to check for a default devcontainer path. If not specified, the default branch will be checked",
          "type": "string",
          "default": ""
        },
        {
          "name": "client_ip",
          "location": "query",
          "required": false,
          "description": "An alternative IP for default location auto-detection, such as when proxying a request",
          "type": "string",
          "default": ""
        }
      ]
    },
    "codespaces/list-repo-secrets": {
      "displayName": "List repository secrets",
      "description": "Lists all secrets available in a repository without revealing their encrypted values. You must authenticate using an acc...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/codespaces/secrets",
      "tags": [
        "codespace"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "codespaces/get-repo-public-key": {
      "displayName": "Get a repository public key",
      "description": "Gets your public key, which you need to encrypt secrets. You need to encrypt a secret before you can create or update se...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/codespaces/secrets/public-key",
      "tags": [
        "codespace"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        }
      ]
    },
    "codespaces/delete-repo-secret": {
      "displayName": "Delete a repository secret",
      "description": "Deletes a secret in a repository using the secret name. You must authenticate using an access token with the `repo` scop...",
      "method": "delete",
      "endpoint": "/repos/{owner}/{repo}/codespaces/secrets/{secret_name}",
      "tags": [
        "codespace"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "secret_name",
          "location": "path",
          "required": true,
          "description": "The name of the secret",
          "type": "string",
          "default": ""
        }
      ]
    },
    "codespaces/get-repo-secret": {
      "displayName": "Get a repository secret",
      "description": "Gets a single repository secret without revealing its encrypted value. You must authenticate using an access token with ...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/codespaces/secrets/{secret_name}",
      "tags": [
        "codespace"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "secret_name",
          "location": "path",
          "required": true,
          "description": "The name of the secret",
          "type": "string",
          "default": ""
        }
      ]
    },
    "codespaces/create-or-update-repo-secret": {
      "displayName": "Create or update a repository secret",
      "description": "Creates or updates a repository secret with an encrypted value. Encrypt your secret using [LibSodium](https://libsodium....",
      "method": "put",
      "endpoint": "/repos/{owner}/{repo}/codespaces/secrets/{secret_name}",
      "tags": [
        "codespace"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "secret_name",
          "location": "path",
          "required": true,
          "description": "The name of the secret",
          "type": "string",
          "default": ""
        },
        {
          "name": "encrypted_value",
          "location": "body",
          "required": false,
          "description": "Value for your secret, encrypted with [LibSodium](https://libsodium.gitbook.io/doc/bindings_for_other_languages) using t...",
          "type": "string",
          "default": ""
        },
        {
          "name": "key_id",
          "location": "body",
          "required": false,
          "description": "ID of the key you used to encrypt the secret",
          "type": "string",
          "default": ""
        }
      ]
    },
    "repos/list-collaborators": {
      "displayName": "List repository collaborators",
      "description": "For organization-owned repositories, the list of collaborators includes outside collaborators, organization members that...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/collaborators",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "affiliation",
          "location": "query",
          "required": false,
          "description": "Filter collaborators returned by their affiliation. `outside` means all outside collaborators of an organization-owned r...",
          "type": "options",
          "default": "all",
          "options": [
            "outside",
            "direct",
            "all"
          ]
        },
        {
          "name": "permission",
          "location": "query",
          "required": false,
          "description": "Filter collaborators by the permissions they have on the repository. If not specified, all collaborators will be returne...",
          "type": "options",
          "default": "pull",
          "options": [
            "pull",
            "triage",
            "push",
            "maintain",
            "admin"
          ]
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "repos/remove-collaborator": {
      "displayName": "Remove a repository collaborator",
      "description": "",
      "method": "delete",
      "endpoint": "/repos/{owner}/{repo}/collaborators/{username}",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "username",
          "location": "path",
          "required": true,
          "description": "The handle for the GitHub user account",
          "type": "string",
          "default": ""
        }
      ]
    },
    "repos/check-collaborator": {
      "displayName": "Check if a user is a repository collaborator",
      "description": "For organization-owned repositories, the list of collaborators includes outside collaborators, organization members that...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/collaborators/{username}",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "username",
          "location": "path",
          "required": true,
          "description": "The handle for the GitHub user account",
          "type": "string",
          "default": ""
        }
      ]
    },
    "repos/add-collaborator": {
      "displayName": "Add a repository collaborator",
      "description": "This endpoint triggers [notifications](https://docs.github.com/github/managing-subscriptions-and-notifications-on-github...",
      "method": "put",
      "endpoint": "/repos/{owner}/{repo}/collaborators/{username}",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "username",
          "location": "path",
          "required": true,
          "description": "The handle for the GitHub user account",
          "type": "string",
          "default": ""
        },
        {
          "name": "permission",
          "location": "body",
          "required": false,
          "description": "The permission to grant the collaborator. **Only valid on organization-owned repositories.** We accept the following per...",
          "type": "string",
          "default": ""
        }
      ]
    },
    "repos/get-collaborator-permission-level": {
      "displayName": "Get repository permissions for a user",
      "description": "Checks the repository permission of a collaborator. The possible repository permissions are `admin`, `write`, `read`, an...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/collaborators/{username}/permission",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "username",
          "location": "path",
          "required": true,
          "description": "The handle for the GitHub user account",
          "type": "string",
          "default": ""
        }
      ]
    },
    "repos/list-commit-comments-for-repo": {
      "displayName": "List commit comments for a repository",
      "description": "Commit Comments use [these custom media types](https://docs.github.com/rest/reference/repos#custom-media-types). You can...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/comments",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "repos/delete-commit-comment": {
      "displayName": "Delete a commit comment",
      "description": "",
      "method": "delete",
      "endpoint": "/repos/{owner}/{repo}/comments/{comment_id}",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "comment_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the comment",
          "type": "number",
          "default": 0
        }
      ]
    },
    "repos/get-commit-comment": {
      "displayName": "Get a commit comment",
      "description": "",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/comments/{comment_id}",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "comment_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the comment",
          "type": "number",
          "default": 0
        }
      ]
    },
    "repos/update-commit-comment": {
      "displayName": "Update a commit comment",
      "description": "",
      "method": "patch",
      "endpoint": "/repos/{owner}/{repo}/comments/{comment_id}",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "comment_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the comment",
          "type": "number",
          "default": 0
        },
        {
          "name": "body",
          "location": "body",
          "required": true,
          "description": "The contents of the comment",
          "type": "string",
          "default": ""
        }
      ]
    },
    "reactions/list-for-commit-comment": {
      "displayName": "List reactions for a commit comment",
      "description": "List the reactions to a [commit comment](https://docs.github.com/rest/reference/repos#comments)",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/comments/{comment_id}/reactions",
      "tags": [
        "reaction"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "comment_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the comment",
          "type": "number",
          "default": 0
        },
        {
          "name": "content",
          "location": "query",
          "required": false,
          "description": "Returns a single [reaction type](https://docs.github.com/rest/reference/reactions#reaction-types). Omit this parameter t...",
          "type": "options",
          "default": "+1",
          "options": [
            "+1",
            "-1",
            "laugh",
            "confused",
            "heart",
            "hooray",
            "rocket",
            "eyes"
          ]
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "reactions/create-for-commit-comment": {
      "displayName": "Create reaction for a commit comment",
      "description": "Create a reaction to a [commit comment](https://docs.github.com/rest/reference/repos#comments). A response with an HTTP ...",
      "method": "post",
      "endpoint": "/repos/{owner}/{repo}/comments/{comment_id}/reactions",
      "tags": [
        "reaction"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "comment_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the comment",
          "type": "number",
          "default": 0
        },
        {
          "name": "content",
          "location": "body",
          "required": true,
          "description": "The [reaction type](https://docs.github.com/rest/reference/reactions#reaction-types) to add to the commit comment",
          "type": "string",
          "default": ""
        }
      ]
    },
    "reactions/delete-for-commit-comment": {
      "displayName": "Delete a commit comment reaction",
      "description": "**Note:** You can also specify a repository by `repository_id` using the route `DELETE /repositories/:repository_id/comm...",
      "method": "delete",
      "endpoint": "/repos/{owner}/{repo}/comments/{comment_id}/reactions/{reaction_id}",
      "tags": [
        "reaction"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "comment_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the comment",
          "type": "number",
          "default": 0
        },
        {
          "name": "reaction_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the reaction",
          "type": "number",
          "default": 0
        }
      ]
    },
    "repos/list-commits": {
      "displayName": "List commits",
      "description": "**Signature verification object**  The response will include a `verification` object that describes the result of verify...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/commits",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "sha",
          "location": "query",
          "required": false,
          "description": "SHA or branch to start listing commits from. Default: the repository’s default branch (usually `main`)",
          "type": "string",
          "default": ""
        },
        {
          "name": "path",
          "location": "query",
          "required": false,
          "description": "Only commits containing this file path will be returned",
          "type": "string",
          "default": ""
        },
        {
          "name": "author",
          "location": "query",
          "required": false,
          "description": "GitHub login or email address by which to filter by commit author",
          "type": "string",
          "default": ""
        },
        {
          "name": "since",
          "location": "query",
          "required": false,
          "description": "Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/IS...",
          "type": "string",
          "default": ""
        },
        {
          "name": "until",
          "location": "query",
          "required": false,
          "description": "Only commits before this date will be returned. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601...",
          "type": "string",
          "default": ""
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "repos/list-branches-for-head-commit": {
      "displayName": "List branches for HEAD commit",
      "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in publi...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/commits/{commit_sha}/branches-where-head",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "commit_sha",
          "location": "path",
          "required": true,
          "description": "The SHA of the commit",
          "type": "string",
          "default": ""
        }
      ]
    },
    "repos/list-comments-for-commit": {
      "displayName": "List commit comments",
      "description": "Use the `:commit_sha` to specify the commit that will have its comments listed",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/commits/{commit_sha}/comments",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "commit_sha",
          "location": "path",
          "required": true,
          "description": "The SHA of the commit",
          "type": "string",
          "default": ""
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "repos/create-commit-comment": {
      "displayName": "Create a commit comment",
      "description": "Create a comment for a commit using its `:commit_sha`.  This endpoint triggers [notifications](https://docs.github.com/g...",
      "method": "post",
      "endpoint": "/repos/{owner}/{repo}/commits/{commit_sha}/comments",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "commit_sha",
          "location": "path",
          "required": true,
          "description": "The SHA of the commit",
          "type": "string",
          "default": ""
        },
        {
          "name": "body",
          "location": "body",
          "required": true,
          "description": "The contents of the comment",
          "type": "string",
          "default": ""
        },
        {
          "name": "line",
          "location": "body",
          "required": false,
          "description": "**Deprecated**. Use **position** parameter instead. Line number in the file to comment on",
          "type": "number",
          "default": 0
        },
        {
          "name": "path",
          "location": "body",
          "required": false,
          "description": "Relative path of the file to comment on",
          "type": "string",
          "default": ""
        },
        {
          "name": "position",
          "location": "body",
          "required": false,
          "description": "Line index in the diff to comment on",
          "type": "number",
          "default": 0
        }
      ]
    },
    "repos/list-pull-requests-associated-with-commit": {
      "displayName": "List pull requests associated with a commit",
      "description": "Lists the merged pull request that introduced the commit to the repository. If the commit is not present in the default ...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/commits/{commit_sha}/pulls",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "commit_sha",
          "location": "path",
          "required": true,
          "description": "The SHA of the commit",
          "type": "string",
          "default": ""
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "repos/get-commit": {
      "displayName": "Get a commit",
      "description": "Returns the contents of a single commit reference. You must have `read` access for the repository to use this endpoint. ...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/commits/{ref}",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "ref",
          "location": "path",
          "required": true,
          "description": "ref parameter",
          "type": "string",
          "default": ""
        }
      ]
    },
    "checks/list-for-ref": {
      "displayName": "List check runs for a Git reference",
      "description": "**Note:** The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/commits/{ref}/check-runs",
      "tags": [
        "check"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "ref",
          "location": "path",
          "required": true,
          "description": "ref parameter",
          "type": "string",
          "default": ""
        },
        {
          "name": "check_name",
          "location": "query",
          "required": false,
          "description": "Returns check runs with the specified `name`",
          "type": "string",
          "default": ""
        },
        {
          "name": "status",
          "location": "query",
          "required": false,
          "description": "Returns check runs with the specified `status`",
          "type": "options",
          "default": "queued",
          "options": [
            "queued",
            "in_progress",
            "completed"
          ]
        },
        {
          "name": "filter",
          "location": "query",
          "required": false,
          "description": "Filters check runs by their `completed_at` timestamp. `latest` returns the most recent check runs",
          "type": "options",
          "default": "latest",
          "options": [
            "latest",
            "all"
          ]
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        },
        {
          "name": "app_id",
          "location": "query",
          "required": false,
          "description": "",
          "type": "number",
          "default": 0
        }
      ]
    },
    "checks/list-suites-for-ref": {
      "displayName": "List check suites for a Git reference",
      "description": "**Note:** The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/commits/{ref}/check-suites",
      "tags": [
        "check"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "ref",
          "location": "path",
          "required": true,
          "description": "ref parameter",
          "type": "string",
          "default": ""
        },
        {
          "name": "app_id",
          "location": "query",
          "required": false,
          "description": "Filters check suites by GitHub App `id`",
          "type": "number",
          "default": 0
        },
        {
          "name": "check_name",
          "location": "query",
          "required": false,
          "description": "Returns check runs with the specified `name`",
          "type": "string",
          "default": ""
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "repos/get-combined-status-for-ref": {
      "displayName": "Get the combined status for a specific reference",
      "description": "Users with pull access in a repository can access a combined view of commit statuses for a given ref. The ref can be a S...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/commits/{ref}/status",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "ref",
          "location": "path",
          "required": true,
          "description": "ref parameter",
          "type": "string",
          "default": ""
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "repos/list-commit-statuses-for-ref": {
      "displayName": "List commit statuses for a reference",
      "description": "Users with pull access in a repository can view commit statuses for a given ref. The ref can be a SHA, a branch name, or...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/commits/{ref}/statuses",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "ref",
          "location": "path",
          "required": true,
          "description": "ref parameter",
          "type": "string",
          "default": ""
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "repos/get-community-profile-metrics": {
      "displayName": "Get community profile metrics",
      "description": "Returns all community profile metrics for a repository. The repository cannot be a fork.  The returned metrics include a...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/community/profile",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        }
      ]
    },
    "repos/compare-commits": {
      "displayName": "Compare two commits",
      "description": "Compares two commits against one another. You can compare branches in the same repository, or you can compare branches t...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/compare/{basehead}",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "basehead",
          "location": "path",
          "required": true,
          "description": "The base branch and head branch to compare. This parameter expects the format `BASE...HEAD`. Both must be branch names i...",
          "type": "string",
          "default": ""
        }
      ]
    },
    "repos/delete-file": {
      "displayName": "Delete a file",
      "description": "Deletes a file in a repository.  You can provide an additional `committer` parameter, which is an object containing info...",
      "method": "delete",
      "endpoint": "/repos/{owner}/{repo}/contents/{path}",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "path",
          "location": "path",
          "required": true,
          "description": "path parameter",
          "type": "string",
          "default": ""
        },
        {
          "name": "author",
          "location": "body",
          "required": false,
          "description": "object containing information about the author",
          "type": "json",
          "default": "{}"
        },
        {
          "name": "branch",
          "location": "body",
          "required": false,
          "description": "The branch name. Default: the repository’s default branch (usually `master`)",
          "type": "string",
          "default": ""
        },
        {
          "name": "committer",
          "location": "body",
          "required": false,
          "description": "object containing information about the committer",
          "type": "json",
          "default": "{}"
        },
        {
          "name": "message",
          "location": "body",
          "required": true,
          "description": "The commit message",
          "type": "string",
          "default": ""
        },
        {
          "name": "sha",
          "location": "body",
          "required": true,
          "description": "The blob SHA of the file being deleted",
          "type": "string",
          "default": ""
        }
      ]
    },
    "repos/get-content": {
      "displayName": "Get repository content",
      "description": "Gets the contents of a file or directory in a repository. Specify the file path or directory in `:path`. If you omit `:p...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/contents/{path}",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "path",
          "location": "path",
          "required": true,
          "description": "path parameter",
          "type": "string",
          "default": ""
        },
        {
          "name": "ref",
          "location": "query",
          "required": false,
          "description": "The name of the commit/branch/tag. Default: the repository’s default branch (usually `master`)",
          "type": "string",
          "default": ""
        }
      ]
    },
    "repos/create-or-update-file-contents": {
      "displayName": "Create or update file contents",
      "description": "Creates a new file or replaces an existing file in a repository. You must authenticate using an access token with the `w...",
      "method": "put",
      "endpoint": "/repos/{owner}/{repo}/contents/{path}",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "path",
          "location": "path",
          "required": true,
          "description": "path parameter",
          "type": "string",
          "default": ""
        },
        {
          "name": "author",
          "location": "body",
          "required": false,
          "description": "The author of the file. Default: The `committer` or the authenticated user if you omit `committer`",
          "type": "json",
          "default": "{}"
        },
        {
          "name": "branch",
          "location": "body",
          "required": false,
          "description": "The branch name. Default: the repository’s default branch (usually `master`)",
          "type": "string",
          "default": ""
        },
        {
          "name": "committer",
          "location": "body",
          "required": false,
          "description": "The person that committed the file. Default: the authenticated user",
          "type": "json",
          "default": "{}"
        },
        {
          "name": "content",
          "location": "body",
          "required": true,
          "description": "The new file content, using Base64 encoding",
          "type": "string",
          "default": ""
        },
        {
          "name": "message",
          "location": "body",
          "required": true,
          "description": "The commit message",
          "type": "string",
          "default": ""
        },
        {
          "name": "sha",
          "location": "body",
          "required": false,
          "description": "**Required if you are updating a file**. The blob SHA of the file being replaced",
          "type": "string",
          "default": ""
        }
      ]
    },
    "repos/list-contributors": {
      "displayName": "List repository contributors",
      "description": "Lists contributors to the specified repository and sorts them by the number of commits per contributor in descending ord...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/contributors",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "anon",
          "location": "query",
          "required": false,
          "description": "Set to `1` or `true` to include anonymous contributors in results",
          "type": "string",
          "default": ""
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "dependabot/list-alerts-for-repo": {
      "displayName": "List Dependabot alerts for a repository",
      "description": "You must use an access token with the `security_events` scope to use this endpoint with private repositories. You can al...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/dependabot/alerts",
      "tags": [
        "dependabot"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "state",
          "location": "query",
          "required": false,
          "description": "A comma-separated list of states. If specified, only alerts with these states will be returned.  Can be: `dismissed`, `f...",
          "type": "string",
          "default": ""
        },
        {
          "name": "severity",
          "location": "query",
          "required": false,
          "description": "A comma-separated list of severities. If specified, only alerts with these severities will be returned.  Can be: `low`, ...",
          "type": "string",
          "default": ""
        },
        {
          "name": "ecosystem",
          "location": "query",
          "required": false,
          "description": "A comma-separated list of ecosystems. If specified, only alerts for these ecosystems will be returned.  Can be: `compose...",
          "type": "string",
          "default": ""
        },
        {
          "name": "package",
          "location": "query",
          "required": false,
          "description": "A comma-separated list of package names. If specified, only alerts for these packages will be returned",
          "type": "string",
          "default": ""
        },
        {
          "name": "manifest",
          "location": "query",
          "required": false,
          "description": "A comma-separated list of full manifest paths. If specified, only alerts for these manifests will be returned",
          "type": "string",
          "default": ""
        },
        {
          "name": "scope",
          "location": "query",
          "required": false,
          "description": "The scope of the vulnerable dependency. If specified, only alerts with this scope will be returned",
          "type": "options",
          "default": "development",
          "options": [
            "development",
            "runtime"
          ]
        },
        {
          "name": "sort",
          "location": "query",
          "required": false,
          "description": "The property by which to sort the results. `created` means when the alert was created. `updated` means when the alert's ...",
          "type": "options",
          "default": "created",
          "options": [
            "created",
            "updated"
          ]
        },
        {
          "name": "direction",
          "location": "query",
          "required": false,
          "description": "The direction to sort the results by",
          "type": "options",
          "default": "desc",
          "options": [
            "asc",
            "desc"
          ]
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "**Deprecated**. Page number of the results to fetch. Use cursor-based pagination with `before` or `after` instead",
          "type": "number",
          "default": 1
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "before",
          "location": "query",
          "required": false,
          "description": "A cursor, as given in the [Link header](https://docs.github.com/rest/overview/resources-in-the-rest-api#link-header). If...",
          "type": "string",
          "default": ""
        },
        {
          "name": "after",
          "location": "query",
          "required": false,
          "description": "A cursor, as given in the [Link header](https://docs.github.com/rest/overview/resources-in-the-rest-api#link-header). If...",
          "type": "string",
          "default": ""
        },
        {
          "name": "first",
          "location": "query",
          "required": false,
          "description": "**Deprecated**. The number of results per page (max 100), starting from the first matching result. This parameter must n...",
          "type": "number",
          "default": 30
        },
        {
          "name": "last",
          "location": "query",
          "required": false,
          "description": "**Deprecated**. The number of results per page (max 100), starting from the last matching result. This parameter must no...",
          "type": "number",
          "default": 0
        }
      ]
    },
    "dependabot/get-alert": {
      "displayName": "Get a Dependabot alert",
      "description": "You must use an access token with the `security_events` scope to use this endpoint with private repositories. You can al...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/dependabot/alerts/{alert_number}",
      "tags": [
        "dependabot"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "alert_number",
          "location": "path",
          "required": true,
          "description": "The number that identifies a Dependabot alert in its repository. You can find this at the end of the URL for a Dependabo...",
          "type": "number",
          "default": 0
        }
      ]
    },
    "dependabot/update-alert": {
      "displayName": "Update a Dependabot alert",
      "description": "You must use an access token with the `security_events` scope to use this endpoint with private repositories. You can al...",
      "method": "patch",
      "endpoint": "/repos/{owner}/{repo}/dependabot/alerts/{alert_number}",
      "tags": [
        "dependabot"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "alert_number",
          "location": "path",
          "required": true,
          "description": "The number that identifies a Dependabot alert in its repository. You can find this at the end of the URL for a Dependabo...",
          "type": "number",
          "default": 0
        },
        {
          "name": "dismissed_comment",
          "location": "body",
          "required": false,
          "description": "An optional comment associated with dismissing the alert",
          "type": "string",
          "default": ""
        },
        {
          "name": "dismissed_reason",
          "location": "body",
          "required": false,
          "description": "**Required when `state` is `dismissed`.** A reason for dismissing the alert",
          "type": "string",
          "default": ""
        },
        {
          "name": "state",
          "location": "body",
          "required": true,
          "description": "The state of the Dependabot alert. A `dismissed_reason` must be provided when setting the state to `dismissed`",
          "type": "string",
          "default": ""
        }
      ]
    },
    "dependabot/list-repo-secrets": {
      "displayName": "List repository secrets",
      "description": "Lists all secrets available in a repository without revealing their encrypted values. You must authenticate using an acc...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/dependabot/secrets",
      "tags": [
        "dependabot"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "dependabot/get-repo-public-key": {
      "displayName": "Get a repository public key",
      "description": "Gets your public key, which you need to encrypt secrets. You need to encrypt a secret before you can create or update se...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/dependabot/secrets/public-key",
      "tags": [
        "dependabot"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        }
      ]
    },
    "dependabot/delete-repo-secret": {
      "displayName": "Delete a repository secret",
      "description": "Deletes a secret in a repository using the secret name. You must authenticate using an access token with the `repo` scop...",
      "method": "delete",
      "endpoint": "/repos/{owner}/{repo}/dependabot/secrets/{secret_name}",
      "tags": [
        "dependabot"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "secret_name",
          "location": "path",
          "required": true,
          "description": "The name of the secret",
          "type": "string",
          "default": ""
        }
      ]
    },
    "dependabot/get-repo-secret": {
      "displayName": "Get a repository secret",
      "description": "Gets a single repository secret without revealing its encrypted value. You must authenticate using an access token with ...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/dependabot/secrets/{secret_name}",
      "tags": [
        "dependabot"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "secret_name",
          "location": "path",
          "required": true,
          "description": "The name of the secret",
          "type": "string",
          "default": ""
        }
      ]
    },
    "dependabot/create-or-update-repo-secret": {
      "displayName": "Create or update a repository secret",
      "description": "Creates or updates a repository secret with an encrypted value. Encrypt your secret using [LibSodium](https://libsodium....",
      "method": "put",
      "endpoint": "/repos/{owner}/{repo}/dependabot/secrets/{secret_name}",
      "tags": [
        "dependabot"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "secret_name",
          "location": "path",
          "required": true,
          "description": "The name of the secret",
          "type": "string",
          "default": ""
        },
        {
          "name": "encrypted_value",
          "location": "body",
          "required": false,
          "description": "Value for your secret, encrypted with [LibSodium](https://libsodium.gitbook.io/doc/bindings_for_other_languages) using t...",
          "type": "string",
          "default": ""
        },
        {
          "name": "key_id",
          "location": "body",
          "required": false,
          "description": "ID of the key you used to encrypt the secret",
          "type": "string",
          "default": ""
        }
      ]
    },
    "dependency-graph/diff-range": {
      "displayName": "Get a diff of the dependencies between commits",
      "description": "Gets the diff of the dependency changes between two commits of a repository, based on the changes to the dependency mani...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/dependency-graph/compare/{basehead}",
      "tags": [
        "dependency-graph"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "basehead",
          "location": "path",
          "required": true,
          "description": "The base and head Git revisions to compare. The Git revisions will be resolved to commit SHAs. Named revisions will be r...",
          "type": "string",
          "default": ""
        },
        {
          "name": "name",
          "location": "query",
          "required": false,
          "description": "The full path, relative to the repository root, of the dependency manifest file",
          "type": "string",
          "default": ""
        }
      ]
    },
    "dependency-graph/create-repository-snapshot": {
      "displayName": "Create a snapshot of dependencies for a repository",
      "description": "Create a new snapshot of a repository's dependencies. You must authenticate using an access token with the `repo` scope ...",
      "method": "post",
      "endpoint": "/repos/{owner}/{repo}/dependency-graph/snapshots",
      "tags": [
        "dependency-graph"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "detector",
          "location": "body",
          "required": true,
          "description": "A description of the detector used",
          "type": "json",
          "default": "{}"
        },
        {
          "name": "job",
          "location": "body",
          "required": true,
          "description": "",
          "type": "json",
          "default": "{}"
        },
        {
          "name": "manifests",
          "location": "body",
          "required": false,
          "description": "A collection of package manifests, which are a collection of related dependencies declared in a file or representing a l...",
          "type": "json",
          "default": "{}"
        },
        {
          "name": "metadata",
          "location": "body",
          "required": false,
          "description": "User-defined metadata to store domain-specific information limited to 8 keys with scalar values",
          "type": "json",
          "default": "{}"
        },
        {
          "name": "ref",
          "location": "body",
          "required": true,
          "description": "The repository branch that triggered this snapshot",
          "type": "string",
          "default": "",
          "placeholder": "e.g. refs/heads/main"
        },
        {
          "name": "scanned",
          "location": "body",
          "required": true,
          "description": "The time at which the snapshot was scanned",
          "type": "string",
          "default": "",
          "placeholder": "e.g. 2020-06-13T14:52:50-05:00"
        },
        {
          "name": "sha",
          "location": "body",
          "required": true,
          "description": "The commit SHA associated with this dependency snapshot. Maximum length: 40 characters",
          "type": "string",
          "default": "",
          "placeholder": "e.g. ddc951f4b1293222421f2c8df679786153acf689"
        },
        {
          "name": "version",
          "location": "body",
          "required": true,
          "description": "The version of the repository snapshot submission",
          "type": "number",
          "default": 0
        }
      ]
    },
    "repos/list-deployments": {
      "displayName": "List deployments",
      "description": "Simple filtering of deployments is available via query parameters:",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/deployments",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "sha",
          "location": "query",
          "required": false,
          "description": "The SHA recorded at creation time",
          "type": "string",
          "default": "none"
        },
        {
          "name": "ref",
          "location": "query",
          "required": false,
          "description": "The name of the ref. This can be a branch, tag, or SHA",
          "type": "string",
          "default": "none"
        },
        {
          "name": "task",
          "location": "query",
          "required": false,
          "description": "The name of the task for the deployment (e.g., `deploy` or `deploy:migrations`)",
          "type": "string",
          "default": "none"
        },
        {
          "name": "environment",
          "location": "query",
          "required": false,
          "description": "The name of the environment that was deployed to (e.g., `staging` or `production`)",
          "type": "string",
          "default": "none"
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "repos/create-deployment": {
      "displayName": "Create a deployment",
      "description": "Deployments offer a few configurable parameters with certain defaults.  The `ref` parameter can be any named branch, tag...",
      "method": "post",
      "endpoint": "/repos/{owner}/{repo}/deployments",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "auto_merge",
          "location": "body",
          "required": false,
          "description": "Attempts to automatically merge the default branch into the requested ref, if it's behind the default branch",
          "type": "boolean",
          "default": false
        },
        {
          "name": "description",
          "location": "body",
          "required": false,
          "description": "Short description of the deployment",
          "type": "string",
          "default": ""
        },
        {
          "name": "environment",
          "location": "body",
          "required": false,
          "description": "Name for the target deployment environment (e.g., `production`, `staging`, `qa`)",
          "type": "string",
          "default": ""
        },
        {
          "name": "payload",
          "location": "body",
          "required": false,
          "description": "",
          "type": "json",
          "default": "{}"
        },
        {
          "name": "production_environment",
          "location": "body",
          "required": false,
          "description": "Specifies if the given environment is one that end-users directly interact with. Default: `true` when `environment` is `...",
          "type": "boolean",
          "default": false
        },
        {
          "name": "ref",
          "location": "body",
          "required": true,
          "description": "The ref to deploy. This can be a branch, tag, or SHA",
          "type": "string",
          "default": ""
        },
        {
          "name": "required_contexts",
          "location": "body",
          "required": false,
          "description": "The [status](https://docs.github.com/rest/commits/statuses) contexts to verify against commit status checks. If you omit...",
          "type": "string",
          "default": ""
        },
        {
          "name": "task",
          "location": "body",
          "required": false,
          "description": "Specifies a task to execute (e.g., `deploy` or `deploy:migrations`)",
          "type": "string",
          "default": ""
        },
        {
          "name": "transient_environment",
          "location": "body",
          "required": false,
          "description": "Specifies if the given environment is specific to the deployment and will no longer exist at some point in the future. D...",
          "type": "boolean",
          "default": false
        }
      ]
    },
    "repos/delete-deployment": {
      "displayName": "Delete a deployment",
      "description": "If the repository only has one deployment, you can delete the deployment regardless of its status. If the repository has...",
      "method": "delete",
      "endpoint": "/repos/{owner}/{repo}/deployments/{deployment_id}",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "deployment_id",
          "location": "path",
          "required": true,
          "description": "deployment_id parameter",
          "type": "number",
          "default": 0
        }
      ]
    },
    "repos/get-deployment": {
      "displayName": "Get a deployment",
      "description": "",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/deployments/{deployment_id}",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "deployment_id",
          "location": "path",
          "required": true,
          "description": "deployment_id parameter",
          "type": "number",
          "default": 0
        }
      ]
    },
    "repos/list-deployment-statuses": {
      "displayName": "List deployment statuses",
      "description": "Users with pull access can view deployment statuses for a deployment:",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/deployments/{deployment_id}/statuses",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "deployment_id",
          "location": "path",
          "required": true,
          "description": "deployment_id parameter",
          "type": "number",
          "default": 0
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "repos/create-deployment-status": {
      "displayName": "Create a deployment status",
      "description": "Users with `push` access can create deployment statuses for a given deployment.  GitHub Apps require `read & write` acce...",
      "method": "post",
      "endpoint": "/repos/{owner}/{repo}/deployments/{deployment_id}/statuses",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "deployment_id",
          "location": "path",
          "required": true,
          "description": "deployment_id parameter",
          "type": "number",
          "default": 0
        },
        {
          "name": "auto_inactive",
          "location": "body",
          "required": false,
          "description": "Adds a new `inactive` status to all prior non-transient, non-production environment deployments with the same repository...",
          "type": "boolean",
          "default": false
        },
        {
          "name": "description",
          "location": "body",
          "required": false,
          "description": "A short description of the status. The maximum description length is 140 characters",
          "type": "string",
          "default": ""
        },
        {
          "name": "environment",
          "location": "body",
          "required": false,
          "description": "Name for the target deployment environment, which can be changed when setting a deploy status. For example, `production`...",
          "type": "string",
          "default": ""
        },
        {
          "name": "environment_url",
          "location": "body",
          "required": false,
          "description": "Sets the URL for accessing your environment. Default: `\"\"`",
          "type": "string",
          "default": ""
        },
        {
          "name": "log_url",
          "location": "body",
          "required": false,
          "description": "The full URL of the deployment's output. This parameter replaces `target_url`. We will continue to accept `target_url` t...",
          "type": "string",
          "default": ""
        },
        {
          "name": "state",
          "location": "body",
          "required": true,
          "description": "The state of the status. When you set a transient deployment to `inactive`, the deployment will be shown as `destroyed` ...",
          "type": "string",
          "default": ""
        },
        {
          "name": "target_url",
          "location": "body",
          "required": false,
          "description": "The target URL to associate with this status. This URL should contain output to keep the user updated while the task is ...",
          "type": "string",
          "default": ""
        }
      ]
    },
    "repos/get-deployment-status": {
      "displayName": "Get a deployment status",
      "description": "Users with pull access can view a deployment status for a deployment:",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/deployments/{deployment_id}/statuses/{status_id}",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "deployment_id",
          "location": "path",
          "required": true,
          "description": "deployment_id parameter",
          "type": "number",
          "default": 0
        },
        {
          "name": "status_id",
          "location": "path",
          "required": true,
          "description": "",
          "type": "number",
          "default": 0
        }
      ]
    },
    "repos/create-dispatch-event": {
      "displayName": "Create a repository dispatch event",
      "description": "You can use this endpoint to trigger a webhook event called `repository_dispatch` when you want activity that happens ou...",
      "method": "post",
      "endpoint": "/repos/{owner}/{repo}/dispatches",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "client_payload",
          "location": "body",
          "required": false,
          "description": "JSON payload with extra information about the webhook event that your action or workflow may use. The maximum number of ...",
          "type": "json",
          "default": "{}"
        },
        {
          "name": "event_type",
          "location": "body",
          "required": true,
          "description": "A custom webhook event name. Must be 100 characters or fewer",
          "type": "string",
          "default": ""
        }
      ]
    },
    "repos/get-all-environments": {
      "displayName": "List environments",
      "description": "Lists the environments for a repository.  Anyone with read access to the repository can use this endpoint. If the reposi...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/environments",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "repos/delete-an-environment": {
      "displayName": "Delete an environment",
      "description": "You must authenticate using an access token with the repo scope to use this endpoint",
      "method": "delete",
      "endpoint": "/repos/{owner}/{repo}/environments/{environment_name}",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "environment_name",
          "location": "path",
          "required": true,
          "description": "The name of the environment",
          "type": "string",
          "default": ""
        }
      ]
    },
    "repos/get-environment": {
      "displayName": "Get an environment",
      "description": "**Note:** To get information about name patterns that branches must match in order to deploy to this environment, see \"[...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/environments/{environment_name}",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "environment_name",
          "location": "path",
          "required": true,
          "description": "The name of the environment",
          "type": "string",
          "default": ""
        }
      ]
    },
    "repos/create-or-update-environment": {
      "displayName": "Create or update an environment",
      "description": "Create or update an environment with protection rules, such as required reviewers. For more information about environmen...",
      "method": "put",
      "endpoint": "/repos/{owner}/{repo}/environments/{environment_name}",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "environment_name",
          "location": "path",
          "required": true,
          "description": "The name of the environment",
          "type": "string",
          "default": ""
        },
        {
          "name": "deployment_branch_policy",
          "location": "body",
          "required": false,
          "description": "The type of deployment branch policy for this environment. To allow all branches to deploy, set to `null`",
          "type": "json",
          "default": "{}"
        },
        {
          "name": "reviewers",
          "location": "body",
          "required": false,
          "description": "The people or teams that may review jobs that reference the environment. You can list up to six users or teams as review...",
          "type": "json",
          "default": "{}"
        },
        {
          "name": "wait_timer",
          "location": "body",
          "required": false,
          "description": "The amount of time to delay a job after the job is initially triggered. The time (in minutes) must be an integer between...",
          "type": "number",
          "default": 0
        }
      ]
    },
    "repos/list-deployment-branch-policies": {
      "displayName": "List deployment branch policies",
      "description": "Lists the deployment branch policies for an environment.  Anyone with read access to the repository can use this endpoin...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "environment_name",
          "location": "path",
          "required": true,
          "description": "The name of the environment",
          "type": "string",
          "default": ""
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "repos/create-deployment-branch-policy": {
      "displayName": "Create a deployment branch policy",
      "description": "Creates a deployment branch policy for an environment.  You must authenticate using an access token with the `repo` scop...",
      "method": "post",
      "endpoint": "/repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "environment_name",
          "location": "path",
          "required": true,
          "description": "The name of the environment",
          "type": "string",
          "default": ""
        },
        {
          "name": "name",
          "location": "body",
          "required": true,
          "description": "The name pattern that branches must match in order to deploy to the environment.  Wildcard characters will not match `/`...",
          "type": "string",
          "default": "",
          "placeholder": "e.g. release/*"
        }
      ]
    },
    "repos/delete-deployment-branch-policy": {
      "displayName": "Delete a deployment branch policy",
      "description": "Deletes a deployment branch policy for an environment.  You must authenticate using an access token with the `repo` scop...",
      "method": "delete",
      "endpoint": "/repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "environment_name",
          "location": "path",
          "required": true,
          "description": "The name of the environment",
          "type": "string",
          "default": ""
        },
        {
          "name": "branch_policy_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the branch policy",
          "type": "number",
          "default": 0
        }
      ]
    },
    "repos/get-deployment-branch-policy": {
      "displayName": "Get a deployment branch policy",
      "description": "Gets a deployment branch policy for an environment.  Anyone with read access to the repository can use this endpoint. If...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "environment_name",
          "location": "path",
          "required": true,
          "description": "The name of the environment",
          "type": "string",
          "default": ""
        },
        {
          "name": "branch_policy_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the branch policy",
          "type": "number",
          "default": 0
        }
      ]
    },
    "repos/update-deployment-branch-policy": {
      "displayName": "Update a deployment branch policy",
      "description": "Updates a deployment branch policy for an environment.  You must authenticate using an access token with the `repo` scop...",
      "method": "put",
      "endpoint": "/repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "environment_name",
          "location": "path",
          "required": true,
          "description": "The name of the environment",
          "type": "string",
          "default": ""
        },
        {
          "name": "branch_policy_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the branch policy",
          "type": "number",
          "default": 0
        },
        {
          "name": "name",
          "location": "body",
          "required": true,
          "description": "The name pattern that branches must match in order to deploy to the environment.  Wildcard characters will not match `/`...",
          "type": "string",
          "default": "",
          "placeholder": "e.g. release/*"
        }
      ]
    },
    "activity/list-repo-events": {
      "displayName": "List repository events",
      "description": "",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/events",
      "tags": [
        "activity"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "repos/list-forks": {
      "displayName": "List forks",
      "description": "",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/forks",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "sort",
          "location": "query",
          "required": false,
          "description": "The sort order. `stargazers` will sort by star count",
          "type": "options",
          "default": "newest",
          "options": [
            "newest",
            "oldest",
            "stargazers",
            "watchers"
          ]
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "repos/create-fork": {
      "displayName": "Create a fork",
      "description": "Create a fork for the authenticated user.  **Note**: Forking a Repository happens asynchronously. You may have to wait a...",
      "method": "post",
      "endpoint": "/repos/{owner}/{repo}/forks",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "default_branch_only",
          "location": "body",
          "required": false,
          "description": "When forking from an existing repository, fork with only the default branch",
          "type": "boolean",
          "default": false
        },
        {
          "name": "name",
          "location": "body",
          "required": false,
          "description": "When forking from an existing repository, a new name for the fork",
          "type": "string",
          "default": ""
        },
        {
          "name": "organization",
          "location": "body",
          "required": false,
          "description": "Optional parameter to specify the organization name if forking into an organization",
          "type": "string",
          "default": ""
        }
      ]
    },
    "git/create-blob": {
      "displayName": "Create a blob",
      "description": "",
      "method": "post",
      "endpoint": "/repos/{owner}/{repo}/git/blobs",
      "tags": [
        "git"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "content",
          "location": "body",
          "required": true,
          "description": "The new blob's content",
          "type": "string",
          "default": ""
        },
        {
          "name": "encoding",
          "location": "body",
          "required": false,
          "description": "The encoding used for `content`. Currently, `\"utf-8\"` and `\"base64\"` are supported",
          "type": "string",
          "default": ""
        }
      ]
    },
    "git/get-blob": {
      "displayName": "Get a blob",
      "description": "The `content` in the response will always be Base64 encoded.  _Note_: This API supports blobs up to 100 megabytes in siz...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/git/blobs/{file_sha}",
      "tags": [
        "git"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "file_sha",
          "location": "path",
          "required": true,
          "description": "",
          "type": "string",
          "default": ""
        }
      ]
    },
    "git/create-commit": {
      "displayName": "Create a commit",
      "description": "Creates a new Git [commit object](https://git-scm.com/book/en/v1/Git-Internals-Git-Objects#Commit-Objects).  **Signature...",
      "method": "post",
      "endpoint": "/repos/{owner}/{repo}/git/commits",
      "tags": [
        "git"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "author",
          "location": "body",
          "required": false,
          "description": "Information about the author of the commit. By default, the `author` will be the authenticated user and the current date...",
          "type": "json",
          "default": "{}"
        },
        {
          "name": "committer",
          "location": "body",
          "required": false,
          "description": "Information about the person who is making the commit. By default, `committer` will use the information set in `author`....",
          "type": "json",
          "default": "{}"
        },
        {
          "name": "message",
          "location": "body",
          "required": true,
          "description": "The commit message",
          "type": "string",
          "default": ""
        },
        {
          "name": "parents",
          "location": "body",
          "required": false,
          "description": "The SHAs of the commits that were the parents of this commit. If omitted or empty, the commit will be written as a root ...",
          "type": "string",
          "default": ""
        },
        {
          "name": "signature",
          "location": "body",
          "required": false,
          "description": "The [PGP signature](https://en.wikipedia.org/wiki/Pretty_Good_Privacy) of the commit. GitHub adds the signature to the `...",
          "type": "string",
          "default": ""
        },
        {
          "name": "tree",
          "location": "body",
          "required": true,
          "description": "The SHA of the tree object this commit points to",
          "type": "string",
          "default": ""
        }
      ]
    },
    "git/get-commit": {
      "displayName": "Get a commit",
      "description": "Gets a Git [commit object](https://git-scm.com/book/en/v1/Git-Internals-Git-Objects#Commit-Objects).  **Signature verifi...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/git/commits/{commit_sha}",
      "tags": [
        "git"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "commit_sha",
          "location": "path",
          "required": true,
          "description": "The SHA of the commit",
          "type": "string",
          "default": ""
        }
      ]
    },
    "git/list-matching-refs": {
      "displayName": "List matching references",
      "description": "Returns an array of references from your Git database that match the supplied name. The `:ref` in the URL must be format...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/git/matching-refs/{ref}",
      "tags": [
        "git"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "ref",
          "location": "path",
          "required": true,
          "description": "ref parameter",
          "type": "string",
          "default": ""
        }
      ]
    },
    "git/get-ref": {
      "displayName": "Get a reference",
      "description": "Returns a single reference from your Git database. The `:ref` in the URL must be formatted as `heads/<branch name>` for ...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/git/ref/{ref}",
      "tags": [
        "git"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "ref",
          "location": "path",
          "required": true,
          "description": "ref parameter",
          "type": "string",
          "default": ""
        }
      ]
    },
    "git/create-ref": {
      "displayName": "Create a reference",
      "description": "Creates a reference for your repository. You are unable to create new references for empty repositories, even if the com...",
      "method": "post",
      "endpoint": "/repos/{owner}/{repo}/git/refs",
      "tags": [
        "git"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "key",
          "location": "body",
          "required": false,
          "description": "",
          "type": "string",
          "default": "",
          "placeholder": "e.g. \"refs/heads/newbranch\""
        },
        {
          "name": "ref",
          "location": "body",
          "required": true,
          "description": "The name of the fully qualified reference (ie: `refs/heads/master`). If it doesn't start with 'refs' and have at least t...",
          "type": "string",
          "default": ""
        },
        {
          "name": "sha",
          "location": "body",
          "required": true,
          "description": "The SHA1 value for this reference",
          "type": "string",
          "default": ""
        }
      ]
    },
    "git/delete-ref": {
      "displayName": "Delete a reference",
      "description": "",
      "method": "delete",
      "endpoint": "/repos/{owner}/{repo}/git/refs/{ref}",
      "tags": [
        "git"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "ref",
          "location": "path",
          "required": true,
          "description": "ref parameter",
          "type": "string",
          "default": ""
        }
      ]
    },
    "git/update-ref": {
      "displayName": "Update a reference",
      "description": "",
      "method": "patch",
      "endpoint": "/repos/{owner}/{repo}/git/refs/{ref}",
      "tags": [
        "git"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "ref",
          "location": "path",
          "required": true,
          "description": "The name of the fully qualified reference to update. For example, `refs/heads/master`. If the value doesn't start with `...",
          "type": "string",
          "default": "",
          "placeholder": "e.g. refs/head/master"
        },
        {
          "name": "force",
          "location": "body",
          "required": false,
          "description": "Indicates whether to force the update or to make sure the update is a fast-forward update. Leaving this out or setting i...",
          "type": "boolean",
          "default": false
        },
        {
          "name": "sha",
          "location": "body",
          "required": true,
          "description": "The SHA1 value to set this reference to",
          "type": "string",
          "default": ""
        }
      ]
    },
    "git/create-tag": {
      "displayName": "Create a tag object",
      "description": "Note that creating a tag object does not create the reference that makes a tag in Git. If you want to create an annotate...",
      "method": "post",
      "endpoint": "/repos/{owner}/{repo}/git/tags",
      "tags": [
        "git"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "message",
          "location": "body",
          "required": true,
          "description": "The tag message",
          "type": "string",
          "default": ""
        },
        {
          "name": "object",
          "location": "body",
          "required": true,
          "description": "The SHA of the git object this is tagging",
          "type": "string",
          "default": ""
        },
        {
          "name": "tag",
          "location": "body",
          "required": true,
          "description": "The tag's name. This is typically a version (e.g., \"v0.0.1\")",
          "type": "string",
          "default": ""
        },
        {
          "name": "tagger",
          "location": "body",
          "required": false,
          "description": "An object with information about the individual creating the tag",
          "type": "json",
          "default": "{}"
        },
        {
          "name": "type",
          "location": "body",
          "required": true,
          "description": "The type of the object we're tagging. Normally this is a `commit` but it can also be a `tree` or a `blob`",
          "type": "string",
          "default": ""
        }
      ]
    },
    "git/get-tag": {
      "displayName": "Get a tag",
      "description": "**Signature verification object**  The response will include a `verification` object that describes the result of verify...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/git/tags/{tag_sha}",
      "tags": [
        "git"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "tag_sha",
          "location": "path",
          "required": true,
          "description": "",
          "type": "string",
          "default": ""
        }
      ]
    },
    "git/create-tree": {
      "displayName": "Create a tree",
      "description": "The tree creation API accepts nested entries. If you specify both a tree and a nested path modifying that tree, this end...",
      "method": "post",
      "endpoint": "/repos/{owner}/{repo}/git/trees",
      "tags": [
        "git"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "base_tree",
          "location": "body",
          "required": false,
          "description": "The SHA1 of an existing Git tree object which will be used as the base for the new tree. If provided, a new Git tree obj...",
          "type": "string",
          "default": ""
        },
        {
          "name": "tree",
          "location": "body",
          "required": true,
          "description": "Objects (of `path`, `mode`, `type`, and `sha`) specifying a tree structure",
          "type": "json",
          "default": "{}"
        }
      ]
    },
    "git/get-tree": {
      "displayName": "Get a tree",
      "description": "Returns a single tree using the SHA1 value for that tree.  If `truncated` is `true` in the response then the number of i...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/git/trees/{tree_sha}",
      "tags": [
        "git"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "tree_sha",
          "location": "path",
          "required": true,
          "description": "",
          "type": "string",
          "default": ""
        },
        {
          "name": "recursive",
          "location": "query",
          "required": false,
          "description": "Setting this parameter to any value returns the objects or subtrees referenced by the tree specified in `:tree_sha`. For...",
          "type": "string",
          "default": ""
        }
      ]
    },
    "repos/list-webhooks": {
      "displayName": "List repository webhooks",
      "description": "Lists webhooks for a repository. `last response` may return null if there have not been any deliveries within 30 days",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/hooks",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "repos/create-webhook": {
      "displayName": "Create a repository webhook",
      "description": "Repositories can have multiple webhooks installed. Each webhook should have a unique `config`. Multiple webhooks can sha...",
      "method": "post",
      "endpoint": "/repos/{owner}/{repo}/hooks",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "active",
          "location": "body",
          "required": false,
          "description": "Determines if notifications are sent when the webhook is triggered. Set to `true` to send notifications",
          "type": "boolean",
          "default": false
        },
        {
          "name": "config",
          "location": "body",
          "required": false,
          "description": "Key/value pairs to provide settings for this webhook. [These are defined below](https://docs.github.com/rest/reference/r...",
          "type": "json",
          "default": "{}"
        },
        {
          "name": "events",
          "location": "body",
          "required": false,
          "description": "Determines what [events](https://docs.github.com/webhooks/event-payloads) the hook is triggered for",
          "type": "string",
          "default": ""
        },
        {
          "name": "name",
          "location": "body",
          "required": false,
          "description": "Use `web` to create a webhook. Default: `web`. This parameter only accepts the value `web`",
          "type": "string",
          "default": ""
        }
      ]
    },
    "repos/delete-webhook": {
      "displayName": "Delete a repository webhook",
      "description": "",
      "method": "delete",
      "endpoint": "/repos/{owner}/{repo}/hooks/{hook_id}",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "hook_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the hook",
          "type": "number",
          "default": 0
        }
      ]
    },
    "repos/get-webhook": {
      "displayName": "Get a repository webhook",
      "description": "Returns a webhook configured in a repository. To get only the webhook `config` properties, see \"[Get a webhook configura...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/hooks/{hook_id}",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "hook_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the hook",
          "type": "number",
          "default": 0
        }
      ]
    },
    "repos/update-webhook": {
      "displayName": "Update a repository webhook",
      "description": "Updates a webhook configured in a repository. If you previously had a `secret` set, you must provide the same `secret` o...",
      "method": "patch",
      "endpoint": "/repos/{owner}/{repo}/hooks/{hook_id}",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "hook_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the hook",
          "type": "number",
          "default": 0
        },
        {
          "name": "active",
          "location": "body",
          "required": false,
          "description": "Determines if notifications are sent when the webhook is triggered. Set to `true` to send notifications",
          "type": "boolean",
          "default": false
        },
        {
          "name": "add_events",
          "location": "body",
          "required": false,
          "description": "Determines a list of events to be added to the list of events that the Hook triggers for",
          "type": "string",
          "default": ""
        },
        {
          "name": "config",
          "location": "body",
          "required": false,
          "description": "Key/value pairs to provide settings for this webhook. [These are defined below](https://docs.github.com/rest/reference/r...",
          "type": "json",
          "default": "{}"
        },
        {
          "name": "events",
          "location": "body",
          "required": false,
          "description": "Determines what [events](https://docs.github.com/webhooks/event-payloads) the hook is triggered for. This replaces the e...",
          "type": "string",
          "default": ""
        },
        {
          "name": "remove_events",
          "location": "body",
          "required": false,
          "description": "Determines a list of events to be removed from the list of events that the Hook triggers for",
          "type": "string",
          "default": ""
        }
      ]
    },
    "repos/get-webhook-config-for-repo": {
      "displayName": "Get a webhook configuration for a repository",
      "description": "Returns the webhook configuration for a repository. To get more information about the webhook, including the `active` st...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/hooks/{hook_id}/config",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "hook_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the hook",
          "type": "number",
          "default": 0
        }
      ]
    },
    "repos/update-webhook-config-for-repo": {
      "displayName": "Update a webhook configuration for a repository",
      "description": "Updates the webhook configuration for a repository. To update more information about the webhook, including the `active`...",
      "method": "patch",
      "endpoint": "/repos/{owner}/{repo}/hooks/{hook_id}/config",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "hook_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the hook",
          "type": "number",
          "default": 0
        },
        {
          "name": "content_type",
          "location": "body",
          "required": false,
          "description": "The media type used to serialize the payloads. Supported values include `json` and `form`. The default is `form`",
          "type": "string",
          "default": "",
          "placeholder": "e.g. \"json\""
        },
        {
          "name": "insecure_ssl",
          "location": "body",
          "required": false,
          "description": "Determines whether the SSL certificate of the host for `url` will be verified when delivering payloads. Supported values...",
          "type": "string",
          "default": "",
          "placeholder": "e.g. \"0\""
        },
        {
          "name": "secret",
          "location": "body",
          "required": false,
          "description": "If provided, the `secret` will be used as the `key` to generate the HMAC hex digest value for [delivery signature header...",
          "type": "string",
          "default": "",
          "placeholder": "e.g. \"********\""
        },
        {
          "name": "url",
          "location": "body",
          "required": false,
          "description": "The URL to which the payloads will be delivered",
          "type": "string",
          "default": "",
          "placeholder": "e.g. https://example.com/webhook"
        }
      ]
    },
    "repos/list-webhook-deliveries": {
      "displayName": "List deliveries for a repository webhook",
      "description": "Returns a list of webhook deliveries for a webhook configured in a repository",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/hooks/{hook_id}/deliveries",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "hook_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the hook",
          "type": "number",
          "default": 0
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "cursor",
          "location": "query",
          "required": false,
          "description": "Used for pagination: the starting delivery from which the page of deliveries is fetched. Refer to the `link` header for ...",
          "type": "string",
          "default": ""
        },
        {
          "name": "redelivery",
          "location": "query",
          "required": false,
          "description": "",
          "type": "boolean",
          "default": false
        }
      ]
    },
    "repos/get-webhook-delivery": {
      "displayName": "Get a delivery for a repository webhook",
      "description": "Returns a delivery for a webhook configured in a repository",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "hook_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the hook",
          "type": "number",
          "default": 0
        },
        {
          "name": "delivery_id",
          "location": "path",
          "required": true,
          "description": "",
          "type": "number",
          "default": 0
        }
      ]
    },
    "repos/redeliver-webhook-delivery": {
      "displayName": "Redeliver a delivery for a repository webhook",
      "description": "Redeliver a webhook delivery for a webhook configured in a repository",
      "method": "post",
      "endpoint": "/repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}/attempts",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "hook_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the hook",
          "type": "number",
          "default": 0
        },
        {
          "name": "delivery_id",
          "location": "path",
          "required": true,
          "description": "",
          "type": "number",
          "default": 0
        }
      ]
    },
    "repos/ping-webhook": {
      "displayName": "Ping a repository webhook",
      "description": "This will trigger a [ping event](https://docs.github.com/webhooks/#ping-event) to be sent to the hook",
      "method": "post",
      "endpoint": "/repos/{owner}/{repo}/hooks/{hook_id}/pings",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "hook_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the hook",
          "type": "number",
          "default": 0
        }
      ]
    },
    "repos/test-push-webhook": {
      "displayName": "Test the push repository webhook",
      "description": "This will trigger the hook with the latest push to the current repository if the hook is subscribed to `push` events. If...",
      "method": "post",
      "endpoint": "/repos/{owner}/{repo}/hooks/{hook_id}/tests",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "hook_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the hook",
          "type": "number",
          "default": 0
        }
      ]
    },
    "migrations/cancel-import": {
      "displayName": "Cancel an import",
      "description": "Stop an import for a repository",
      "method": "delete",
      "endpoint": "/repos/{owner}/{repo}/import",
      "tags": [
        "migration"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        }
      ]
    },
    "migrations/get-import-status": {
      "displayName": "Get an import status",
      "description": "View the progress of an import.  **Import status**  This section includes details about the possible values of the `stat...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/import",
      "tags": [
        "migration"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        }
      ]
    },
    "migrations/update-import": {
      "displayName": "Update an import",
      "description": "An import can be updated with credentials or a project choice by passing in the appropriate parameters in this API reque...",
      "method": "patch",
      "endpoint": "/repos/{owner}/{repo}/import",
      "tags": [
        "migration"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "tfvc_project",
          "location": "body",
          "required": false,
          "description": "For a tfvc import, the name of the project that is being imported",
          "type": "string",
          "default": "",
          "placeholder": "e.g. \"project1\""
        },
        {
          "name": "vcs",
          "location": "body",
          "required": false,
          "description": "The type of version control system you are migrating from",
          "type": "string",
          "default": "",
          "placeholder": "e.g. \"git\""
        },
        {
          "name": "vcs_password",
          "location": "body",
          "required": false,
          "description": "The password to provide to the originating repository",
          "type": "string",
          "default": ""
        },
        {
          "name": "vcs_username",
          "location": "body",
          "required": false,
          "description": "The username to provide to the originating repository",
          "type": "string",
          "default": ""
        }
      ]
    },
    "migrations/start-import": {
      "displayName": "Start an import",
      "description": "Start a source import to a GitHub repository using GitHub Importer. Importing into a GitHub repository with GitHub Actio...",
      "method": "put",
      "endpoint": "/repos/{owner}/{repo}/import",
      "tags": [
        "migration"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "tfvc_project",
          "location": "body",
          "required": false,
          "description": "For a tfvc import, the name of the project that is being imported",
          "type": "string",
          "default": ""
        },
        {
          "name": "vcs",
          "location": "body",
          "required": false,
          "description": "The originating VCS type. Without this parameter, the import job will take additional time to detect the VCS type before...",
          "type": "string",
          "default": ""
        },
        {
          "name": "vcs_password",
          "location": "body",
          "required": false,
          "description": "If authentication is required, the password to provide to `vcs_url`",
          "type": "string",
          "default": ""
        },
        {
          "name": "vcs_url",
          "location": "body",
          "required": true,
          "description": "The URL of the originating repository",
          "type": "string",
          "default": ""
        },
        {
          "name": "vcs_username",
          "location": "body",
          "required": false,
          "description": "If authentication is required, the username to provide to `vcs_url`",
          "type": "string",
          "default": ""
        }
      ]
    },
    "migrations/get-commit-authors": {
      "displayName": "Get commit authors",
      "description": "Each type of source control system represents authors in a different way. For example, a Git commit author has a display...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/import/authors",
      "tags": [
        "migration"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "since",
          "location": "query",
          "required": false,
          "description": "A user ID. Only return users with an ID greater than this ID",
          "type": "number",
          "default": 0
        }
      ]
    },
    "migrations/map-commit-author": {
      "displayName": "Map a commit author",
      "description": "Update an author's identity for the import. Your application can continue updating authors any time before you push new ...",
      "method": "patch",
      "endpoint": "/repos/{owner}/{repo}/import/authors/{author_id}",
      "tags": [
        "migration"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "author_id",
          "location": "path",
          "required": true,
          "description": "",
          "type": "number",
          "default": 0
        },
        {
          "name": "email",
          "location": "body",
          "required": false,
          "description": "The new Git author email",
          "type": "string",
          "default": ""
        },
        {
          "name": "name",
          "location": "body",
          "required": false,
          "description": "The new Git author name",
          "type": "string",
          "default": ""
        }
      ]
    },
    "migrations/get-large-files": {
      "displayName": "Get large files",
      "description": "List files larger than 100MB found during the import",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/import/large_files",
      "tags": [
        "migration"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        }
      ]
    },
    "migrations/set-lfs-preference": {
      "displayName": "Update Git LFS preference",
      "description": "You can import repositories from Subversion, Mercurial, and TFS that include files larger than 100MB. This ability is po...",
      "method": "patch",
      "endpoint": "/repos/{owner}/{repo}/import/lfs",
      "tags": [
        "migration"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "use_lfs",
          "location": "body",
          "required": true,
          "description": "Whether to store large files during the import. `opt_in` means large files will be stored using Git LFS. `opt_out` means...",
          "type": "string",
          "default": ""
        }
      ]
    },
    "apps/get-repo-installation": {
      "displayName": "Get a repository installation for the authenticated app",
      "description": "Enables an authenticated GitHub App to find the repository's installation information. The installation's account type w...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/installation",
      "tags": [
        "app"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        }
      ]
    },
    "interactions/remove-restrictions-for-repo": {
      "displayName": "Remove interaction restrictions for a repository",
      "description": "Removes all interaction restrictions from the given repository. You must have owner or admin access to remove restrictio...",
      "method": "delete",
      "endpoint": "/repos/{owner}/{repo}/interaction-limits",
      "tags": [
        "interaction"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        }
      ]
    },
    "interactions/get-restrictions-for-repo": {
      "displayName": "Get interaction restrictions for a repository",
      "description": "Shows which type of GitHub user can interact with this repository and when the restriction expires. If there are no rest...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/interaction-limits",
      "tags": [
        "interaction"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        }
      ]
    },
    "interactions/set-restrictions-for-repo": {
      "displayName": "Set interaction restrictions for a repository",
      "description": "Temporarily restricts interactions to a certain type of GitHub user within the given repository. You must have owner or ...",
      "method": "put",
      "endpoint": "/repos/{owner}/{repo}/interaction-limits",
      "tags": [
        "interaction"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "expiry",
          "location": "body",
          "required": false,
          "description": "The duration of the interaction restriction. Default: `one_day`",
          "type": "string",
          "default": "",
          "placeholder": "e.g. one_month"
        },
        {
          "name": "limit",
          "location": "body",
          "required": true,
          "description": "The type of GitHub user that can comment, open issues, or create pull requests while the interaction limit is in effect",
          "type": "string",
          "default": "",
          "placeholder": "e.g. collaborators_only"
        }
      ]
    },
    "repos/list-invitations": {
      "displayName": "List repository invitations",
      "description": "When authenticating as a user with admin rights to a repository, this endpoint will list all currently open repository i...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/invitations",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "repos/delete-invitation": {
      "displayName": "Delete a repository invitation",
      "description": "",
      "method": "delete",
      "endpoint": "/repos/{owner}/{repo}/invitations/{invitation_id}",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "invitation_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the invitation",
          "type": "number",
          "default": 0
        }
      ]
    },
    "repos/update-invitation": {
      "displayName": "Update a repository invitation",
      "description": "",
      "method": "patch",
      "endpoint": "/repos/{owner}/{repo}/invitations/{invitation_id}",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "invitation_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the invitation",
          "type": "number",
          "default": 0
        },
        {
          "name": "permissions",
          "location": "body",
          "required": false,
          "description": "The permissions that the associated user will have on the repository. Valid values are `read`, `write`, `maintain`, `tri...",
          "type": "string",
          "default": ""
        }
      ]
    },
    "issues/list-for-repo": {
      "displayName": "List repository issues",
      "description": "List issues in a repository. Only open issues will be listed.  **Note**: GitHub's REST API considers every pull request ...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/issues",
      "tags": [
        "issue"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "milestone",
          "location": "query",
          "required": false,
          "description": "If an `integer` is passed, it should refer to a milestone by its `number` field. If the string `*` is passed, issues wit...",
          "type": "string",
          "default": ""
        },
        {
          "name": "state",
          "location": "query",
          "required": false,
          "description": "Indicates the state of the issues to return",
          "type": "options",
          "default": "open",
          "options": [
            "open",
            "closed",
            "all"
          ]
        },
        {
          "name": "assignee",
          "location": "query",
          "required": false,
          "description": "Can be the name of a user. Pass in `none` for issues with no assigned user, and `*` for issues assigned to any user",
          "type": "string",
          "default": ""
        },
        {
          "name": "creator",
          "location": "query",
          "required": false,
          "description": "The user that created the issue",
          "type": "string",
          "default": ""
        },
        {
          "name": "mentioned",
          "location": "query",
          "required": false,
          "description": "A user that's mentioned in the issue",
          "type": "string",
          "default": ""
        },
        {
          "name": "labels",
          "location": "query",
          "required": false,
          "description": "A list of comma separated label names. Example: `bug,ui,@high`",
          "type": "string",
          "default": ""
        },
        {
          "name": "sort",
          "location": "query",
          "required": false,
          "description": "What to sort results by",
          "type": "options",
          "default": "created",
          "options": [
            "created",
            "updated",
            "comments"
          ]
        },
        {
          "name": "direction",
          "location": "query",
          "required": false,
          "description": "The direction to sort the results by",
          "type": "options",
          "default": "desc",
          "options": [
            "asc",
            "desc"
          ]
        },
        {
          "name": "since",
          "location": "query",
          "required": false,
          "description": "Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/IS...",
          "type": "string",
          "default": ""
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "issues/create": {
      "displayName": "Create an issue",
      "description": "Any user with pull access to a repository can create an issue. If [issues are disabled in the repository](https://docs.g...",
      "method": "post",
      "endpoint": "/repos/{owner}/{repo}/issues",
      "tags": [
        "issue"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "assignee",
          "location": "body",
          "required": false,
          "description": "Login for the user that this issue should be assigned to. _NOTE: Only users with push access can set the assignee for ne...",
          "type": "string",
          "default": ""
        },
        {
          "name": "assignees",
          "location": "body",
          "required": false,
          "description": "Logins for Users to assign to this issue. _NOTE: Only users with push access can set assignees for new issues. Assignees...",
          "type": "string",
          "default": ""
        },
        {
          "name": "body",
          "location": "body",
          "required": false,
          "description": "The contents of the issue",
          "type": "string",
          "default": ""
        },
        {
          "name": "labels",
          "location": "body",
          "required": false,
          "description": "Labels to associate with this issue. _NOTE: Only users with push access can set labels for new issues. Labels are silent...",
          "type": "json",
          "default": "{}"
        },
        {
          "name": "milestone",
          "location": "body",
          "required": false,
          "description": "",
          "type": "string",
          "default": ""
        },
        {
          "name": "title",
          "location": "body",
          "required": true,
          "description": "The title of the issue",
          "type": "string",
          "default": ""
        }
      ]
    },
    "issues/list-comments-for-repo": {
      "displayName": "List issue comments for a repository",
      "description": "By default, Issue Comments are ordered by ascending ID",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/issues/comments",
      "tags": [
        "issue"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "sort",
          "location": "query",
          "required": false,
          "description": "The property to sort the results by. `created` means when the repository was starred. `updated` means when the repositor...",
          "type": "options",
          "default": "created",
          "options": [
            "created",
            "updated"
          ]
        },
        {
          "name": "direction",
          "location": "query",
          "required": false,
          "description": "Either `asc` or `desc`. Ignored without the `sort` parameter",
          "type": "options",
          "default": "asc",
          "options": [
            "asc",
            "desc"
          ]
        },
        {
          "name": "since",
          "location": "query",
          "required": false,
          "description": "Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/IS...",
          "type": "string",
          "default": ""
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "issues/delete-comment": {
      "displayName": "Delete an issue comment",
      "description": "",
      "method": "delete",
      "endpoint": "/repos/{owner}/{repo}/issues/comments/{comment_id}",
      "tags": [
        "issue"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "comment_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the comment",
          "type": "number",
          "default": 0
        }
      ]
    },
    "issues/get-comment": {
      "displayName": "Get an issue comment",
      "description": "",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/issues/comments/{comment_id}",
      "tags": [
        "issue"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "comment_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the comment",
          "type": "number",
          "default": 0
        }
      ]
    },
    "issues/update-comment": {
      "displayName": "Update an issue comment",
      "description": "",
      "method": "patch",
      "endpoint": "/repos/{owner}/{repo}/issues/comments/{comment_id}",
      "tags": [
        "issue"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "comment_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the comment",
          "type": "number",
          "default": 0
        },
        {
          "name": "body",
          "location": "body",
          "required": true,
          "description": "The contents of the comment",
          "type": "string",
          "default": ""
        }
      ]
    },
    "reactions/list-for-issue-comment": {
      "displayName": "List reactions for an issue comment",
      "description": "List the reactions to an [issue comment](https://docs.github.com/rest/reference/issues#comments)",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/issues/comments/{comment_id}/reactions",
      "tags": [
        "reaction"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "comment_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the comment",
          "type": "number",
          "default": 0
        },
        {
          "name": "content",
          "location": "query",
          "required": false,
          "description": "Returns a single [reaction type](https://docs.github.com/rest/reference/reactions#reaction-types). Omit this parameter t...",
          "type": "options",
          "default": "+1",
          "options": [
            "+1",
            "-1",
            "laugh",
            "confused",
            "heart",
            "hooray",
            "rocket",
            "eyes"
          ]
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "reactions/create-for-issue-comment": {
      "displayName": "Create reaction for an issue comment",
      "description": "Create a reaction to an [issue comment](https://docs.github.com/rest/reference/issues#comments). A response with an HTTP...",
      "method": "post",
      "endpoint": "/repos/{owner}/{repo}/issues/comments/{comment_id}/reactions",
      "tags": [
        "reaction"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "comment_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the comment",
          "type": "number",
          "default": 0
        },
        {
          "name": "content",
          "location": "body",
          "required": true,
          "description": "The [reaction type](https://docs.github.com/rest/reference/reactions#reaction-types) to add to the issue comment",
          "type": "string",
          "default": ""
        }
      ]
    },
    "reactions/delete-for-issue-comment": {
      "displayName": "Delete an issue comment reaction",
      "description": "**Note:** You can also specify a repository by `repository_id` using the route `DELETE delete /repositories/:repository_...",
      "method": "delete",
      "endpoint": "/repos/{owner}/{repo}/issues/comments/{comment_id}/reactions/{reaction_id}",
      "tags": [
        "reaction"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "comment_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the comment",
          "type": "number",
          "default": 0
        },
        {
          "name": "reaction_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the reaction",
          "type": "number",
          "default": 0
        }
      ]
    },
    "issues/list-events-for-repo": {
      "displayName": "List issue events for a repository",
      "description": "",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/issues/events",
      "tags": [
        "issue"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "issues/get-event": {
      "displayName": "Get an issue event",
      "description": "",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/issues/events/{event_id}",
      "tags": [
        "issue"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "event_id",
          "location": "path",
          "required": true,
          "description": "",
          "type": "number",
          "default": 0
        }
      ]
    },
    "issues/get": {
      "displayName": "Get an issue",
      "description": "The API returns a [`301 Moved Permanently` status](https://docs.github.com/rest/overview/resources-in-the-rest-api#http-...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/issues/{issue_number}",
      "tags": [
        "issue"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "issue_number",
          "location": "path",
          "required": true,
          "description": "The number that identifies the issue",
          "type": "number",
          "default": 0
        }
      ]
    },
    "issues/update": {
      "displayName": "Update an issue",
      "description": "Issue owners and users with push access can edit an issue",
      "method": "patch",
      "endpoint": "/repos/{owner}/{repo}/issues/{issue_number}",
      "tags": [
        "issue"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "issue_number",
          "location": "path",
          "required": true,
          "description": "The number that identifies the issue",
          "type": "number",
          "default": 0
        },
        {
          "name": "assignee",
          "location": "body",
          "required": false,
          "description": "Username to assign to this issue. **This field is deprecated.**",
          "type": "string",
          "default": ""
        },
        {
          "name": "assignees",
          "location": "body",
          "required": false,
          "description": "Usernames to assign to this issue. Pass one or more user logins to _replace_ the set of assignees on this issue. Send an...",
          "type": "string",
          "default": ""
        },
        {
          "name": "body",
          "location": "body",
          "required": false,
          "description": "The contents of the issue",
          "type": "string",
          "default": ""
        },
        {
          "name": "labels",
          "location": "body",
          "required": false,
          "description": "Labels to associate with this issue. Pass one or more labels to _replace_ the set of labels on this issue. Send an empty...",
          "type": "json",
          "default": "{}"
        },
        {
          "name": "milestone",
          "location": "body",
          "required": false,
          "description": "",
          "type": "string",
          "default": ""
        },
        {
          "name": "state",
          "location": "body",
          "required": false,
          "description": "The open or closed state of the issue",
          "type": "string",
          "default": ""
        },
        {
          "name": "state_reason",
          "location": "body",
          "required": false,
          "description": "The reason for the state change. Ignored unless `state` is changed",
          "type": "string",
          "default": "",
          "placeholder": "e.g. not_planned"
        },
        {
          "name": "title",
          "location": "body",
          "required": false,
          "description": "The title of the issue",
          "type": "string",
          "default": ""
        }
      ]
    },
    "issues/remove-assignees": {
      "displayName": "Remove assignees from an issue",
      "description": "Removes one or more assignees from an issue",
      "method": "delete",
      "endpoint": "/repos/{owner}/{repo}/issues/{issue_number}/assignees",
      "tags": [
        "issue"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "issue_number",
          "location": "path",
          "required": true,
          "description": "The number that identifies the issue",
          "type": "number",
          "default": 0
        },
        {
          "name": "assignees",
          "location": "body",
          "required": false,
          "description": "Usernames of assignees to remove from an issue. _NOTE: Only users with push access can remove assignees from an issue. A...",
          "type": "string",
          "default": ""
        }
      ]
    },
    "issues/add-assignees": {
      "displayName": "Add assignees to an issue",
      "description": "Adds up to 10 assignees to an issue. Users already assigned to an issue are not replaced",
      "method": "post",
      "endpoint": "/repos/{owner}/{repo}/issues/{issue_number}/assignees",
      "tags": [
        "issue"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "issue_number",
          "location": "path",
          "required": true,
          "description": "The number that identifies the issue",
          "type": "number",
          "default": 0
        },
        {
          "name": "assignees",
          "location": "body",
          "required": false,
          "description": "Usernames of people to assign this issue to. _NOTE: Only users with push access can add assignees to an issue. Assignees...",
          "type": "string",
          "default": ""
        }
      ]
    },
    "issues/check-user-can-be-assigned-to-issue": {
      "displayName": "Check if a user can be assigned to a issue",
      "description": "Checks if a user has permission to be assigned to a specific issue.  If the `assignee` can be assigned to this issue, a ...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/issues/{issue_number}/assignees/{assignee}",
      "tags": [
        "issue"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "issue_number",
          "location": "path",
          "required": true,
          "description": "The number that identifies the issue",
          "type": "number",
          "default": 0
        },
        {
          "name": "assignee",
          "location": "path",
          "required": true,
          "description": "",
          "type": "string",
          "default": ""
        }
      ]
    },
    "issues/list-comments": {
      "displayName": "List issue comments",
      "description": "Issue Comments are ordered by ascending ID",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/issues/{issue_number}/comments",
      "tags": [
        "issue"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "issue_number",
          "location": "path",
          "required": true,
          "description": "The number that identifies the issue",
          "type": "number",
          "default": 0
        },
        {
          "name": "since",
          "location": "query",
          "required": false,
          "description": "Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/IS...",
          "type": "string",
          "default": ""
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "issues/create-comment": {
      "displayName": "Create an issue comment",
      "description": "This endpoint triggers [notifications](https://docs.github.com/github/managing-subscriptions-and-notifications-on-github...",
      "method": "post",
      "endpoint": "/repos/{owner}/{repo}/issues/{issue_number}/comments",
      "tags": [
        "issue"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "issue_number",
          "location": "path",
          "required": true,
          "description": "The number that identifies the issue",
          "type": "number",
          "default": 0
        },
        {
          "name": "body",
          "location": "body",
          "required": true,
          "description": "The contents of the comment",
          "type": "string",
          "default": ""
        }
      ]
    },
    "issues/list-events": {
      "displayName": "List issue events",
      "description": "",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/issues/{issue_number}/events",
      "tags": [
        "issue"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "issue_number",
          "location": "path",
          "required": true,
          "description": "The number that identifies the issue",
          "type": "number",
          "default": 0
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "issues/remove-all-labels": {
      "displayName": "Remove all labels from an issue",
      "description": "",
      "method": "delete",
      "endpoint": "/repos/{owner}/{repo}/issues/{issue_number}/labels",
      "tags": [
        "issue"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "issue_number",
          "location": "path",
          "required": true,
          "description": "The number that identifies the issue",
          "type": "number",
          "default": 0
        }
      ]
    },
    "issues/list-labels-on-issue": {
      "displayName": "List labels for an issue",
      "description": "",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/issues/{issue_number}/labels",
      "tags": [
        "issue"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "issue_number",
          "location": "path",
          "required": true,
          "description": "The number that identifies the issue",
          "type": "number",
          "default": 0
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "issues/add-labels": {
      "displayName": "Add labels to an issue",
      "description": "",
      "method": "post",
      "endpoint": "/repos/{owner}/{repo}/issues/{issue_number}/labels",
      "tags": [
        "issue"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "issue_number",
          "location": "path",
          "required": true,
          "description": "The number that identifies the issue",
          "type": "number",
          "default": 0
        }
      ]
    },
    "issues/set-labels": {
      "displayName": "Set labels for an issue",
      "description": "Removes any previous labels and sets the new labels for an issue",
      "method": "put",
      "endpoint": "/repos/{owner}/{repo}/issues/{issue_number}/labels",
      "tags": [
        "issue"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "issue_number",
          "location": "path",
          "required": true,
          "description": "The number that identifies the issue",
          "type": "number",
          "default": 0
        }
      ]
    },
    "issues/remove-label": {
      "displayName": "Remove a label from an issue",
      "description": "Removes the specified label from the issue, and returns the remaining labels on the issue. This endpoint returns a `404 ...",
      "method": "delete",
      "endpoint": "/repos/{owner}/{repo}/issues/{issue_number}/labels/{name}",
      "tags": [
        "issue"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "issue_number",
          "location": "path",
          "required": true,
          "description": "The number that identifies the issue",
          "type": "number",
          "default": 0
        },
        {
          "name": "name",
          "location": "path",
          "required": true,
          "description": "",
          "type": "string",
          "default": ""
        }
      ]
    },
    "issues/unlock": {
      "displayName": "Unlock an issue",
      "description": "Users with push access can unlock an issue's conversation",
      "method": "delete",
      "endpoint": "/repos/{owner}/{repo}/issues/{issue_number}/lock",
      "tags": [
        "issue"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "issue_number",
          "location": "path",
          "required": true,
          "description": "The number that identifies the issue",
          "type": "number",
          "default": 0
        }
      ]
    },
    "issues/lock": {
      "displayName": "Lock an issue",
      "description": "Users with push access can lock an issue or pull request's conversation.  Note that, if you choose not to pass any param...",
      "method": "put",
      "endpoint": "/repos/{owner}/{repo}/issues/{issue_number}/lock",
      "tags": [
        "issue"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "issue_number",
          "location": "path",
          "required": true,
          "description": "The number that identifies the issue",
          "type": "number",
          "default": 0
        },
        {
          "name": "lock_reason",
          "location": "body",
          "required": false,
          "description": "The reason for locking the issue or pull request conversation. Lock will fail if you don't use one of these reasons:    ...",
          "type": "string",
          "default": ""
        }
      ]
    },
    "reactions/list-for-issue": {
      "displayName": "List reactions for an issue",
      "description": "List the reactions to an [issue](https://docs.github.com/rest/reference/issues)",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/issues/{issue_number}/reactions",
      "tags": [
        "reaction"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "issue_number",
          "location": "path",
          "required": true,
          "description": "The number that identifies the issue",
          "type": "number",
          "default": 0
        },
        {
          "name": "content",
          "location": "query",
          "required": false,
          "description": "Returns a single [reaction type](https://docs.github.com/rest/reference/reactions#reaction-types). Omit this parameter t...",
          "type": "options",
          "default": "+1",
          "options": [
            "+1",
            "-1",
            "laugh",
            "confused",
            "heart",
            "hooray",
            "rocket",
            "eyes"
          ]
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "reactions/create-for-issue": {
      "displayName": "Create reaction for an issue",
      "description": "Create a reaction to an [issue](https://docs.github.com/rest/reference/issues/). A response with an HTTP `200` status me...",
      "method": "post",
      "endpoint": "/repos/{owner}/{repo}/issues/{issue_number}/reactions",
      "tags": [
        "reaction"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "issue_number",
          "location": "path",
          "required": true,
          "description": "The number that identifies the issue",
          "type": "number",
          "default": 0
        },
        {
          "name": "content",
          "location": "body",
          "required": true,
          "description": "The [reaction type](https://docs.github.com/rest/reference/reactions#reaction-types) to add to the issue",
          "type": "string",
          "default": ""
        }
      ]
    },
    "reactions/delete-for-issue": {
      "displayName": "Delete an issue reaction",
      "description": "**Note:** You can also specify a repository by `repository_id` using the route `DELETE /repositories/:repository_id/issu...",
      "method": "delete",
      "endpoint": "/repos/{owner}/{repo}/issues/{issue_number}/reactions/{reaction_id}",
      "tags": [
        "reaction"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "issue_number",
          "location": "path",
          "required": true,
          "description": "The number that identifies the issue",
          "type": "number",
          "default": 0
        },
        {
          "name": "reaction_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the reaction",
          "type": "number",
          "default": 0
        }
      ]
    },
    "issues/list-events-for-timeline": {
      "displayName": "List timeline events for an issue",
      "description": "",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/issues/{issue_number}/timeline",
      "tags": [
        "issue"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "issue_number",
          "location": "path",
          "required": true,
          "description": "The number that identifies the issue",
          "type": "number",
          "default": 0
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "repos/list-deploy-keys": {
      "displayName": "List deploy keys",
      "description": "",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/keys",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "repos/create-deploy-key": {
      "displayName": "Create a deploy key",
      "description": "You can create a read-only deploy key",
      "method": "post",
      "endpoint": "/repos/{owner}/{repo}/keys",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "key",
          "location": "body",
          "required": true,
          "description": "The contents of the key",
          "type": "string",
          "default": ""
        },
        {
          "name": "read_only",
          "location": "body",
          "required": false,
          "description": "If `true`, the key will only be able to read repository contents. Otherwise, the key will be able to read and write.    ...",
          "type": "boolean",
          "default": false
        },
        {
          "name": "title",
          "location": "body",
          "required": false,
          "description": "A name for the key",
          "type": "string",
          "default": ""
        }
      ]
    },
    "repos/delete-deploy-key": {
      "displayName": "Delete a deploy key",
      "description": "Deploy keys are immutable. If you need to update a key, remove the key and create a new one instead",
      "method": "delete",
      "endpoint": "/repos/{owner}/{repo}/keys/{key_id}",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "key_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the key",
          "type": "number",
          "default": 0
        }
      ]
    },
    "repos/get-deploy-key": {
      "displayName": "Get a deploy key",
      "description": "",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/keys/{key_id}",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "key_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the key",
          "type": "number",
          "default": 0
        }
      ]
    },
    "issues/list-labels-for-repo": {
      "displayName": "List labels for a repository",
      "description": "",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/labels",
      "tags": [
        "issue"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "issues/create-label": {
      "displayName": "Create a label",
      "description": "",
      "method": "post",
      "endpoint": "/repos/{owner}/{repo}/labels",
      "tags": [
        "issue"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "color",
          "location": "body",
          "required": false,
          "description": "The [hexadecimal color code](http://www.color-hex.com/) for the label, without the leading `#`",
          "type": "string",
          "default": ""
        },
        {
          "name": "description",
          "location": "body",
          "required": false,
          "description": "A short description of the label. Must be 100 characters or fewer",
          "type": "string",
          "default": ""
        },
        {
          "name": "name",
          "location": "body",
          "required": true,
          "description": "The name of the label. Emoji can be added to label names, using either native emoji or colon-style markup. For example, ...",
          "type": "string",
          "default": ""
        }
      ]
    },
    "issues/delete-label": {
      "displayName": "Delete a label",
      "description": "",
      "method": "delete",
      "endpoint": "/repos/{owner}/{repo}/labels/{name}",
      "tags": [
        "issue"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "name",
          "location": "path",
          "required": true,
          "description": "",
          "type": "string",
          "default": ""
        }
      ]
    },
    "issues/get-label": {
      "displayName": "Get a label",
      "description": "",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/labels/{name}",
      "tags": [
        "issue"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "name",
          "location": "path",
          "required": true,
          "description": "",
          "type": "string",
          "default": ""
        }
      ]
    },
    "issues/update-label": {
      "displayName": "Update a label",
      "description": "",
      "method": "patch",
      "endpoint": "/repos/{owner}/{repo}/labels/{name}",
      "tags": [
        "issue"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "name",
          "location": "path",
          "required": true,
          "description": "",
          "type": "string",
          "default": ""
        },
        {
          "name": "color",
          "location": "body",
          "required": false,
          "description": "The [hexadecimal color code](http://www.color-hex.com/) for the label, without the leading `#`",
          "type": "string",
          "default": ""
        },
        {
          "name": "description",
          "location": "body",
          "required": false,
          "description": "A short description of the label. Must be 100 characters or fewer",
          "type": "string",
          "default": ""
        },
        {
          "name": "new_name",
          "location": "body",
          "required": false,
          "description": "The new name of the label. Emoji can be added to label names, using either native emoji or colon-style markup. For examp...",
          "type": "string",
          "default": ""
        }
      ]
    },
    "repos/list-languages": {
      "displayName": "List repository languages",
      "description": "Lists languages for the specified repository. The value shown for each language is the number of bytes of code written i...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/languages",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        }
      ]
    },
    "repos/disable-lfs-for-repo": {
      "displayName": "Disable Git LFS for a repository",
      "description": "Disables Git LFS for a repository. Access tokens must have the `admin:enterprise` scope",
      "method": "delete",
      "endpoint": "/repos/{owner}/{repo}/lfs",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        }
      ]
    },
    "repos/enable-lfs-for-repo": {
      "displayName": "Enable Git LFS for a repository",
      "description": "Enables Git LFS for a repository. Access tokens must have the `admin:enterprise` scope",
      "method": "put",
      "endpoint": "/repos/{owner}/{repo}/lfs",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        }
      ]
    },
    "licenses/get-for-repo": {
      "displayName": "Get the license for a repository",
      "description": "This method returns the contents of the repository's license file, if one is detected.  Similar to [Get repository conte...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/license",
      "tags": [
        "license"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        }
      ]
    },
    "repos/merge-upstream": {
      "displayName": "Sync a fork branch with the upstream repository",
      "description": "Sync a branch of a forked repository to keep it up-to-date with the upstream repository",
      "method": "post",
      "endpoint": "/repos/{owner}/{repo}/merge-upstream",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "branch",
          "location": "body",
          "required": true,
          "description": "The name of the branch which should be updated to match upstream",
          "type": "string",
          "default": ""
        }
      ]
    },
    "repos/merge": {
      "displayName": "Merge a branch",
      "description": "",
      "method": "post",
      "endpoint": "/repos/{owner}/{repo}/merges",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "base",
          "location": "body",
          "required": true,
          "description": "The name of the base branch that the head will be merged into",
          "type": "string",
          "default": ""
        },
        {
          "name": "commit_message",
          "location": "body",
          "required": false,
          "description": "Commit message to use for the merge commit. If omitted, a default message will be used",
          "type": "string",
          "default": ""
        },
        {
          "name": "head",
          "location": "body",
          "required": true,
          "description": "The head to merge. This can be a branch name or a commit SHA1",
          "type": "string",
          "default": ""
        }
      ]
    },
    "issues/list-milestones": {
      "displayName": "List milestones",
      "description": "",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/milestones",
      "tags": [
        "issue"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "state",
          "location": "query",
          "required": false,
          "description": "The state of the milestone. Either `open`, `closed`, or `all`",
          "type": "options",
          "default": "open",
          "options": [
            "open",
            "closed",
            "all"
          ]
        },
        {
          "name": "sort",
          "location": "query",
          "required": false,
          "description": "What to sort results by. Either `due_on` or `completeness`",
          "type": "options",
          "default": "due_on",
          "options": [
            "due_on",
            "completeness"
          ]
        },
        {
          "name": "direction",
          "location": "query",
          "required": false,
          "description": "The direction of the sort. Either `asc` or `desc`",
          "type": "options",
          "default": "asc",
          "options": [
            "asc",
            "desc"
          ]
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "issues/create-milestone": {
      "displayName": "Create a milestone",
      "description": "",
      "method": "post",
      "endpoint": "/repos/{owner}/{repo}/milestones",
      "tags": [
        "issue"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "description",
          "location": "body",
          "required": false,
          "description": "A description of the milestone",
          "type": "string",
          "default": ""
        },
        {
          "name": "due_on",
          "location": "body",
          "required": false,
          "description": "The milestone due date. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH...",
          "type": "string",
          "default": ""
        },
        {
          "name": "state",
          "location": "body",
          "required": false,
          "description": "The state of the milestone. Either `open` or `closed`",
          "type": "string",
          "default": ""
        },
        {
          "name": "title",
          "location": "body",
          "required": true,
          "description": "The title of the milestone",
          "type": "string",
          "default": ""
        }
      ]
    },
    "issues/delete-milestone": {
      "displayName": "Delete a milestone",
      "description": "",
      "method": "delete",
      "endpoint": "/repos/{owner}/{repo}/milestones/{milestone_number}",
      "tags": [
        "issue"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "milestone_number",
          "location": "path",
          "required": true,
          "description": "The number that identifies the milestone",
          "type": "number",
          "default": 0
        }
      ]
    },
    "issues/get-milestone": {
      "displayName": "Get a milestone",
      "description": "",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/milestones/{milestone_number}",
      "tags": [
        "issue"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "milestone_number",
          "location": "path",
          "required": true,
          "description": "The number that identifies the milestone",
          "type": "number",
          "default": 0
        }
      ]
    },
    "issues/update-milestone": {
      "displayName": "Update a milestone",
      "description": "",
      "method": "patch",
      "endpoint": "/repos/{owner}/{repo}/milestones/{milestone_number}",
      "tags": [
        "issue"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "milestone_number",
          "location": "path",
          "required": true,
          "description": "The number that identifies the milestone",
          "type": "number",
          "default": 0
        },
        {
          "name": "description",
          "location": "body",
          "required": false,
          "description": "A description of the milestone",
          "type": "string",
          "default": ""
        },
        {
          "name": "due_on",
          "location": "body",
          "required": false,
          "description": "The milestone due date. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH...",
          "type": "string",
          "default": ""
        },
        {
          "name": "state",
          "location": "body",
          "required": false,
          "description": "The state of the milestone. Either `open` or `closed`",
          "type": "string",
          "default": ""
        },
        {
          "name": "title",
          "location": "body",
          "required": false,
          "description": "The title of the milestone",
          "type": "string",
          "default": ""
        }
      ]
    },
    "issues/list-labels-for-milestone": {
      "displayName": "List labels for issues in a milestone",
      "description": "",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/milestones/{milestone_number}/labels",
      "tags": [
        "issue"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "milestone_number",
          "location": "path",
          "required": true,
          "description": "The number that identifies the milestone",
          "type": "number",
          "default": 0
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "activity/list-repo-notifications-for-authenticated-user": {
      "displayName": "List repository notifications for the authenticated user",
      "description": "Lists all notifications for the current user in the specified repository",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/notifications",
      "tags": [
        "activity"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "all",
          "location": "query",
          "required": false,
          "description": "If `true`, show notifications marked as read",
          "type": "boolean",
          "default": false
        },
        {
          "name": "participating",
          "location": "query",
          "required": false,
          "description": "If `true`, only shows notifications in which the user is directly participating or mentioned",
          "type": "boolean",
          "default": false
        },
        {
          "name": "since",
          "location": "query",
          "required": false,
          "description": "Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/IS...",
          "type": "string",
          "default": ""
        },
        {
          "name": "before",
          "location": "query",
          "required": false,
          "description": "Only show notifications updated before the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/I...",
          "type": "string",
          "default": ""
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "activity/mark-repo-notifications-as-read": {
      "displayName": "Mark repository notifications as read",
      "description": "Marks all notifications in a repository as \"read\" for the current user. If the number of notifications is too large to c...",
      "method": "put",
      "endpoint": "/repos/{owner}/{repo}/notifications",
      "tags": [
        "activity"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "last_read_at",
          "location": "body",
          "required": false,
          "description": "Describes the last point that notifications were checked. Anything updated since this time will not be marked as read. I...",
          "type": "string",
          "default": ""
        }
      ]
    },
    "repos/delete-pages-site": {
      "displayName": "Delete a GitHub Pages site",
      "description": "Deletes a GitHub Pages site. For more information, see \"[About GitHub Pages](/github/working-with-github-pages/about-git...",
      "method": "delete",
      "endpoint": "/repos/{owner}/{repo}/pages",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        }
      ]
    },
    "repos/get-pages": {
      "displayName": "Get a GitHub Pages site",
      "description": "",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/pages",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        }
      ]
    },
    "repos/create-pages-site": {
      "displayName": "Create a GitHub Pages site",
      "description": "Configures a GitHub Pages site. For more information, see \"[About GitHub Pages](/github/working-with-github-pages/about-...",
      "method": "post",
      "endpoint": "/repos/{owner}/{repo}/pages",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "build_type",
          "location": "body",
          "required": false,
          "description": "The process in which the Page will be built. Possible values are `\"legacy\"` and `\"workflow\"`",
          "type": "string",
          "default": ""
        },
        {
          "name": "source",
          "location": "body",
          "required": false,
          "description": "The source branch and directory used to publish your Pages site",
          "type": "json",
          "default": "{}"
        }
      ]
    },
    "repos/update-information-about-pages-site": {
      "displayName": "Update information about a GitHub Pages site",
      "description": "Updates information for a GitHub Pages site. For more information, see \"[About GitHub Pages](/github/working-with-github...",
      "method": "put",
      "endpoint": "/repos/{owner}/{repo}/pages",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "build_type",
          "location": "body",
          "required": false,
          "description": "The process by which the GitHub Pages site will be built. `workflow` means that the site is built by a custom GitHub Act...",
          "type": "string",
          "default": ""
        },
        {
          "name": "cname",
          "location": "body",
          "required": false,
          "description": "Specify a custom domain for the repository. Sending a `null` value will remove the custom domain. For more about custom ...",
          "type": "string",
          "default": ""
        },
        {
          "name": "https_enforced",
          "location": "body",
          "required": false,
          "description": "Specify whether HTTPS should be enforced for the repository",
          "type": "boolean",
          "default": false
        },
        {
          "name": "source",
          "location": "body",
          "required": false,
          "description": "Update the source for the repository. Must include the branch name, and may optionally specify the subdirectory `/docs`....",
          "type": "string",
          "default": ""
        }
      ]
    },
    "repos/list-pages-builds": {
      "displayName": "List GitHub Pages builds",
      "description": "",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/pages/builds",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "repos/request-pages-build": {
      "displayName": "Request a GitHub Pages build",
      "description": "You can request that your site be built from the latest revision on the default branch. This has the same effect as push...",
      "method": "post",
      "endpoint": "/repos/{owner}/{repo}/pages/builds",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        }
      ]
    },
    "repos/get-latest-pages-build": {
      "displayName": "Get latest Pages build",
      "description": "",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/pages/builds/latest",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        }
      ]
    },
    "repos/get-pages-build": {
      "displayName": "Get GitHub Pages build",
      "description": "",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/pages/builds/{build_id}",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "build_id",
          "location": "path",
          "required": true,
          "description": "",
          "type": "number",
          "default": 0
        }
      ]
    },
    "repos/create-pages-deployment": {
      "displayName": "Create a GitHub Pages deployment",
      "description": "Create a GitHub Pages deployment for a repository.  Users must have write permissions. GitHub Apps must have the `pages:...",
      "method": "post",
      "endpoint": "/repos/{owner}/{repo}/pages/deployment",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "artifact_url",
          "location": "body",
          "required": true,
          "description": "The URL of an artifact that contains the .zip or .tar of static assets to deploy. The artifact belongs to the repository",
          "type": "string",
          "default": ""
        },
        {
          "name": "environment",
          "location": "body",
          "required": false,
          "description": "The target environment for this GitHub Pages deployment",
          "type": "string",
          "default": ""
        },
        {
          "name": "oidc_token",
          "location": "body",
          "required": true,
          "description": "The OIDC token issued by GitHub Actions certifying the origin of the deployment",
          "type": "string",
          "default": ""
        },
        {
          "name": "pages_build_version",
          "location": "body",
          "required": true,
          "description": "A unique string that represents the version of the build for this deployment",
          "type": "string",
          "default": ""
        }
      ]
    },
    "repos/get-pages-health-check": {
      "displayName": "Get a DNS health check for GitHub Pages",
      "description": "Gets a health check of the DNS settings for the `CNAME` record configured for a repository's GitHub Pages.  The first re...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/pages/health",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        }
      ]
    },
    "projects/list-for-repo": {
      "displayName": "List repository projects",
      "description": "Lists the projects in a repository. Returns a `404 Not Found` status if projects are disabled in the repository. If you ...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/projects",
      "tags": [
        "project"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "state",
          "location": "query",
          "required": false,
          "description": "Indicates the state of the projects to return",
          "type": "options",
          "default": "open",
          "options": [
            "open",
            "closed",
            "all"
          ]
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "projects/create-for-repo": {
      "displayName": "Create a repository project",
      "description": "Creates a repository project board. Returns a `410 Gone` status if projects are disabled in the repository or if the rep...",
      "method": "post",
      "endpoint": "/repos/{owner}/{repo}/projects",
      "tags": [
        "project"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "body",
          "location": "body",
          "required": false,
          "description": "The description of the project",
          "type": "string",
          "default": ""
        },
        {
          "name": "name",
          "location": "body",
          "required": true,
          "description": "The name of the project",
          "type": "string",
          "default": ""
        }
      ]
    },
    "pulls/list": {
      "displayName": "List pull requests",
      "description": "Draft pull requests are available in public repositories with GitHub Free and GitHub Free for organizations, GitHub Pro,...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/pulls",
      "tags": [
        "pull"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "state",
          "location": "query",
          "required": false,
          "description": "Either `open`, `closed`, or `all` to filter by state",
          "type": "options",
          "default": "open",
          "options": [
            "open",
            "closed",
            "all"
          ]
        },
        {
          "name": "head",
          "location": "query",
          "required": false,
          "description": "Filter pulls by head user or head organization and branch name in the format of `user:ref-name` or `organization:ref-nam...",
          "type": "string",
          "default": ""
        },
        {
          "name": "base",
          "location": "query",
          "required": false,
          "description": "Filter pulls by base branch name. Example: `gh-pages`",
          "type": "string",
          "default": ""
        },
        {
          "name": "sort",
          "location": "query",
          "required": false,
          "description": "What to sort results by. `popularity` will sort by the number of comments. `long-running` will sort by date created and ...",
          "type": "options",
          "default": "created",
          "options": [
            "created",
            "updated",
            "popularity",
            "long-running"
          ]
        },
        {
          "name": "direction",
          "location": "query",
          "required": false,
          "description": "The direction of the sort. Default: `desc` when sort is `created` or sort is not specified, otherwise `asc`",
          "type": "options",
          "default": "asc",
          "options": [
            "asc",
            "desc"
          ]
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "pulls/create": {
      "displayName": "Create a pull request",
      "description": "Draft pull requests are available in public repositories with GitHub Free and GitHub Free for organizations, GitHub Pro,...",
      "method": "post",
      "endpoint": "/repos/{owner}/{repo}/pulls",
      "tags": [
        "pull"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "base",
          "location": "body",
          "required": true,
          "description": "The name of the branch you want the changes pulled into. This should be an existing branch on the current repository. Yo...",
          "type": "string",
          "default": ""
        },
        {
          "name": "body",
          "location": "body",
          "required": false,
          "description": "The contents of the pull request",
          "type": "string",
          "default": ""
        },
        {
          "name": "draft",
          "location": "body",
          "required": false,
          "description": "Indicates whether the pull request is a draft. See \"[Draft Pull Requests](https://docs.github.com/articles/about-pull-re...",
          "type": "boolean",
          "default": false
        },
        {
          "name": "head",
          "location": "body",
          "required": true,
          "description": "The name of the branch where your changes are implemented. For cross-repository pull requests in the same network, names...",
          "type": "string",
          "default": ""
        },
        {
          "name": "head_repo",
          "location": "body",
          "required": false,
          "description": "The name of the repository where the changes in the pull request were made. This field is required for cross-repository ...",
          "type": "string",
          "default": "",
          "placeholder": "e.g. octo-org/octo-repo"
        },
        {
          "name": "issue",
          "location": "body",
          "required": false,
          "description": "An issue in the repository to convert to a pull request. The issue title, body, and comments will become the title, body...",
          "type": "number",
          "default": 0
        },
        {
          "name": "maintainer_can_modify",
          "location": "body",
          "required": false,
          "description": "Indicates whether [maintainers can modify](https://docs.github.com/articles/allowing-changes-to-a-pull-request-branch-cr...",
          "type": "boolean",
          "default": false
        },
        {
          "name": "title",
          "location": "body",
          "required": false,
          "description": "The title of the new pull request. Required unless `issue` is specified",
          "type": "string",
          "default": ""
        }
      ]
    },
    "pulls/list-review-comments-for-repo": {
      "displayName": "List review comments in a repository",
      "description": "Lists review comments for all pull requests in a repository. By default, review comments are in ascending order by ID",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/pulls/comments",
      "tags": [
        "pull"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "sort",
          "location": "query",
          "required": false,
          "description": "",
          "type": "options",
          "default": "created",
          "options": [
            "created",
            "updated",
            "created_at"
          ]
        },
        {
          "name": "direction",
          "location": "query",
          "required": false,
          "description": "The direction to sort results. Ignored without `sort` parameter",
          "type": "options",
          "default": "asc",
          "options": [
            "asc",
            "desc"
          ]
        },
        {
          "name": "since",
          "location": "query",
          "required": false,
          "description": "Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/IS...",
          "type": "string",
          "default": ""
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "pulls/delete-review-comment": {
      "displayName": "Delete a review comment for a pull request",
      "description": "Deletes a review comment",
      "method": "delete",
      "endpoint": "/repos/{owner}/{repo}/pulls/comments/{comment_id}",
      "tags": [
        "pull"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "comment_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the comment",
          "type": "number",
          "default": 0
        }
      ]
    },
    "pulls/get-review-comment": {
      "displayName": "Get a review comment for a pull request",
      "description": "Provides details for a review comment",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/pulls/comments/{comment_id}",
      "tags": [
        "pull"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "comment_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the comment",
          "type": "number",
          "default": 0
        }
      ]
    },
    "pulls/update-review-comment": {
      "displayName": "Update a review comment for a pull request",
      "description": "Enables you to edit a review comment",
      "method": "patch",
      "endpoint": "/repos/{owner}/{repo}/pulls/comments/{comment_id}",
      "tags": [
        "pull"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "comment_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the comment",
          "type": "number",
          "default": 0
        },
        {
          "name": "body",
          "location": "body",
          "required": true,
          "description": "The text of the reply to the review comment",
          "type": "string",
          "default": ""
        }
      ]
    },
    "reactions/list-for-pull-request-review-comment": {
      "displayName": "List reactions for a pull request review comment",
      "description": "List the reactions to a [pull request review comment](https://docs.github.com/rest/reference/pulls#review-comments)",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions",
      "tags": [
        "reaction"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "comment_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the comment",
          "type": "number",
          "default": 0
        },
        {
          "name": "content",
          "location": "query",
          "required": false,
          "description": "Returns a single [reaction type](https://docs.github.com/rest/reference/reactions#reaction-types). Omit this parameter t...",
          "type": "options",
          "default": "+1",
          "options": [
            "+1",
            "-1",
            "laugh",
            "confused",
            "heart",
            "hooray",
            "rocket",
            "eyes"
          ]
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "reactions/create-for-pull-request-review-comment": {
      "displayName": "Create reaction for a pull request review comment",
      "description": "Create a reaction to a [pull request review comment](https://docs.github.com/rest/reference/pulls#comments). A response ...",
      "method": "post",
      "endpoint": "/repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions",
      "tags": [
        "reaction"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "comment_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the comment",
          "type": "number",
          "default": 0
        },
        {
          "name": "content",
          "location": "body",
          "required": true,
          "description": "The [reaction type](https://docs.github.com/rest/reference/reactions#reaction-types) to add to the pull request review c...",
          "type": "string",
          "default": ""
        }
      ]
    },
    "reactions/delete-for-pull-request-comment": {
      "displayName": "Delete a pull request comment reaction",
      "description": "**Note:** You can also specify a repository by `repository_id` using the route `DELETE /repositories/:repository_id/pull...",
      "method": "delete",
      "endpoint": "/repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions/{reaction_id}",
      "tags": [
        "reaction"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "comment_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the comment",
          "type": "number",
          "default": 0
        },
        {
          "name": "reaction_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the reaction",
          "type": "number",
          "default": 0
        }
      ]
    },
    "pulls/get": {
      "displayName": "Get a pull request",
      "description": "Draft pull requests are available in public repositories with GitHub Free and GitHub Free for organizations, GitHub Pro,...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/pulls/{pull_number}",
      "tags": [
        "pull"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "pull_number",
          "location": "path",
          "required": true,
          "description": "The number that identifies the pull request",
          "type": "number",
          "default": 0
        }
      ]
    },
    "pulls/update": {
      "displayName": "Update a pull request",
      "description": "Draft pull requests are available in public repositories with GitHub Free and GitHub Free for organizations, GitHub Pro,...",
      "method": "patch",
      "endpoint": "/repos/{owner}/{repo}/pulls/{pull_number}",
      "tags": [
        "pull"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "pull_number",
          "location": "path",
          "required": true,
          "description": "The number that identifies the pull request",
          "type": "number",
          "default": 0
        },
        {
          "name": "base",
          "location": "body",
          "required": false,
          "description": "The name of the branch you want your changes pulled into. This should be an existing branch on the current repository. Y...",
          "type": "string",
          "default": ""
        },
        {
          "name": "body",
          "location": "body",
          "required": false,
          "description": "The contents of the pull request",
          "type": "string",
          "default": ""
        },
        {
          "name": "maintainer_can_modify",
          "location": "body",
          "required": false,
          "description": "Indicates whether [maintainers can modify](https://docs.github.com/articles/allowing-changes-to-a-pull-request-branch-cr...",
          "type": "boolean",
          "default": false
        },
        {
          "name": "state",
          "location": "body",
          "required": false,
          "description": "State of this Pull Request. Either `open` or `closed`",
          "type": "string",
          "default": ""
        },
        {
          "name": "title",
          "location": "body",
          "required": false,
          "description": "The title of the pull request",
          "type": "string",
          "default": ""
        }
      ]
    },
    "codespaces/create-with-pr-for-authenticated-user": {
      "displayName": "Create a codespace from a pull request",
      "description": "Creates a codespace owned by the authenticated user for the specified pull request.  You must authenticate using an acce...",
      "method": "post",
      "endpoint": "/repos/{owner}/{repo}/pulls/{pull_number}/codespaces",
      "tags": [
        "codespace"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "pull_number",
          "location": "path",
          "required": true,
          "description": "The number that identifies the pull request",
          "type": "number",
          "default": 0
        },
        {
          "name": "client_ip",
          "location": "body",
          "required": false,
          "description": "IP for location auto-detection when proxying a request",
          "type": "string",
          "default": ""
        },
        {
          "name": "devcontainer_path",
          "location": "body",
          "required": false,
          "description": "Path to devcontainer.json config to use for this codespace",
          "type": "string",
          "default": ""
        },
        {
          "name": "display_name",
          "location": "body",
          "required": false,
          "description": "Display name for this codespace",
          "type": "string",
          "default": ""
        },
        {
          "name": "idle_timeout_minutes",
          "location": "body",
          "required": false,
          "description": "Time in minutes before codespace stops from inactivity",
          "type": "number",
          "default": 0
        },
        {
          "name": "location",
          "location": "body",
          "required": false,
          "description": "Location for this codespace. Assigned by IP if not provided",
          "type": "string",
          "default": ""
        },
        {
          "name": "machine",
          "location": "body",
          "required": false,
          "description": "Machine type to use for this codespace",
          "type": "string",
          "default": ""
        },
        {
          "name": "multi_repo_permissions_opt_out",
          "location": "body",
          "required": false,
          "description": "Whether to authorize requested permissions from devcontainer.json",
          "type": "boolean",
          "default": false
        },
        {
          "name": "retention_period_minutes",
          "location": "body",
          "required": false,
          "description": "Duration in minutes after codespace has gone idle in which it will be deleted. Must be integer minutes between 0 and 432...",
          "type": "number",
          "default": 0
        },
        {
          "name": "working_directory",
          "location": "body",
          "required": false,
          "description": "Working directory for this codespace",
          "type": "string",
          "default": ""
        }
      ]
    },
    "pulls/list-review-comments": {
      "displayName": "List review comments on a pull request",
      "description": "Lists all review comments for a pull request. By default, review comments are in ascending order by ID",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/pulls/{pull_number}/comments",
      "tags": [
        "pull"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "pull_number",
          "location": "path",
          "required": true,
          "description": "The number that identifies the pull request",
          "type": "number",
          "default": 0
        },
        {
          "name": "sort",
          "location": "query",
          "required": false,
          "description": "The property to sort the results by. `created` means when the repository was starred. `updated` means when the repositor...",
          "type": "options",
          "default": "created",
          "options": [
            "created",
            "updated"
          ]
        },
        {
          "name": "direction",
          "location": "query",
          "required": false,
          "description": "The direction to sort results. Ignored without `sort` parameter",
          "type": "options",
          "default": "asc",
          "options": [
            "asc",
            "desc"
          ]
        },
        {
          "name": "since",
          "location": "query",
          "required": false,
          "description": "Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/IS...",
          "type": "string",
          "default": ""
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "pulls/create-review-comment": {
      "displayName": "Create a review comment for a pull request",
      "description": "Creates a review comment in the pull request diff. To add a regular comment to a pull request timeline, see \"[Create an ...",
      "method": "post",
      "endpoint": "/repos/{owner}/{repo}/pulls/{pull_number}/comments",
      "tags": [
        "pull"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "pull_number",
          "location": "path",
          "required": true,
          "description": "The number that identifies the pull request",
          "type": "number",
          "default": 0
        },
        {
          "name": "body",
          "location": "body",
          "required": true,
          "description": "The text of the review comment",
          "type": "string",
          "default": ""
        },
        {
          "name": "commit_id",
          "location": "body",
          "required": true,
          "description": "The SHA of the commit needing a comment. Not using the latest commit SHA may render your comment outdated if a subsequen...",
          "type": "string",
          "default": ""
        },
        {
          "name": "in_reply_to",
          "location": "body",
          "required": false,
          "description": "The ID of the review comment to reply to. To find the ID of a review comment with [\"List review comments on a pull reque...",
          "type": "number",
          "default": 0
        },
        {
          "name": "line",
          "location": "body",
          "required": true,
          "description": "The line of the blob in the pull request diff that the comment applies to. For a multi-line comment, the last line of th...",
          "type": "number",
          "default": 0
        },
        {
          "name": "path",
          "location": "body",
          "required": true,
          "description": "The relative path to the file that necessitates a comment",
          "type": "string",
          "default": ""
        },
        {
          "name": "position",
          "location": "body",
          "required": false,
          "description": "**This parameter is deprecated. Use `line` instead**. The position in the diff where you want to add a review comment. N...",
          "type": "number",
          "default": 0
        },
        {
          "name": "side",
          "location": "body",
          "required": false,
          "description": "In a split diff view, the side of the diff that the pull request's changes appear on. Can be `LEFT` or `RIGHT`. Use `LEF...",
          "type": "string",
          "default": ""
        },
        {
          "name": "start_line",
          "location": "body",
          "required": false,
          "description": "**Required when using multi-line comments unless using `in_reply_to`**. The `start_line` is the first line in the pull r...",
          "type": "number",
          "default": 0
        },
        {
          "name": "start_side",
          "location": "body",
          "required": false,
          "description": "**Required when using multi-line comments unless using `in_reply_to`**. The `start_side` is the starting side of the dif...",
          "type": "string",
          "default": ""
        }
      ]
    },
    "pulls/create-reply-for-review-comment": {
      "displayName": "Create a reply for a review comment",
      "description": "Creates a reply to a review comment for a pull request. For the `comment_id`, provide the ID of the review comment you a...",
      "method": "post",
      "endpoint": "/repos/{owner}/{repo}/pulls/{pull_number}/comments/{comment_id}/replies",
      "tags": [
        "pull"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "pull_number",
          "location": "path",
          "required": true,
          "description": "The number that identifies the pull request",
          "type": "number",
          "default": 0
        },
        {
          "name": "comment_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the comment",
          "type": "number",
          "default": 0
        },
        {
          "name": "body",
          "location": "body",
          "required": true,
          "description": "The text of the review comment",
          "type": "string",
          "default": ""
        }
      ]
    },
    "pulls/list-commits": {
      "displayName": "List commits on a pull request",
      "description": "Lists a maximum of 250 commits for a pull request. To receive a complete commit list for pull requests with more than 25...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/pulls/{pull_number}/commits",
      "tags": [
        "pull"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "pull_number",
          "location": "path",
          "required": true,
          "description": "The number that identifies the pull request",
          "type": "number",
          "default": 0
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "pulls/list-files": {
      "displayName": "List pull requests files",
      "description": "**Note:** Responses include a maximum of 3000 files. The paginated response returns 30 files per page by default",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/pulls/{pull_number}/files",
      "tags": [
        "pull"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "pull_number",
          "location": "path",
          "required": true,
          "description": "The number that identifies the pull request",
          "type": "number",
          "default": 0
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "pulls/check-if-merged": {
      "displayName": "Check if a pull request has been merged",
      "description": "",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/pulls/{pull_number}/merge",
      "tags": [
        "pull"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "pull_number",
          "location": "path",
          "required": true,
          "description": "The number that identifies the pull request",
          "type": "number",
          "default": 0
        }
      ]
    },
    "pulls/merge": {
      "displayName": "Merge a pull request",
      "description": "This endpoint triggers [notifications](https://docs.github.com/github/managing-subscriptions-and-notifications-on-github...",
      "method": "put",
      "endpoint": "/repos/{owner}/{repo}/pulls/{pull_number}/merge",
      "tags": [
        "pull"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "pull_number",
          "location": "path",
          "required": true,
          "description": "The number that identifies the pull request",
          "type": "number",
          "default": 0
        },
        {
          "name": "commit_message",
          "location": "body",
          "required": false,
          "description": "Extra detail to append to automatic commit message",
          "type": "string",
          "default": ""
        },
        {
          "name": "commit_title",
          "location": "body",
          "required": false,
          "description": "Title for the automatic commit message",
          "type": "string",
          "default": ""
        },
        {
          "name": "merge_method",
          "location": "body",
          "required": false,
          "description": "The merge method to use",
          "type": "string",
          "default": ""
        },
        {
          "name": "sha",
          "location": "body",
          "required": false,
          "description": "SHA that pull request head must match to allow merge",
          "type": "string",
          "default": ""
        }
      ]
    },
    "pulls/remove-requested-reviewers": {
      "displayName": "Remove requested reviewers from a pull request",
      "description": "",
      "method": "delete",
      "endpoint": "/repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers",
      "tags": [
        "pull"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "pull_number",
          "location": "path",
          "required": true,
          "description": "The number that identifies the pull request",
          "type": "number",
          "default": 0
        },
        {
          "name": "reviewers",
          "location": "body",
          "required": true,
          "description": "An array of user `login`s that will be removed",
          "type": "string",
          "default": ""
        },
        {
          "name": "team_reviewers",
          "location": "body",
          "required": false,
          "description": "An array of team `slug`s that will be removed",
          "type": "string",
          "default": ""
        }
      ]
    },
    "pulls/list-requested-reviewers": {
      "displayName": "Get all requested reviewers for a pull request",
      "description": "Gets the users or teams whose review is requested for a pull request. Once a requested reviewer submits a review, they a...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers",
      "tags": [
        "pull"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "pull_number",
          "location": "path",
          "required": true,
          "description": "The number that identifies the pull request",
          "type": "number",
          "default": 0
        }
      ]
    },
    "pulls/request-reviewers": {
      "displayName": "Request reviewers for a pull request",
      "description": "This endpoint triggers [notifications](https://docs.github.com/github/managing-subscriptions-and-notifications-on-github...",
      "method": "post",
      "endpoint": "/repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers",
      "tags": [
        "pull"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "pull_number",
          "location": "path",
          "required": true,
          "description": "The number that identifies the pull request",
          "type": "number",
          "default": 0
        },
        {
          "name": "reviewers",
          "location": "body",
          "required": false,
          "description": "An array of user `login`s that will be requested",
          "type": "string",
          "default": ""
        },
        {
          "name": "team_reviewers",
          "location": "body",
          "required": false,
          "description": "An array of team `slug`s that will be requested",
          "type": "string",
          "default": ""
        }
      ]
    },
    "pulls/list-reviews": {
      "displayName": "List reviews for a pull request",
      "description": "The list of reviews returns in chronological order",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/pulls/{pull_number}/reviews",
      "tags": [
        "pull"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "pull_number",
          "location": "path",
          "required": true,
          "description": "The number that identifies the pull request",
          "type": "number",
          "default": 0
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "pulls/create-review": {
      "displayName": "Create a review for a pull request",
      "description": "This endpoint triggers [notifications](https://docs.github.com/github/managing-subscriptions-and-notifications-on-github...",
      "method": "post",
      "endpoint": "/repos/{owner}/{repo}/pulls/{pull_number}/reviews",
      "tags": [
        "pull"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "pull_number",
          "location": "path",
          "required": true,
          "description": "The number that identifies the pull request",
          "type": "number",
          "default": 0
        },
        {
          "name": "body",
          "location": "body",
          "required": false,
          "description": "**Required** when using `REQUEST_CHANGES` or `COMMENT` for the `event` parameter. The body text of the pull request revi...",
          "type": "string",
          "default": ""
        },
        {
          "name": "comments",
          "location": "body",
          "required": false,
          "description": "Use the following table to specify the location, destination, and contents of the draft review comment",
          "type": "json",
          "default": "{}"
        },
        {
          "name": "commit_id",
          "location": "body",
          "required": false,
          "description": "The SHA of the commit that needs a review. Not using the latest commit SHA may render your review comment outdated if a ...",
          "type": "string",
          "default": ""
        },
        {
          "name": "event",
          "location": "body",
          "required": false,
          "description": "The review action you want to perform. The review actions include: `APPROVE`, `REQUEST_CHANGES`, or `COMMENT`. By leavin...",
          "type": "string",
          "default": ""
        }
      ]
    },
    "pulls/delete-pending-review": {
      "displayName": "Delete a pending review for a pull request",
      "description": "",
      "method": "delete",
      "endpoint": "/repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}",
      "tags": [
        "pull"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "pull_number",
          "location": "path",
          "required": true,
          "description": "The number that identifies the pull request",
          "type": "number",
          "default": 0
        },
        {
          "name": "review_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the review",
          "type": "number",
          "default": 0
        }
      ]
    },
    "pulls/get-review": {
      "displayName": "Get a review for a pull request",
      "description": "",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}",
      "tags": [
        "pull"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "pull_number",
          "location": "path",
          "required": true,
          "description": "The number that identifies the pull request",
          "type": "number",
          "default": 0
        },
        {
          "name": "review_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the review",
          "type": "number",
          "default": 0
        }
      ]
    },
    "pulls/update-review": {
      "displayName": "Update a review for a pull request",
      "description": "Update the review summary comment with new text",
      "method": "put",
      "endpoint": "/repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}",
      "tags": [
        "pull"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "pull_number",
          "location": "path",
          "required": true,
          "description": "The number that identifies the pull request",
          "type": "number",
          "default": 0
        },
        {
          "name": "review_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the review",
          "type": "number",
          "default": 0
        },
        {
          "name": "body",
          "location": "body",
          "required": true,
          "description": "The body text of the pull request review",
          "type": "string",
          "default": ""
        }
      ]
    },
    "pulls/list-comments-for-review": {
      "displayName": "List comments for a pull request review",
      "description": "List comments for a specific pull request review",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/comments",
      "tags": [
        "pull"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "pull_number",
          "location": "path",
          "required": true,
          "description": "The number that identifies the pull request",
          "type": "number",
          "default": 0
        },
        {
          "name": "review_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the review",
          "type": "number",
          "default": 0
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "pulls/dismiss-review": {
      "displayName": "Dismiss a review for a pull request",
      "description": "**Note:** To dismiss a pull request review on a [protected branch](https://docs.github.com/rest/reference/repos#branches...",
      "method": "put",
      "endpoint": "/repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/dismissals",
      "tags": [
        "pull"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "pull_number",
          "location": "path",
          "required": true,
          "description": "The number that identifies the pull request",
          "type": "number",
          "default": 0
        },
        {
          "name": "review_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the review",
          "type": "number",
          "default": 0
        },
        {
          "name": "event",
          "location": "body",
          "required": false,
          "description": "",
          "type": "string",
          "default": "",
          "placeholder": "e.g. \"DISMISS\""
        },
        {
          "name": "message",
          "location": "body",
          "required": true,
          "description": "The message for the pull request review dismissal",
          "type": "string",
          "default": ""
        }
      ]
    },
    "pulls/submit-review": {
      "displayName": "Submit a review for a pull request",
      "description": "Submits a pending review for a pull request. For more information about creating a pending review for a pull request, se...",
      "method": "post",
      "endpoint": "/repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/events",
      "tags": [
        "pull"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "pull_number",
          "location": "path",
          "required": true,
          "description": "The number that identifies the pull request",
          "type": "number",
          "default": 0
        },
        {
          "name": "review_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the review",
          "type": "number",
          "default": 0
        },
        {
          "name": "body",
          "location": "body",
          "required": false,
          "description": "The body text of the pull request review",
          "type": "string",
          "default": ""
        },
        {
          "name": "event",
          "location": "body",
          "required": true,
          "description": "The review action you want to perform. The review actions include: `APPROVE`, `REQUEST_CHANGES`, or `COMMENT`. When you ...",
          "type": "string",
          "default": ""
        }
      ]
    },
    "pulls/update-branch": {
      "displayName": "Update a pull request branch",
      "description": "Updates the pull request branch with the latest upstream changes by merging HEAD from the base branch into the pull requ...",
      "method": "put",
      "endpoint": "/repos/{owner}/{repo}/pulls/{pull_number}/update-branch",
      "tags": [
        "pull"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "pull_number",
          "location": "path",
          "required": true,
          "description": "The number that identifies the pull request",
          "type": "number",
          "default": 0
        },
        {
          "name": "expected_head_sha",
          "location": "body",
          "required": false,
          "description": "The expected SHA of the pull request's HEAD ref. This is the most recent commit on the pull request's branch. If the exp...",
          "type": "string",
          "default": ""
        }
      ]
    },
    "repos/get-readme": {
      "displayName": "Get a repository README",
      "description": "Gets the preferred README for a repository.  READMEs support [custom media types](https://docs.github.com/rest/reference...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/readme",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "ref",
          "location": "query",
          "required": false,
          "description": "The name of the commit/branch/tag. Default: the repository’s default branch (usually `master`)",
          "type": "string",
          "default": ""
        }
      ]
    },
    "repos/get-readme-in-directory": {
      "displayName": "Get a repository README for a directory",
      "description": "Gets the README from a repository directory.  READMEs support [custom media types](https://docs.github.com/rest/referenc...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/readme/{dir}",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "dir",
          "location": "path",
          "required": true,
          "description": "The alternate path to look for a README file",
          "type": "string",
          "default": ""
        },
        {
          "name": "ref",
          "location": "query",
          "required": false,
          "description": "The name of the commit/branch/tag. Default: the repository’s default branch (usually `master`)",
          "type": "string",
          "default": ""
        }
      ]
    },
    "repos/list-releases": {
      "displayName": "List releases",
      "description": "This returns a list of releases, which does not include regular Git tags that have not been associated with a release. T...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/releases",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "repos/create-release": {
      "displayName": "Create a release",
      "description": "Users with push access to the repository can create a release.  This endpoint triggers [notifications](https://docs.gith...",
      "method": "post",
      "endpoint": "/repos/{owner}/{repo}/releases",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "body",
          "location": "body",
          "required": false,
          "description": "Text describing the contents of the tag",
          "type": "string",
          "default": ""
        },
        {
          "name": "discussion_category_name",
          "location": "body",
          "required": false,
          "description": "If specified, a discussion of the specified category is created and linked to the release. The value must be a category ...",
          "type": "string",
          "default": ""
        },
        {
          "name": "draft",
          "location": "body",
          "required": false,
          "description": "`true` to create a draft (unpublished) release, `false` to create a published one",
          "type": "boolean",
          "default": false
        },
        {
          "name": "generate_release_notes",
          "location": "body",
          "required": false,
          "description": "Whether to automatically generate the name and body for this release. If `name` is specified, the specified name will be...",
          "type": "boolean",
          "default": false
        },
        {
          "name": "make_latest",
          "location": "body",
          "required": false,
          "description": "Specifies whether this release should be set as the latest release for the repository. Drafts and prereleases cannot be ...",
          "type": "string",
          "default": ""
        },
        {
          "name": "name",
          "location": "body",
          "required": false,
          "description": "The name of the release",
          "type": "string",
          "default": ""
        },
        {
          "name": "prerelease",
          "location": "body",
          "required": false,
          "description": "`true` to identify the release as a prerelease. `false` to identify the release as a full release",
          "type": "boolean",
          "default": false
        },
        {
          "name": "tag_name",
          "location": "body",
          "required": true,
          "description": "The name of the tag",
          "type": "string",
          "default": ""
        },
        {
          "name": "target_commitish",
          "location": "body",
          "required": false,
          "description": "Specifies the commitish value that determines where the Git tag is created from. Can be any branch or commit SHA. Unused...",
          "type": "string",
          "default": ""
        }
      ]
    },
    "repos/delete-release-asset": {
      "displayName": "Delete a release asset",
      "description": "",
      "method": "delete",
      "endpoint": "/repos/{owner}/{repo}/releases/assets/{asset_id}",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "asset_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the asset",
          "type": "number",
          "default": 0
        }
      ]
    },
    "repos/get-release-asset": {
      "displayName": "Get a release asset",
      "description": "To download the asset's binary content, set the `Accept` header of the request to [`application/octet-stream`](https://d...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/releases/assets/{asset_id}",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "asset_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the asset",
          "type": "number",
          "default": 0
        }
      ]
    },
    "repos/update-release-asset": {
      "displayName": "Update a release asset",
      "description": "Users with push access to the repository can edit a release asset",
      "method": "patch",
      "endpoint": "/repos/{owner}/{repo}/releases/assets/{asset_id}",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "asset_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the asset",
          "type": "number",
          "default": 0
        },
        {
          "name": "label",
          "location": "body",
          "required": false,
          "description": "An alternate short description of the asset. Used in place of the filename",
          "type": "string",
          "default": ""
        },
        {
          "name": "name",
          "location": "body",
          "required": false,
          "description": "The file name of the asset",
          "type": "string",
          "default": ""
        },
        {
          "name": "state",
          "location": "body",
          "required": false,
          "description": "",
          "type": "string",
          "default": "",
          "placeholder": "e.g. \"uploaded\""
        }
      ]
    },
    "repos/generate-release-notes": {
      "displayName": "Generate release notes content for a release",
      "description": "Generate a name and body describing a [release](https://docs.github.com/rest/reference/repos#releases). The body content...",
      "method": "post",
      "endpoint": "/repos/{owner}/{repo}/releases/generate-notes",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "configuration_file_path",
          "location": "body",
          "required": false,
          "description": "Specifies a path to a file in the repository containing configuration settings used for generating the release notes. If...",
          "type": "string",
          "default": ""
        },
        {
          "name": "previous_tag_name",
          "location": "body",
          "required": false,
          "description": "The name of the previous tag to use as the starting point for the release notes. Use to manually specify the range for t...",
          "type": "string",
          "default": ""
        },
        {
          "name": "tag_name",
          "location": "body",
          "required": true,
          "description": "The tag name for the release. This can be an existing tag or a new one",
          "type": "string",
          "default": ""
        },
        {
          "name": "target_commitish",
          "location": "body",
          "required": false,
          "description": "Specifies the commitish value that will be the target for the release's tag. Required if the supplied tag_name does not ...",
          "type": "string",
          "default": ""
        }
      ]
    },
    "repos/get-latest-release": {
      "displayName": "Get the latest release",
      "description": "View the latest published full release for the repository.  The latest release is the most recent non-prerelease, non-dr...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/releases/latest",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        }
      ]
    },
    "repos/get-release-by-tag": {
      "displayName": "Get a release by tag name",
      "description": "Get a published release with the specified tag",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/releases/tags/{tag}",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "tag",
          "location": "path",
          "required": true,
          "description": "tag parameter",
          "type": "string",
          "default": ""
        }
      ]
    },
    "repos/delete-release": {
      "displayName": "Delete a release",
      "description": "Users with push access to the repository can delete a release",
      "method": "delete",
      "endpoint": "/repos/{owner}/{repo}/releases/{release_id}",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "release_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the release",
          "type": "number",
          "default": 0
        }
      ]
    },
    "repos/get-release": {
      "displayName": "Get a release",
      "description": "**Note:** This returns an `upload_url` key corresponding to the endpoint for uploading release assets. This key is a [hy...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/releases/{release_id}",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "release_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the release",
          "type": "number",
          "default": 0
        }
      ]
    },
    "repos/update-release": {
      "displayName": "Update a release",
      "description": "Users with push access to the repository can edit a release",
      "method": "patch",
      "endpoint": "/repos/{owner}/{repo}/releases/{release_id}",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "release_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the release",
          "type": "number",
          "default": 0
        },
        {
          "name": "body",
          "location": "body",
          "required": false,
          "description": "Text describing the contents of the tag",
          "type": "string",
          "default": ""
        },
        {
          "name": "discussion_category_name",
          "location": "body",
          "required": false,
          "description": "If specified, a discussion of the specified category is created and linked to the release. The value must be a category ...",
          "type": "string",
          "default": ""
        },
        {
          "name": "draft",
          "location": "body",
          "required": false,
          "description": "`true` makes the release a draft, and `false` publishes the release",
          "type": "boolean",
          "default": false
        },
        {
          "name": "make_latest",
          "location": "body",
          "required": false,
          "description": "Specifies whether this release should be set as the latest release for the repository. Drafts and prereleases cannot be ...",
          "type": "string",
          "default": ""
        },
        {
          "name": "name",
          "location": "body",
          "required": false,
          "description": "The name of the release",
          "type": "string",
          "default": ""
        },
        {
          "name": "prerelease",
          "location": "body",
          "required": false,
          "description": "`true` to identify the release as a prerelease, `false` to identify the release as a full release",
          "type": "boolean",
          "default": false
        },
        {
          "name": "tag_name",
          "location": "body",
          "required": false,
          "description": "The name of the tag",
          "type": "string",
          "default": ""
        },
        {
          "name": "target_commitish",
          "location": "body",
          "required": false,
          "description": "Specifies the commitish value that determines where the Git tag is created from. Can be any branch or commit SHA. Unused...",
          "type": "string",
          "default": ""
        }
      ]
    },
    "repos/list-release-assets": {
      "displayName": "List release assets",
      "description": "",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/releases/{release_id}/assets",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "release_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the release",
          "type": "number",
          "default": 0
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "repos/upload-release-asset": {
      "displayName": "Upload a release asset",
      "description": "This endpoint makes use of [a Hypermedia relation](https://docs.github.com/rest/overview/resources-in-the-rest-api#hyper...",
      "method": "post",
      "endpoint": "/repos/{owner}/{repo}/releases/{release_id}/assets",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "release_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the release",
          "type": "number",
          "default": 0
        },
        {
          "name": "name",
          "location": "query",
          "required": true,
          "description": "",
          "type": "string",
          "default": ""
        },
        {
          "name": "label",
          "location": "query",
          "required": false,
          "description": "",
          "type": "string",
          "default": ""
        }
      ],
      "headers": {
        "Content-Type": "application/octet-stream"
      }
    },
    "reactions/list-for-release": {
      "displayName": "List reactions for a release",
      "description": "List the reactions to a [release](https://docs.github.com/rest/reference/repos#releases)",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/releases/{release_id}/reactions",
      "tags": [
        "reaction"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "release_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the release",
          "type": "number",
          "default": 0
        },
        {
          "name": "content",
          "location": "query",
          "required": false,
          "description": "Returns a single [reaction type](https://docs.github.com/rest/reference/reactions#reaction-types). Omit this parameter t...",
          "type": "options",
          "default": "+1",
          "options": [
            "+1",
            "laugh",
            "heart",
            "hooray",
            "rocket",
            "eyes"
          ]
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "reactions/create-for-release": {
      "displayName": "Create reaction for a release",
      "description": "Create a reaction to a [release](https://docs.github.com/rest/reference/repos#releases). A response with a `Status: 200 ...",
      "method": "post",
      "endpoint": "/repos/{owner}/{repo}/releases/{release_id}/reactions",
      "tags": [
        "reaction"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "release_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the release",
          "type": "number",
          "default": 0
        },
        {
          "name": "content",
          "location": "body",
          "required": true,
          "description": "The [reaction type](https://docs.github.com/rest/reference/reactions#reaction-types) to add to the release",
          "type": "string",
          "default": ""
        }
      ]
    },
    "reactions/delete-for-release": {
      "displayName": "Delete a release reaction",
      "description": "**Note:** You can also specify a repository by `repository_id` using the route `DELETE delete /repositories/:repository_...",
      "method": "delete",
      "endpoint": "/repos/{owner}/{repo}/releases/{release_id}/reactions/{reaction_id}",
      "tags": [
        "reaction"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "release_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the release",
          "type": "number",
          "default": 0
        },
        {
          "name": "reaction_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the reaction",
          "type": "number",
          "default": 0
        }
      ]
    },
    "secret-scanning/list-alerts-for-repo": {
      "displayName": "List secret scanning alerts for a repository",
      "description": "Lists secret scanning alerts for an eligible repository, from newest to oldest. To use this endpoint, you must be an adm...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/secret-scanning/alerts",
      "tags": [
        "secret-scanning"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "state",
          "location": "query",
          "required": false,
          "description": "Set to `open` or `resolved` to only list secret scanning alerts in a specific state",
          "type": "options",
          "default": "open",
          "options": [
            "open",
            "resolved"
          ]
        },
        {
          "name": "secret_type",
          "location": "query",
          "required": false,
          "description": "A comma-separated list of secret types to return. By default all secret types are returned. See \"[Secret scanning patter...",
          "type": "string",
          "default": ""
        },
        {
          "name": "resolution",
          "location": "query",
          "required": false,
          "description": "A comma-separated list of resolutions. Only secret scanning alerts with one of these resolutions are listed. Valid resol...",
          "type": "string",
          "default": ""
        },
        {
          "name": "sort",
          "location": "query",
          "required": false,
          "description": "The property to sort the results by. `created` means when the alert was created. `updated` means when the alert was upda...",
          "type": "options",
          "default": "created",
          "options": [
            "created",
            "updated"
          ]
        },
        {
          "name": "direction",
          "location": "query",
          "required": false,
          "description": "The direction to sort the results by",
          "type": "options",
          "default": "desc",
          "options": [
            "asc",
            "desc"
          ]
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "before",
          "location": "query",
          "required": false,
          "description": "A cursor, as given in the [Link header](https://docs.github.com/rest/overview/resources-in-the-rest-api#link-header). If...",
          "type": "string",
          "default": ""
        },
        {
          "name": "after",
          "location": "query",
          "required": false,
          "description": "A cursor, as given in the [Link header](https://docs.github.com/rest/overview/resources-in-the-rest-api#link-header). If...",
          "type": "string",
          "default": ""
        }
      ]
    },
    "secret-scanning/get-alert": {
      "displayName": "Get a secret scanning alert",
      "description": "Gets a single secret scanning alert detected in an eligible repository. To use this endpoint, you must be an administrat...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}",
      "tags": [
        "secret-scanning"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "alert_number",
          "location": "path",
          "required": true,
          "description": "The number that identifies an alert. You can find this at the end of the URL for a code scanning alert within GitHub, an...",
          "type": "number",
          "default": 0
        }
      ]
    },
    "secret-scanning/update-alert": {
      "displayName": "Update a secret scanning alert",
      "description": "Updates the status of a secret scanning alert in an eligible repository. To use this endpoint, you must be an administra...",
      "method": "patch",
      "endpoint": "/repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}",
      "tags": [
        "secret-scanning"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "alert_number",
          "location": "path",
          "required": true,
          "description": "The number that identifies an alert. You can find this at the end of the URL for a code scanning alert within GitHub, an...",
          "type": "number",
          "default": 0
        },
        {
          "name": "resolution",
          "location": "body",
          "required": false,
          "description": "**Required when the `state` is `resolved`.** The reason for resolving the alert",
          "type": "string",
          "default": ""
        },
        {
          "name": "resolution_comment",
          "location": "body",
          "required": false,
          "description": "An optional comment when closing an alert. Cannot be updated or deleted. Must be `null` when changing `state` to `open`",
          "type": "string",
          "default": ""
        },
        {
          "name": "state",
          "location": "body",
          "required": true,
          "description": "Sets the state of the secret scanning alert. You must provide `resolution` when you set the state to `resolved`",
          "type": "string",
          "default": ""
        }
      ]
    },
    "secret-scanning/list-locations-for-alert": {
      "displayName": "List locations for a secret scanning alert",
      "description": "Lists all locations for a given secret scanning alert for an eligible repository. To use this endpoint, you must be an a...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}/locations",
      "tags": [
        "secret-scanning"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "alert_number",
          "location": "path",
          "required": true,
          "description": "The number that identifies an alert. You can find this at the end of the URL for a code scanning alert within GitHub, an...",
          "type": "number",
          "default": 0
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        }
      ]
    },
    "activity/list-stargazers-for-repo": {
      "displayName": "List stargazers",
      "description": "Lists the people that have starred the repository.  You can also find out _when_ stars were created by passing the follo...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/stargazers",
      "tags": [
        "activity"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "repos/get-code-frequency-stats": {
      "displayName": "Get the weekly commit activity",
      "description": "Returns a weekly aggregate of the number of additions and deletions pushed to a repository",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/stats/code_frequency",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        }
      ]
    },
    "repos/get-commit-activity-stats": {
      "displayName": "Get the last year of commit activity",
      "description": "Returns the last year of commit activity grouped by week. The `days` array is a group of commits per day, starting on `S...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/stats/commit_activity",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        }
      ]
    },
    "repos/get-contributors-stats": {
      "displayName": "Get all contributor commit activity",
      "description": "Returns the `total` number of commits authored by the contributor. In addition, the response includes a Weekly Hash (`we...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/stats/contributors",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        }
      ]
    },
    "repos/get-participation-stats": {
      "displayName": "Get the weekly commit count",
      "description": "Returns the total commit counts for the `owner` and total commit counts in `all`. `all` is everyone combined, including ...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/stats/participation",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        }
      ]
    },
    "repos/get-punch-card-stats": {
      "displayName": "Get the hourly commit count for each day",
      "description": "Each array contains the day number, hour number, and number of commits:  *   `0-6`: Sunday - Saturday *   `0-23`: Hour o...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/stats/punch_card",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        }
      ]
    },
    "repos/create-commit-status": {
      "displayName": "Create a commit status",
      "description": "Users with push access in a repository can create commit statuses for a given SHA.  Note: there is a limit of 1000 statu...",
      "method": "post",
      "endpoint": "/repos/{owner}/{repo}/statuses/{sha}",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "sha",
          "location": "path",
          "required": true,
          "description": "",
          "type": "string",
          "default": ""
        },
        {
          "name": "context",
          "location": "body",
          "required": false,
          "description": "A string label to differentiate this status from the status of other systems. This field is case-insensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "description",
          "location": "body",
          "required": false,
          "description": "A short description of the status",
          "type": "string",
          "default": ""
        },
        {
          "name": "state",
          "location": "body",
          "required": true,
          "description": "The state of the status",
          "type": "string",
          "default": ""
        },
        {
          "name": "target_url",
          "location": "body",
          "required": false,
          "description": "The target URL to associate with this status. This URL will be linked from the GitHub UI to allow users to easily see th...",
          "type": "string",
          "default": ""
        }
      ]
    },
    "activity/list-watchers-for-repo": {
      "displayName": "List watchers",
      "description": "Lists the people watching the specified repository",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/subscribers",
      "tags": [
        "activity"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "activity/delete-repo-subscription": {
      "displayName": "Delete a repository subscription",
      "description": "This endpoint should only be used to stop watching a repository. To control whether or not you wish to receive notificat...",
      "method": "delete",
      "endpoint": "/repos/{owner}/{repo}/subscription",
      "tags": [
        "activity"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        }
      ]
    },
    "activity/get-repo-subscription": {
      "displayName": "Get a repository subscription",
      "description": "",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/subscription",
      "tags": [
        "activity"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        }
      ]
    },
    "activity/set-repo-subscription": {
      "displayName": "Set a repository subscription",
      "description": "If you would like to watch a repository, set `subscribed` to `true`. If you would like to ignore notifications made with...",
      "method": "put",
      "endpoint": "/repos/{owner}/{repo}/subscription",
      "tags": [
        "activity"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "ignored",
          "location": "body",
          "required": false,
          "description": "Determines if all notifications should be blocked from this repository",
          "type": "boolean",
          "default": false
        },
        {
          "name": "subscribed",
          "location": "body",
          "required": false,
          "description": "Determines if notifications should be received from this repository",
          "type": "boolean",
          "default": false
        }
      ]
    },
    "repos/list-tags": {
      "displayName": "List repository tags",
      "description": "",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/tags",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "repos/list-tag-protection": {
      "displayName": "List tag protection states for a repository",
      "description": "This returns the tag protection states of a repository.  This information is only available to repository administrators",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/tags/protection",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        }
      ]
    },
    "repos/create-tag-protection": {
      "displayName": "Create a tag protection state for a repository",
      "description": "This creates a tag protection state for a repository. This endpoint is only available to repository administrators",
      "method": "post",
      "endpoint": "/repos/{owner}/{repo}/tags/protection",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "pattern",
          "location": "body",
          "required": true,
          "description": "An optional glob pattern to match against when enforcing tag protection",
          "type": "string",
          "default": ""
        }
      ]
    },
    "repos/delete-tag-protection": {
      "displayName": "Delete a tag protection state for a repository",
      "description": "This deletes a tag protection state for a repository. This endpoint is only available to repository administrators",
      "method": "delete",
      "endpoint": "/repos/{owner}/{repo}/tags/protection/{tag_protection_id}",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "tag_protection_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the tag protection",
          "type": "number",
          "default": 0
        }
      ]
    },
    "repos/download-tarball-archive": {
      "displayName": "Download a repository archive (tar)",
      "description": "Gets a redirect URL to download a tar archive for a repository. If you omit `:ref`, the repository’s default branch (usu...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/tarball/{ref}",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "ref",
          "location": "path",
          "required": true,
          "description": "",
          "type": "string",
          "default": ""
        }
      ]
    },
    "repos/list-teams": {
      "displayName": "List repository teams",
      "description": "",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/teams",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "repos/get-all-topics": {
      "displayName": "Get all repository topics",
      "description": "",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/topics",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        }
      ]
    },
    "repos/replace-all-topics": {
      "displayName": "Replace all repository topics",
      "description": "",
      "method": "put",
      "endpoint": "/repos/{owner}/{repo}/topics",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "names",
          "location": "body",
          "required": true,
          "description": "An array of topics to add to the repository. Pass one or more topics to _replace_ the set of existing topics. Send an em...",
          "type": "string",
          "default": ""
        }
      ]
    },
    "repos/get-clones": {
      "displayName": "Get repository clones",
      "description": "Get the total number of clones and breakdown per day or week for the last 14 days. Timestamps are aligned to UTC midnigh...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/traffic/clones",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "per",
          "location": "query",
          "required": false,
          "description": "The time frame to display results for",
          "type": "options",
          "default": "day",
          "options": [
            "day",
            "week"
          ]
        }
      ]
    },
    "repos/get-top-paths": {
      "displayName": "Get top referral paths",
      "description": "Get the top 10 popular contents over the last 14 days",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/traffic/popular/paths",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        }
      ]
    },
    "repos/get-top-referrers": {
      "displayName": "Get top referral sources",
      "description": "Get the top 10 referrers over the last 14 days",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/traffic/popular/referrers",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        }
      ]
    },
    "repos/get-views": {
      "displayName": "Get page views",
      "description": "Get the total number of views and breakdown per day or week for the last 14 days. Timestamps are aligned to UTC midnight...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/traffic/views",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "per",
          "location": "query",
          "required": false,
          "description": "The time frame to display results for",
          "type": "options",
          "default": "day",
          "options": [
            "day",
            "week"
          ]
        }
      ]
    },
    "repos/transfer": {
      "displayName": "Transfer a repository",
      "description": "A transfer request will need to be accepted by the new owner when transferring a personal repository to another user. Th...",
      "method": "post",
      "endpoint": "/repos/{owner}/{repo}/transfer",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "new_name",
          "location": "body",
          "required": false,
          "description": "The new name to be given to the repository",
          "type": "string",
          "default": ""
        },
        {
          "name": "new_owner",
          "location": "body",
          "required": true,
          "description": "The username or organization name the repository will be transferred to",
          "type": "string",
          "default": ""
        },
        {
          "name": "team_ids",
          "location": "body",
          "required": false,
          "description": "ID of the team or teams to add to the repository. Teams can only be added to organization-owned repositories",
          "type": "json",
          "default": "{}"
        }
      ]
    },
    "repos/disable-vulnerability-alerts": {
      "displayName": "Disable vulnerability alerts",
      "description": "Disables dependency alerts and the dependency graph for a repository. The authenticated user must have admin access to t...",
      "method": "delete",
      "endpoint": "/repos/{owner}/{repo}/vulnerability-alerts",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        }
      ]
    },
    "repos/check-vulnerability-alerts": {
      "displayName": "Check if vulnerability alerts are enabled for a repository",
      "description": "Shows whether dependency alerts are enabled or disabled for a repository. The authenticated user must have admin read ac...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/vulnerability-alerts",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        }
      ]
    },
    "repos/enable-vulnerability-alerts": {
      "displayName": "Enable vulnerability alerts",
      "description": "Enables dependency alerts and the dependency graph for a repository. The authenticated user must have admin access to th...",
      "method": "put",
      "endpoint": "/repos/{owner}/{repo}/vulnerability-alerts",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        }
      ]
    },
    "repos/download-zipball-archive": {
      "displayName": "Download a repository archive (zip)",
      "description": "Gets a redirect URL to download a zip archive for a repository. If you omit `:ref`, the repository’s default branch (usu...",
      "method": "get",
      "endpoint": "/repos/{owner}/{repo}/zipball/{ref}",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "ref",
          "location": "path",
          "required": true,
          "description": "",
          "type": "string",
          "default": ""
        }
      ]
    },
    "repos/create-using-template": {
      "displayName": "Create a repository using a template",
      "description": "Creates a new repository using a repository template. Use the `template_owner` and `template_repo` route parameters to s...",
      "method": "post",
      "endpoint": "/repos/{template_owner}/{template_repo}/generate",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "template_owner",
          "location": "path",
          "required": true,
          "description": "",
          "type": "string",
          "default": ""
        },
        {
          "name": "template_repo",
          "location": "path",
          "required": true,
          "description": "",
          "type": "string",
          "default": ""
        },
        {
          "name": "description",
          "location": "body",
          "required": false,
          "description": "A short description of the new repository",
          "type": "string",
          "default": ""
        },
        {
          "name": "include_all_branches",
          "location": "body",
          "required": false,
          "description": "Set to `true` to include the directory structure and files from all branches in the template repository, and not just th...",
          "type": "boolean",
          "default": false
        },
        {
          "name": "name",
          "location": "body",
          "required": true,
          "description": "The name of the new repository",
          "type": "string",
          "default": ""
        },
        {
          "name": "owner",
          "location": "body",
          "required": false,
          "description": "The organization or person who will own the new repository. To create a new repository in an organization, the authentic...",
          "type": "string",
          "default": ""
        },
        {
          "name": "private",
          "location": "body",
          "required": false,
          "description": "Either `true` to create a new private repository or `false` to create a new public one",
          "type": "boolean",
          "default": false
        }
      ]
    },
    "repos/list-public": {
      "displayName": "List public repositories",
      "description": "Lists all public repositories in the order that they were created.  Note: - For GitHub Enterprise Server, this endpoint ...",
      "method": "get",
      "endpoint": "/repositories",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "since",
          "location": "query",
          "required": false,
          "description": "A repository ID. Only return repositories with an ID greater than this ID",
          "type": "number",
          "default": 0
        }
      ]
    },
    "actions/list-environment-secrets": {
      "displayName": "List environment secrets",
      "description": "Lists all secrets available in an environment without revealing their encrypted values. You must authenticate using an a...",
      "method": "get",
      "endpoint": "/repositories/{repository_id}/environments/{environment_name}/secrets",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "repository_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the repository",
          "type": "number",
          "default": 0
        },
        {
          "name": "environment_name",
          "location": "path",
          "required": true,
          "description": "The name of the environment",
          "type": "string",
          "default": ""
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "actions/get-environment-public-key": {
      "displayName": "Get an environment public key",
      "description": "Get the public key for an environment, which you need to encrypt environment secrets. You need to encrypt a secret befor...",
      "method": "get",
      "endpoint": "/repositories/{repository_id}/environments/{environment_name}/secrets/public-key",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "repository_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the repository",
          "type": "number",
          "default": 0
        },
        {
          "name": "environment_name",
          "location": "path",
          "required": true,
          "description": "The name of the environment",
          "type": "string",
          "default": ""
        }
      ]
    },
    "actions/delete-environment-secret": {
      "displayName": "Delete an environment secret",
      "description": "Deletes a secret in an environment using the secret name. You must authenticate using an access token with the `repo` sc...",
      "method": "delete",
      "endpoint": "/repositories/{repository_id}/environments/{environment_name}/secrets/{secret_name}",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "repository_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the repository",
          "type": "number",
          "default": 0
        },
        {
          "name": "environment_name",
          "location": "path",
          "required": true,
          "description": "The name of the environment",
          "type": "string",
          "default": ""
        },
        {
          "name": "secret_name",
          "location": "path",
          "required": true,
          "description": "The name of the secret",
          "type": "string",
          "default": ""
        }
      ]
    },
    "actions/get-environment-secret": {
      "displayName": "Get an environment secret",
      "description": "Gets a single environment secret without revealing its encrypted value. You must authenticate using an access token with...",
      "method": "get",
      "endpoint": "/repositories/{repository_id}/environments/{environment_name}/secrets/{secret_name}",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "repository_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the repository",
          "type": "number",
          "default": 0
        },
        {
          "name": "environment_name",
          "location": "path",
          "required": true,
          "description": "The name of the environment",
          "type": "string",
          "default": ""
        },
        {
          "name": "secret_name",
          "location": "path",
          "required": true,
          "description": "The name of the secret",
          "type": "string",
          "default": ""
        }
      ]
    },
    "actions/create-or-update-environment-secret": {
      "displayName": "Create or update an environment secret",
      "description": "Creates or updates an environment secret with an encrypted value. Encrypt your secret using [LibSodium](https://libsodiu...",
      "method": "put",
      "endpoint": "/repositories/{repository_id}/environments/{environment_name}/secrets/{secret_name}",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "repository_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the repository",
          "type": "number",
          "default": 0
        },
        {
          "name": "environment_name",
          "location": "path",
          "required": true,
          "description": "The name of the environment",
          "type": "string",
          "default": ""
        },
        {
          "name": "secret_name",
          "location": "path",
          "required": true,
          "description": "The name of the secret",
          "type": "string",
          "default": ""
        },
        {
          "name": "encrypted_value",
          "location": "body",
          "required": true,
          "description": "Value for your secret, encrypted with [LibSodium](https://libsodium.gitbook.io/doc/bindings_for_other_languages) using t...",
          "type": "string",
          "default": ""
        },
        {
          "name": "key_id",
          "location": "body",
          "required": true,
          "description": "ID of the key you used to encrypt the secret",
          "type": "string",
          "default": ""
        }
      ]
    },
    "actions/list-environment-variables": {
      "displayName": "List environment variables",
      "description": "Lists all environment variables. You must authenticate using an access token with the `repo` scope to use this endpoint....",
      "method": "get",
      "endpoint": "/repositories/{repository_id}/environments/{environment_name}/variables",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "repository_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the repository",
          "type": "number",
          "default": 0
        },
        {
          "name": "environment_name",
          "location": "path",
          "required": true,
          "description": "The name of the environment",
          "type": "string",
          "default": ""
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 30)",
          "type": "number",
          "default": 10
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "actions/create-environment-variable": {
      "displayName": "Create an environment variable",
      "description": "Create an environment variable that you can reference in a GitHub Actions workflow. You must authenticate using an acces...",
      "method": "post",
      "endpoint": "/repositories/{repository_id}/environments/{environment_name}/variables",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "repository_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the repository",
          "type": "number",
          "default": 0
        },
        {
          "name": "environment_name",
          "location": "path",
          "required": true,
          "description": "The name of the environment",
          "type": "string",
          "default": ""
        },
        {
          "name": "name",
          "location": "body",
          "required": true,
          "description": "The name of the variable",
          "type": "string",
          "default": ""
        },
        {
          "name": "value",
          "location": "body",
          "required": true,
          "description": "The value of the variable",
          "type": "string",
          "default": ""
        }
      ]
    },
    "actions/delete-environment-variable": {
      "displayName": "Delete an environment variable",
      "description": "Deletes an environment variable using the variable name. You must authenticate using an access token with the `repo` sco...",
      "method": "delete",
      "endpoint": "/repositories/{repository_id}/environments/{environment_name}/variables/{name}",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "repository_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the repository",
          "type": "number",
          "default": 0
        },
        {
          "name": "name",
          "location": "path",
          "required": true,
          "description": "The name of the variable",
          "type": "string",
          "default": ""
        },
        {
          "name": "environment_name",
          "location": "path",
          "required": true,
          "description": "The name of the environment",
          "type": "string",
          "default": ""
        }
      ]
    },
    "actions/get-environment-variable": {
      "displayName": "Get an environment variable",
      "description": "Gets a specific variable in an environment. You must authenticate using an access token with the `repo` scope to use thi...",
      "method": "get",
      "endpoint": "/repositories/{repository_id}/environments/{environment_name}/variables/{name}",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "repository_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the repository",
          "type": "number",
          "default": 0
        },
        {
          "name": "environment_name",
          "location": "path",
          "required": true,
          "description": "The name of the environment",
          "type": "string",
          "default": ""
        },
        {
          "name": "name",
          "location": "path",
          "required": true,
          "description": "The name of the variable",
          "type": "string",
          "default": ""
        }
      ]
    },
    "actions/update-environment-variable": {
      "displayName": "Update an environment variable",
      "description": "Updates an environment variable that you can reference in a GitHub Actions workflow. You must authenticate using an acce...",
      "method": "patch",
      "endpoint": "/repositories/{repository_id}/environments/{environment_name}/variables/{name}",
      "tags": [
        "action"
      ],
      "params": [
        {
          "name": "repository_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the repository",
          "type": "number",
          "default": 0
        },
        {
          "name": "name",
          "location": "path",
          "required": true,
          "description": "The name of the variable",
          "type": "string",
          "default": ""
        },
        {
          "name": "environment_name",
          "location": "path",
          "required": true,
          "description": "The name of the environment",
          "type": "string",
          "default": ""
        },
        {
          "name": "name",
          "location": "body",
          "required": false,
          "description": "The name of the variable",
          "type": "string",
          "default": ""
        },
        {
          "name": "value",
          "location": "body",
          "required": false,
          "description": "The value of the variable",
          "type": "string",
          "default": ""
        }
      ]
    },
    "search/code": {
      "displayName": "Search code",
      "description": "Searches for query terms inside of a file. This method returns up to 100 results [per page](https://docs.github.com/rest...",
      "method": "get",
      "endpoint": "/search/code",
      "tags": [
        "search"
      ],
      "params": [
        {
          "name": "q",
          "location": "query",
          "required": true,
          "description": "The query contains one or more search keywords and qualifiers. Qualifiers allow you to limit your search to specific are...",
          "type": "string",
          "default": ""
        },
        {
          "name": "sort",
          "location": "query",
          "required": false,
          "description": "Sorts the results of your query. Can only be `indexed`, which indicates how recently a file has been indexed by the GitH...",
          "type": "options",
          "default": "indexed",
          "options": [
            "indexed"
          ]
        },
        {
          "name": "order",
          "location": "query",
          "required": false,
          "description": "Determines whether the first search result returned is the highest number of matches (`desc`) or lowest number of matche...",
          "type": "options",
          "default": "desc",
          "options": [
            "desc",
            "asc"
          ]
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "search/commits": {
      "displayName": "Search commits",
      "description": "Find commits via various criteria on the default branch (usually `main`). This method returns up to 100 results [per pag...",
      "method": "get",
      "endpoint": "/search/commits",
      "tags": [
        "search"
      ],
      "params": [
        {
          "name": "q",
          "location": "query",
          "required": true,
          "description": "The query contains one or more search keywords and qualifiers. Qualifiers allow you to limit your search to specific are...",
          "type": "string",
          "default": ""
        },
        {
          "name": "sort",
          "location": "query",
          "required": false,
          "description": "Sorts the results of your query by `author-date` or `committer-date`. Default: [best match](https://docs.github.com/rest...",
          "type": "options",
          "default": "author-date",
          "options": [
            "author-date",
            "committer-date"
          ]
        },
        {
          "name": "order",
          "location": "query",
          "required": false,
          "description": "Determines whether the first search result returned is the highest number of matches (`desc`) or lowest number of matche...",
          "type": "options",
          "default": "desc",
          "options": [
            "desc",
            "asc"
          ]
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "search/issues-and-pull-requests": {
      "displayName": "Search issues and pull requests",
      "description": "Find issues by state and keyword. This method returns up to 100 results [per page](https://docs.github.com/rest/overview...",
      "method": "get",
      "endpoint": "/search/issues",
      "tags": [
        "search"
      ],
      "params": [
        {
          "name": "q",
          "location": "query",
          "required": true,
          "description": "The query contains one or more search keywords and qualifiers. Qualifiers allow you to limit your search to specific are...",
          "type": "string",
          "default": ""
        },
        {
          "name": "sort",
          "location": "query",
          "required": false,
          "description": "Sorts the results of your query by the number of `comments`, `reactions`, `reactions-+1`, `reactions--1`, `reactions-smi...",
          "type": "options",
          "default": "comments",
          "options": [
            "comments",
            "reactions",
            "reactions-+1",
            "reactions--1",
            "reactions-smile",
            "reactions-thinking_face",
            "reactions-heart",
            "reactions-tada",
            "interactions",
            "created",
            "updated"
          ]
        },
        {
          "name": "order",
          "location": "query",
          "required": false,
          "description": "Determines whether the first search result returned is the highest number of matches (`desc`) or lowest number of matche...",
          "type": "options",
          "default": "desc",
          "options": [
            "desc",
            "asc"
          ]
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "search/labels": {
      "displayName": "Search labels",
      "description": "Find labels in a repository with names or descriptions that match search keywords. Returns up to 100 results [per page](...",
      "method": "get",
      "endpoint": "/search/labels",
      "tags": [
        "search"
      ],
      "params": [
        {
          "name": "repository_id",
          "location": "query",
          "required": true,
          "description": "The id of the repository",
          "type": "number",
          "default": 0
        },
        {
          "name": "q",
          "location": "query",
          "required": true,
          "description": "The search keywords. This endpoint does not accept qualifiers in the query. To learn more about the format of the query,...",
          "type": "string",
          "default": ""
        },
        {
          "name": "sort",
          "location": "query",
          "required": false,
          "description": "Sorts the results of your query by when the label was `created` or `updated`. Default: [best match](https://docs.github....",
          "type": "options",
          "default": "created",
          "options": [
            "created",
            "updated"
          ]
        },
        {
          "name": "order",
          "location": "query",
          "required": false,
          "description": "Determines whether the first search result returned is the highest number of matches (`desc`) or lowest number of matche...",
          "type": "options",
          "default": "desc",
          "options": [
            "desc",
            "asc"
          ]
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "search/repos": {
      "displayName": "Search repositories",
      "description": "Find repositories via various criteria. This method returns up to 100 results [per page](https://docs.github.com/rest/ov...",
      "method": "get",
      "endpoint": "/search/repositories",
      "tags": [
        "search"
      ],
      "params": [
        {
          "name": "q",
          "location": "query",
          "required": true,
          "description": "The query contains one or more search keywords and qualifiers. Qualifiers allow you to limit your search to specific are...",
          "type": "string",
          "default": ""
        },
        {
          "name": "sort",
          "location": "query",
          "required": false,
          "description": "Sorts the results of your query by number of `stars`, `forks`, or `help-wanted-issues` or how recently the items were `u...",
          "type": "options",
          "default": "stars",
          "options": [
            "stars",
            "forks",
            "help-wanted-issues",
            "updated"
          ]
        },
        {
          "name": "order",
          "location": "query",
          "required": false,
          "description": "Determines whether the first search result returned is the highest number of matches (`desc`) or lowest number of matche...",
          "type": "options",
          "default": "desc",
          "options": [
            "desc",
            "asc"
          ]
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "search/topics": {
      "displayName": "Search topics",
      "description": "Find topics via various criteria. Results are sorted by best match. This method returns up to 100 results [per page](htt...",
      "method": "get",
      "endpoint": "/search/topics",
      "tags": [
        "search"
      ],
      "params": [
        {
          "name": "q",
          "location": "query",
          "required": true,
          "description": "The query contains one or more search keywords and qualifiers. Qualifiers allow you to limit your search to specific are...",
          "type": "string",
          "default": ""
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "search/users": {
      "displayName": "Search users",
      "description": "Find users via various criteria. This method returns up to 100 results [per page](https://docs.github.com/rest/overview/...",
      "method": "get",
      "endpoint": "/search/users",
      "tags": [
        "search"
      ],
      "params": [
        {
          "name": "q",
          "location": "query",
          "required": true,
          "description": "The query contains one or more search keywords and qualifiers. Qualifiers allow you to limit your search to specific are...",
          "type": "string",
          "default": ""
        },
        {
          "name": "sort",
          "location": "query",
          "required": false,
          "description": "Sorts the results of your query by number of `followers` or `repositories`, or when the person `joined` GitHub. Default:...",
          "type": "options",
          "default": "followers",
          "options": [
            "followers",
            "repositories",
            "joined"
          ]
        },
        {
          "name": "order",
          "location": "query",
          "required": false,
          "description": "Determines whether the first search result returned is the highest number of matches (`desc`) or lowest number of matche...",
          "type": "options",
          "default": "desc",
          "options": [
            "desc",
            "asc"
          ]
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "teams/delete-legacy": {
      "displayName": "Delete a team (Legacy)",
      "description": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating...",
      "method": "delete",
      "endpoint": "/teams/{team_id}",
      "tags": [
        "team"
      ],
      "params": [
        {
          "name": "team_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the team",
          "type": "number",
          "default": 0
        }
      ]
    },
    "teams/get-legacy": {
      "displayName": "Get a team (Legacy)",
      "description": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating...",
      "method": "get",
      "endpoint": "/teams/{team_id}",
      "tags": [
        "team"
      ],
      "params": [
        {
          "name": "team_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the team",
          "type": "number",
          "default": 0
        }
      ]
    },
    "teams/update-legacy": {
      "displayName": "Update a team (Legacy)",
      "description": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating...",
      "method": "patch",
      "endpoint": "/teams/{team_id}",
      "tags": [
        "team"
      ],
      "params": [
        {
          "name": "team_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the team",
          "type": "number",
          "default": 0
        },
        {
          "name": "description",
          "location": "body",
          "required": false,
          "description": "The description of the team",
          "type": "string",
          "default": ""
        },
        {
          "name": "name",
          "location": "body",
          "required": true,
          "description": "The name of the team",
          "type": "string",
          "default": ""
        },
        {
          "name": "parent_team_id",
          "location": "body",
          "required": false,
          "description": "The ID of a team to set as the parent team",
          "type": "number",
          "default": 0
        },
        {
          "name": "permission",
          "location": "body",
          "required": false,
          "description": "**Deprecated**. The permission that new repositories will be added to the team with when none is specified",
          "type": "string",
          "default": ""
        },
        {
          "name": "privacy",
          "location": "body",
          "required": false,
          "description": "The level of privacy this team should have. Editing teams without specifying this parameter leaves `privacy` intact. The...",
          "type": "string",
          "default": ""
        }
      ]
    },
    "teams/list-discussions-legacy": {
      "displayName": "List discussions (Legacy)",
      "description": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating...",
      "method": "get",
      "endpoint": "/teams/{team_id}/discussions",
      "tags": [
        "team"
      ],
      "params": [
        {
          "name": "team_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the team",
          "type": "number",
          "default": 0
        },
        {
          "name": "direction",
          "location": "query",
          "required": false,
          "description": "The direction to sort the results by",
          "type": "options",
          "default": "desc",
          "options": [
            "asc",
            "desc"
          ]
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "teams/create-discussion-legacy": {
      "displayName": "Create a discussion (Legacy)",
      "description": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating...",
      "method": "post",
      "endpoint": "/teams/{team_id}/discussions",
      "tags": [
        "team"
      ],
      "params": [
        {
          "name": "team_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the team",
          "type": "number",
          "default": 0
        },
        {
          "name": "body",
          "location": "body",
          "required": true,
          "description": "The discussion post's body text",
          "type": "string",
          "default": ""
        },
        {
          "name": "private",
          "location": "body",
          "required": false,
          "description": "Private posts are only visible to team members, organization owners, and team maintainers. Public posts are visible to a...",
          "type": "boolean",
          "default": false
        },
        {
          "name": "title",
          "location": "body",
          "required": true,
          "description": "The discussion post's title",
          "type": "string",
          "default": ""
        }
      ]
    },
    "teams/delete-discussion-legacy": {
      "displayName": "Delete a discussion (Legacy)",
      "description": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating...",
      "method": "delete",
      "endpoint": "/teams/{team_id}/discussions/{discussion_number}",
      "tags": [
        "team"
      ],
      "params": [
        {
          "name": "team_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the team",
          "type": "number",
          "default": 0
        },
        {
          "name": "discussion_number",
          "location": "path",
          "required": true,
          "description": "The number that identifies the discussion",
          "type": "number",
          "default": 0
        }
      ]
    },
    "teams/get-discussion-legacy": {
      "displayName": "Get a discussion (Legacy)",
      "description": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating...",
      "method": "get",
      "endpoint": "/teams/{team_id}/discussions/{discussion_number}",
      "tags": [
        "team"
      ],
      "params": [
        {
          "name": "team_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the team",
          "type": "number",
          "default": 0
        },
        {
          "name": "discussion_number",
          "location": "path",
          "required": true,
          "description": "The number that identifies the discussion",
          "type": "number",
          "default": 0
        }
      ]
    },
    "teams/update-discussion-legacy": {
      "displayName": "Update a discussion (Legacy)",
      "description": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating...",
      "method": "patch",
      "endpoint": "/teams/{team_id}/discussions/{discussion_number}",
      "tags": [
        "team"
      ],
      "params": [
        {
          "name": "team_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the team",
          "type": "number",
          "default": 0
        },
        {
          "name": "discussion_number",
          "location": "path",
          "required": true,
          "description": "The number that identifies the discussion",
          "type": "number",
          "default": 0
        },
        {
          "name": "body",
          "location": "body",
          "required": false,
          "description": "The discussion post's body text",
          "type": "string",
          "default": ""
        },
        {
          "name": "title",
          "location": "body",
          "required": false,
          "description": "The discussion post's title",
          "type": "string",
          "default": ""
        }
      ]
    },
    "teams/list-discussion-comments-legacy": {
      "displayName": "List discussion comments (Legacy)",
      "description": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating...",
      "method": "get",
      "endpoint": "/teams/{team_id}/discussions/{discussion_number}/comments",
      "tags": [
        "team"
      ],
      "params": [
        {
          "name": "team_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the team",
          "type": "number",
          "default": 0
        },
        {
          "name": "discussion_number",
          "location": "path",
          "required": true,
          "description": "The number that identifies the discussion",
          "type": "number",
          "default": 0
        },
        {
          "name": "direction",
          "location": "query",
          "required": false,
          "description": "The direction to sort the results by",
          "type": "options",
          "default": "desc",
          "options": [
            "asc",
            "desc"
          ]
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "teams/create-discussion-comment-legacy": {
      "displayName": "Create a discussion comment (Legacy)",
      "description": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating...",
      "method": "post",
      "endpoint": "/teams/{team_id}/discussions/{discussion_number}/comments",
      "tags": [
        "team"
      ],
      "params": [
        {
          "name": "team_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the team",
          "type": "number",
          "default": 0
        },
        {
          "name": "discussion_number",
          "location": "path",
          "required": true,
          "description": "The number that identifies the discussion",
          "type": "number",
          "default": 0
        },
        {
          "name": "body",
          "location": "body",
          "required": true,
          "description": "The discussion comment's body text",
          "type": "string",
          "default": ""
        }
      ]
    },
    "teams/delete-discussion-comment-legacy": {
      "displayName": "Delete a discussion comment (Legacy)",
      "description": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating...",
      "method": "delete",
      "endpoint": "/teams/{team_id}/discussions/{discussion_number}/comments/{comment_number}",
      "tags": [
        "team"
      ],
      "params": [
        {
          "name": "team_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the team",
          "type": "number",
          "default": 0
        },
        {
          "name": "discussion_number",
          "location": "path",
          "required": true,
          "description": "The number that identifies the discussion",
          "type": "number",
          "default": 0
        },
        {
          "name": "comment_number",
          "location": "path",
          "required": true,
          "description": "The number that identifies the comment",
          "type": "number",
          "default": 0
        }
      ]
    },
    "teams/get-discussion-comment-legacy": {
      "displayName": "Get a discussion comment (Legacy)",
      "description": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating...",
      "method": "get",
      "endpoint": "/teams/{team_id}/discussions/{discussion_number}/comments/{comment_number}",
      "tags": [
        "team"
      ],
      "params": [
        {
          "name": "team_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the team",
          "type": "number",
          "default": 0
        },
        {
          "name": "discussion_number",
          "location": "path",
          "required": true,
          "description": "The number that identifies the discussion",
          "type": "number",
          "default": 0
        },
        {
          "name": "comment_number",
          "location": "path",
          "required": true,
          "description": "The number that identifies the comment",
          "type": "number",
          "default": 0
        }
      ]
    },
    "teams/update-discussion-comment-legacy": {
      "displayName": "Update a discussion comment (Legacy)",
      "description": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating...",
      "method": "patch",
      "endpoint": "/teams/{team_id}/discussions/{discussion_number}/comments/{comment_number}",
      "tags": [
        "team"
      ],
      "params": [
        {
          "name": "team_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the team",
          "type": "number",
          "default": 0
        },
        {
          "name": "discussion_number",
          "location": "path",
          "required": true,
          "description": "The number that identifies the discussion",
          "type": "number",
          "default": 0
        },
        {
          "name": "comment_number",
          "location": "path",
          "required": true,
          "description": "The number that identifies the comment",
          "type": "number",
          "default": 0
        },
        {
          "name": "body",
          "location": "body",
          "required": true,
          "description": "The discussion comment's body text",
          "type": "string",
          "default": ""
        }
      ]
    },
    "reactions/list-for-team-discussion-comment-legacy": {
      "displayName": "List reactions for a team discussion comment (Legacy)",
      "description": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating...",
      "method": "get",
      "endpoint": "/teams/{team_id}/discussions/{discussion_number}/comments/{comment_number}/reactions",
      "tags": [
        "reaction"
      ],
      "params": [
        {
          "name": "team_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the team",
          "type": "number",
          "default": 0
        },
        {
          "name": "discussion_number",
          "location": "path",
          "required": true,
          "description": "The number that identifies the discussion",
          "type": "number",
          "default": 0
        },
        {
          "name": "comment_number",
          "location": "path",
          "required": true,
          "description": "The number that identifies the comment",
          "type": "number",
          "default": 0
        },
        {
          "name": "content",
          "location": "query",
          "required": false,
          "description": "Returns a single [reaction type](https://docs.github.com/rest/reference/reactions#reaction-types). Omit this parameter t...",
          "type": "options",
          "default": "+1",
          "options": [
            "+1",
            "-1",
            "laugh",
            "confused",
            "heart",
            "hooray",
            "rocket",
            "eyes"
          ]
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "reactions/create-for-team-discussion-comment-legacy": {
      "displayName": "Create reaction for a team discussion comment (Legacy)",
      "description": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating...",
      "method": "post",
      "endpoint": "/teams/{team_id}/discussions/{discussion_number}/comments/{comment_number}/reactions",
      "tags": [
        "reaction"
      ],
      "params": [
        {
          "name": "team_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the team",
          "type": "number",
          "default": 0
        },
        {
          "name": "discussion_number",
          "location": "path",
          "required": true,
          "description": "The number that identifies the discussion",
          "type": "number",
          "default": 0
        },
        {
          "name": "comment_number",
          "location": "path",
          "required": true,
          "description": "The number that identifies the comment",
          "type": "number",
          "default": 0
        },
        {
          "name": "content",
          "location": "body",
          "required": true,
          "description": "The [reaction type](https://docs.github.com/rest/reference/reactions#reaction-types) to add to the team discussion comme...",
          "type": "string",
          "default": ""
        }
      ]
    },
    "reactions/list-for-team-discussion-legacy": {
      "displayName": "List reactions for a team discussion (Legacy)",
      "description": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating...",
      "method": "get",
      "endpoint": "/teams/{team_id}/discussions/{discussion_number}/reactions",
      "tags": [
        "reaction"
      ],
      "params": [
        {
          "name": "team_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the team",
          "type": "number",
          "default": 0
        },
        {
          "name": "discussion_number",
          "location": "path",
          "required": true,
          "description": "The number that identifies the discussion",
          "type": "number",
          "default": 0
        },
        {
          "name": "content",
          "location": "query",
          "required": false,
          "description": "Returns a single [reaction type](https://docs.github.com/rest/reference/reactions#reaction-types). Omit this parameter t...",
          "type": "options",
          "default": "+1",
          "options": [
            "+1",
            "-1",
            "laugh",
            "confused",
            "heart",
            "hooray",
            "rocket",
            "eyes"
          ]
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "reactions/create-for-team-discussion-legacy": {
      "displayName": "Create reaction for a team discussion (Legacy)",
      "description": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating...",
      "method": "post",
      "endpoint": "/teams/{team_id}/discussions/{discussion_number}/reactions",
      "tags": [
        "reaction"
      ],
      "params": [
        {
          "name": "team_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the team",
          "type": "number",
          "default": 0
        },
        {
          "name": "discussion_number",
          "location": "path",
          "required": true,
          "description": "The number that identifies the discussion",
          "type": "number",
          "default": 0
        },
        {
          "name": "content",
          "location": "body",
          "required": true,
          "description": "The [reaction type](https://docs.github.com/rest/reference/reactions#reaction-types) to add to the team discussion",
          "type": "string",
          "default": ""
        }
      ]
    },
    "teams/list-pending-invitations-legacy": {
      "displayName": "List pending team invitations (Legacy)",
      "description": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating...",
      "method": "get",
      "endpoint": "/teams/{team_id}/invitations",
      "tags": [
        "team"
      ],
      "params": [
        {
          "name": "team_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the team",
          "type": "number",
          "default": 0
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "teams/list-members-legacy": {
      "displayName": "List team members (Legacy)",
      "description": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating...",
      "method": "get",
      "endpoint": "/teams/{team_id}/members",
      "tags": [
        "team"
      ],
      "params": [
        {
          "name": "team_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the team",
          "type": "number",
          "default": 0
        },
        {
          "name": "role",
          "location": "query",
          "required": false,
          "description": "Filters members returned by their role in the team",
          "type": "options",
          "default": "all",
          "options": [
            "member",
            "maintainer",
            "all"
          ]
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "teams/remove-member-legacy": {
      "displayName": "Remove team member (Legacy)",
      "description": "The \"Remove team member\" endpoint (described below) is deprecated.  We recommend using the [Remove team membership for a...",
      "method": "delete",
      "endpoint": "/teams/{team_id}/members/{username}",
      "tags": [
        "team"
      ],
      "params": [
        {
          "name": "team_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the team",
          "type": "number",
          "default": 0
        },
        {
          "name": "username",
          "location": "path",
          "required": true,
          "description": "The handle for the GitHub user account",
          "type": "string",
          "default": ""
        }
      ]
    },
    "teams/get-member-legacy": {
      "displayName": "Get team member (Legacy)",
      "description": "The \"Get team member\" endpoint (described below) is deprecated.  We recommend using the [Get team membership for a user]...",
      "method": "get",
      "endpoint": "/teams/{team_id}/members/{username}",
      "tags": [
        "team"
      ],
      "params": [
        {
          "name": "team_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the team",
          "type": "number",
          "default": 0
        },
        {
          "name": "username",
          "location": "path",
          "required": true,
          "description": "The handle for the GitHub user account",
          "type": "string",
          "default": ""
        }
      ]
    },
    "teams/add-member-legacy": {
      "displayName": "Add team member (Legacy)",
      "description": "The \"Add team member\" endpoint (described below) is deprecated.  We recommend using the [Add or update team membership f...",
      "method": "put",
      "endpoint": "/teams/{team_id}/members/{username}",
      "tags": [
        "team"
      ],
      "params": [
        {
          "name": "team_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the team",
          "type": "number",
          "default": 0
        },
        {
          "name": "username",
          "location": "path",
          "required": true,
          "description": "The handle for the GitHub user account",
          "type": "string",
          "default": ""
        }
      ]
    },
    "teams/remove-membership-for-user-legacy": {
      "displayName": "Remove team membership for a user (Legacy)",
      "description": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating...",
      "method": "delete",
      "endpoint": "/teams/{team_id}/memberships/{username}",
      "tags": [
        "team"
      ],
      "params": [
        {
          "name": "team_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the team",
          "type": "number",
          "default": 0
        },
        {
          "name": "username",
          "location": "path",
          "required": true,
          "description": "The handle for the GitHub user account",
          "type": "string",
          "default": ""
        }
      ]
    },
    "teams/get-membership-for-user-legacy": {
      "displayName": "Get team membership for a user (Legacy)",
      "description": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating...",
      "method": "get",
      "endpoint": "/teams/{team_id}/memberships/{username}",
      "tags": [
        "team"
      ],
      "params": [
        {
          "name": "team_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the team",
          "type": "number",
          "default": 0
        },
        {
          "name": "username",
          "location": "path",
          "required": true,
          "description": "The handle for the GitHub user account",
          "type": "string",
          "default": ""
        }
      ]
    },
    "teams/add-or-update-membership-for-user-legacy": {
      "displayName": "Add or update team membership for a user (Legacy)",
      "description": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating...",
      "method": "put",
      "endpoint": "/teams/{team_id}/memberships/{username}",
      "tags": [
        "team"
      ],
      "params": [
        {
          "name": "team_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the team",
          "type": "number",
          "default": 0
        },
        {
          "name": "username",
          "location": "path",
          "required": true,
          "description": "The handle for the GitHub user account",
          "type": "string",
          "default": ""
        },
        {
          "name": "role",
          "location": "body",
          "required": false,
          "description": "The role that this user should have in the team",
          "type": "string",
          "default": ""
        }
      ]
    },
    "teams/list-projects-legacy": {
      "displayName": "List team projects (Legacy)",
      "description": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating...",
      "method": "get",
      "endpoint": "/teams/{team_id}/projects",
      "tags": [
        "team"
      ],
      "params": [
        {
          "name": "team_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the team",
          "type": "number",
          "default": 0
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "teams/remove-project-legacy": {
      "displayName": "Remove a project from a team (Legacy)",
      "description": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating...",
      "method": "delete",
      "endpoint": "/teams/{team_id}/projects/{project_id}",
      "tags": [
        "team"
      ],
      "params": [
        {
          "name": "team_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the team",
          "type": "number",
          "default": 0
        },
        {
          "name": "project_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the project",
          "type": "number",
          "default": 0
        }
      ]
    },
    "teams/check-permissions-for-project-legacy": {
      "displayName": "Check team permissions for a project (Legacy)",
      "description": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating...",
      "method": "get",
      "endpoint": "/teams/{team_id}/projects/{project_id}",
      "tags": [
        "team"
      ],
      "params": [
        {
          "name": "team_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the team",
          "type": "number",
          "default": 0
        },
        {
          "name": "project_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the project",
          "type": "number",
          "default": 0
        }
      ]
    },
    "teams/add-or-update-project-permissions-legacy": {
      "displayName": "Add or update team project permissions (Legacy)",
      "description": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating...",
      "method": "put",
      "endpoint": "/teams/{team_id}/projects/{project_id}",
      "tags": [
        "team"
      ],
      "params": [
        {
          "name": "team_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the team",
          "type": "number",
          "default": 0
        },
        {
          "name": "project_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the project",
          "type": "number",
          "default": 0
        },
        {
          "name": "permission",
          "location": "body",
          "required": false,
          "description": "The permission to grant to the team for this project. Default: the team's `permission` attribute will be used to determi...",
          "type": "string",
          "default": ""
        }
      ]
    },
    "teams/list-repos-legacy": {
      "displayName": "List team repositories (Legacy)",
      "description": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating...",
      "method": "get",
      "endpoint": "/teams/{team_id}/repos",
      "tags": [
        "team"
      ],
      "params": [
        {
          "name": "team_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the team",
          "type": "number",
          "default": 0
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "teams/remove-repo-legacy": {
      "displayName": "Remove a repository from a team (Legacy)",
      "description": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating...",
      "method": "delete",
      "endpoint": "/teams/{team_id}/repos/{owner}/{repo}",
      "tags": [
        "team"
      ],
      "params": [
        {
          "name": "team_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the team",
          "type": "number",
          "default": 0
        },
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        }
      ]
    },
    "teams/check-permissions-for-repo-legacy": {
      "displayName": "Check team permissions for a repository (Legacy)",
      "description": "**Note**: Repositories inherited through a parent team will also be checked.  **Deprecation Notice:** This endpoint rout...",
      "method": "get",
      "endpoint": "/teams/{team_id}/repos/{owner}/{repo}",
      "tags": [
        "team"
      ],
      "params": [
        {
          "name": "team_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the team",
          "type": "number",
          "default": 0
        },
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        }
      ]
    },
    "teams/add-or-update-repo-permissions-legacy": {
      "displayName": "Add or update team repository permissions (Legacy)",
      "description": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating...",
      "method": "put",
      "endpoint": "/teams/{team_id}/repos/{owner}/{repo}",
      "tags": [
        "team"
      ],
      "params": [
        {
          "name": "team_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the team",
          "type": "number",
          "default": 0
        },
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "permission",
          "location": "body",
          "required": false,
          "description": "The permission to grant the team on this repository. If no permission is specified, the team's `permission` attribute wi...",
          "type": "string",
          "default": ""
        }
      ]
    },
    "teams/list-child-legacy": {
      "displayName": "List child teams (Legacy)",
      "description": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating...",
      "method": "get",
      "endpoint": "/teams/{team_id}/teams",
      "tags": [
        "team"
      ],
      "params": [
        {
          "name": "team_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the team",
          "type": "number",
          "default": 0
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "users/get-authenticated": {
      "displayName": "Get the authenticated user",
      "description": "If the authenticated user is authenticated through basic authentication or OAuth with the `user` scope, then the respons...",
      "method": "get",
      "endpoint": "/user",
      "tags": [
        "user"
      ],
      "params": []
    },
    "users/update-authenticated": {
      "displayName": "Update the authenticated user",
      "description": "**Note:** If your email is set to private and you send an `email` parameter as part of this request to update your profi...",
      "method": "patch",
      "endpoint": "/user",
      "tags": [
        "user"
      ],
      "params": [
        {
          "name": "bio",
          "location": "body",
          "required": false,
          "description": "The new short biography of the user",
          "type": "string",
          "default": ""
        },
        {
          "name": "blog",
          "location": "body",
          "required": false,
          "description": "The new blog URL of the user",
          "type": "string",
          "default": "",
          "placeholder": "e.g. blog.example.com"
        },
        {
          "name": "company",
          "location": "body",
          "required": false,
          "description": "The new company of the user",
          "type": "string",
          "default": "",
          "placeholder": "e.g. Acme corporation"
        },
        {
          "name": "email",
          "location": "body",
          "required": false,
          "description": "The publicly visible email address of the user",
          "type": "string",
          "default": "",
          "placeholder": "e.g. omar@example.com"
        },
        {
          "name": "hireable",
          "location": "body",
          "required": false,
          "description": "The new hiring availability of the user",
          "type": "boolean",
          "default": false
        },
        {
          "name": "location",
          "location": "body",
          "required": false,
          "description": "The new location of the user",
          "type": "string",
          "default": "",
          "placeholder": "e.g. Berlin, Germany"
        },
        {
          "name": "name",
          "location": "body",
          "required": false,
          "description": "The new name of the user",
          "type": "string",
          "default": "",
          "placeholder": "e.g. Omar Jahandar"
        },
        {
          "name": "twitter_username",
          "location": "body",
          "required": false,
          "description": "The new Twitter username of the user",
          "type": "string",
          "default": "",
          "placeholder": "e.g. therealomarj"
        }
      ]
    },
    "users/list-blocked-by-authenticated-user": {
      "displayName": "List users blocked by the authenticated user",
      "description": "List the users you've blocked on your personal account",
      "method": "get",
      "endpoint": "/user/blocks",
      "tags": [
        "user"
      ],
      "params": [
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "users/unblock": {
      "displayName": "Unblock a user",
      "description": "",
      "method": "delete",
      "endpoint": "/user/blocks/{username}",
      "tags": [
        "user"
      ],
      "params": [
        {
          "name": "username",
          "location": "path",
          "required": true,
          "description": "The handle for the GitHub user account",
          "type": "string",
          "default": ""
        }
      ]
    },
    "users/check-blocked": {
      "displayName": "Check if a user is blocked by the authenticated user",
      "description": "",
      "method": "get",
      "endpoint": "/user/blocks/{username}",
      "tags": [
        "user"
      ],
      "params": [
        {
          "name": "username",
          "location": "path",
          "required": true,
          "description": "The handle for the GitHub user account",
          "type": "string",
          "default": ""
        }
      ]
    },
    "users/block": {
      "displayName": "Block a user",
      "description": "",
      "method": "put",
      "endpoint": "/user/blocks/{username}",
      "tags": [
        "user"
      ],
      "params": [
        {
          "name": "username",
          "location": "path",
          "required": true,
          "description": "The handle for the GitHub user account",
          "type": "string",
          "default": ""
        }
      ]
    },
    "codespaces/list-for-authenticated-user": {
      "displayName": "List codespaces for the authenticated user",
      "description": "Lists the authenticated user's codespaces.  You must authenticate using an access token with the `codespace` scope to us...",
      "method": "get",
      "endpoint": "/user/codespaces",
      "tags": [
        "codespace"
      ],
      "params": [
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        },
        {
          "name": "repository_id",
          "location": "query",
          "required": false,
          "description": "ID of the Repository to filter on",
          "type": "number",
          "default": 0
        }
      ]
    },
    "codespaces/create-for-authenticated-user": {
      "displayName": "Create a codespace for the authenticated user",
      "description": "Creates a new codespace, owned by the authenticated user.  This endpoint requires either a `repository_id` OR a `pull_re...",
      "method": "post",
      "endpoint": "/user/codespaces",
      "tags": [
        "codespace"
      ],
      "params": []
    },
    "codespaces/list-secrets-for-authenticated-user": {
      "displayName": "List secrets for the authenticated user",
      "description": "Lists all secrets available for a user's Codespaces without revealing their encrypted values.  You must authenticate usi...",
      "method": "get",
      "endpoint": "/user/codespaces/secrets",
      "tags": [
        "codespace"
      ],
      "params": [
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "codespaces/get-public-key-for-authenticated-user": {
      "displayName": "Get public key for the authenticated user",
      "description": "Gets your public key, which you need to encrypt secrets. You need to encrypt a secret before you can create or update se...",
      "method": "get",
      "endpoint": "/user/codespaces/secrets/public-key",
      "tags": [
        "codespace"
      ],
      "params": []
    },
    "codespaces/delete-secret-for-authenticated-user": {
      "displayName": "Delete a secret for the authenticated user",
      "description": "Deletes a secret from a user's codespaces using the secret name. Deleting the secret will remove access from all codespa...",
      "method": "delete",
      "endpoint": "/user/codespaces/secrets/{secret_name}",
      "tags": [
        "codespace"
      ],
      "params": [
        {
          "name": "secret_name",
          "location": "path",
          "required": true,
          "description": "The name of the secret",
          "type": "string",
          "default": ""
        }
      ]
    },
    "codespaces/get-secret-for-authenticated-user": {
      "displayName": "Get a secret for the authenticated user",
      "description": "Gets a secret available to a user's codespaces without revealing its encrypted value.  You must authenticate using an ac...",
      "method": "get",
      "endpoint": "/user/codespaces/secrets/{secret_name}",
      "tags": [
        "codespace"
      ],
      "params": [
        {
          "name": "secret_name",
          "location": "path",
          "required": true,
          "description": "The name of the secret",
          "type": "string",
          "default": ""
        }
      ]
    },
    "codespaces/create-or-update-secret-for-authenticated-user": {
      "displayName": "Create or update a secret for the authenticated user",
      "description": "Creates or updates a secret for a user's codespace with an encrypted value. Encrypt your secret using [LibSodium](https:...",
      "method": "put",
      "endpoint": "/user/codespaces/secrets/{secret_name}",
      "tags": [
        "codespace"
      ],
      "params": [
        {
          "name": "secret_name",
          "location": "path",
          "required": true,
          "description": "The name of the secret",
          "type": "string",
          "default": ""
        },
        {
          "name": "encrypted_value",
          "location": "body",
          "required": false,
          "description": "Value for your secret, encrypted with [LibSodium](https://libsodium.gitbook.io/doc/bindings_for_other_languages) using t...",
          "type": "string",
          "default": ""
        },
        {
          "name": "key_id",
          "location": "body",
          "required": true,
          "description": "ID of the key you used to encrypt the secret",
          "type": "string",
          "default": ""
        },
        {
          "name": "selected_repository_ids",
          "location": "body",
          "required": false,
          "description": "An array of repository ids that can access the user secret. You can manage the list of selected repositories using the [...",
          "type": "json",
          "default": "{}"
        }
      ]
    },
    "codespaces/list-repositories-for-secret-for-authenticated-user": {
      "displayName": "List selected repositories for a user secret",
      "description": "List the repositories that have been granted the ability to use a user's codespace secret.  You must authenticate using ...",
      "method": "get",
      "endpoint": "/user/codespaces/secrets/{secret_name}/repositories",
      "tags": [
        "codespace"
      ],
      "params": [
        {
          "name": "secret_name",
          "location": "path",
          "required": true,
          "description": "The name of the secret",
          "type": "string",
          "default": ""
        }
      ]
    },
    "codespaces/set-repositories-for-secret-for-authenticated-user": {
      "displayName": "Set selected repositories for a user secret",
      "description": "Select the repositories that will use a user's codespace secret.  You must authenticate using an access token with the `...",
      "method": "put",
      "endpoint": "/user/codespaces/secrets/{secret_name}/repositories",
      "tags": [
        "codespace"
      ],
      "params": [
        {
          "name": "secret_name",
          "location": "path",
          "required": true,
          "description": "The name of the secret",
          "type": "string",
          "default": ""
        },
        {
          "name": "selected_repository_ids",
          "location": "body",
          "required": true,
          "description": "An array of repository ids for which a codespace can access the secret. You can manage the list of selected repositories...",
          "type": "json",
          "default": "{}"
        }
      ]
    },
    "codespaces/remove-repository-for-secret-for-authenticated-user": {
      "displayName": "Remove a selected repository from a user secret",
      "description": "Removes a repository from the selected repositories for a user's codespace secret. You must authenticate using an access...",
      "method": "delete",
      "endpoint": "/user/codespaces/secrets/{secret_name}/repositories/{repository_id}",
      "tags": [
        "codespace"
      ],
      "params": [
        {
          "name": "secret_name",
          "location": "path",
          "required": true,
          "description": "The name of the secret",
          "type": "string",
          "default": ""
        },
        {
          "name": "repository_id",
          "location": "path",
          "required": true,
          "description": "",
          "type": "number",
          "default": 0
        }
      ]
    },
    "codespaces/add-repository-for-secret-for-authenticated-user": {
      "displayName": "Add a selected repository to a user secret",
      "description": "Adds a repository to the selected repositories for a user's codespace secret. You must authenticate using an access toke...",
      "method": "put",
      "endpoint": "/user/codespaces/secrets/{secret_name}/repositories/{repository_id}",
      "tags": [
        "codespace"
      ],
      "params": [
        {
          "name": "secret_name",
          "location": "path",
          "required": true,
          "description": "The name of the secret",
          "type": "string",
          "default": ""
        },
        {
          "name": "repository_id",
          "location": "path",
          "required": true,
          "description": "",
          "type": "number",
          "default": 0
        }
      ]
    },
    "codespaces/delete-for-authenticated-user": {
      "displayName": "Delete a codespace for the authenticated user",
      "description": "Deletes a user's codespace.  You must authenticate using an access token with the `codespace` scope to use this endpoint...",
      "method": "delete",
      "endpoint": "/user/codespaces/{codespace_name}",
      "tags": [
        "codespace"
      ],
      "params": [
        {
          "name": "codespace_name",
          "location": "path",
          "required": true,
          "description": "The name of the codespace",
          "type": "string",
          "default": ""
        }
      ]
    },
    "codespaces/get-for-authenticated-user": {
      "displayName": "Get a codespace for the authenticated user",
      "description": "Gets information about a user's codespace.  You must authenticate using an access token with the `codespace` scope to us...",
      "method": "get",
      "endpoint": "/user/codespaces/{codespace_name}",
      "tags": [
        "codespace"
      ],
      "params": [
        {
          "name": "codespace_name",
          "location": "path",
          "required": true,
          "description": "The name of the codespace",
          "type": "string",
          "default": ""
        }
      ]
    },
    "codespaces/update-for-authenticated-user": {
      "displayName": "Update a codespace for the authenticated user",
      "description": "Updates a codespace owned by the authenticated user. Currently only the codespace's machine type and recent folders can ...",
      "method": "patch",
      "endpoint": "/user/codespaces/{codespace_name}",
      "tags": [
        "codespace"
      ],
      "params": [
        {
          "name": "codespace_name",
          "location": "path",
          "required": true,
          "description": "The name of the codespace",
          "type": "string",
          "default": ""
        },
        {
          "name": "display_name",
          "location": "body",
          "required": false,
          "description": "Display name for this codespace",
          "type": "string",
          "default": ""
        },
        {
          "name": "machine",
          "location": "body",
          "required": false,
          "description": "A valid machine to transition this codespace to",
          "type": "string",
          "default": ""
        },
        {
          "name": "recent_folders",
          "location": "body",
          "required": false,
          "description": "Recently opened folders inside the codespace. It is currently used by the clients to determine the folder path to load t...",
          "type": "string",
          "default": ""
        }
      ]
    },
    "codespaces/export-for-authenticated-user": {
      "displayName": "Export a codespace for the authenticated user",
      "description": "Triggers an export of the specified codespace and returns a URL and ID where the status of the export can be monitored. ...",
      "method": "post",
      "endpoint": "/user/codespaces/{codespace_name}/exports",
      "tags": [
        "codespace"
      ],
      "params": [
        {
          "name": "codespace_name",
          "location": "path",
          "required": true,
          "description": "The name of the codespace",
          "type": "string",
          "default": ""
        }
      ]
    },
    "codespaces/get-export-details-for-authenticated-user": {
      "displayName": "Get details about a codespace export",
      "description": "Gets information about an export of a codespace.  You must authenticate using a personal access token with the `codespac...",
      "method": "get",
      "endpoint": "/user/codespaces/{codespace_name}/exports/{export_id}",
      "tags": [
        "codespace"
      ],
      "params": [
        {
          "name": "codespace_name",
          "location": "path",
          "required": true,
          "description": "The name of the codespace",
          "type": "string",
          "default": ""
        },
        {
          "name": "export_id",
          "location": "path",
          "required": true,
          "description": "The ID of the export operation, or `latest`. Currently only `latest` is currently supported",
          "type": "string",
          "default": ""
        }
      ]
    },
    "codespaces/codespace-machines-for-authenticated-user": {
      "displayName": "List machine types for a codespace",
      "description": "List the machine types a codespace can transition to use.  You must authenticate using an access token with the `codespa...",
      "method": "get",
      "endpoint": "/user/codespaces/{codespace_name}/machines",
      "tags": [
        "codespace"
      ],
      "params": [
        {
          "name": "codespace_name",
          "location": "path",
          "required": true,
          "description": "The name of the codespace",
          "type": "string",
          "default": ""
        }
      ]
    },
    "codespaces/publish-for-authenticated-user": {
      "displayName": "Create a repository from an unpublished codespace",
      "description": "Publishes an unpublished codespace, creating a new repository and assigning it to the codespace.  The codespace's token ...",
      "method": "post",
      "endpoint": "/user/codespaces/{codespace_name}/publish",
      "tags": [
        "codespace"
      ],
      "params": [
        {
          "name": "codespace_name",
          "location": "path",
          "required": true,
          "description": "The name of the codespace",
          "type": "string",
          "default": ""
        },
        {
          "name": "name",
          "location": "body",
          "required": false,
          "description": "A name for the new repository",
          "type": "string",
          "default": ""
        },
        {
          "name": "private",
          "location": "body",
          "required": false,
          "description": "Whether the new repository should be private",
          "type": "boolean",
          "default": false
        }
      ]
    },
    "codespaces/start-for-authenticated-user": {
      "displayName": "Start a codespace for the authenticated user",
      "description": "Starts a user's codespace.  You must authenticate using an access token with the `codespace` scope to use this endpoint....",
      "method": "post",
      "endpoint": "/user/codespaces/{codespace_name}/start",
      "tags": [
        "codespace"
      ],
      "params": [
        {
          "name": "codespace_name",
          "location": "path",
          "required": true,
          "description": "The name of the codespace",
          "type": "string",
          "default": ""
        }
      ]
    },
    "codespaces/stop-for-authenticated-user": {
      "displayName": "Stop a codespace for the authenticated user",
      "description": "Stops a user's codespace.  You must authenticate using an access token with the `codespace` scope to use this endpoint. ...",
      "method": "post",
      "endpoint": "/user/codespaces/{codespace_name}/stop",
      "tags": [
        "codespace"
      ],
      "params": [
        {
          "name": "codespace_name",
          "location": "path",
          "required": true,
          "description": "The name of the codespace",
          "type": "string",
          "default": ""
        }
      ]
    },
    "users/set-primary-email-visibility-for-authenticated-user": {
      "displayName": "Set primary email visibility for the authenticated user",
      "description": "Sets the visibility for your primary email addresses",
      "method": "patch",
      "endpoint": "/user/email/visibility",
      "tags": [
        "user"
      ],
      "params": [
        {
          "name": "visibility",
          "location": "body",
          "required": true,
          "description": "Denotes whether an email is publicly visible",
          "type": "string",
          "default": ""
        }
      ]
    },
    "users/delete-email-for-authenticated-user": {
      "displayName": "Delete an email address for the authenticated user",
      "description": "This endpoint is accessible with the `user` scope",
      "method": "delete",
      "endpoint": "/user/emails",
      "tags": [
        "user"
      ],
      "params": []
    },
    "users/list-emails-for-authenticated-user": {
      "displayName": "List email addresses for the authenticated user",
      "description": "Lists all of your email addresses, and specifies which one is visible to the public. This endpoint is accessible with th...",
      "method": "get",
      "endpoint": "/user/emails",
      "tags": [
        "user"
      ],
      "params": [
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "users/add-email-for-authenticated-user": {
      "displayName": "Add an email address for the authenticated user",
      "description": "This endpoint is accessible with the `user` scope",
      "method": "post",
      "endpoint": "/user/emails",
      "tags": [
        "user"
      ],
      "params": []
    },
    "users/list-followers-for-authenticated-user": {
      "displayName": "List followers of the authenticated user",
      "description": "Lists the people following the authenticated user",
      "method": "get",
      "endpoint": "/user/followers",
      "tags": [
        "user"
      ],
      "params": [
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "users/list-followed-by-authenticated-user": {
      "displayName": "List the people the authenticated user follows",
      "description": "Lists the people who the authenticated user follows",
      "method": "get",
      "endpoint": "/user/following",
      "tags": [
        "user"
      ],
      "params": [
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "users/unfollow": {
      "displayName": "Unfollow a user",
      "description": "Unfollowing a user requires the user to be logged in and authenticated with basic auth or OAuth with the `user:follow` s...",
      "method": "delete",
      "endpoint": "/user/following/{username}",
      "tags": [
        "user"
      ],
      "params": [
        {
          "name": "username",
          "location": "path",
          "required": true,
          "description": "The handle for the GitHub user account",
          "type": "string",
          "default": ""
        }
      ]
    },
    "users/check-person-is-followed-by-authenticated": {
      "displayName": "Check if a person is followed by the authenticated user",
      "description": "",
      "method": "get",
      "endpoint": "/user/following/{username}",
      "tags": [
        "user"
      ],
      "params": [
        {
          "name": "username",
          "location": "path",
          "required": true,
          "description": "The handle for the GitHub user account",
          "type": "string",
          "default": ""
        }
      ]
    },
    "users/follow": {
      "displayName": "Follow a user",
      "description": "Note that you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see \"[HTT...",
      "method": "put",
      "endpoint": "/user/following/{username}",
      "tags": [
        "user"
      ],
      "params": [
        {
          "name": "username",
          "location": "path",
          "required": true,
          "description": "The handle for the GitHub user account",
          "type": "string",
          "default": ""
        }
      ]
    },
    "users/list-gpg-keys-for-authenticated-user": {
      "displayName": "List GPG keys for the authenticated user",
      "description": "Lists the current user's GPG keys. Requires that you are authenticated via Basic Auth or via OAuth with at least `read:g...",
      "method": "get",
      "endpoint": "/user/gpg_keys",
      "tags": [
        "user"
      ],
      "params": [
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "users/create-gpg-key-for-authenticated-user": {
      "displayName": "Create a GPG key for the authenticated user",
      "description": "Adds a GPG key to the authenticated user's GitHub account. Requires that you are authenticated via Basic Auth, or OAuth ...",
      "method": "post",
      "endpoint": "/user/gpg_keys",
      "tags": [
        "user"
      ],
      "params": [
        {
          "name": "armored_public_key",
          "location": "body",
          "required": true,
          "description": "A GPG key in ASCII-armored format",
          "type": "string",
          "default": ""
        },
        {
          "name": "name",
          "location": "body",
          "required": false,
          "description": "A descriptive name for the new key",
          "type": "string",
          "default": ""
        }
      ]
    },
    "users/delete-gpg-key-for-authenticated-user": {
      "displayName": "Delete a GPG key for the authenticated user",
      "description": "Removes a GPG key from the authenticated user's GitHub account. Requires that you are authenticated via Basic Auth or vi...",
      "method": "delete",
      "endpoint": "/user/gpg_keys/{gpg_key_id}",
      "tags": [
        "user"
      ],
      "params": [
        {
          "name": "gpg_key_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the GPG key",
          "type": "number",
          "default": 0
        }
      ]
    },
    "users/get-gpg-key-for-authenticated-user": {
      "displayName": "Get a GPG key for the authenticated user",
      "description": "View extended details for a single GPG key. Requires that you are authenticated via Basic Auth or via OAuth with at leas...",
      "method": "get",
      "endpoint": "/user/gpg_keys/{gpg_key_id}",
      "tags": [
        "user"
      ],
      "params": [
        {
          "name": "gpg_key_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the GPG key",
          "type": "number",
          "default": 0
        }
      ]
    },
    "apps/list-installations-for-authenticated-user": {
      "displayName": "List app installations accessible to the user access token",
      "description": "Lists installations of your GitHub App that the authenticated user has explicit permission (`:read`, `:write`, or `:admi...",
      "method": "get",
      "endpoint": "/user/installations",
      "tags": [
        "app"
      ],
      "params": [
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "apps/list-installation-repos-for-authenticated-user": {
      "displayName": "List repositories accessible to the user access token",
      "description": "List repositories that the authenticated user has explicit permission (`:read`, `:write`, or `:admin`) to access for an ...",
      "method": "get",
      "endpoint": "/user/installations/{installation_id}/repositories",
      "tags": [
        "app"
      ],
      "params": [
        {
          "name": "installation_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the installation",
          "type": "number",
          "default": 0
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "apps/remove-repo-from-installation-for-authenticated-user": {
      "displayName": "Remove a repository from an app installation",
      "description": "Remove a single repository from an installation. The authenticated user must have admin access to the repository.  You m...",
      "method": "delete",
      "endpoint": "/user/installations/{installation_id}/repositories/{repository_id}",
      "tags": [
        "app"
      ],
      "params": [
        {
          "name": "installation_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the installation",
          "type": "number",
          "default": 0
        },
        {
          "name": "repository_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the repository",
          "type": "number",
          "default": 0
        }
      ]
    },
    "apps/add-repo-to-installation-for-authenticated-user": {
      "displayName": "Add a repository to an app installation",
      "description": "Add a single repository to an installation. The authenticated user must have admin access to the repository.  You must u...",
      "method": "put",
      "endpoint": "/user/installations/{installation_id}/repositories/{repository_id}",
      "tags": [
        "app"
      ],
      "params": [
        {
          "name": "installation_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the installation",
          "type": "number",
          "default": 0
        },
        {
          "name": "repository_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the repository",
          "type": "number",
          "default": 0
        }
      ]
    },
    "interactions/remove-restrictions-for-authenticated-user": {
      "displayName": "Remove interaction restrictions from your public repositories",
      "description": "Removes any interaction restrictions from your public repositories",
      "method": "delete",
      "endpoint": "/user/interaction-limits",
      "tags": [
        "interaction"
      ],
      "params": []
    },
    "interactions/get-restrictions-for-authenticated-user": {
      "displayName": "Get interaction restrictions for your public repositories",
      "description": "Shows which type of GitHub user can interact with your public repositories and when the restriction expires",
      "method": "get",
      "endpoint": "/user/interaction-limits",
      "tags": [
        "interaction"
      ],
      "params": []
    },
    "interactions/set-restrictions-for-authenticated-user": {
      "displayName": "Set interaction restrictions for your public repositories",
      "description": "Temporarily restricts which type of GitHub user can interact with your public repositories. Setting the interaction limi...",
      "method": "put",
      "endpoint": "/user/interaction-limits",
      "tags": [
        "interaction"
      ],
      "params": [
        {
          "name": "expiry",
          "location": "body",
          "required": false,
          "description": "The duration of the interaction restriction. Default: `one_day`",
          "type": "string",
          "default": "",
          "placeholder": "e.g. one_month"
        },
        {
          "name": "limit",
          "location": "body",
          "required": true,
          "description": "The type of GitHub user that can comment, open issues, or create pull requests while the interaction limit is in effect",
          "type": "string",
          "default": "",
          "placeholder": "e.g. collaborators_only"
        }
      ]
    },
    "issues/list-for-authenticated-user": {
      "displayName": "List user account issues assigned to the authenticated user",
      "description": "List issues across owned and member repositories assigned to the authenticated user.  **Note**: GitHub's REST API consid...",
      "method": "get",
      "endpoint": "/user/issues",
      "tags": [
        "issue"
      ],
      "params": [
        {
          "name": "filter",
          "location": "query",
          "required": false,
          "description": "Indicates which sorts of issues to return. `assigned` means issues assigned to you. `created` means issues created by yo...",
          "type": "options",
          "default": "assigned",
          "options": [
            "assigned",
            "created",
            "mentioned",
            "subscribed",
            "repos",
            "all"
          ]
        },
        {
          "name": "state",
          "location": "query",
          "required": false,
          "description": "Indicates the state of the issues to return",
          "type": "options",
          "default": "open",
          "options": [
            "open",
            "closed",
            "all"
          ]
        },
        {
          "name": "labels",
          "location": "query",
          "required": false,
          "description": "A list of comma separated label names. Example: `bug,ui,@high`",
          "type": "string",
          "default": ""
        },
        {
          "name": "sort",
          "location": "query",
          "required": false,
          "description": "What to sort results by",
          "type": "options",
          "default": "created",
          "options": [
            "created",
            "updated",
            "comments"
          ]
        },
        {
          "name": "direction",
          "location": "query",
          "required": false,
          "description": "The direction to sort the results by",
          "type": "options",
          "default": "desc",
          "options": [
            "asc",
            "desc"
          ]
        },
        {
          "name": "since",
          "location": "query",
          "required": false,
          "description": "Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/IS...",
          "type": "string",
          "default": ""
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "users/list-public-ssh-keys-for-authenticated-user": {
      "displayName": "List public SSH keys for the authenticated user",
      "description": "Lists the public SSH keys for the authenticated user's GitHub account. Requires that you are authenticated via Basic Aut...",
      "method": "get",
      "endpoint": "/user/keys",
      "tags": [
        "user"
      ],
      "params": [
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "users/create-public-ssh-key-for-authenticated-user": {
      "displayName": "Create a public SSH key for the authenticated user",
      "description": "Adds a public SSH key to the authenticated user's GitHub account. Requires that you are authenticated via Basic Auth, or...",
      "method": "post",
      "endpoint": "/user/keys",
      "tags": [
        "user"
      ],
      "params": [
        {
          "name": "key",
          "location": "body",
          "required": true,
          "description": "The public SSH key to add to your GitHub account",
          "type": "string",
          "default": ""
        },
        {
          "name": "title",
          "location": "body",
          "required": false,
          "description": "A descriptive name for the new key",
          "type": "string",
          "default": "",
          "placeholder": "e.g. Personal MacBook Air"
        }
      ]
    },
    "users/delete-public-ssh-key-for-authenticated-user": {
      "displayName": "Delete a public SSH key for the authenticated user",
      "description": "Removes a public SSH key from the authenticated user's GitHub account. Requires that you are authenticated via Basic Aut...",
      "method": "delete",
      "endpoint": "/user/keys/{key_id}",
      "tags": [
        "user"
      ],
      "params": [
        {
          "name": "key_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the key",
          "type": "number",
          "default": 0
        }
      ]
    },
    "users/get-public-ssh-key-for-authenticated-user": {
      "displayName": "Get a public SSH key for the authenticated user",
      "description": "View extended details for a single public SSH key. Requires that you are authenticated via Basic Auth or via OAuth with ...",
      "method": "get",
      "endpoint": "/user/keys/{key_id}",
      "tags": [
        "user"
      ],
      "params": [
        {
          "name": "key_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the key",
          "type": "number",
          "default": 0
        }
      ]
    },
    "apps/list-subscriptions-for-authenticated-user": {
      "displayName": "List subscriptions for the authenticated user",
      "description": "Lists the active subscriptions for the authenticated user. You must use a [user-to-server OAuth access token](https://do...",
      "method": "get",
      "endpoint": "/user/marketplace_purchases",
      "tags": [
        "app"
      ],
      "params": [
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "apps/list-subscriptions-for-authenticated-user-stubbed": {
      "displayName": "List subscriptions for the authenticated user (stubbed)",
      "description": "Lists the active subscriptions for the authenticated user. You must use a [user-to-server OAuth access token](https://do...",
      "method": "get",
      "endpoint": "/user/marketplace_purchases/stubbed",
      "tags": [
        "app"
      ],
      "params": [
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "orgs/list-memberships-for-authenticated-user": {
      "displayName": "List organization memberships for the authenticated user",
      "description": "",
      "method": "get",
      "endpoint": "/user/memberships/orgs",
      "tags": [
        "org"
      ],
      "params": [
        {
          "name": "state",
          "location": "query",
          "required": false,
          "description": "Indicates the state of the memberships to return. If not specified, the API returns both active and pending memberships",
          "type": "options",
          "default": "active",
          "options": [
            "active",
            "pending"
          ]
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "orgs/get-membership-for-authenticated-user": {
      "displayName": "Get an organization membership for the authenticated user",
      "description": "",
      "method": "get",
      "endpoint": "/user/memberships/orgs/{org}",
      "tags": [
        "org"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        }
      ]
    },
    "orgs/update-membership-for-authenticated-user": {
      "displayName": "Update an organization membership for the authenticated user",
      "description": "",
      "method": "patch",
      "endpoint": "/user/memberships/orgs/{org}",
      "tags": [
        "org"
      ],
      "params": [
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "state",
          "location": "body",
          "required": true,
          "description": "The state that the membership should be in. Only `\"active\"` will be accepted",
          "type": "string",
          "default": ""
        }
      ]
    },
    "migrations/list-for-authenticated-user": {
      "displayName": "List user migrations",
      "description": "Lists all migrations a user has started",
      "method": "get",
      "endpoint": "/user/migrations",
      "tags": [
        "migration"
      ],
      "params": [
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "migrations/start-for-authenticated-user": {
      "displayName": "Start a user migration",
      "description": "Initiates the generation of a user migration archive",
      "method": "post",
      "endpoint": "/user/migrations",
      "tags": [
        "migration"
      ],
      "params": [
        {
          "name": "exclude",
          "location": "body",
          "required": false,
          "description": "Exclude attributes from the API response to improve performance",
          "type": "string",
          "default": ""
        },
        {
          "name": "exclude_attachments",
          "location": "body",
          "required": false,
          "description": "Do not include attachments in the migration",
          "type": "boolean",
          "default": false
        },
        {
          "name": "exclude_git_data",
          "location": "body",
          "required": false,
          "description": "Indicates whether the repository git data should be excluded from the migration",
          "type": "boolean",
          "default": false
        },
        {
          "name": "exclude_metadata",
          "location": "body",
          "required": false,
          "description": "Indicates whether metadata should be excluded and only git source should be included for the migration",
          "type": "boolean",
          "default": false
        },
        {
          "name": "exclude_owner_projects",
          "location": "body",
          "required": false,
          "description": "Indicates whether projects owned by the organization or users should be excluded",
          "type": "boolean",
          "default": false
        },
        {
          "name": "exclude_releases",
          "location": "body",
          "required": false,
          "description": "Do not include releases in the migration",
          "type": "boolean",
          "default": false
        },
        {
          "name": "lock_repositories",
          "location": "body",
          "required": false,
          "description": "Lock the repositories being migrated at the start of the migration",
          "type": "boolean",
          "default": false
        },
        {
          "name": "org_metadata_only",
          "location": "body",
          "required": false,
          "description": "Indicates whether this should only include organization metadata (repositories array should be empty and will ignore oth...",
          "type": "boolean",
          "default": false
        },
        {
          "name": "repositories",
          "location": "body",
          "required": true,
          "description": "",
          "type": "string",
          "default": ""
        }
      ]
    },
    "migrations/get-status-for-authenticated-user": {
      "displayName": "Get a user migration status",
      "description": "Fetches a single user migration. The response includes the `state` of the migration, which can be one of the following v...",
      "method": "get",
      "endpoint": "/user/migrations/{migration_id}",
      "tags": [
        "migration"
      ],
      "params": [
        {
          "name": "migration_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the migration",
          "type": "number",
          "default": 0
        },
        {
          "name": "exclude",
          "location": "query",
          "required": false,
          "description": "",
          "type": "string",
          "default": ""
        }
      ]
    },
    "migrations/delete-archive-for-authenticated-user": {
      "displayName": "Delete a user migration archive",
      "description": "Deletes a previous migration archive. Downloadable migration archives are automatically deleted after seven days. Migrat...",
      "method": "delete",
      "endpoint": "/user/migrations/{migration_id}/archive",
      "tags": [
        "migration"
      ],
      "params": [
        {
          "name": "migration_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the migration",
          "type": "number",
          "default": 0
        }
      ]
    },
    "migrations/get-archive-for-authenticated-user": {
      "displayName": "Download a user migration archive",
      "description": "Fetches the URL to download the migration archive as a `tar.gz` file. Depending on the resources your repository uses, t...",
      "method": "get",
      "endpoint": "/user/migrations/{migration_id}/archive",
      "tags": [
        "migration"
      ],
      "params": [
        {
          "name": "migration_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the migration",
          "type": "number",
          "default": 0
        }
      ]
    },
    "migrations/unlock-repo-for-authenticated-user": {
      "displayName": "Unlock a user repository",
      "description": "Unlocks a repository. You can lock repositories when you [start a user migration](https://docs.github.com/rest/migration...",
      "method": "delete",
      "endpoint": "/user/migrations/{migration_id}/repos/{repo_name}/lock",
      "tags": [
        "migration"
      ],
      "params": [
        {
          "name": "migration_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the migration",
          "type": "number",
          "default": 0
        },
        {
          "name": "repo_name",
          "location": "path",
          "required": true,
          "description": "repo_name parameter",
          "type": "string",
          "default": ""
        }
      ]
    },
    "migrations/list-repos-for-authenticated-user": {
      "displayName": "List repositories for a user migration",
      "description": "Lists all the repositories for this user migration",
      "method": "get",
      "endpoint": "/user/migrations/{migration_id}/repositories",
      "tags": [
        "migration"
      ],
      "params": [
        {
          "name": "migration_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the migration",
          "type": "number",
          "default": 0
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "orgs/list-for-authenticated-user": {
      "displayName": "List organizations for the authenticated user",
      "description": "List organizations for the authenticated user.  **OAuth scope requirements**  This only lists organizations that your au...",
      "method": "get",
      "endpoint": "/user/orgs",
      "tags": [
        "org"
      ],
      "params": [
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "packages/list-packages-for-authenticated-user": {
      "displayName": "List packages for the authenticated user's namespace",
      "description": "Lists packages owned by the authenticated user within the user's namespace.  To use this endpoint, you must authenticate...",
      "method": "get",
      "endpoint": "/user/packages",
      "tags": [
        "package"
      ],
      "params": [
        {
          "name": "package_type",
          "location": "query",
          "required": true,
          "description": "The type of supported package. Packages in GitHub's Gradle registry have the type `maven`. Docker images pushed to GitHu...",
          "type": "options",
          "default": "npm",
          "options": [
            "npm",
            "maven",
            "rubygems",
            "docker",
            "nuget",
            "container"
          ]
        },
        {
          "name": "visibility",
          "location": "query",
          "required": false,
          "description": "The selected visibility of the packages.  This parameter is optional and only filters an existing result set.  The `inte...",
          "type": "options",
          "default": "public",
          "options": [
            "public",
            "private",
            "internal"
          ]
        }
      ]
    },
    "packages/delete-package-for-authenticated-user": {
      "displayName": "Delete a package for the authenticated user",
      "description": "Deletes a package owned by the authenticated user. You cannot delete a public package if any version of the package has ...",
      "method": "delete",
      "endpoint": "/user/packages/{package_type}/{package_name}",
      "tags": [
        "package"
      ],
      "params": [
        {
          "name": "package_type",
          "location": "path",
          "required": true,
          "description": "The type of supported package. Packages in GitHub's Gradle registry have the type `maven`. Docker images pushed to GitHu...",
          "type": "options",
          "default": "npm",
          "options": [
            "npm",
            "maven",
            "rubygems",
            "docker",
            "nuget",
            "container"
          ]
        },
        {
          "name": "package_name",
          "location": "path",
          "required": true,
          "description": "The name of the package",
          "type": "string",
          "default": ""
        }
      ]
    },
    "packages/get-package-for-authenticated-user": {
      "displayName": "Get a package for the authenticated user",
      "description": "Gets a specific package for a package owned by the authenticated user.  To use this endpoint, you must authenticate usin...",
      "method": "get",
      "endpoint": "/user/packages/{package_type}/{package_name}",
      "tags": [
        "package"
      ],
      "params": [
        {
          "name": "package_type",
          "location": "path",
          "required": true,
          "description": "The type of supported package. Packages in GitHub's Gradle registry have the type `maven`. Docker images pushed to GitHu...",
          "type": "options",
          "default": "npm",
          "options": [
            "npm",
            "maven",
            "rubygems",
            "docker",
            "nuget",
            "container"
          ]
        },
        {
          "name": "package_name",
          "location": "path",
          "required": true,
          "description": "The name of the package",
          "type": "string",
          "default": ""
        }
      ]
    },
    "packages/restore-package-for-authenticated-user": {
      "displayName": "Restore a package for the authenticated user",
      "description": "Restores a package owned by the authenticated user.  You can restore a deleted package under the following conditions:  ...",
      "method": "post",
      "endpoint": "/user/packages/{package_type}/{package_name}/restore",
      "tags": [
        "package"
      ],
      "params": [
        {
          "name": "package_type",
          "location": "path",
          "required": true,
          "description": "The type of supported package. Packages in GitHub's Gradle registry have the type `maven`. Docker images pushed to GitHu...",
          "type": "options",
          "default": "npm",
          "options": [
            "npm",
            "maven",
            "rubygems",
            "docker",
            "nuget",
            "container"
          ]
        },
        {
          "name": "package_name",
          "location": "path",
          "required": true,
          "description": "The name of the package",
          "type": "string",
          "default": ""
        },
        {
          "name": "token",
          "location": "query",
          "required": false,
          "description": "package token",
          "type": "string",
          "default": ""
        }
      ]
    },
    "packages/get-all-package-versions-for-package-owned-by-authenticated-user": {
      "displayName": "List package versions for a package owned by the authenticated user",
      "description": "Lists package versions for a package owned by the authenticated user.  To use this endpoint, you must authenticate using...",
      "method": "get",
      "endpoint": "/user/packages/{package_type}/{package_name}/versions",
      "tags": [
        "package"
      ],
      "params": [
        {
          "name": "package_type",
          "location": "path",
          "required": true,
          "description": "The type of supported package. Packages in GitHub's Gradle registry have the type `maven`. Docker images pushed to GitHu...",
          "type": "options",
          "default": "npm",
          "options": [
            "npm",
            "maven",
            "rubygems",
            "docker",
            "nuget",
            "container"
          ]
        },
        {
          "name": "package_name",
          "location": "path",
          "required": true,
          "description": "The name of the package",
          "type": "string",
          "default": ""
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "state",
          "location": "query",
          "required": false,
          "description": "The state of the package, either active or deleted",
          "type": "options",
          "default": "active",
          "options": [
            "active",
            "deleted"
          ]
        }
      ]
    },
    "packages/delete-package-version-for-authenticated-user": {
      "displayName": "Delete a package version for the authenticated user",
      "description": "Deletes a specific package version for a package owned by the authenticated user.  If the package is public and the pack...",
      "method": "delete",
      "endpoint": "/user/packages/{package_type}/{package_name}/versions/{package_version_id}",
      "tags": [
        "package"
      ],
      "params": [
        {
          "name": "package_type",
          "location": "path",
          "required": true,
          "description": "The type of supported package. Packages in GitHub's Gradle registry have the type `maven`. Docker images pushed to GitHu...",
          "type": "options",
          "default": "npm",
          "options": [
            "npm",
            "maven",
            "rubygems",
            "docker",
            "nuget",
            "container"
          ]
        },
        {
          "name": "package_name",
          "location": "path",
          "required": true,
          "description": "The name of the package",
          "type": "string",
          "default": ""
        },
        {
          "name": "package_version_id",
          "location": "path",
          "required": true,
          "description": "Unique identifier of the package version",
          "type": "number",
          "default": 0
        }
      ]
    },
    "packages/get-package-version-for-authenticated-user": {
      "displayName": "Get a package version for the authenticated user",
      "description": "Gets a specific package version for a package owned by the authenticated user.  To use this endpoint, you must authentic...",
      "method": "get",
      "endpoint": "/user/packages/{package_type}/{package_name}/versions/{package_version_id}",
      "tags": [
        "package"
      ],
      "params": [
        {
          "name": "package_type",
          "location": "path",
          "required": true,
          "description": "The type of supported package. Packages in GitHub's Gradle registry have the type `maven`. Docker images pushed to GitHu...",
          "type": "options",
          "default": "npm",
          "options": [
            "npm",
            "maven",
            "rubygems",
            "docker",
            "nuget",
            "container"
          ]
        },
        {
          "name": "package_name",
          "location": "path",
          "required": true,
          "description": "The name of the package",
          "type": "string",
          "default": ""
        },
        {
          "name": "package_version_id",
          "location": "path",
          "required": true,
          "description": "Unique identifier of the package version",
          "type": "number",
          "default": 0
        }
      ]
    },
    "packages/restore-package-version-for-authenticated-user": {
      "displayName": "Restore a package version for the authenticated user",
      "description": "Restores a package version owned by the authenticated user.  You can restore a deleted package version under the followi...",
      "method": "post",
      "endpoint": "/user/packages/{package_type}/{package_name}/versions/{package_version_id}/restore",
      "tags": [
        "package"
      ],
      "params": [
        {
          "name": "package_type",
          "location": "path",
          "required": true,
          "description": "The type of supported package. Packages in GitHub's Gradle registry have the type `maven`. Docker images pushed to GitHu...",
          "type": "options",
          "default": "npm",
          "options": [
            "npm",
            "maven",
            "rubygems",
            "docker",
            "nuget",
            "container"
          ]
        },
        {
          "name": "package_name",
          "location": "path",
          "required": true,
          "description": "The name of the package",
          "type": "string",
          "default": ""
        },
        {
          "name": "package_version_id",
          "location": "path",
          "required": true,
          "description": "Unique identifier of the package version",
          "type": "number",
          "default": 0
        }
      ]
    },
    "projects/create-for-authenticated-user": {
      "displayName": "Create a user project",
      "description": "Creates a user project board. Returns a `410 Gone` status if the user does not have existing classic projects. If you do...",
      "method": "post",
      "endpoint": "/user/projects",
      "tags": [
        "project"
      ],
      "params": [
        {
          "name": "body",
          "location": "body",
          "required": false,
          "description": "Body of the project",
          "type": "string",
          "default": "",
          "placeholder": "e.g. This project represents the sprint of the first week in January"
        },
        {
          "name": "name",
          "location": "body",
          "required": true,
          "description": "Name of the project",
          "type": "string",
          "default": "",
          "placeholder": "e.g. Week One Sprint"
        }
      ]
    },
    "users/list-public-emails-for-authenticated-user": {
      "displayName": "List public email addresses for the authenticated user",
      "description": "Lists your publicly visible email address, which you can set with the [Set primary email visibility for the authenticate...",
      "method": "get",
      "endpoint": "/user/public_emails",
      "tags": [
        "user"
      ],
      "params": [
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "repos/list-for-authenticated-user": {
      "displayName": "List repositories for the authenticated user",
      "description": "Lists repositories that the authenticated user has explicit permission (`:read`, `:write`, or `:admin`) to access.  The ...",
      "method": "get",
      "endpoint": "/user/repos",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "visibility",
          "location": "query",
          "required": false,
          "description": "Limit results to repositories with the specified visibility",
          "type": "options",
          "default": "all",
          "options": [
            "all",
            "public",
            "private"
          ]
        },
        {
          "name": "affiliation",
          "location": "query",
          "required": false,
          "description": "Comma-separated list of values. Can include:    * `owner`: Repositories that are owned by the authenticated user.    * `...",
          "type": "string",
          "default": "owner,collaborator,organization_member"
        },
        {
          "name": "type",
          "location": "query",
          "required": false,
          "description": "Limit results to repositories of the specified type. Will cause a `422` error if used in the same request as **visibilit...",
          "type": "options",
          "default": "all",
          "options": [
            "all",
            "owner",
            "public",
            "private",
            "member"
          ]
        },
        {
          "name": "sort",
          "location": "query",
          "required": false,
          "description": "The property to sort the results by",
          "type": "options",
          "default": "full_name",
          "options": [
            "created",
            "updated",
            "pushed",
            "full_name"
          ]
        },
        {
          "name": "direction",
          "location": "query",
          "required": false,
          "description": "The order to sort by. Default: `asc` when using `full_name`, otherwise `desc`",
          "type": "options",
          "default": "asc",
          "options": [
            "asc",
            "desc"
          ]
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        },
        {
          "name": "since",
          "location": "query",
          "required": false,
          "description": "Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/IS...",
          "type": "string",
          "default": ""
        },
        {
          "name": "before",
          "location": "query",
          "required": false,
          "description": "Only show notifications updated before the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/I...",
          "type": "string",
          "default": ""
        }
      ]
    },
    "repos/create-for-authenticated-user": {
      "displayName": "Create a repository for the authenticated user",
      "description": "Creates a new repository for the authenticated user.  **OAuth scope requirements**  When using [OAuth](https://docs.gith...",
      "method": "post",
      "endpoint": "/user/repos",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "allow_auto_merge",
          "location": "body",
          "required": false,
          "description": "Whether to allow Auto-merge to be used on pull requests",
          "type": "boolean",
          "default": false
        },
        {
          "name": "allow_merge_commit",
          "location": "body",
          "required": false,
          "description": "Whether to allow merge commits for pull requests",
          "type": "boolean",
          "default": false
        },
        {
          "name": "allow_rebase_merge",
          "location": "body",
          "required": false,
          "description": "Whether to allow rebase merges for pull requests",
          "type": "boolean",
          "default": false
        },
        {
          "name": "allow_squash_merge",
          "location": "body",
          "required": false,
          "description": "Whether to allow squash merges for pull requests",
          "type": "boolean",
          "default": false
        },
        {
          "name": "auto_init",
          "location": "body",
          "required": false,
          "description": "Whether the repository is initialized with a minimal README",
          "type": "boolean",
          "default": false
        },
        {
          "name": "delete_branch_on_merge",
          "location": "body",
          "required": false,
          "description": "Whether to delete head branches when pull requests are merged",
          "type": "boolean",
          "default": false
        },
        {
          "name": "description",
          "location": "body",
          "required": false,
          "description": "A short description of the repository",
          "type": "string",
          "default": ""
        },
        {
          "name": "gitignore_template",
          "location": "body",
          "required": false,
          "description": "The desired language or platform to apply to the .gitignore",
          "type": "string",
          "default": "",
          "placeholder": "e.g. Haskell"
        },
        {
          "name": "has_discussions",
          "location": "body",
          "required": false,
          "description": "Whether discussions are enabled",
          "type": "boolean",
          "default": false
        },
        {
          "name": "has_downloads",
          "location": "body",
          "required": false,
          "description": "Whether downloads are enabled",
          "type": "boolean",
          "default": false
        },
        {
          "name": "has_issues",
          "location": "body",
          "required": false,
          "description": "Whether issues are enabled",
          "type": "boolean",
          "default": false
        },
        {
          "name": "has_projects",
          "location": "body",
          "required": false,
          "description": "Whether projects are enabled",
          "type": "boolean",
          "default": false
        },
        {
          "name": "has_wiki",
          "location": "body",
          "required": false,
          "description": "Whether the wiki is enabled",
          "type": "boolean",
          "default": false
        },
        {
          "name": "homepage",
          "location": "body",
          "required": false,
          "description": "A URL with more information about the repository",
          "type": "string",
          "default": ""
        },
        {
          "name": "is_template",
          "location": "body",
          "required": false,
          "description": "Whether this repository acts as a template that can be used to generate new repositories",
          "type": "boolean",
          "default": false
        },
        {
          "name": "license_template",
          "location": "body",
          "required": false,
          "description": "The license keyword of the open source license for this repository",
          "type": "string",
          "default": "",
          "placeholder": "e.g. mit"
        },
        {
          "name": "merge_commit_message",
          "location": "body",
          "required": false,
          "description": "The default value for a merge commit message.  - `PR_TITLE` - default to the pull request's title. - `PR_BODY` - default...",
          "type": "string",
          "default": ""
        },
        {
          "name": "merge_commit_title",
          "location": "body",
          "required": false,
          "description": "The default value for a merge commit title.  - `PR_TITLE` - default to the pull request's title. - `MERGE_MESSAGE` - def...",
          "type": "string",
          "default": ""
        },
        {
          "name": "name",
          "location": "body",
          "required": true,
          "description": "The name of the repository",
          "type": "string",
          "default": "",
          "placeholder": "e.g. Team Environment"
        },
        {
          "name": "private",
          "location": "body",
          "required": false,
          "description": "Whether the repository is private",
          "type": "boolean",
          "default": false
        },
        {
          "name": "squash_merge_commit_message",
          "location": "body",
          "required": false,
          "description": "The default value for a squash merge commit message:  - `PR_BODY` - default to the pull request's body. - `COMMIT_MESSAG...",
          "type": "string",
          "default": ""
        },
        {
          "name": "squash_merge_commit_title",
          "location": "body",
          "required": false,
          "description": "The default value for a squash merge commit title:  - `PR_TITLE` - default to the pull request's title. - `COMMIT_OR_PR_...",
          "type": "string",
          "default": ""
        },
        {
          "name": "team_id",
          "location": "body",
          "required": false,
          "description": "The id of the team that will be granted access to this repository. This is only valid when creating a repository in an o...",
          "type": "number",
          "default": 0
        }
      ]
    },
    "repos/list-invitations-for-authenticated-user": {
      "displayName": "List repository invitations for the authenticated user",
      "description": "When authenticating as a user, this endpoint will list all currently open repository invitations for that user",
      "method": "get",
      "endpoint": "/user/repository_invitations",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "repos/decline-invitation-for-authenticated-user": {
      "displayName": "Decline a repository invitation",
      "description": "",
      "method": "delete",
      "endpoint": "/user/repository_invitations/{invitation_id}",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "invitation_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the invitation",
          "type": "number",
          "default": 0
        }
      ]
    },
    "repos/accept-invitation-for-authenticated-user": {
      "displayName": "Accept a repository invitation",
      "description": "",
      "method": "patch",
      "endpoint": "/user/repository_invitations/{invitation_id}",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "invitation_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the invitation",
          "type": "number",
          "default": 0
        }
      ]
    },
    "users/list-ssh-signing-keys-for-authenticated-user": {
      "displayName": "List SSH signing keys for the authenticated user",
      "description": "Lists the SSH signing keys for the authenticated user's GitHub account. You must authenticate with Basic Authentication,...",
      "method": "get",
      "endpoint": "/user/ssh_signing_keys",
      "tags": [
        "user"
      ],
      "params": [
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "users/create-ssh-signing-key-for-authenticated-user": {
      "displayName": "Create a SSH signing key for the authenticated user",
      "description": "Creates an SSH signing key for the authenticated user's GitHub account. You must authenticate with Basic Authentication,...",
      "method": "post",
      "endpoint": "/user/ssh_signing_keys",
      "tags": [
        "user"
      ],
      "params": [
        {
          "name": "key",
          "location": "body",
          "required": true,
          "description": "The public SSH key to add to your GitHub account. For more information, see \"[Checking for existing SSH keys](https://do...",
          "type": "string",
          "default": ""
        },
        {
          "name": "title",
          "location": "body",
          "required": false,
          "description": "A descriptive name for the new key",
          "type": "string",
          "default": "",
          "placeholder": "e.g. Personal MacBook Air"
        }
      ]
    },
    "users/delete-ssh-signing-key-for-authenticated-user": {
      "displayName": "Delete an SSH signing key for the authenticated user",
      "description": "Deletes an SSH signing key from the authenticated user's GitHub account. You must authenticate with Basic Authentication...",
      "method": "delete",
      "endpoint": "/user/ssh_signing_keys/{ssh_signing_key_id}",
      "tags": [
        "user"
      ],
      "params": [
        {
          "name": "ssh_signing_key_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the SSH signing key",
          "type": "number",
          "default": 0
        }
      ]
    },
    "users/get-ssh-signing-key-for-authenticated-user": {
      "displayName": "Get an SSH signing key for the authenticated user",
      "description": "Gets extended details for an SSH signing key. You must authenticate with Basic Authentication, or you must authenticate ...",
      "method": "get",
      "endpoint": "/user/ssh_signing_keys/{ssh_signing_key_id}",
      "tags": [
        "user"
      ],
      "params": [
        {
          "name": "ssh_signing_key_id",
          "location": "path",
          "required": true,
          "description": "The unique identifier of the SSH signing key",
          "type": "number",
          "default": 0
        }
      ]
    },
    "activity/list-repos-starred-by-authenticated-user": {
      "displayName": "List repositories starred by the authenticated user",
      "description": "Lists repositories the authenticated user has starred.  You can also find out _when_ stars were created by passing the f...",
      "method": "get",
      "endpoint": "/user/starred",
      "tags": [
        "activity"
      ],
      "params": [
        {
          "name": "sort",
          "location": "query",
          "required": false,
          "description": "The property to sort the results by. `created` means when the repository was starred. `updated` means when the repositor...",
          "type": "options",
          "default": "created",
          "options": [
            "created",
            "updated"
          ]
        },
        {
          "name": "direction",
          "location": "query",
          "required": false,
          "description": "The direction to sort the results by",
          "type": "options",
          "default": "desc",
          "options": [
            "asc",
            "desc"
          ]
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "activity/unstar-repo-for-authenticated-user": {
      "displayName": "Unstar a repository for the authenticated user",
      "description": "",
      "method": "delete",
      "endpoint": "/user/starred/{owner}/{repo}",
      "tags": [
        "activity"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        }
      ]
    },
    "activity/check-repo-is-starred-by-authenticated-user": {
      "displayName": "Check if a repository is starred by the authenticated user",
      "description": "",
      "method": "get",
      "endpoint": "/user/starred/{owner}/{repo}",
      "tags": [
        "activity"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        }
      ]
    },
    "activity/star-repo-for-authenticated-user": {
      "displayName": "Star a repository for the authenticated user",
      "description": "Note that you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see \"[HTT...",
      "method": "put",
      "endpoint": "/user/starred/{owner}/{repo}",
      "tags": [
        "activity"
      ],
      "params": [
        {
          "name": "owner",
          "location": "path",
          "required": true,
          "description": "The account owner of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "repo",
          "location": "path",
          "required": true,
          "description": "The name of the repository. The name is not case sensitive",
          "type": "string",
          "default": ""
        }
      ]
    },
    "activity/list-watched-repos-for-authenticated-user": {
      "displayName": "List repositories watched by the authenticated user",
      "description": "Lists repositories the authenticated user is watching",
      "method": "get",
      "endpoint": "/user/subscriptions",
      "tags": [
        "activity"
      ],
      "params": [
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "teams/list-for-authenticated-user": {
      "displayName": "List teams for the authenticated user",
      "description": "List all of the teams across all of the organizations to which the authenticated user belongs. This method requires `use...",
      "method": "get",
      "endpoint": "/user/teams",
      "tags": [
        "team"
      ],
      "params": [
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "users/list": {
      "displayName": "List users",
      "description": "Lists all users, in the order that they signed up on GitHub. This list includes personal user accounts and organization ...",
      "method": "get",
      "endpoint": "/users",
      "tags": [
        "user"
      ],
      "params": [
        {
          "name": "since",
          "location": "query",
          "required": false,
          "description": "A user ID. Only return users with an ID greater than this ID",
          "type": "number",
          "default": 0
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        }
      ]
    },
    "users/get-by-username": {
      "displayName": "Get a user",
      "description": "Provides publicly available information about someone with a GitHub account.  GitHub Apps with the `Plan` user permissio...",
      "method": "get",
      "endpoint": "/users/{username}",
      "tags": [
        "user"
      ],
      "params": [
        {
          "name": "username",
          "location": "path",
          "required": true,
          "description": "The handle for the GitHub user account",
          "type": "string",
          "default": ""
        }
      ]
    },
    "activity/list-events-for-authenticated-user": {
      "displayName": "List events for the authenticated user",
      "description": "If you are authenticated as the given user, you will see your private events. Otherwise, you'll only see public events",
      "method": "get",
      "endpoint": "/users/{username}/events",
      "tags": [
        "activity"
      ],
      "params": [
        {
          "name": "username",
          "location": "path",
          "required": true,
          "description": "The handle for the GitHub user account",
          "type": "string",
          "default": ""
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "activity/list-org-events-for-authenticated-user": {
      "displayName": "List organization events for the authenticated user",
      "description": "This is the user's organization dashboard. You must be authenticated as the user to view this",
      "method": "get",
      "endpoint": "/users/{username}/events/orgs/{org}",
      "tags": [
        "activity"
      ],
      "params": [
        {
          "name": "username",
          "location": "path",
          "required": true,
          "description": "The handle for the GitHub user account",
          "type": "string",
          "default": ""
        },
        {
          "name": "org",
          "location": "path",
          "required": true,
          "description": "The organization name. The name is not case sensitive",
          "type": "string",
          "default": ""
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "activity/list-public-events-for-user": {
      "displayName": "List public events for a user",
      "description": "",
      "method": "get",
      "endpoint": "/users/{username}/events/public",
      "tags": [
        "activity"
      ],
      "params": [
        {
          "name": "username",
          "location": "path",
          "required": true,
          "description": "The handle for the GitHub user account",
          "type": "string",
          "default": ""
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "users/list-followers-for-user": {
      "displayName": "List followers of a user",
      "description": "Lists the people following the specified user",
      "method": "get",
      "endpoint": "/users/{username}/followers",
      "tags": [
        "user"
      ],
      "params": [
        {
          "name": "username",
          "location": "path",
          "required": true,
          "description": "The handle for the GitHub user account",
          "type": "string",
          "default": ""
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "users/list-following-for-user": {
      "displayName": "List the people a user follows",
      "description": "Lists the people who the specified user follows",
      "method": "get",
      "endpoint": "/users/{username}/following",
      "tags": [
        "user"
      ],
      "params": [
        {
          "name": "username",
          "location": "path",
          "required": true,
          "description": "The handle for the GitHub user account",
          "type": "string",
          "default": ""
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "users/check-following-for-user": {
      "displayName": "Check if a user follows another user",
      "description": "",
      "method": "get",
      "endpoint": "/users/{username}/following/{target_user}",
      "tags": [
        "user"
      ],
      "params": [
        {
          "name": "username",
          "location": "path",
          "required": true,
          "description": "The handle for the GitHub user account",
          "type": "string",
          "default": ""
        },
        {
          "name": "target_user",
          "location": "path",
          "required": true,
          "description": "",
          "type": "string",
          "default": ""
        }
      ]
    },
    "gists/list-for-user": {
      "displayName": "List gists for a user",
      "description": "Lists public gists for the specified user:",
      "method": "get",
      "endpoint": "/users/{username}/gists",
      "tags": [
        "gist"
      ],
      "params": [
        {
          "name": "username",
          "location": "path",
          "required": true,
          "description": "The handle for the GitHub user account",
          "type": "string",
          "default": ""
        },
        {
          "name": "since",
          "location": "query",
          "required": false,
          "description": "Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/IS...",
          "type": "string",
          "default": ""
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "users/list-gpg-keys-for-user": {
      "displayName": "List GPG keys for a user",
      "description": "Lists the GPG keys for a user. This information is accessible by anyone",
      "method": "get",
      "endpoint": "/users/{username}/gpg_keys",
      "tags": [
        "user"
      ],
      "params": [
        {
          "name": "username",
          "location": "path",
          "required": true,
          "description": "The handle for the GitHub user account",
          "type": "string",
          "default": ""
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "users/get-context-for-user": {
      "displayName": "Get contextual information for a user",
      "description": "Provides hovercard information when authenticated through basic auth or OAuth with the `repo` scope. You can find out mo...",
      "method": "get",
      "endpoint": "/users/{username}/hovercard",
      "tags": [
        "user"
      ],
      "params": [
        {
          "name": "username",
          "location": "path",
          "required": true,
          "description": "The handle for the GitHub user account",
          "type": "string",
          "default": ""
        },
        {
          "name": "subject_type",
          "location": "query",
          "required": false,
          "description": "Identifies which additional information you'd like to receive about the person's hovercard. Can be `organization`, `repo...",
          "type": "options",
          "default": "organization",
          "options": [
            "organization",
            "repository",
            "issue",
            "pull_request"
          ]
        },
        {
          "name": "subject_id",
          "location": "query",
          "required": false,
          "description": "Uses the ID for the `subject_type` you specified. **Required** when using `subject_type`",
          "type": "string",
          "default": ""
        }
      ]
    },
    "apps/get-user-installation": {
      "displayName": "Get a user installation for the authenticated app",
      "description": "Enables an authenticated GitHub App to find the user’s installation information.  You must use a [JWT](https://docs.gith...",
      "method": "get",
      "endpoint": "/users/{username}/installation",
      "tags": [
        "app"
      ],
      "params": [
        {
          "name": "username",
          "location": "path",
          "required": true,
          "description": "The handle for the GitHub user account",
          "type": "string",
          "default": ""
        }
      ]
    },
    "users/list-public-keys-for-user": {
      "displayName": "List public keys for a user",
      "description": "Lists the _verified_ public SSH keys for a user. This is accessible by anyone",
      "method": "get",
      "endpoint": "/users/{username}/keys",
      "tags": [
        "user"
      ],
      "params": [
        {
          "name": "username",
          "location": "path",
          "required": true,
          "description": "The handle for the GitHub user account",
          "type": "string",
          "default": ""
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "orgs/list-for-user": {
      "displayName": "List organizations for a user",
      "description": "List [public organization memberships](https://docs.github.com/articles/publicizing-or-concealing-organization-membershi...",
      "method": "get",
      "endpoint": "/users/{username}/orgs",
      "tags": [
        "org"
      ],
      "params": [
        {
          "name": "username",
          "location": "path",
          "required": true,
          "description": "The handle for the GitHub user account",
          "type": "string",
          "default": ""
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "packages/list-packages-for-user": {
      "displayName": "List packages for a user",
      "description": "Lists all packages in a user's namespace for which the requesting user has access.  To use this endpoint, you must authe...",
      "method": "get",
      "endpoint": "/users/{username}/packages",
      "tags": [
        "package"
      ],
      "params": [
        {
          "name": "package_type",
          "location": "query",
          "required": true,
          "description": "The type of supported package. Packages in GitHub's Gradle registry have the type `maven`. Docker images pushed to GitHu...",
          "type": "options",
          "default": "npm",
          "options": [
            "npm",
            "maven",
            "rubygems",
            "docker",
            "nuget",
            "container"
          ]
        },
        {
          "name": "visibility",
          "location": "query",
          "required": false,
          "description": "The selected visibility of the packages.  This parameter is optional and only filters an existing result set.  The `inte...",
          "type": "options",
          "default": "public",
          "options": [
            "public",
            "private",
            "internal"
          ]
        },
        {
          "name": "username",
          "location": "path",
          "required": true,
          "description": "The handle for the GitHub user account",
          "type": "string",
          "default": ""
        }
      ]
    },
    "packages/delete-package-for-user": {
      "displayName": "Delete a package for a user",
      "description": "Deletes an entire package for a user. You cannot delete a public package if any version of the package has more than 5,0...",
      "method": "delete",
      "endpoint": "/users/{username}/packages/{package_type}/{package_name}",
      "tags": [
        "package"
      ],
      "params": [
        {
          "name": "package_type",
          "location": "path",
          "required": true,
          "description": "The type of supported package. Packages in GitHub's Gradle registry have the type `maven`. Docker images pushed to GitHu...",
          "type": "options",
          "default": "npm",
          "options": [
            "npm",
            "maven",
            "rubygems",
            "docker",
            "nuget",
            "container"
          ]
        },
        {
          "name": "package_name",
          "location": "path",
          "required": true,
          "description": "The name of the package",
          "type": "string",
          "default": ""
        },
        {
          "name": "username",
          "location": "path",
          "required": true,
          "description": "The handle for the GitHub user account",
          "type": "string",
          "default": ""
        }
      ]
    },
    "packages/get-package-for-user": {
      "displayName": "Get a package for a user",
      "description": "Gets a specific package metadata for a public package owned by a user.  To use this endpoint, you must authenticate usin...",
      "method": "get",
      "endpoint": "/users/{username}/packages/{package_type}/{package_name}",
      "tags": [
        "package"
      ],
      "params": [
        {
          "name": "package_type",
          "location": "path",
          "required": true,
          "description": "The type of supported package. Packages in GitHub's Gradle registry have the type `maven`. Docker images pushed to GitHu...",
          "type": "options",
          "default": "npm",
          "options": [
            "npm",
            "maven",
            "rubygems",
            "docker",
            "nuget",
            "container"
          ]
        },
        {
          "name": "package_name",
          "location": "path",
          "required": true,
          "description": "The name of the package",
          "type": "string",
          "default": ""
        },
        {
          "name": "username",
          "location": "path",
          "required": true,
          "description": "The handle for the GitHub user account",
          "type": "string",
          "default": ""
        }
      ]
    },
    "packages/restore-package-for-user": {
      "displayName": "Restore a package for a user",
      "description": "Restores an entire package for a user.  You can restore a deleted package under the following conditions:   - The packag...",
      "method": "post",
      "endpoint": "/users/{username}/packages/{package_type}/{package_name}/restore",
      "tags": [
        "package"
      ],
      "params": [
        {
          "name": "package_type",
          "location": "path",
          "required": true,
          "description": "The type of supported package. Packages in GitHub's Gradle registry have the type `maven`. Docker images pushed to GitHu...",
          "type": "options",
          "default": "npm",
          "options": [
            "npm",
            "maven",
            "rubygems",
            "docker",
            "nuget",
            "container"
          ]
        },
        {
          "name": "package_name",
          "location": "path",
          "required": true,
          "description": "The name of the package",
          "type": "string",
          "default": ""
        },
        {
          "name": "username",
          "location": "path",
          "required": true,
          "description": "The handle for the GitHub user account",
          "type": "string",
          "default": ""
        },
        {
          "name": "token",
          "location": "query",
          "required": false,
          "description": "package token",
          "type": "string",
          "default": ""
        }
      ]
    },
    "packages/get-all-package-versions-for-package-owned-by-user": {
      "displayName": "List package versions for a package owned by a user",
      "description": "Lists package versions for a public package owned by a specified user.  To use this endpoint, you must authenticate usin...",
      "method": "get",
      "endpoint": "/users/{username}/packages/{package_type}/{package_name}/versions",
      "tags": [
        "package"
      ],
      "params": [
        {
          "name": "package_type",
          "location": "path",
          "required": true,
          "description": "The type of supported package. Packages in GitHub's Gradle registry have the type `maven`. Docker images pushed to GitHu...",
          "type": "options",
          "default": "npm",
          "options": [
            "npm",
            "maven",
            "rubygems",
            "docker",
            "nuget",
            "container"
          ]
        },
        {
          "name": "package_name",
          "location": "path",
          "required": true,
          "description": "The name of the package",
          "type": "string",
          "default": ""
        },
        {
          "name": "username",
          "location": "path",
          "required": true,
          "description": "The handle for the GitHub user account",
          "type": "string",
          "default": ""
        }
      ]
    },
    "packages/delete-package-version-for-user": {
      "displayName": "Delete package version for a user",
      "description": "Deletes a specific package version for a user. If the package is public and the package version has more than 5,000 down...",
      "method": "delete",
      "endpoint": "/users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}",
      "tags": [
        "package"
      ],
      "params": [
        {
          "name": "package_type",
          "location": "path",
          "required": true,
          "description": "The type of supported package. Packages in GitHub's Gradle registry have the type `maven`. Docker images pushed to GitHu...",
          "type": "options",
          "default": "npm",
          "options": [
            "npm",
            "maven",
            "rubygems",
            "docker",
            "nuget",
            "container"
          ]
        },
        {
          "name": "package_name",
          "location": "path",
          "required": true,
          "description": "The name of the package",
          "type": "string",
          "default": ""
        },
        {
          "name": "username",
          "location": "path",
          "required": true,
          "description": "The handle for the GitHub user account",
          "type": "string",
          "default": ""
        },
        {
          "name": "package_version_id",
          "location": "path",
          "required": true,
          "description": "Unique identifier of the package version",
          "type": "number",
          "default": 0
        }
      ]
    },
    "packages/get-package-version-for-user": {
      "displayName": "Get a package version for a user",
      "description": "Gets a specific package version for a public package owned by a specified user.  At this time, to use this endpoint, you...",
      "method": "get",
      "endpoint": "/users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}",
      "tags": [
        "package"
      ],
      "params": [
        {
          "name": "package_type",
          "location": "path",
          "required": true,
          "description": "The type of supported package. Packages in GitHub's Gradle registry have the type `maven`. Docker images pushed to GitHu...",
          "type": "options",
          "default": "npm",
          "options": [
            "npm",
            "maven",
            "rubygems",
            "docker",
            "nuget",
            "container"
          ]
        },
        {
          "name": "package_name",
          "location": "path",
          "required": true,
          "description": "The name of the package",
          "type": "string",
          "default": ""
        },
        {
          "name": "package_version_id",
          "location": "path",
          "required": true,
          "description": "Unique identifier of the package version",
          "type": "number",
          "default": 0
        },
        {
          "name": "username",
          "location": "path",
          "required": true,
          "description": "The handle for the GitHub user account",
          "type": "string",
          "default": ""
        }
      ]
    },
    "packages/restore-package-version-for-user": {
      "displayName": "Restore package version for a user",
      "description": "Restores a specific package version for a user.  You can restore a deleted package under the following conditions:   - T...",
      "method": "post",
      "endpoint": "/users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore",
      "tags": [
        "package"
      ],
      "params": [
        {
          "name": "package_type",
          "location": "path",
          "required": true,
          "description": "The type of supported package. Packages in GitHub's Gradle registry have the type `maven`. Docker images pushed to GitHu...",
          "type": "options",
          "default": "npm",
          "options": [
            "npm",
            "maven",
            "rubygems",
            "docker",
            "nuget",
            "container"
          ]
        },
        {
          "name": "package_name",
          "location": "path",
          "required": true,
          "description": "The name of the package",
          "type": "string",
          "default": ""
        },
        {
          "name": "username",
          "location": "path",
          "required": true,
          "description": "The handle for the GitHub user account",
          "type": "string",
          "default": ""
        },
        {
          "name": "package_version_id",
          "location": "path",
          "required": true,
          "description": "Unique identifier of the package version",
          "type": "number",
          "default": 0
        }
      ]
    },
    "projects/list-for-user": {
      "displayName": "List user projects",
      "description": "",
      "method": "get",
      "endpoint": "/users/{username}/projects",
      "tags": [
        "project"
      ],
      "params": [
        {
          "name": "username",
          "location": "path",
          "required": true,
          "description": "The handle for the GitHub user account",
          "type": "string",
          "default": ""
        },
        {
          "name": "state",
          "location": "query",
          "required": false,
          "description": "Indicates the state of the projects to return",
          "type": "options",
          "default": "open",
          "options": [
            "open",
            "closed",
            "all"
          ]
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "activity/list-received-events-for-user": {
      "displayName": "List events received by the authenticated user",
      "description": "These are events that you've received by watching repos and following users. If you are authenticated as the given user,...",
      "method": "get",
      "endpoint": "/users/{username}/received_events",
      "tags": [
        "activity"
      ],
      "params": [
        {
          "name": "username",
          "location": "path",
          "required": true,
          "description": "The handle for the GitHub user account",
          "type": "string",
          "default": ""
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "activity/list-received-public-events-for-user": {
      "displayName": "List public events received by a user",
      "description": "",
      "method": "get",
      "endpoint": "/users/{username}/received_events/public",
      "tags": [
        "activity"
      ],
      "params": [
        {
          "name": "username",
          "location": "path",
          "required": true,
          "description": "The handle for the GitHub user account",
          "type": "string",
          "default": ""
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "repos/list-for-user": {
      "displayName": "List repositories for a user",
      "description": "Lists public repositories for the specified user. Note: For GitHub AE, this endpoint will list internal repositories for...",
      "method": "get",
      "endpoint": "/users/{username}/repos",
      "tags": [
        "repo"
      ],
      "params": [
        {
          "name": "username",
          "location": "path",
          "required": true,
          "description": "The handle for the GitHub user account",
          "type": "string",
          "default": ""
        },
        {
          "name": "type",
          "location": "query",
          "required": false,
          "description": "Limit results to repositories of the specified type",
          "type": "options",
          "default": "owner",
          "options": [
            "all",
            "owner",
            "member"
          ]
        },
        {
          "name": "sort",
          "location": "query",
          "required": false,
          "description": "The property to sort the results by",
          "type": "options",
          "default": "full_name",
          "options": [
            "created",
            "updated",
            "pushed",
            "full_name"
          ]
        },
        {
          "name": "direction",
          "location": "query",
          "required": false,
          "description": "The order to sort by. Default: `asc` when using `full_name`, otherwise `desc`",
          "type": "options",
          "default": "asc",
          "options": [
            "asc",
            "desc"
          ]
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "billing/get-github-actions-billing-user": {
      "displayName": "Get GitHub Actions billing for a user",
      "description": "Gets the summary of the free and paid GitHub Actions minutes used.  Paid minutes only apply to workflows in private repo...",
      "method": "get",
      "endpoint": "/users/{username}/settings/billing/actions",
      "tags": [
        "billing"
      ],
      "params": [
        {
          "name": "username",
          "location": "path",
          "required": true,
          "description": "The handle for the GitHub user account",
          "type": "string",
          "default": ""
        }
      ]
    },
    "billing/get-github-packages-billing-user": {
      "displayName": "Get GitHub Packages billing for a user",
      "description": "Gets the free and paid storage used for GitHub Packages in gigabytes.  Paid minutes only apply to packages stored for pr...",
      "method": "get",
      "endpoint": "/users/{username}/settings/billing/packages",
      "tags": [
        "billing"
      ],
      "params": [
        {
          "name": "username",
          "location": "path",
          "required": true,
          "description": "The handle for the GitHub user account",
          "type": "string",
          "default": ""
        }
      ]
    },
    "billing/get-shared-storage-billing-user": {
      "displayName": "Get shared storage billing for a user",
      "description": "Gets the estimated paid and estimated total storage used for GitHub Actions and GitHub Packages.  Paid minutes only appl...",
      "method": "get",
      "endpoint": "/users/{username}/settings/billing/shared-storage",
      "tags": [
        "billing"
      ],
      "params": [
        {
          "name": "username",
          "location": "path",
          "required": true,
          "description": "The handle for the GitHub user account",
          "type": "string",
          "default": ""
        }
      ]
    },
    "users/list-ssh-signing-keys-for-user": {
      "displayName": "List SSH signing keys for a user",
      "description": "Lists the SSH signing keys for a user. This operation is accessible by anyone",
      "method": "get",
      "endpoint": "/users/{username}/ssh_signing_keys",
      "tags": [
        "user"
      ],
      "params": [
        {
          "name": "username",
          "location": "path",
          "required": true,
          "description": "The handle for the GitHub user account",
          "type": "string",
          "default": ""
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "activity/list-repos-starred-by-user": {
      "displayName": "List repositories starred by a user",
      "description": "Lists repositories a user has starred.  You can also find out _when_ stars were created by passing the following custom ...",
      "method": "get",
      "endpoint": "/users/{username}/starred",
      "tags": [
        "activity"
      ],
      "params": [
        {
          "name": "username",
          "location": "path",
          "required": true,
          "description": "The handle for the GitHub user account",
          "type": "string",
          "default": ""
        },
        {
          "name": "sort",
          "location": "query",
          "required": false,
          "description": "The property to sort the results by. `created` means when the repository was starred. `updated` means when the repositor...",
          "type": "options",
          "default": "created",
          "options": [
            "created",
            "updated"
          ]
        },
        {
          "name": "direction",
          "location": "query",
          "required": false,
          "description": "The direction to sort the results by",
          "type": "options",
          "default": "desc",
          "options": [
            "asc",
            "desc"
          ]
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "activity/list-repos-watched-by-user": {
      "displayName": "List repositories watched by a user",
      "description": "Lists repositories a user is watching",
      "method": "get",
      "endpoint": "/users/{username}/subscriptions",
      "tags": [
        "activity"
      ],
      "params": [
        {
          "name": "username",
          "location": "path",
          "required": true,
          "description": "The handle for the GitHub user account",
          "type": "string",
          "default": ""
        },
        {
          "name": "per_page",
          "location": "query",
          "required": false,
          "description": "The number of results per page (max 100)",
          "type": "number",
          "default": 30
        },
        {
          "name": "page",
          "location": "query",
          "required": false,
          "description": "Page number of the results to fetch",
          "type": "number",
          "default": 1
        }
      ]
    },
    "meta/get-all-versions": {
      "displayName": "Get all API versions",
      "description": "Get all supported GitHub API versions",
      "method": "get",
      "endpoint": "/versions",
      "tags": [
        "meta"
      ],
      "params": []
    },
    "meta/get-zen": {
      "displayName": "Get the Zen of GitHub",
      "description": "Get a random sentence from the Zen of GitHub",
      "method": "get",
      "endpoint": "/zen",
      "tags": [
        "meta"
      ],
      "params": []
    }
  }
}