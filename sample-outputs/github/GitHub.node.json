{
	"displayName": "Git Hub",
	"name": "gitHub",
	"description": "GitHub's v3 REST API",
	"version": 1,
	"group": ["transform"],
	"subtitle": "={{ $parameter[\"operation\"] }}",
	"defaults": { "name": "Git Hub" },
	"inputs": ["main"],
	"outputs": ["main"],
	"requestDefaults": {
		"baseURL": "https://api.github.com",
		"headers": { "Content-Type": "application/json" },
		"returnFullResponse": true
	},
	"properties": [
		{
			"displayName": "Resource",
			"name": "resource",
			"type": "options",
			"noDataExpression": true,
			"options": [
				{ "name": "Meta", "value": "meta" },
				{ "name": "App", "value": "app" },
				{ "name": "Codes Of Conduct", "value": "codesOfConduct" },
				{ "name": "Emoji", "value": "emoji" },
				{ "name": "Dependabot", "value": "dependabot" },
				{ "name": "Secret Scanning", "value": "secretScanning" },
				{ "name": "Activity", "value": "activity" },
				{ "name": "Gist", "value": "gist" },
				{ "name": "Gitignore", "value": "gitignore" },
				{ "name": "Issue", "value": "issue" },
				{ "name": "License", "value": "license" },
				{ "name": "Markdown", "value": "markdown" },
				{ "name": "Org", "value": "org" },
				{ "name": "Action", "value": "action" },
				{ "name": "Oidc", "value": "oidc" },
				{ "name": "Code Scanning", "value": "codeScanning" },
				{ "name": "Codespace", "value": "codespace" },
				{ "name": "Interaction", "value": "interaction" },
				{ "name": "Migration", "value": "migration" },
				{ "name": "Package", "value": "package" },
				{ "name": "Project", "value": "project" },
				{ "name": "Repo", "value": "repo" },
				{ "name": "Billing", "value": "billing" },
				{ "name": "Team", "value": "team" },
				{ "name": "Reaction", "value": "reaction" },
				{ "name": "Rate Limit", "value": "rateLimit" },
				{ "name": "Check", "value": "check" },
				{ "name": "Dependency Graph", "value": "dependencyGraph" },
				{ "name": "Git", "value": "git" },
				{ "name": "Pull", "value": "pull" },
				{ "name": "Search", "value": "search" },
				{ "name": "User", "value": "user" }
			],
			"default": "meta"
		},
		{
			"displayName": "Operation",
			"name": "operation",
			"type": "options",
			"noDataExpression": true,
			"default": "meta/root",
			"options": [
				{
					"name": "GitHub API Root",
					"value": "meta/root",
					"action": "Get Hypermedia links to resources accessible in GitHub's REST API",
					"routing": { "request": { "method": "GET", "url": "/" } }
				},
				{
					"name": "Get GitHub meta information",
					"value": "meta/get",
					"action": "Returns meta information about GitHub, including a list of GitHub's IP addresses. For more information, see \"[About GitH...",
					"routing": { "request": { "method": "GET", "url": "/meta" } }
				},
				{
					"name": "Get Octocat",
					"value": "meta/get-octocat",
					"action": "Get the octocat as ASCII art",
					"routing": { "request": { "method": "GET", "url": "/octocat" } }
				},
				{
					"name": "Get all API versions",
					"value": "meta/get-all-versions",
					"action": "Get all supported GitHub API versions",
					"routing": { "request": { "method": "GET", "url": "/versions" } }
				},
				{
					"name": "Get the Zen of GitHub",
					"value": "meta/get-zen",
					"action": "Get a random sentence from the Zen of GitHub",
					"routing": { "request": { "method": "GET", "url": "/zen" } }
				}
			],
			"displayOptions": { "show": { "resource": ["meta"] } }
		},
		{
			"displayName": "Operation",
			"name": "operation",
			"type": "options",
			"noDataExpression": true,
			"default": "apps/get-authenticated",
			"options": [
				{
					"name": "Get the authenticated app",
					"value": "apps/get-authenticated",
					"action": "Returns the GitHub App associated with the authentication credentials used. To see how many app installations are associ...",
					"routing": { "request": { "method": "GET", "url": "/app" } }
				},
				{
					"name": "Create a GitHub App from a manifest",
					"value": "apps/create-from-manifest",
					"action": "Use this endpoint to complete the handshake necessary when implementing the [GitHub App Manifest flow](https://docs.gith...",
					"routing": {
						"request": {
							"method": "POST",
							"url": "=/app-manifests/{{ $parameter[\"code\"] }}/conversions"
						}
					}
				},
				{
					"name": "Get a webhook configuration for an app",
					"value": "apps/get-webhook-config-for-app",
					"action": "Returns the webhook configuration for a GitHub App. For more information about configuring a webhook for your app, see \"...",
					"routing": { "request": { "method": "GET", "url": "/app/hook/config" } }
				},
				{
					"name": "Update a webhook configuration for an app",
					"value": "apps/update-webhook-config-for-app",
					"action": "Updates the webhook configuration for a GitHub App. For more information about configuring a webhook for your app, see \"...",
					"routing": { "request": { "method": "PATCH", "url": "/app/hook/config" } }
				},
				{
					"name": "List deliveries for an app webhook",
					"value": "apps/list-webhook-deliveries",
					"action": "Returns a list of webhook deliveries for the webhook configured for a GitHub App.  You must use a [JWT](https://docs.git...",
					"routing": { "request": { "method": "GET", "url": "/app/hook/deliveries" } }
				},
				{
					"name": "Get a delivery for an app webhook",
					"value": "apps/get-webhook-delivery",
					"action": "Returns a delivery for the webhook configured for a GitHub App.  You must use a [JWT](https://docs.github.com/apps/build...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/app/hook/deliveries/{{ $parameter[\"delivery_id\"] }}"
						}
					}
				},
				{
					"name": "Redeliver a delivery for an app webhook",
					"value": "apps/redeliver-webhook-delivery",
					"action": "Redeliver a delivery for the webhook configured for a GitHub App.  You must use a [JWT](https://docs.github.com/apps/bui...",
					"routing": {
						"request": {
							"method": "POST",
							"url": "=/app/hook/deliveries/{{ $parameter[\"delivery_id\"] }}/attempts"
						}
					}
				},
				{
					"name": "List installations for the authenticated app",
					"value": "apps/list-installations",
					"action": "You must use a [JWT](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-a...",
					"routing": { "request": { "method": "GET", "url": "/app/installations" } }
				},
				{
					"name": "Delete an installation for the authenticated app",
					"value": "apps/delete-installation",
					"action": "Uninstalls a GitHub App on a user, organization, or business account. If you prefer to temporarily suspend an app's acce...",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/app/installations/{{ $parameter[\"installation_id\"] }}"
						}
					}
				},
				{
					"name": "Get an installation for the authenticated app",
					"value": "apps/get-installation",
					"action": "Enables an authenticated GitHub App to find an installation's information using the installation id.  You must use a [JW...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/app/installations/{{ $parameter[\"installation_id\"] }}"
						}
					}
				},
				{
					"name": "Create an installation access token for an app",
					"value": "apps/create-installation-access-token",
					"action": "Creates an installation access token that enables a GitHub App to make authenticated API requests for the app's installa...",
					"routing": {
						"request": {
							"method": "POST",
							"url": "=/app/installations/{{ $parameter[\"installation_id\"] }}/access_tokens"
						}
					}
				},
				{
					"name": "Unsuspend an app installation",
					"value": "apps/unsuspend-installation",
					"action": "Removes a GitHub App installation suspension.  You must use a [JWT](https://docs.github.com/apps/building-github-apps/au...",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/app/installations/{{ $parameter[\"installation_id\"] }}/suspended"
						}
					}
				},
				{
					"name": "Suspend an app installation",
					"value": "apps/suspend-installation",
					"action": "Suspends a GitHub App on a user, organization, or business account, which blocks the app from accessing the account's re...",
					"routing": {
						"request": {
							"method": "PUT",
							"url": "=/app/installations/{{ $parameter[\"installation_id\"] }}/suspended"
						}
					}
				},
				{
					"name": "Delete an app authorization",
					"value": "apps/delete-authorization",
					"action": "OAuth application owners can revoke a grant for their OAuth application and a specific user. You must use [Basic Authent...",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/applications/{{ $parameter[\"client_id\"] }}/grant"
						}
					}
				},
				{
					"name": "Delete an app token",
					"value": "apps/delete-token",
					"action": "OAuth application owners can revoke a single token for an OAuth application. You must use [Basic Authentication](https:/...",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/applications/{{ $parameter[\"client_id\"] }}/token"
						}
					}
				},
				{
					"name": "Reset a token",
					"value": "apps/reset-token",
					"action": "OAuth applications can use this API method to reset a valid OAuth token without end-user involvement. Applications must ...",
					"routing": {
						"request": {
							"method": "PATCH",
							"url": "=/applications/{{ $parameter[\"client_id\"] }}/token"
						}
					}
				},
				{
					"name": "Check a token",
					"value": "apps/check-token",
					"action": "OAuth applications can use a special API method for checking OAuth token validity without exceeding the normal rate limi...",
					"routing": {
						"request": {
							"method": "POST",
							"url": "=/applications/{{ $parameter[\"client_id\"] }}/token"
						}
					}
				},
				{
					"name": "Create a scoped access token",
					"value": "apps/scope-token",
					"action": "Use a non-scoped user-to-server access token to create a repository scoped and/or permission scoped user-to-server acces...",
					"routing": {
						"request": {
							"method": "POST",
							"url": "=/applications/{{ $parameter[\"client_id\"] }}/token/scoped"
						}
					}
				},
				{
					"name": "Get an app",
					"value": "apps/get-by-slug",
					"action": "**Note**: The `:app_slug` is just the URL-friendly name of your GitHub App. You can find this on the settings page for y...",
					"routing": {
						"request": { "method": "GET", "url": "=/apps/{{ $parameter[\"app_slug\"] }}" }
					}
				},
				{
					"name": "List repositories accessible to the app installation",
					"value": "apps/list-repos-accessible-to-installation",
					"action": "List repositories that an app installation can access.  You must use an [installation access token](https://docs.github....",
					"routing": { "request": { "method": "GET", "url": "/installation/repositories" } }
				},
				{
					"name": "Revoke an installation access token",
					"value": "apps/revoke-installation-access-token",
					"action": "Revokes the installation token you're using to authenticate as an installation and access this endpoint.  Once an instal...",
					"routing": { "request": { "method": "DELETE", "url": "/installation/token" } }
				},
				{
					"name": "Get a subscription plan for an account",
					"value": "apps/get-subscription-plan-for-account",
					"action": "Shows whether the user or organization account actively subscribes to a plan listed by the authenticated GitHub App. Whe...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/marketplace_listing/accounts/{{ $parameter[\"account_id\"] }}"
						}
					}
				},
				{
					"name": "List plans",
					"value": "apps/list-plans",
					"action": "Lists all plans that are part of your GitHub Marketplace listing.  GitHub Apps must use a [JWT](https://docs.github.com/...",
					"routing": { "request": { "method": "GET", "url": "/marketplace_listing/plans" } }
				},
				{
					"name": "List accounts for a plan",
					"value": "apps/list-accounts-for-plan",
					"action": "Returns user and organization accounts associated with the specified plan, including free plans. For per-seat pricing, y...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/marketplace_listing/plans/{{ $parameter[\"plan_id\"] }}/accounts"
						}
					}
				},
				{
					"name": "Get a subscription plan for an account (stubbed)",
					"value": "apps/get-subscription-plan-for-account-stubbed",
					"action": "Shows whether the user or organization account actively subscribes to a plan listed by the authenticated GitHub App. Whe...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/marketplace_listing/stubbed/accounts/{{ $parameter[\"account_id\"] }}"
						}
					}
				},
				{
					"name": "List plans (stubbed)",
					"value": "apps/list-plans-stubbed",
					"action": "Lists all plans that are part of your GitHub Marketplace listing.  GitHub Apps must use a [JWT](https://docs.github.com/...",
					"routing": { "request": { "method": "GET", "url": "/marketplace_listing/stubbed/plans" } }
				},
				{
					"name": "List accounts for a plan (stubbed)",
					"value": "apps/list-accounts-for-plan-stubbed",
					"action": "Returns repository and organization accounts associated with the specified plan, including free plans. For per-seat pric...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/marketplace_listing/stubbed/plans/{{ $parameter[\"plan_id\"] }}/accounts"
						}
					}
				},
				{
					"name": "Get an organization installation for the authenticated app",
					"value": "apps/get-org-installation",
					"action": "Enables an authenticated GitHub App to find the organization's installation information.  You must use a [JWT](https://d...",
					"routing": {
						"request": { "method": "GET", "url": "=/orgs/{{ $parameter[\"org\"] }}/installation" }
					}
				},
				{
					"name": "Get a repository installation for the authenticated app",
					"value": "apps/get-repo-installation",
					"action": "Enables an authenticated GitHub App to find the repository's installation information. The installation's account type w...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/installation"
						}
					}
				},
				{
					"name": "List app installations accessible to the user access token",
					"value": "apps/list-installations-for-authenticated-user",
					"action": "Lists installations of your GitHub App that the authenticated user has explicit permission (`:read`, `:write`, or `:admi...",
					"routing": { "request": { "method": "GET", "url": "/user/installations" } }
				},
				{
					"name": "List repositories accessible to the user access token",
					"value": "apps/list-installation-repos-for-authenticated-user",
					"action": "List repositories that the authenticated user has explicit permission (`:read`, `:write`, or `:admin`) to access for an ...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/user/installations/{{ $parameter[\"installation_id\"] }}/repositories"
						}
					}
				},
				{
					"name": "Remove a repository from an app installation",
					"value": "apps/remove-repo-from-installation-for-authenticated-user",
					"action": "Remove a single repository from an installation. The authenticated user must have admin access to the repository.  You m...",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/user/installations/{{ $parameter[\"installation_id\"] }}/repositories/{repository_id}"
						}
					}
				},
				{
					"name": "Add a repository to an app installation",
					"value": "apps/add-repo-to-installation-for-authenticated-user",
					"action": "Add a single repository to an installation. The authenticated user must have admin access to the repository.  You must u...",
					"routing": {
						"request": {
							"method": "PUT",
							"url": "=/user/installations/{{ $parameter[\"installation_id\"] }}/repositories/{repository_id}"
						}
					}
				},
				{
					"name": "List subscriptions for the authenticated user",
					"value": "apps/list-subscriptions-for-authenticated-user",
					"action": "Lists the active subscriptions for the authenticated user. You must use a [user-to-server OAuth access token](https://do...",
					"routing": { "request": { "method": "GET", "url": "/user/marketplace_purchases" } }
				},
				{
					"name": "List subscriptions for the authenticated user (stubbed)",
					"value": "apps/list-subscriptions-for-authenticated-user-stubbed",
					"action": "Lists the active subscriptions for the authenticated user. You must use a [user-to-server OAuth access token](https://do...",
					"routing": {
						"request": { "method": "GET", "url": "/user/marketplace_purchases/stubbed" }
					}
				},
				{
					"name": "Get a user installation for the authenticated app",
					"value": "apps/get-user-installation",
					"action": "Enables an authenticated GitHub App to find the user’s installation information.  You must use a [JWT](https://docs.gith...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/users/{{ $parameter[\"username\"] }}/installation"
						}
					}
				}
			],
			"displayOptions": { "show": { "resource": ["app"] } }
		},
		{
			"displayName": "Operation",
			"name": "operation",
			"type": "options",
			"noDataExpression": true,
			"default": "codes-of-conduct/get-all-codes-of-conduct",
			"options": [
				{
					"name": "Get all codes of conduct",
					"value": "codes-of-conduct/get-all-codes-of-conduct",
					"action": "",
					"routing": { "request": { "method": "GET", "url": "/codes_of_conduct" } }
				},
				{
					"name": "Get a code of conduct",
					"value": "codes-of-conduct/get-conduct-code",
					"action": "",
					"routing": {
						"request": { "method": "GET", "url": "=/codes_of_conduct/{{ $parameter[\"key\"] }}" }
					}
				}
			],
			"displayOptions": { "show": { "resource": ["codesOfConduct"] } }
		},
		{
			"displayName": "Operation",
			"name": "operation",
			"type": "options",
			"noDataExpression": true,
			"default": "emojis/get",
			"options": [
				{
					"name": "Get emojis",
					"value": "emojis/get",
					"action": "Lists all the emojis available to use on GitHub",
					"routing": { "request": { "method": "GET", "url": "/emojis" } }
				}
			],
			"displayOptions": { "show": { "resource": ["emoji"] } }
		},
		{
			"displayName": "Operation",
			"name": "operation",
			"type": "options",
			"noDataExpression": true,
			"default": "dependabot/list-alerts-for-enterprise",
			"options": [
				{
					"name": "List Dependabot alerts for an enterprise",
					"value": "dependabot/list-alerts-for-enterprise",
					"action": "Lists Dependabot alerts for repositories that are owned by the specified enterprise. To use this endpoint, you must be a...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/enterprises/{{ $parameter[\"enterprise\"] }}/dependabot/alerts"
						}
					}
				},
				{
					"name": "List Dependabot alerts for an organization",
					"value": "dependabot/list-alerts-for-org",
					"action": "Lists Dependabot alerts for an organization.  To use this endpoint, you must be an owner or security manager for the org...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/dependabot/alerts"
						}
					}
				},
				{
					"name": "List organization secrets",
					"value": "dependabot/list-org-secrets",
					"action": "Lists all secrets available in an organization without revealing their encrypted values. You must authenticate using an ...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/dependabot/secrets"
						}
					}
				},
				{
					"name": "Get an organization public key",
					"value": "dependabot/get-org-public-key",
					"action": "Gets your public key, which you need to encrypt secrets. You need to encrypt a secret before you can create or update se...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/dependabot/secrets/public-key"
						}
					}
				},
				{
					"name": "Delete an organization secret",
					"value": "dependabot/delete-org-secret",
					"action": "Deletes a secret in an organization using the secret name. You must authenticate using an access token with the `admin:o...",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/dependabot/secrets/{secret_name}"
						}
					}
				},
				{
					"name": "Get an organization secret",
					"value": "dependabot/get-org-secret",
					"action": "Gets a single organization secret without revealing its encrypted value. You must authenticate using an access token wit...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/dependabot/secrets/{secret_name}"
						}
					}
				},
				{
					"name": "Create or update an organization secret",
					"value": "dependabot/create-or-update-org-secret",
					"action": "Creates or updates an organization secret with an encrypted value. Encrypt your secret using [LibSodium](https://libsodi...",
					"routing": {
						"request": {
							"method": "PUT",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/dependabot/secrets/{secret_name}"
						}
					}
				},
				{
					"name": "List selected repositories for an organization secret",
					"value": "dependabot/list-selected-repos-for-org-secret",
					"action": "Lists all repositories that have been selected when the `visibility` for repository access to a secret is set to `select...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/dependabot/secrets/{secret_name}/repositories"
						}
					}
				},
				{
					"name": "Set selected repositories for an organization secret",
					"value": "dependabot/set-selected-repos-for-org-secret",
					"action": "Replaces all repositories for an organization secret when the `visibility` for repository access is set to `selected`. T...",
					"routing": {
						"request": {
							"method": "PUT",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/dependabot/secrets/{secret_name}/repositories"
						}
					}
				},
				{
					"name": "Remove selected repository from an organization secret",
					"value": "dependabot/remove-selected-repo-from-org-secret",
					"action": "Removes a repository from an organization secret when the `visibility` for repository access is set to `selected`. The v...",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/dependabot/secrets/{secret_name}/repositories/{repository_id}"
						}
					}
				},
				{
					"name": "Add selected repository to an organization secret",
					"value": "dependabot/add-selected-repo-to-org-secret",
					"action": "Adds a repository to an organization secret when the `visibility` for repository access is set to `selected`. The visibi...",
					"routing": {
						"request": {
							"method": "PUT",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/dependabot/secrets/{secret_name}/repositories/{repository_id}"
						}
					}
				},
				{
					"name": "List Dependabot alerts for a repository",
					"value": "dependabot/list-alerts-for-repo",
					"action": "You must use an access token with the `security_events` scope to use this endpoint with private repositories. You can al...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/dependabot/alerts"
						}
					}
				},
				{
					"name": "Get a Dependabot alert",
					"value": "dependabot/get-alert",
					"action": "You must use an access token with the `security_events` scope to use this endpoint with private repositories. You can al...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/dependabot/alerts/{alert_number}"
						}
					}
				},
				{
					"name": "Update a Dependabot alert",
					"value": "dependabot/update-alert",
					"action": "You must use an access token with the `security_events` scope to use this endpoint with private repositories. You can al...",
					"routing": {
						"request": {
							"method": "PATCH",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/dependabot/alerts/{alert_number}"
						}
					}
				},
				{
					"name": "List repository secrets",
					"value": "dependabot/list-repo-secrets",
					"action": "Lists all secrets available in a repository without revealing their encrypted values. You must authenticate using an acc...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/dependabot/secrets"
						}
					}
				},
				{
					"name": "Get a repository public key",
					"value": "dependabot/get-repo-public-key",
					"action": "Gets your public key, which you need to encrypt secrets. You need to encrypt a secret before you can create or update se...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/dependabot/secrets/public-key"
						}
					}
				},
				{
					"name": "Delete a repository secret",
					"value": "dependabot/delete-repo-secret",
					"action": "Deletes a secret in a repository using the secret name. You must authenticate using an access token with the `repo` scop...",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/dependabot/secrets/{secret_name}"
						}
					}
				},
				{
					"name": "Get a repository secret",
					"value": "dependabot/get-repo-secret",
					"action": "Gets a single repository secret without revealing its encrypted value. You must authenticate using an access token with ...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/dependabot/secrets/{secret_name}"
						}
					}
				},
				{
					"name": "Create or update a repository secret",
					"value": "dependabot/create-or-update-repo-secret",
					"action": "Creates or updates a repository secret with an encrypted value. Encrypt your secret using [LibSodium](https://libsodium....",
					"routing": {
						"request": {
							"method": "PUT",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/dependabot/secrets/{secret_name}"
						}
					}
				}
			],
			"displayOptions": { "show": { "resource": ["dependabot"] } }
		},
		{
			"displayName": "Operation",
			"name": "operation",
			"type": "options",
			"noDataExpression": true,
			"default": "secret-scanning/list-alerts-for-enterprise",
			"options": [
				{
					"name": "List secret scanning alerts for an enterprise",
					"value": "secret-scanning/list-alerts-for-enterprise",
					"action": "Lists secret scanning alerts for eligible repositories in an enterprise, from newest to oldest. To use this endpoint, yo...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/enterprises/{{ $parameter[\"enterprise\"] }}/secret-scanning/alerts"
						}
					}
				},
				{
					"name": "List secret scanning alerts for an organization",
					"value": "secret-scanning/list-alerts-for-org",
					"action": "Lists secret scanning alerts for eligible repositories in an organization, from newest to oldest. To use this endpoint, ...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/secret-scanning/alerts"
						}
					}
				},
				{
					"name": "List secret scanning alerts for a repository",
					"value": "secret-scanning/list-alerts-for-repo",
					"action": "Lists secret scanning alerts for an eligible repository, from newest to oldest. To use this endpoint, you must be an adm...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/secret-scanning/alerts"
						}
					}
				},
				{
					"name": "Get a secret scanning alert",
					"value": "secret-scanning/get-alert",
					"action": "Gets a single secret scanning alert detected in an eligible repository. To use this endpoint, you must be an administrat...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/secret-scanning/alerts/{alert_number}"
						}
					}
				},
				{
					"name": "Update a secret scanning alert",
					"value": "secret-scanning/update-alert",
					"action": "Updates the status of a secret scanning alert in an eligible repository. To use this endpoint, you must be an administra...",
					"routing": {
						"request": {
							"method": "PATCH",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/secret-scanning/alerts/{alert_number}"
						}
					}
				},
				{
					"name": "List locations for a secret scanning alert",
					"value": "secret-scanning/list-locations-for-alert",
					"action": "Lists all locations for a given secret scanning alert for an eligible repository. To use this endpoint, you must be an a...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/secret-scanning/alerts/{alert_number}/locations"
						}
					}
				}
			],
			"displayOptions": { "show": { "resource": ["secretScanning"] } }
		},
		{
			"displayName": "Operation",
			"name": "operation",
			"type": "options",
			"noDataExpression": true,
			"default": "activity/list-public-events",
			"options": [
				{
					"name": "List public events",
					"value": "activity/list-public-events",
					"action": "We delay the public events feed by five minutes, which means the most recent event returned by the public events API act...",
					"routing": { "request": { "method": "GET", "url": "/events" } }
				},
				{
					"name": "Get feeds",
					"value": "activity/get-feeds",
					"action": "GitHub provides several timeline resources in [Atom](http://en.wikipedia.org/wiki/Atom_(standard)) format. The Feeds API...",
					"routing": { "request": { "method": "GET", "url": "/feeds" } }
				},
				{
					"name": "List public events for a network of repositories",
					"value": "activity/list-public-events-for-repo-network",
					"action": "",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/networks/{{ $parameter[\"owner\"] }}/{repo}/events"
						}
					}
				},
				{
					"name": "List notifications for the authenticated user",
					"value": "activity/list-notifications-for-authenticated-user",
					"action": "List all notifications for the current user, sorted by most recently updated",
					"routing": { "request": { "method": "GET", "url": "/notifications" } }
				},
				{
					"name": "Mark notifications as read",
					"value": "activity/mark-notifications-as-read",
					"action": "Marks all notifications as \"read\" for the current user. If the number of notifications is too large to complete in one r...",
					"routing": { "request": { "method": "PUT", "url": "/notifications" } }
				},
				{
					"name": "Get a thread",
					"value": "activity/get-thread",
					"action": "Gets information about a notification thread",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/notifications/threads/{{ $parameter[\"thread_id\"] }}"
						}
					}
				},
				{
					"name": "Mark a thread as read",
					"value": "activity/mark-thread-as-read",
					"action": "Marks a thread as \"read.\" Marking a thread as \"read\" is equivalent to clicking a notification in your notification inbox...",
					"routing": {
						"request": {
							"method": "PATCH",
							"url": "=/notifications/threads/{{ $parameter[\"thread_id\"] }}"
						}
					}
				},
				{
					"name": "Delete a thread subscription",
					"value": "activity/delete-thread-subscription",
					"action": "Mutes all future notifications for a conversation until you comment on the thread or get an **@mention**. If you are wat...",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/notifications/threads/{{ $parameter[\"thread_id\"] }}/subscription"
						}
					}
				},
				{
					"name": "Get a thread subscription for the authenticated user",
					"value": "activity/get-thread-subscription-for-authenticated-user",
					"action": "This checks to see if the current user is subscribed to a thread. You can also [get a repository subscription](https://d...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/notifications/threads/{{ $parameter[\"thread_id\"] }}/subscription"
						}
					}
				},
				{
					"name": "Set a thread subscription",
					"value": "activity/set-thread-subscription",
					"action": "If you are watching a repository, you receive notifications for all threads by default. Use this endpoint to ignore futu...",
					"routing": {
						"request": {
							"method": "PUT",
							"url": "=/notifications/threads/{{ $parameter[\"thread_id\"] }}/subscription"
						}
					}
				},
				{
					"name": "List public organization events",
					"value": "activity/list-public-org-events",
					"action": "",
					"routing": {
						"request": { "method": "GET", "url": "=/orgs/{{ $parameter[\"org\"] }}/events" }
					}
				},
				{
					"name": "List repository events",
					"value": "activity/list-repo-events",
					"action": "",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/events"
						}
					}
				},
				{
					"name": "List repository notifications for the authenticated user",
					"value": "activity/list-repo-notifications-for-authenticated-user",
					"action": "Lists all notifications for the current user in the specified repository",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/notifications"
						}
					}
				},
				{
					"name": "Mark repository notifications as read",
					"value": "activity/mark-repo-notifications-as-read",
					"action": "Marks all notifications in a repository as \"read\" for the current user. If the number of notifications is too large to c...",
					"routing": {
						"request": {
							"method": "PUT",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/notifications"
						}
					}
				},
				{
					"name": "List stargazers",
					"value": "activity/list-stargazers-for-repo",
					"action": "Lists the people that have starred the repository.  You can also find out _when_ stars were created by passing the follo...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/stargazers"
						}
					}
				},
				{
					"name": "List watchers",
					"value": "activity/list-watchers-for-repo",
					"action": "Lists the people watching the specified repository",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/subscribers"
						}
					}
				},
				{
					"name": "Delete a repository subscription",
					"value": "activity/delete-repo-subscription",
					"action": "This endpoint should only be used to stop watching a repository. To control whether or not you wish to receive notificat...",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/subscription"
						}
					}
				},
				{
					"name": "Get a repository subscription",
					"value": "activity/get-repo-subscription",
					"action": "",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/subscription"
						}
					}
				},
				{
					"name": "Set a repository subscription",
					"value": "activity/set-repo-subscription",
					"action": "If you would like to watch a repository, set `subscribed` to `true`. If you would like to ignore notifications made with...",
					"routing": {
						"request": {
							"method": "PUT",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/subscription"
						}
					}
				},
				{
					"name": "List repositories starred by the authenticated user",
					"value": "activity/list-repos-starred-by-authenticated-user",
					"action": "Lists repositories the authenticated user has starred.  You can also find out _when_ stars were created by passing the f...",
					"routing": { "request": { "method": "GET", "url": "/user/starred" } }
				},
				{
					"name": "Unstar a repository for the authenticated user",
					"value": "activity/unstar-repo-for-authenticated-user",
					"action": "",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/user/starred/{{ $parameter[\"owner\"] }}/{repo}"
						}
					}
				},
				{
					"name": "Check if a repository is starred by the authenticated user",
					"value": "activity/check-repo-is-starred-by-authenticated-user",
					"action": "",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/user/starred/{{ $parameter[\"owner\"] }}/{repo}"
						}
					}
				},
				{
					"name": "Star a repository for the authenticated user",
					"value": "activity/star-repo-for-authenticated-user",
					"action": "Note that you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see \"[HTT...",
					"routing": {
						"request": {
							"method": "PUT",
							"url": "=/user/starred/{{ $parameter[\"owner\"] }}/{repo}"
						}
					}
				},
				{
					"name": "List repositories watched by the authenticated user",
					"value": "activity/list-watched-repos-for-authenticated-user",
					"action": "Lists repositories the authenticated user is watching",
					"routing": { "request": { "method": "GET", "url": "/user/subscriptions" } }
				},
				{
					"name": "List events for the authenticated user",
					"value": "activity/list-events-for-authenticated-user",
					"action": "If you are authenticated as the given user, you will see your private events. Otherwise, you'll only see public events",
					"routing": {
						"request": { "method": "GET", "url": "=/users/{{ $parameter[\"username\"] }}/events" }
					}
				},
				{
					"name": "List organization events for the authenticated user",
					"value": "activity/list-org-events-for-authenticated-user",
					"action": "This is the user's organization dashboard. You must be authenticated as the user to view this",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/users/{{ $parameter[\"username\"] }}/events/orgs/{org}"
						}
					}
				},
				{
					"name": "List public events for a user",
					"value": "activity/list-public-events-for-user",
					"action": "",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/users/{{ $parameter[\"username\"] }}/events/public"
						}
					}
				},
				{
					"name": "List events received by the authenticated user",
					"value": "activity/list-received-events-for-user",
					"action": "These are events that you've received by watching repos and following users. If you are authenticated as the given user,...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/users/{{ $parameter[\"username\"] }}/received_events"
						}
					}
				},
				{
					"name": "List public events received by a user",
					"value": "activity/list-received-public-events-for-user",
					"action": "",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/users/{{ $parameter[\"username\"] }}/received_events/public"
						}
					}
				},
				{
					"name": "List repositories starred by a user",
					"value": "activity/list-repos-starred-by-user",
					"action": "Lists repositories a user has starred.  You can also find out _when_ stars were created by passing the following custom ...",
					"routing": {
						"request": { "method": "GET", "url": "=/users/{{ $parameter[\"username\"] }}/starred" }
					}
				},
				{
					"name": "List repositories watched by a user",
					"value": "activity/list-repos-watched-by-user",
					"action": "Lists repositories a user is watching",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/users/{{ $parameter[\"username\"] }}/subscriptions"
						}
					}
				}
			],
			"displayOptions": { "show": { "resource": ["activity"] } }
		},
		{
			"displayName": "Operation",
			"name": "operation",
			"type": "options",
			"noDataExpression": true,
			"default": "gists/list",
			"options": [
				{
					"name": "List gists for the authenticated user",
					"value": "gists/list",
					"action": "Lists the authenticated user's gists or if called anonymously, this endpoint returns all public gists:",
					"routing": { "request": { "method": "GET", "url": "/gists" } }
				},
				{
					"name": "Create a gist",
					"value": "gists/create",
					"action": "Allows you to add a new gist with one or more files.  **Note:** Don't name your files \"gistfile\" with a numerical suffix...",
					"routing": { "request": { "method": "POST", "url": "/gists" } }
				},
				{
					"name": "List public gists",
					"value": "gists/list-public",
					"action": "List public gists sorted by most recently updated to least recently updated.  Note: With [pagination](https://docs.githu...",
					"routing": { "request": { "method": "GET", "url": "/gists/public" } }
				},
				{
					"name": "List starred gists",
					"value": "gists/list-starred",
					"action": "List the authenticated user's starred gists:",
					"routing": { "request": { "method": "GET", "url": "/gists/starred" } }
				},
				{
					"name": "Delete a gist",
					"value": "gists/delete",
					"action": "",
					"routing": {
						"request": { "method": "DELETE", "url": "=/gists/{{ $parameter[\"gist_id\"] }}" }
					}
				},
				{
					"name": "Get a gist",
					"value": "gists/get",
					"action": "",
					"routing": {
						"request": { "method": "GET", "url": "=/gists/{{ $parameter[\"gist_id\"] }}" }
					}
				},
				{
					"name": "Update a gist",
					"value": "gists/update",
					"action": "Allows you to update a gist's description and to update, delete, or rename gist files. Files from the previous version o...",
					"routing": {
						"request": { "method": "PATCH", "url": "=/gists/{{ $parameter[\"gist_id\"] }}" }
					}
				},
				{
					"name": "List gist comments",
					"value": "gists/list-comments",
					"action": "",
					"routing": {
						"request": { "method": "GET", "url": "=/gists/{{ $parameter[\"gist_id\"] }}/comments" }
					}
				},
				{
					"name": "Create a gist comment",
					"value": "gists/create-comment",
					"action": "",
					"routing": {
						"request": { "method": "POST", "url": "=/gists/{{ $parameter[\"gist_id\"] }}/comments" }
					}
				},
				{
					"name": "Delete a gist comment",
					"value": "gists/delete-comment",
					"action": "",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/gists/{{ $parameter[\"gist_id\"] }}/comments/{comment_id}"
						}
					}
				},
				{
					"name": "Get a gist comment",
					"value": "gists/get-comment",
					"action": "",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/gists/{{ $parameter[\"gist_id\"] }}/comments/{comment_id}"
						}
					}
				},
				{
					"name": "Update a gist comment",
					"value": "gists/update-comment",
					"action": "",
					"routing": {
						"request": {
							"method": "PATCH",
							"url": "=/gists/{{ $parameter[\"gist_id\"] }}/comments/{comment_id}"
						}
					}
				},
				{
					"name": "List gist commits",
					"value": "gists/list-commits",
					"action": "",
					"routing": {
						"request": { "method": "GET", "url": "=/gists/{{ $parameter[\"gist_id\"] }}/commits" }
					}
				},
				{
					"name": "List gist forks",
					"value": "gists/list-forks",
					"action": "",
					"routing": {
						"request": { "method": "GET", "url": "=/gists/{{ $parameter[\"gist_id\"] }}/forks" }
					}
				},
				{
					"name": "Fork a gist",
					"value": "gists/fork",
					"action": "",
					"routing": {
						"request": { "method": "POST", "url": "=/gists/{{ $parameter[\"gist_id\"] }}/forks" }
					}
				},
				{
					"name": "Unstar a gist",
					"value": "gists/unstar",
					"action": "",
					"routing": {
						"request": { "method": "DELETE", "url": "=/gists/{{ $parameter[\"gist_id\"] }}/star" }
					}
				},
				{
					"name": "Check if a gist is starred",
					"value": "gists/check-is-starred",
					"action": "",
					"routing": {
						"request": { "method": "GET", "url": "=/gists/{{ $parameter[\"gist_id\"] }}/star" }
					}
				},
				{
					"name": "Star a gist",
					"value": "gists/star",
					"action": "Note that you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see \"[HTT...",
					"routing": {
						"request": { "method": "PUT", "url": "=/gists/{{ $parameter[\"gist_id\"] }}/star" }
					}
				},
				{
					"name": "Get a gist revision",
					"value": "gists/get-revision",
					"action": "",
					"routing": {
						"request": { "method": "GET", "url": "=/gists/{{ $parameter[\"gist_id\"] }}/{sha}" }
					}
				},
				{
					"name": "List gists for a user",
					"value": "gists/list-for-user",
					"action": "Lists public gists for the specified user:",
					"routing": {
						"request": { "method": "GET", "url": "=/users/{{ $parameter[\"username\"] }}/gists" }
					}
				}
			],
			"displayOptions": { "show": { "resource": ["gist"] } }
		},
		{
			"displayName": "Operation",
			"name": "operation",
			"type": "options",
			"noDataExpression": true,
			"default": "gitignore/get-all-templates",
			"options": [
				{
					"name": "Get all gitignore templates",
					"value": "gitignore/get-all-templates",
					"action": "List all templates available to pass as an option when [creating a repository](https://docs.github.com/rest/reference/re...",
					"routing": { "request": { "method": "GET", "url": "/gitignore/templates" } }
				},
				{
					"name": "Get a gitignore template",
					"value": "gitignore/get-template",
					"action": "The API also allows fetching the source of a single template. Use the raw [media type](https://docs.github.com/rest/over...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/gitignore/templates/{{ $parameter[\"name\"] }}"
						}
					}
				}
			],
			"displayOptions": { "show": { "resource": ["gitignore"] } }
		},
		{
			"displayName": "Operation",
			"name": "operation",
			"type": "options",
			"noDataExpression": true,
			"default": "issues/list",
			"options": [
				{
					"name": "List issues assigned to the authenticated user",
					"value": "issues/list",
					"action": "List issues assigned to the authenticated user across all visible repositories including owned repositories, member repo...",
					"routing": { "request": { "method": "GET", "url": "/issues" } }
				},
				{
					"name": "List organization issues assigned to the authenticated user",
					"value": "issues/list-for-org",
					"action": "List issues in an organization assigned to the authenticated user.  **Note**: GitHub's REST API considers every pull req...",
					"routing": {
						"request": { "method": "GET", "url": "=/orgs/{{ $parameter[\"org\"] }}/issues" }
					}
				},
				{
					"name": "List assignees",
					"value": "issues/list-assignees",
					"action": "Lists the [available assignees](https://docs.github.com/articles/assigning-issues-and-pull-requests-to-other-github-user...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/assignees"
						}
					}
				},
				{
					"name": "Check if a user can be assigned",
					"value": "issues/check-user-can-be-assigned",
					"action": "Checks if a user has permission to be assigned to an issue in this repository.  If the `assignee` can be assigned to iss...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/assignees/{assignee}"
						}
					}
				},
				{
					"name": "List repository issues",
					"value": "issues/list-for-repo",
					"action": "List issues in a repository. Only open issues will be listed.  **Note**: GitHub's REST API considers every pull request ...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/issues"
						}
					}
				},
				{
					"name": "Create an issue",
					"value": "issues/create",
					"action": "Any user with pull access to a repository can create an issue. If [issues are disabled in the repository](https://docs.g...",
					"routing": {
						"request": {
							"method": "POST",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/issues"
						}
					}
				},
				{
					"name": "List issue comments for a repository",
					"value": "issues/list-comments-for-repo",
					"action": "By default, Issue Comments are ordered by ascending ID",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/issues/comments"
						}
					}
				},
				{
					"name": "Delete an issue comment",
					"value": "issues/delete-comment",
					"action": "",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/issues/comments/{comment_id}"
						}
					}
				},
				{
					"name": "Get an issue comment",
					"value": "issues/get-comment",
					"action": "",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/issues/comments/{comment_id}"
						}
					}
				},
				{
					"name": "Update an issue comment",
					"value": "issues/update-comment",
					"action": "",
					"routing": {
						"request": {
							"method": "PATCH",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/issues/comments/{comment_id}"
						}
					}
				},
				{
					"name": "List issue events for a repository",
					"value": "issues/list-events-for-repo",
					"action": "",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/issues/events"
						}
					}
				},
				{
					"name": "Get an issue event",
					"value": "issues/get-event",
					"action": "",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/issues/events/{event_id}"
						}
					}
				},
				{
					"name": "Get an issue",
					"value": "issues/get",
					"action": "The API returns a [`301 Moved Permanently` status](https://docs.github.com/rest/overview/resources-in-the-rest-api#http-...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/issues/{issue_number}"
						}
					}
				},
				{
					"name": "Update an issue",
					"value": "issues/update",
					"action": "Issue owners and users with push access can edit an issue",
					"routing": {
						"request": {
							"method": "PATCH",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/issues/{issue_number}"
						}
					}
				},
				{
					"name": "Remove assignees from an issue",
					"value": "issues/remove-assignees",
					"action": "Removes one or more assignees from an issue",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/issues/{issue_number}/assignees"
						}
					}
				},
				{
					"name": "Add assignees to an issue",
					"value": "issues/add-assignees",
					"action": "Adds up to 10 assignees to an issue. Users already assigned to an issue are not replaced",
					"routing": {
						"request": {
							"method": "POST",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/issues/{issue_number}/assignees"
						}
					}
				},
				{
					"name": "Check if a user can be assigned to a issue",
					"value": "issues/check-user-can-be-assigned-to-issue",
					"action": "Checks if a user has permission to be assigned to a specific issue.  If the `assignee` can be assigned to this issue, a ...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/issues/{issue_number}/assignees/{assignee}"
						}
					}
				},
				{
					"name": "List issue comments",
					"value": "issues/list-comments",
					"action": "Issue Comments are ordered by ascending ID",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/issues/{issue_number}/comments"
						}
					}
				},
				{
					"name": "Create an issue comment",
					"value": "issues/create-comment",
					"action": "This endpoint triggers [notifications](https://docs.github.com/github/managing-subscriptions-and-notifications-on-github...",
					"routing": {
						"request": {
							"method": "POST",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/issues/{issue_number}/comments"
						}
					}
				},
				{
					"name": "List issue events",
					"value": "issues/list-events",
					"action": "",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/issues/{issue_number}/events"
						}
					}
				},
				{
					"name": "Remove all labels from an issue",
					"value": "issues/remove-all-labels",
					"action": "",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/issues/{issue_number}/labels"
						}
					}
				},
				{
					"name": "List labels for an issue",
					"value": "issues/list-labels-on-issue",
					"action": "",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/issues/{issue_number}/labels"
						}
					}
				},
				{
					"name": "Add labels to an issue",
					"value": "issues/add-labels",
					"action": "",
					"routing": {
						"request": {
							"method": "POST",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/issues/{issue_number}/labels"
						}
					}
				},
				{
					"name": "Set labels for an issue",
					"value": "issues/set-labels",
					"action": "Removes any previous labels and sets the new labels for an issue",
					"routing": {
						"request": {
							"method": "PUT",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/issues/{issue_number}/labels"
						}
					}
				},
				{
					"name": "Remove a label from an issue",
					"value": "issues/remove-label",
					"action": "Removes the specified label from the issue, and returns the remaining labels on the issue. This endpoint returns a `404 ...",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/issues/{issue_number}/labels/{name}"
						}
					}
				},
				{
					"name": "Unlock an issue",
					"value": "issues/unlock",
					"action": "Users with push access can unlock an issue's conversation",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/issues/{issue_number}/lock"
						}
					}
				},
				{
					"name": "Lock an issue",
					"value": "issues/lock",
					"action": "Users with push access can lock an issue or pull request's conversation.  Note that, if you choose not to pass any param...",
					"routing": {
						"request": {
							"method": "PUT",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/issues/{issue_number}/lock"
						}
					}
				},
				{
					"name": "List timeline events for an issue",
					"value": "issues/list-events-for-timeline",
					"action": "",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/issues/{issue_number}/timeline"
						}
					}
				},
				{
					"name": "List labels for a repository",
					"value": "issues/list-labels-for-repo",
					"action": "",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/labels"
						}
					}
				},
				{
					"name": "Create a label",
					"value": "issues/create-label",
					"action": "",
					"routing": {
						"request": {
							"method": "POST",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/labels"
						}
					}
				},
				{
					"name": "Delete a label",
					"value": "issues/delete-label",
					"action": "",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/labels/{name}"
						}
					}
				},
				{
					"name": "Get a label",
					"value": "issues/get-label",
					"action": "",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/labels/{name}"
						}
					}
				},
				{
					"name": "Update a label",
					"value": "issues/update-label",
					"action": "",
					"routing": {
						"request": {
							"method": "PATCH",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/labels/{name}"
						}
					}
				},
				{
					"name": "List milestones",
					"value": "issues/list-milestones",
					"action": "",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/milestones"
						}
					}
				},
				{
					"name": "Create a milestone",
					"value": "issues/create-milestone",
					"action": "",
					"routing": {
						"request": {
							"method": "POST",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/milestones"
						}
					}
				},
				{
					"name": "Delete a milestone",
					"value": "issues/delete-milestone",
					"action": "",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/milestones/{milestone_number}"
						}
					}
				},
				{
					"name": "Get a milestone",
					"value": "issues/get-milestone",
					"action": "",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/milestones/{milestone_number}"
						}
					}
				},
				{
					"name": "Update a milestone",
					"value": "issues/update-milestone",
					"action": "",
					"routing": {
						"request": {
							"method": "PATCH",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/milestones/{milestone_number}"
						}
					}
				},
				{
					"name": "List labels for issues in a milestone",
					"value": "issues/list-labels-for-milestone",
					"action": "",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/milestones/{milestone_number}/labels"
						}
					}
				},
				{
					"name": "List user account issues assigned to the authenticated user",
					"value": "issues/list-for-authenticated-user",
					"action": "List issues across owned and member repositories assigned to the authenticated user.  **Note**: GitHub's REST API consid...",
					"routing": { "request": { "method": "GET", "url": "/user/issues" } }
				}
			],
			"displayOptions": { "show": { "resource": ["issue"] } }
		},
		{
			"displayName": "Operation",
			"name": "operation",
			"type": "options",
			"noDataExpression": true,
			"default": "licenses/get-all-commonly-used",
			"options": [
				{
					"name": "Get all commonly used licenses",
					"value": "licenses/get-all-commonly-used",
					"action": "",
					"routing": { "request": { "method": "GET", "url": "/licenses" } }
				},
				{
					"name": "Get a license",
					"value": "licenses/get",
					"action": "",
					"routing": {
						"request": { "method": "GET", "url": "=/licenses/{{ $parameter[\"license\"] }}" }
					}
				},
				{
					"name": "Get the license for a repository",
					"value": "licenses/get-for-repo",
					"action": "This method returns the contents of the repository's license file, if one is detected.  Similar to [Get repository conte...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/license"
						}
					}
				}
			],
			"displayOptions": { "show": { "resource": ["license"] } }
		},
		{
			"displayName": "Operation",
			"name": "operation",
			"type": "options",
			"noDataExpression": true,
			"default": "markdown/render",
			"options": [
				{
					"name": "Render a Markdown document",
					"value": "markdown/render",
					"action": "",
					"routing": { "request": { "method": "POST", "url": "/markdown" } }
				},
				{
					"name": "Render a Markdown document in raw mode",
					"value": "markdown/render-raw",
					"action": "You must send Markdown as plain text (using a `Content-Type` header of `text/plain` or `text/x-markdown`) to this endpoi...",
					"routing": {
						"request": {
							"method": "POST",
							"url": "/markdown/raw",
							"headers": { "Content-Type": "text/plain" }
						}
					}
				}
			],
			"displayOptions": { "show": { "resource": ["markdown"] } }
		},
		{
			"displayName": "Operation",
			"name": "operation",
			"type": "options",
			"noDataExpression": true,
			"default": "orgs/list",
			"options": [
				{
					"name": "List organizations",
					"value": "orgs/list",
					"action": "Lists all organizations, in the order that they were created on GitHub.  **Note:** Pagination is powered exclusively by ...",
					"routing": { "request": { "method": "GET", "url": "/organizations" } }
				},
				{
					"name": "Get an organization",
					"value": "orgs/get",
					"action": "To see many of the organization response values, you need to be an authenticated organization owner with the `admin:org`...",
					"routing": { "request": { "method": "GET", "url": "=/orgs/{{ $parameter[\"org\"] }}" } }
				},
				{
					"name": "Update an organization",
					"value": "orgs/update",
					"action": "**Parameter Deprecation Notice:** GitHub will replace and discontinue `members_allowed_repository_creation_type` in favo...",
					"routing": { "request": { "method": "PATCH", "url": "=/orgs/{{ $parameter[\"org\"] }}" } }
				},
				{
					"name": "List users blocked by an organization",
					"value": "orgs/list-blocked-users",
					"action": "List the users blocked by an organization",
					"routing": {
						"request": { "method": "GET", "url": "=/orgs/{{ $parameter[\"org\"] }}/blocks" }
					}
				},
				{
					"name": "Unblock a user from an organization",
					"value": "orgs/unblock-user",
					"action": "",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/blocks/{username}"
						}
					}
				},
				{
					"name": "Check if a user is blocked by an organization",
					"value": "orgs/check-blocked-user",
					"action": "",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/blocks/{username}"
						}
					}
				},
				{
					"name": "Block a user from an organization",
					"value": "orgs/block-user",
					"action": "",
					"routing": {
						"request": {
							"method": "PUT",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/blocks/{username}"
						}
					}
				},
				{
					"name": "List failed organization invitations",
					"value": "orgs/list-failed-invitations",
					"action": "The return hash contains `failed_at` and `failed_reason` fields which represent the time at which the invitation failed ...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/failed_invitations"
						}
					}
				},
				{
					"name": "List organization webhooks",
					"value": "orgs/list-webhooks",
					"action": "",
					"routing": {
						"request": { "method": "GET", "url": "=/orgs/{{ $parameter[\"org\"] }}/hooks" }
					}
				},
				{
					"name": "Create an organization webhook",
					"value": "orgs/create-webhook",
					"action": "Here's how you can create a hook that posts payloads in JSON format:",
					"routing": {
						"request": { "method": "POST", "url": "=/orgs/{{ $parameter[\"org\"] }}/hooks" }
					}
				},
				{
					"name": "Delete an organization webhook",
					"value": "orgs/delete-webhook",
					"action": "",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/hooks/{hook_id}"
						}
					}
				},
				{
					"name": "Get an organization webhook",
					"value": "orgs/get-webhook",
					"action": "Returns a webhook configured in an organization. To get only the webhook `config` properties, see \"[Get a webhook config...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/hooks/{hook_id}"
						}
					}
				},
				{
					"name": "Update an organization webhook",
					"value": "orgs/update-webhook",
					"action": "Updates a webhook configured in an organization. When you update a webhook, the `secret` will be overwritten. If you pre...",
					"routing": {
						"request": {
							"method": "PATCH",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/hooks/{hook_id}"
						}
					}
				},
				{
					"name": "Get a webhook configuration for an organization",
					"value": "orgs/get-webhook-config-for-org",
					"action": "Returns the webhook configuration for an organization. To get more information about the webhook, including the `active`...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/hooks/{hook_id}/config"
						}
					}
				},
				{
					"name": "Update a webhook configuration for an organization",
					"value": "orgs/update-webhook-config-for-org",
					"action": "Updates the webhook configuration for an organization. To update more information about the webhook, including the `acti...",
					"routing": {
						"request": {
							"method": "PATCH",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/hooks/{hook_id}/config"
						}
					}
				},
				{
					"name": "List deliveries for an organization webhook",
					"value": "orgs/list-webhook-deliveries",
					"action": "Returns a list of webhook deliveries for a webhook configured in an organization",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/hooks/{hook_id}/deliveries"
						}
					}
				},
				{
					"name": "Get a webhook delivery for an organization webhook",
					"value": "orgs/get-webhook-delivery",
					"action": "Returns a delivery for a webhook configured in an organization",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/hooks/{hook_id}/deliveries/{delivery_id}"
						}
					}
				},
				{
					"name": "Redeliver a delivery for an organization webhook",
					"value": "orgs/redeliver-webhook-delivery",
					"action": "Redeliver a delivery for a webhook configured in an organization",
					"routing": {
						"request": {
							"method": "POST",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/hooks/{hook_id}/deliveries/{delivery_id}/attempts"
						}
					}
				},
				{
					"name": "Ping an organization webhook",
					"value": "orgs/ping-webhook",
					"action": "This will trigger a [ping event](https://docs.github.com/webhooks/#ping-event) to be sent to the hook",
					"routing": {
						"request": {
							"method": "POST",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/hooks/{hook_id}/pings"
						}
					}
				},
				{
					"name": "List app installations for an organization",
					"value": "orgs/list-app-installations",
					"action": "Lists all GitHub Apps in an organization. The installation count includes all GitHub Apps installed on repositories in t...",
					"routing": {
						"request": { "method": "GET", "url": "=/orgs/{{ $parameter[\"org\"] }}/installations" }
					}
				},
				{
					"name": "List pending organization invitations",
					"value": "orgs/list-pending-invitations",
					"action": "The return hash contains a `role` field which refers to the Organization Invitation role and will be one of the followin...",
					"routing": {
						"request": { "method": "GET", "url": "=/orgs/{{ $parameter[\"org\"] }}/invitations" }
					}
				},
				{
					"name": "Create an organization invitation",
					"value": "orgs/create-invitation",
					"action": "Invite people to an organization by using their GitHub user ID or their email address. In order to create invitations in...",
					"routing": {
						"request": { "method": "POST", "url": "=/orgs/{{ $parameter[\"org\"] }}/invitations" }
					}
				},
				{
					"name": "Cancel an organization invitation",
					"value": "orgs/cancel-invitation",
					"action": "Cancel an organization invitation. In order to cancel an organization invitation, the authenticated user must be an orga...",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/invitations/{invitation_id}"
						}
					}
				},
				{
					"name": "List organization invitation teams",
					"value": "orgs/list-invitation-teams",
					"action": "List all teams associated with an invitation. In order to see invitations in an organization, the authenticated user mus...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/invitations/{invitation_id}/teams"
						}
					}
				},
				{
					"name": "List organization members",
					"value": "orgs/list-members",
					"action": "List all users who are members of an organization. If the authenticated user is also a member of this organization then ...",
					"routing": {
						"request": { "method": "GET", "url": "=/orgs/{{ $parameter[\"org\"] }}/members" }
					}
				},
				{
					"name": "Remove an organization member",
					"value": "orgs/remove-member",
					"action": "Removing a user from this list will remove them from all teams and they will no longer have any access to the organizati...",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/members/{username}"
						}
					}
				},
				{
					"name": "Check organization membership for a user",
					"value": "orgs/check-membership-for-user",
					"action": "Check if a user is, publicly or privately, a member of the organization",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/members/{username}"
						}
					}
				},
				{
					"name": "Remove organization membership for a user",
					"value": "orgs/remove-membership-for-user",
					"action": "In order to remove a user's membership with an organization, the authenticated user must be an organization owner.  If t...",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/memberships/{username}"
						}
					}
				},
				{
					"name": "Get organization membership for a user",
					"value": "orgs/get-membership-for-user",
					"action": "In order to get a user's membership with an organization, the authenticated user must be an organization member. The `st...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/memberships/{username}"
						}
					}
				},
				{
					"name": "Set organization membership for a user",
					"value": "orgs/set-membership-for-user",
					"action": "Only authenticated organization owners can add a member to the organization or update the member's role.  *   If the aut...",
					"routing": {
						"request": {
							"method": "PUT",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/memberships/{username}"
						}
					}
				},
				{
					"name": "List outside collaborators for an organization",
					"value": "orgs/list-outside-collaborators",
					"action": "List all users who are outside collaborators of an organization",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/outside_collaborators"
						}
					}
				},
				{
					"name": "Remove outside collaborator from an organization",
					"value": "orgs/remove-outside-collaborator",
					"action": "Removing a user from this list will remove them from all the organization's repositories",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/outside_collaborators/{username}"
						}
					}
				},
				{
					"name": "Convert an organization member to outside collaborator",
					"value": "orgs/convert-member-to-outside-collaborator",
					"action": "When an organization member is converted to an outside collaborator, they'll only have access to the repositories that t...",
					"routing": {
						"request": {
							"method": "PUT",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/outside_collaborators/{username}"
						}
					}
				},
				{
					"name": "List public organization members",
					"value": "orgs/list-public-members",
					"action": "Members of an organization can choose to have their membership publicized or not",
					"routing": {
						"request": { "method": "GET", "url": "=/orgs/{{ $parameter[\"org\"] }}/public_members" }
					}
				},
				{
					"name": "Remove public organization membership for the authenticated user",
					"value": "orgs/remove-public-membership-for-authenticated-user",
					"action": "",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/public_members/{username}"
						}
					}
				},
				{
					"name": "Check public organization membership for a user",
					"value": "orgs/check-public-membership-for-user",
					"action": "",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/public_members/{username}"
						}
					}
				},
				{
					"name": "Set public organization membership for the authenticated user",
					"value": "orgs/set-public-membership-for-authenticated-user",
					"action": "The user can publicize their own membership. (A user cannot publicize the membership for another user.)  Note that you'l...",
					"routing": {
						"request": {
							"method": "PUT",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/public_members/{username}"
						}
					}
				},
				{
					"name": "List security manager teams",
					"value": "orgs/list-security-manager-teams",
					"action": "Lists teams that are security managers for an organization. For more information, see \"[Managing security managers in yo...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/security-managers"
						}
					}
				},
				{
					"name": "Remove a security manager team",
					"value": "orgs/remove-security-manager-team",
					"action": "Removes the security manager role from a team for an organization. For more information, see \"[Managing security manager...",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/security-managers/teams/{team_slug}"
						}
					}
				},
				{
					"name": "Add a security manager team",
					"value": "orgs/add-security-manager-team",
					"action": "Adds a team as a security manager for an organization. For more information, see \"[Managing security for an organization...",
					"routing": {
						"request": {
							"method": "PUT",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/security-managers/teams/{team_slug}"
						}
					}
				},
				{
					"name": "Enable or disable a security feature for an organization",
					"value": "orgs/enable-or-disable-security-product-on-all-org-repos",
					"action": "Enables or disables the specified security feature for all repositories in an organization.  To use this endpoint, you m...",
					"routing": {
						"request": {
							"method": "POST",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/{security_product}/{enablement}"
						}
					}
				},
				{
					"name": "List organization memberships for the authenticated user",
					"value": "orgs/list-memberships-for-authenticated-user",
					"action": "",
					"routing": { "request": { "method": "GET", "url": "/user/memberships/orgs" } }
				},
				{
					"name": "Get an organization membership for the authenticated user",
					"value": "orgs/get-membership-for-authenticated-user",
					"action": "",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/user/memberships/orgs/{{ $parameter[\"org\"] }}"
						}
					}
				},
				{
					"name": "Update an organization membership for the authenticated user",
					"value": "orgs/update-membership-for-authenticated-user",
					"action": "",
					"routing": {
						"request": {
							"method": "PATCH",
							"url": "=/user/memberships/orgs/{{ $parameter[\"org\"] }}"
						}
					}
				},
				{
					"name": "List organizations for the authenticated user",
					"value": "orgs/list-for-authenticated-user",
					"action": "List organizations for the authenticated user.  **OAuth scope requirements**  This only lists organizations that your au...",
					"routing": { "request": { "method": "GET", "url": "/user/orgs" } }
				},
				{
					"name": "List organizations for a user",
					"value": "orgs/list-for-user",
					"action": "List [public organization memberships](https://docs.github.com/articles/publicizing-or-concealing-organization-membershi...",
					"routing": {
						"request": { "method": "GET", "url": "=/users/{{ $parameter[\"username\"] }}/orgs" }
					}
				}
			],
			"displayOptions": { "show": { "resource": ["org"] } }
		},
		{
			"displayName": "Operation",
			"name": "operation",
			"type": "options",
			"noDataExpression": true,
			"default": "actions/get-actions-cache-usage-for-org",
			"options": [
				{
					"name": "Get GitHub Actions cache usage for an organization",
					"value": "actions/get-actions-cache-usage-for-org",
					"action": "Gets the total GitHub Actions cache usage for an organization. The data fetched using this API is refreshed approximatel...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/actions/cache/usage"
						}
					}
				},
				{
					"name": "List repositories with GitHub Actions cache usage for an organization",
					"value": "actions/get-actions-cache-usage-by-repo-for-org",
					"action": "Lists repositories and their GitHub Actions cache usage for an organization. The data fetched using this API is refreshe...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/actions/cache/usage-by-repository"
						}
					}
				},
				{
					"name": "Get GitHub Actions permissions for an organization",
					"value": "actions/get-github-actions-permissions-organization",
					"action": "Gets the GitHub Actions permissions policy for repositories and allowed actions and reusable workflows in an organizatio...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/actions/permissions"
						}
					}
				},
				{
					"name": "Set GitHub Actions permissions for an organization",
					"value": "actions/set-github-actions-permissions-organization",
					"action": "Sets the GitHub Actions permissions policy for repositories and allowed actions and reusable workflows in an organizatio...",
					"routing": {
						"request": {
							"method": "PUT",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/actions/permissions"
						}
					}
				},
				{
					"name": "List selected repositories enabled for GitHub Actions in an organization",
					"value": "actions/list-selected-repositories-enabled-github-actions-organization",
					"action": "Lists the selected repositories that are enabled for GitHub Actions in an organization. To use this endpoint, the organi...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/actions/permissions/repositories"
						}
					}
				},
				{
					"name": "Set selected repositories enabled for GitHub Actions in an organization",
					"value": "actions/set-selected-repositories-enabled-github-actions-organization",
					"action": "Replaces the list of selected repositories that are enabled for GitHub Actions in an organization. To use this endpoint,...",
					"routing": {
						"request": {
							"method": "PUT",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/actions/permissions/repositories"
						}
					}
				},
				{
					"name": "Disable a selected repository for GitHub Actions in an organization",
					"value": "actions/disable-selected-repository-github-actions-organization",
					"action": "Removes a repository from the list of selected repositories that are enabled for GitHub Actions in an organization. To u...",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/actions/permissions/repositories/{repository_id}"
						}
					}
				},
				{
					"name": "Enable a selected repository for GitHub Actions in an organization",
					"value": "actions/enable-selected-repository-github-actions-organization",
					"action": "Adds a repository to the list of selected repositories that are enabled for GitHub Actions in an organization. To use th...",
					"routing": {
						"request": {
							"method": "PUT",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/actions/permissions/repositories/{repository_id}"
						}
					}
				},
				{
					"name": "Get allowed actions and reusable workflows for an organization",
					"value": "actions/get-allowed-actions-organization",
					"action": "Gets the selected actions and reusable workflows that are allowed in an organization. To use this endpoint, the organiza...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/actions/permissions/selected-actions"
						}
					}
				},
				{
					"name": "Set allowed actions and reusable workflows for an organization",
					"value": "actions/set-allowed-actions-organization",
					"action": "Sets the actions and reusable workflows that are allowed in an organization. To use this endpoint, the organization perm...",
					"routing": {
						"request": {
							"method": "PUT",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/actions/permissions/selected-actions"
						}
					}
				},
				{
					"name": "Get default workflow permissions for an organization",
					"value": "actions/get-github-actions-default-workflow-permissions-organization",
					"action": "Gets the default workflow permissions granted to the `GITHUB_TOKEN` when running workflows in an organization, as well a...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/actions/permissions/workflow"
						}
					}
				},
				{
					"name": "Set default workflow permissions for an organization",
					"value": "actions/set-github-actions-default-workflow-permissions-organization",
					"action": "Sets the default workflow permissions granted to the `GITHUB_TOKEN` when running workflows in an organization, and sets ...",
					"routing": {
						"request": {
							"method": "PUT",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/actions/permissions/workflow"
						}
					}
				},
				{
					"name": "List required workflows",
					"value": "actions/list-required-workflows",
					"action": "List all required workflows in an organization.  You must authenticate using an access token with the `read:org` scope t...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/actions/required_workflows"
						}
					}
				},
				{
					"name": "Create a required workflow",
					"value": "actions/create-required-workflow",
					"action": "Create a required workflow in an organization.  You must authenticate using an access token with the `admin:org` scope t...",
					"routing": {
						"request": {
							"method": "POST",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/actions/required_workflows"
						}
					}
				},
				{
					"name": "Delete a required workflow",
					"value": "actions/delete-required-workflow",
					"action": "Deletes a required workflow configured in an organization.  You must authenticate using an access token with the `admin:...",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/actions/required_workflows/{required_workflow_id}"
						}
					}
				},
				{
					"name": "Get a required workflow",
					"value": "actions/get-required-workflow",
					"action": "Get a required workflow configured in an organization.  You must authenticate using an access token with the `read:org` ...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/actions/required_workflows/{required_workflow_id}"
						}
					}
				},
				{
					"name": "Update a required workflow",
					"value": "actions/update-required-workflow",
					"action": "Update a required workflow in an organization.  You must authenticate using an access token with the `admin:org` scope t...",
					"routing": {
						"request": {
							"method": "PATCH",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/actions/required_workflows/{required_workflow_id}"
						}
					}
				},
				{
					"name": "List selected repositories for a required workflow",
					"value": "actions/list-selected-repositories-required-workflow",
					"action": "Lists the selected repositories that are configured for a required workflow in an organization. To use this endpoint, th...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/actions/required_workflows/{required_workflow_id}/repositories"
						}
					}
				},
				{
					"name": "Sets repositories for a required workflow",
					"value": "actions/set-selected-repos-to-required-workflow",
					"action": "Sets the repositories for a required workflow that is required for selected repositories.  You must authenticate using a...",
					"routing": {
						"request": {
							"method": "PUT",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/actions/required_workflows/{required_workflow_id}/repositories"
						}
					}
				},
				{
					"name": "Remove a selected repository from required workflow",
					"value": "actions/remove-selected-repo-from-required-workflow",
					"action": "Removes a repository from a required workflow. To use this endpoint, the required workflow must be configured to run on ...",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/actions/required_workflows/{required_workflow_id}/repositories/{repository_id}"
						}
					}
				},
				{
					"name": "Add a repository to a required workflow",
					"value": "actions/add-selected-repo-to-required-workflow",
					"action": "Adds a repository to a required workflow. To use this endpoint, the required workflow must be configured to run on selec...",
					"routing": {
						"request": {
							"method": "PUT",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/actions/required_workflows/{required_workflow_id}/repositories/{repository_id}"
						}
					}
				},
				{
					"name": "List self-hosted runners for an organization",
					"value": "actions/list-self-hosted-runners-for-org",
					"action": "Lists all self-hosted runners configured in an organization.  You must authenticate using an access token with the `admi...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/actions/runners"
						}
					}
				},
				{
					"name": "List runner applications for an organization",
					"value": "actions/list-runner-applications-for-org",
					"action": "Lists binaries for the runner application that you can download and run.  You must authenticate using an access token wi...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/actions/runners/downloads"
						}
					}
				},
				{
					"name": "Create a registration token for an organization",
					"value": "actions/create-registration-token-for-org",
					"action": "Returns a token that you can pass to the `config` script. The token expires after one hour.  You must authenticate using...",
					"routing": {
						"request": {
							"method": "POST",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/actions/runners/registration-token"
						}
					}
				},
				{
					"name": "Create a remove token for an organization",
					"value": "actions/create-remove-token-for-org",
					"action": "Returns a token that you can pass to the `config` script to remove a self-hosted runner from an organization. The token ...",
					"routing": {
						"request": {
							"method": "POST",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/actions/runners/remove-token"
						}
					}
				},
				{
					"name": "Delete a self-hosted runner from an organization",
					"value": "actions/delete-self-hosted-runner-from-org",
					"action": "Forces the removal of a self-hosted runner from an organization. You can use this endpoint to completely remove the runn...",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/actions/runners/{runner_id}"
						}
					}
				},
				{
					"name": "Get a self-hosted runner for an organization",
					"value": "actions/get-self-hosted-runner-for-org",
					"action": "Gets a specific self-hosted runner configured in an organization.  You must authenticate using an access token with the ...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/actions/runners/{runner_id}"
						}
					}
				},
				{
					"name": "Remove all custom labels from a self-hosted runner for an organization",
					"value": "actions/remove-all-custom-labels-from-self-hosted-runner-for-org",
					"action": "Remove all custom labels from a self-hosted runner configured in an organization. Returns the remaining read-only labels...",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/actions/runners/{runner_id}/labels"
						}
					}
				},
				{
					"name": "List labels for a self-hosted runner for an organization",
					"value": "actions/list-labels-for-self-hosted-runner-for-org",
					"action": "Lists all labels for a self-hosted runner configured in an organization.  You must authenticate using an access token wi...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/actions/runners/{runner_id}/labels"
						}
					}
				},
				{
					"name": "Add custom labels to a self-hosted runner for an organization",
					"value": "actions/add-custom-labels-to-self-hosted-runner-for-org",
					"action": "Add custom labels to a self-hosted runner configured in an organization.  You must authenticate using an access token wi...",
					"routing": {
						"request": {
							"method": "POST",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/actions/runners/{runner_id}/labels"
						}
					}
				},
				{
					"name": "Set custom labels for a self-hosted runner for an organization",
					"value": "actions/set-custom-labels-for-self-hosted-runner-for-org",
					"action": "Remove all previous custom labels and set the new custom labels for a specific self-hosted runner configured in an organ...",
					"routing": {
						"request": {
							"method": "PUT",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/actions/runners/{runner_id}/labels"
						}
					}
				},
				{
					"name": "Remove a custom label from a self-hosted runner for an organization",
					"value": "actions/remove-custom-label-from-self-hosted-runner-for-org",
					"action": "Remove a custom label from a self-hosted runner configured in an organization. Returns the remaining labels from the run...",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/actions/runners/{runner_id}/labels/{name}"
						}
					}
				},
				{
					"name": "List organization secrets",
					"value": "actions/list-org-secrets",
					"action": "Lists all secrets available in an organization without revealing their encrypted values. You must authenticate using an ...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/actions/secrets"
						}
					}
				},
				{
					"name": "Get an organization public key",
					"value": "actions/get-org-public-key",
					"action": "Gets your public key, which you need to encrypt secrets. You need to encrypt a secret before you can create or update se...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/actions/secrets/public-key"
						}
					}
				},
				{
					"name": "Delete an organization secret",
					"value": "actions/delete-org-secret",
					"action": "Deletes a secret in an organization using the secret name. You must authenticate using an access token with the `admin:o...",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/actions/secrets/{secret_name}"
						}
					}
				},
				{
					"name": "Get an organization secret",
					"value": "actions/get-org-secret",
					"action": "Gets a single organization secret without revealing its encrypted value. You must authenticate using an access token wit...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/actions/secrets/{secret_name}"
						}
					}
				},
				{
					"name": "Create or update an organization secret",
					"value": "actions/create-or-update-org-secret",
					"action": "Creates or updates an organization secret with an encrypted value. Encrypt your secret using [LibSodium](https://libsodi...",
					"routing": {
						"request": {
							"method": "PUT",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/actions/secrets/{secret_name}"
						}
					}
				},
				{
					"name": "List selected repositories for an organization secret",
					"value": "actions/list-selected-repos-for-org-secret",
					"action": "Lists all repositories that have been selected when the `visibility` for repository access to a secret is set to `select...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/actions/secrets/{secret_name}/repositories"
						}
					}
				},
				{
					"name": "Set selected repositories for an organization secret",
					"value": "actions/set-selected-repos-for-org-secret",
					"action": "Replaces all repositories for an organization secret when the `visibility` for repository access is set to `selected`. T...",
					"routing": {
						"request": {
							"method": "PUT",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/actions/secrets/{secret_name}/repositories"
						}
					}
				},
				{
					"name": "Remove selected repository from an organization secret",
					"value": "actions/remove-selected-repo-from-org-secret",
					"action": "Removes a repository from an organization secret when the `visibility` for repository access is set to `selected`. The v...",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/actions/secrets/{secret_name}/repositories/{repository_id}"
						}
					}
				},
				{
					"name": "Add selected repository to an organization secret",
					"value": "actions/add-selected-repo-to-org-secret",
					"action": "Adds a repository to an organization secret when the `visibility` for repository access is set to `selected`. The visibi...",
					"routing": {
						"request": {
							"method": "PUT",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/actions/secrets/{secret_name}/repositories/{repository_id}"
						}
					}
				},
				{
					"name": "List organization variables",
					"value": "actions/list-org-variables",
					"action": "Lists all organization variables. You must authenticate using an access token with the `admin:org` scope to use this end...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/actions/variables"
						}
					}
				},
				{
					"name": "Create an organization variable",
					"value": "actions/create-org-variable",
					"action": "Creates an organization variable that you can reference in a GitHub Actions workflow. You must authenticate using an acc...",
					"routing": {
						"request": {
							"method": "POST",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/actions/variables"
						}
					}
				},
				{
					"name": "Delete an organization variable",
					"value": "actions/delete-org-variable",
					"action": "Deletes an organization variable using the variable name. You must authenticate using an access token with the `admin:or...",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/actions/variables/{name}"
						}
					}
				},
				{
					"name": "Get an organization variable",
					"value": "actions/get-org-variable",
					"action": "Gets a specific variable in an organization. You must authenticate using an access token with the `admin:org` scope to u...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/actions/variables/{name}"
						}
					}
				},
				{
					"name": "Update an organization variable",
					"value": "actions/update-org-variable",
					"action": "Updates an organization variable that you can reference in a GitHub Actions workflow. You must authenticate using an acc...",
					"routing": {
						"request": {
							"method": "PATCH",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/actions/variables/{name}"
						}
					}
				},
				{
					"name": "List selected repositories for an organization variable",
					"value": "actions/list-selected-repos-for-org-variable",
					"action": "Lists all repositories that can access an organization variable that is available to selected repositories. You must aut...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/actions/variables/{name}/repositories"
						}
					}
				},
				{
					"name": "Set selected repositories for an organization variable",
					"value": "actions/set-selected-repos-for-org-variable",
					"action": "Replaces all repositories for an organization variable that is available to selected repositories. Organization variable...",
					"routing": {
						"request": {
							"method": "PUT",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/actions/variables/{name}/repositories"
						}
					}
				},
				{
					"name": "Remove selected repository from an organization variable",
					"value": "actions/remove-selected-repo-from-org-variable",
					"action": "Removes a repository from an organization variable that is available to selected repositories. Organization variables th...",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/actions/variables/{name}/repositories/{repository_id}"
						}
					}
				},
				{
					"name": "Add selected repository to an organization variable",
					"value": "actions/add-selected-repo-to-org-variable",
					"action": "Adds a repository to an organization variable that is available to selected repositories. Organization variables that ar...",
					"routing": {
						"request": {
							"method": "PUT",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/actions/variables/{name}/repositories/{repository_id}"
						}
					}
				},
				{
					"name": "List repository required workflows",
					"value": "actions/list-repo-required-workflows",
					"action": "Lists the required workflows in a repository. Anyone with read access to the repository can use this endpoint. If the re...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"org\"] }}/{repo}/actions/required_workflows"
						}
					}
				},
				{
					"name": "Get a required workflow entity for a repository",
					"value": "actions/get-repo-required-workflow",
					"action": "Gets a specific required workflow present in a repository. Anyone with read access to the repository can use this endpoi...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"org\"] }}/{repo}/actions/required_workflows/{required_workflow_id_for_repo}"
						}
					}
				},
				{
					"name": "Get required workflow usage",
					"value": "actions/get-repo-required-workflow-usage",
					"action": "Gets the number of billable minutes used by a specific required workflow during the current billing cycle.  Billable min...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"org\"] }}/{repo}/actions/required_workflows/{required_workflow_id_for_repo}/timing"
						}
					}
				},
				{
					"name": "List artifacts for a repository",
					"value": "actions/list-artifacts-for-repo",
					"action": "Lists all artifacts for a repository. Anyone with read access to the repository can use this endpoint. If the repository...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/actions/artifacts"
						}
					}
				},
				{
					"name": "Delete an artifact",
					"value": "actions/delete-artifact",
					"action": "Deletes an artifact for a workflow run. You must authenticate using an access token with the `repo` scope to use this en...",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/actions/artifacts/{artifact_id}"
						}
					}
				},
				{
					"name": "Get an artifact",
					"value": "actions/get-artifact",
					"action": "Gets a specific artifact for a workflow run. Anyone with read access to the repository can use this endpoint. If the rep...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/actions/artifacts/{artifact_id}"
						}
					}
				},
				{
					"name": "Download an artifact",
					"value": "actions/download-artifact",
					"action": "Gets a redirect URL to download an archive for a repository. This URL expires after 1 minute. Look for `Location:` in th...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/actions/artifacts/{artifact_id}/{archive_format}"
						}
					}
				},
				{
					"name": "Get GitHub Actions cache usage for a repository",
					"value": "actions/get-actions-cache-usage",
					"action": "Gets GitHub Actions cache usage for a repository. The data fetched using this API is refreshed approximately every 5 min...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/actions/cache/usage"
						}
					}
				},
				{
					"name": "Delete GitHub Actions caches for a repository (using a cache key)",
					"value": "actions/delete-actions-cache-by-key",
					"action": "Deletes one or more GitHub Actions caches for a repository, using a complete cache key. By default, all caches that matc...",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/actions/caches"
						}
					}
				},
				{
					"name": "List GitHub Actions caches for a repository",
					"value": "actions/get-actions-cache-list",
					"action": "Lists the GitHub Actions caches for a repository. You must authenticate using an access token with the `repo` scope to u...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/actions/caches"
						}
					}
				},
				{
					"name": "Delete a GitHub Actions cache for a repository (using a cache ID)",
					"value": "actions/delete-actions-cache-by-id",
					"action": "Deletes a GitHub Actions cache for a repository, using a cache ID.  You must authenticate using an access token with the...",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/actions/caches/{cache_id}"
						}
					}
				},
				{
					"name": "Get a job for a workflow run",
					"value": "actions/get-job-for-workflow-run",
					"action": "Gets a specific job in a workflow run. Anyone with read access to the repository can use this endpoint. If the repositor...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/actions/jobs/{job_id}"
						}
					}
				},
				{
					"name": "Download job logs for a workflow run",
					"value": "actions/download-job-logs-for-workflow-run",
					"action": "Gets a redirect URL to download a plain text file of logs for a workflow job. This link expires after 1 minute. Look for...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/actions/jobs/{job_id}/logs"
						}
					}
				},
				{
					"name": "Re-run a job from a workflow run",
					"value": "actions/re-run-job-for-workflow-run",
					"action": "Re-run a job and its dependent jobs in a workflow run. You must authenticate using an access token with the `repo` scope...",
					"routing": {
						"request": {
							"method": "POST",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/actions/jobs/{job_id}/rerun"
						}
					}
				},
				{
					"name": "Get the customization template for an OIDC subject claim for a repository",
					"value": "actions/get-custom-oidc-sub-claim-for-repo",
					"action": "Gets the customization template for an OpenID Connect (OIDC) subject claim. You must authenticate using an access token ...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/actions/oidc/customization/sub"
						}
					}
				},
				{
					"name": "Set the customization template for an OIDC subject claim for a repository",
					"value": "actions/set-custom-oidc-sub-claim-for-repo",
					"action": "Sets the customization template and `opt-in` or `opt-out` flag for an OpenID Connect (OIDC) subject claim for a reposito...",
					"routing": {
						"request": {
							"method": "PUT",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/actions/oidc/customization/sub"
						}
					}
				},
				{
					"name": "Get GitHub Actions permissions for a repository",
					"value": "actions/get-github-actions-permissions-repository",
					"action": "Gets the GitHub Actions permissions policy for a repository, including whether GitHub Actions is enabled and the actions...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/actions/permissions"
						}
					}
				},
				{
					"name": "Set GitHub Actions permissions for a repository",
					"value": "actions/set-github-actions-permissions-repository",
					"action": "Sets the GitHub Actions permissions policy for enabling GitHub Actions and allowed actions and reusable workflows in the...",
					"routing": {
						"request": {
							"method": "PUT",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/actions/permissions"
						}
					}
				},
				{
					"name": "Get the level of access for workflows outside of the repository",
					"value": "actions/get-workflow-access-to-repository",
					"action": "Gets the level of access that workflows outside of the repository have to actions and reusable workflows in the reposito...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/actions/permissions/access"
						}
					}
				},
				{
					"name": "Set the level of access for workflows outside of the repository",
					"value": "actions/set-workflow-access-to-repository",
					"action": "Sets the level of access that workflows outside of the repository have to actions and reusable workflows in the reposito...",
					"routing": {
						"request": {
							"method": "PUT",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/actions/permissions/access"
						}
					}
				},
				{
					"name": "Get allowed actions and reusable workflows for a repository",
					"value": "actions/get-allowed-actions-repository",
					"action": "Gets the settings for selected actions and reusable workflows that are allowed in a repository. To use this endpoint, th...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/actions/permissions/selected-actions"
						}
					}
				},
				{
					"name": "Set allowed actions and reusable workflows for a repository",
					"value": "actions/set-allowed-actions-repository",
					"action": "Sets the actions and reusable workflows that are allowed in a repository. To use this endpoint, the repository permissio...",
					"routing": {
						"request": {
							"method": "PUT",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/actions/permissions/selected-actions"
						}
					}
				},
				{
					"name": "Get default workflow permissions for a repository",
					"value": "actions/get-github-actions-default-workflow-permissions-repository",
					"action": "Gets the default workflow permissions granted to the `GITHUB_TOKEN` when running workflows in a repository, as well as i...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/actions/permissions/workflow"
						}
					}
				},
				{
					"name": "Set default workflow permissions for a repository",
					"value": "actions/set-github-actions-default-workflow-permissions-repository",
					"action": "Sets the default workflow permissions granted to the `GITHUB_TOKEN` when running workflows in a repository, and sets if ...",
					"routing": {
						"request": {
							"method": "PUT",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/actions/permissions/workflow"
						}
					}
				},
				{
					"name": "List workflow runs for a required workflow",
					"value": "actions/list-required-workflow-runs",
					"action": "List all workflow runs for a required workflow. You can use parameters to narrow the list of results. For more informati...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/actions/required_workflows/{required_workflow_id_for_repo}/runs"
						}
					}
				},
				{
					"name": "List self-hosted runners for a repository",
					"value": "actions/list-self-hosted-runners-for-repo",
					"action": "Lists all self-hosted runners configured in a repository. You must authenticate using an access token with the `repo` sc...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/actions/runners"
						}
					}
				},
				{
					"name": "List runner applications for a repository",
					"value": "actions/list-runner-applications-for-repo",
					"action": "Lists binaries for the runner application that you can download and run.  You must authenticate using an access token wi...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/actions/runners/downloads"
						}
					}
				},
				{
					"name": "Create a registration token for a repository",
					"value": "actions/create-registration-token-for-repo",
					"action": "Returns a token that you can pass to the `config` script. The token expires after one hour. You must authenticate using ...",
					"routing": {
						"request": {
							"method": "POST",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/actions/runners/registration-token"
						}
					}
				},
				{
					"name": "Create a remove token for a repository",
					"value": "actions/create-remove-token-for-repo",
					"action": "Returns a token that you can pass to remove a self-hosted runner from a repository. The token expires after one hour. Yo...",
					"routing": {
						"request": {
							"method": "POST",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/actions/runners/remove-token"
						}
					}
				},
				{
					"name": "Delete a self-hosted runner from a repository",
					"value": "actions/delete-self-hosted-runner-from-repo",
					"action": "Forces the removal of a self-hosted runner from a repository. You can use this endpoint to completely remove the runner ...",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/actions/runners/{runner_id}"
						}
					}
				},
				{
					"name": "Get a self-hosted runner for a repository",
					"value": "actions/get-self-hosted-runner-for-repo",
					"action": "Gets a specific self-hosted runner configured in a repository.  You must authenticate using an access token with the `re...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/actions/runners/{runner_id}"
						}
					}
				},
				{
					"name": "Remove all custom labels from a self-hosted runner for a repository",
					"value": "actions/remove-all-custom-labels-from-self-hosted-runner-for-repo",
					"action": "Remove all custom labels from a self-hosted runner configured in a repository. Returns the remaining read-only labels fr...",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/actions/runners/{runner_id}/labels"
						}
					}
				},
				{
					"name": "List labels for a self-hosted runner for a repository",
					"value": "actions/list-labels-for-self-hosted-runner-for-repo",
					"action": "Lists all labels for a self-hosted runner configured in a repository.  You must authenticate using an access token with ...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/actions/runners/{runner_id}/labels"
						}
					}
				},
				{
					"name": "Add custom labels to a self-hosted runner for a repository",
					"value": "actions/add-custom-labels-to-self-hosted-runner-for-repo",
					"action": "Add custom labels to a self-hosted runner configured in a repository.  You must authenticate using an access token with ...",
					"routing": {
						"request": {
							"method": "POST",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/actions/runners/{runner_id}/labels"
						}
					}
				},
				{
					"name": "Set custom labels for a self-hosted runner for a repository",
					"value": "actions/set-custom-labels-for-self-hosted-runner-for-repo",
					"action": "Remove all previous custom labels and set the new custom labels for a specific self-hosted runner configured in a reposi...",
					"routing": {
						"request": {
							"method": "PUT",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/actions/runners/{runner_id}/labels"
						}
					}
				},
				{
					"name": "Remove a custom label from a self-hosted runner for a repository",
					"value": "actions/remove-custom-label-from-self-hosted-runner-for-repo",
					"action": "Remove a custom label from a self-hosted runner configured in a repository. Returns the remaining labels from the runner...",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/actions/runners/{runner_id}/labels/{name}"
						}
					}
				},
				{
					"name": "List workflow runs for a repository",
					"value": "actions/list-workflow-runs-for-repo",
					"action": "Lists all workflow runs for a repository. You can use parameters to narrow the list of results. For more information abo...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/actions/runs"
						}
					}
				},
				{
					"name": "Delete a workflow run",
					"value": "actions/delete-workflow-run",
					"action": "Delete a specific workflow run. Anyone with write access to the repository can use this endpoint. If the repository is p...",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/actions/runs/{run_id}"
						}
					}
				},
				{
					"name": "Get a workflow run",
					"value": "actions/get-workflow-run",
					"action": "Gets a specific workflow run. Anyone with read access to the repository can use this endpoint. If the repository is priv...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/actions/runs/{run_id}"
						}
					}
				},
				{
					"name": "Get the review history for a workflow run",
					"value": "actions/get-reviews-for-run",
					"action": "Anyone with read access to the repository can use this endpoint. If the repository is private, you must use an access to...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/actions/runs/{run_id}/approvals"
						}
					}
				},
				{
					"name": "Approve a workflow run for a fork pull request",
					"value": "actions/approve-workflow-run",
					"action": "Approves a workflow run for a pull request from a public fork of a first time contributor. For more information, see [\"A...",
					"routing": {
						"request": {
							"method": "POST",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/actions/runs/{run_id}/approve"
						}
					}
				},
				{
					"name": "List workflow run artifacts",
					"value": "actions/list-workflow-run-artifacts",
					"action": "Lists artifacts for a workflow run. Anyone with read access to the repository can use this endpoint. If the repository i...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/actions/runs/{run_id}/artifacts"
						}
					}
				},
				{
					"name": "Get a workflow run attempt",
					"value": "actions/get-workflow-run-attempt",
					"action": "Gets a specific workflow run attempt. Anyone with read access to the repository can use this endpoint. If the repository...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}"
						}
					}
				},
				{
					"name": "List jobs for a workflow run attempt",
					"value": "actions/list-jobs-for-workflow-run-attempt",
					"action": "Lists jobs for a specific workflow run attempt. Anyone with read access to the repository can use this endpoint. If the ...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/jobs"
						}
					}
				},
				{
					"name": "Download workflow run attempt logs",
					"value": "actions/download-workflow-run-attempt-logs",
					"action": "Gets a redirect URL to download an archive of log files for a specific workflow run attempt. This link expires after 1 m...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/logs"
						}
					}
				},
				{
					"name": "Cancel a workflow run",
					"value": "actions/cancel-workflow-run",
					"action": "Cancels a workflow run using its `id`. You must authenticate using an access token with the `repo` scope to use this end...",
					"routing": {
						"request": {
							"method": "POST",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/actions/runs/{run_id}/cancel"
						}
					}
				},
				{
					"name": "List jobs for a workflow run",
					"value": "actions/list-jobs-for-workflow-run",
					"action": "Lists jobs for a workflow run. Anyone with read access to the repository can use this endpoint. If the repository is pri...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/actions/runs/{run_id}/jobs"
						}
					}
				},
				{
					"name": "Delete workflow run logs",
					"value": "actions/delete-workflow-run-logs",
					"action": "Deletes all logs for a workflow run. You must authenticate using an access token with the `repo` scope to use this endpo...",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/actions/runs/{run_id}/logs"
						}
					}
				},
				{
					"name": "Download workflow run logs",
					"value": "actions/download-workflow-run-logs",
					"action": "Gets a redirect URL to download an archive of log files for a workflow run. This link expires after 1 minute. Look for `...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/actions/runs/{run_id}/logs"
						}
					}
				},
				{
					"name": "Get pending deployments for a workflow run",
					"value": "actions/get-pending-deployments-for-run",
					"action": "Get all deployment environments for a workflow run that are waiting for protection rules to pass.  Anyone with read acce...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/actions/runs/{run_id}/pending_deployments"
						}
					}
				},
				{
					"name": "Review pending deployments for a workflow run",
					"value": "actions/review-pending-deployments-for-run",
					"action": "Approve or reject pending deployments that are waiting on approval by a required reviewer.  Required reviewers with read...",
					"routing": {
						"request": {
							"method": "POST",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/actions/runs/{run_id}/pending_deployments"
						}
					}
				},
				{
					"name": "Re-run a workflow",
					"value": "actions/re-run-workflow",
					"action": "Re-runs your workflow run using its `id`. You must authenticate using an access token with the `repo` scope to use this ...",
					"routing": {
						"request": {
							"method": "POST",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/actions/runs/{run_id}/rerun"
						}
					}
				},
				{
					"name": "Re-run failed jobs from a workflow run",
					"value": "actions/re-run-workflow-failed-jobs",
					"action": "Re-run all of the failed jobs and their dependent jobs in a workflow run using the `id` of the workflow run. You must au...",
					"routing": {
						"request": {
							"method": "POST",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/actions/runs/{run_id}/rerun-failed-jobs"
						}
					}
				},
				{
					"name": "Get workflow run usage",
					"value": "actions/get-workflow-run-usage",
					"action": "Gets the number of billable minutes and total run time for a specific workflow run. Billable minutes only apply to workf...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/actions/runs/{run_id}/timing"
						}
					}
				},
				{
					"name": "List repository secrets",
					"value": "actions/list-repo-secrets",
					"action": "Lists all secrets available in a repository without revealing their encrypted values. You must authenticate using an acc...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/actions/secrets"
						}
					}
				},
				{
					"name": "Get a repository public key",
					"value": "actions/get-repo-public-key",
					"action": "Gets your public key, which you need to encrypt secrets. You need to encrypt a secret before you can create or update se...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/actions/secrets/public-key"
						}
					}
				},
				{
					"name": "Delete a repository secret",
					"value": "actions/delete-repo-secret",
					"action": "Deletes a secret in a repository using the secret name. You must authenticate using an access token with the `repo` scop...",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/actions/secrets/{secret_name}"
						}
					}
				},
				{
					"name": "Get a repository secret",
					"value": "actions/get-repo-secret",
					"action": "Gets a single repository secret without revealing its encrypted value. You must authenticate using an access token with ...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/actions/secrets/{secret_name}"
						}
					}
				},
				{
					"name": "Create or update a repository secret",
					"value": "actions/create-or-update-repo-secret",
					"action": "Creates or updates a repository secret with an encrypted value. Encrypt your secret using [LibSodium](https://libsodium....",
					"routing": {
						"request": {
							"method": "PUT",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/actions/secrets/{secret_name}"
						}
					}
				},
				{
					"name": "List repository variables",
					"value": "actions/list-repo-variables",
					"action": "Lists all repository variables. You must authenticate using an access token with the `repo` scope to use this endpoint. ...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/actions/variables"
						}
					}
				},
				{
					"name": "Create a repository variable",
					"value": "actions/create-repo-variable",
					"action": "Creates a repository variable that you can reference in a GitHub Actions workflow. You must authenticate using an access...",
					"routing": {
						"request": {
							"method": "POST",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/actions/variables"
						}
					}
				},
				{
					"name": "Delete a repository variable",
					"value": "actions/delete-repo-variable",
					"action": "Deletes a repository variable using the variable name. You must authenticate using an access token with the `repo` scope...",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/actions/variables/{name}"
						}
					}
				},
				{
					"name": "Get a repository variable",
					"value": "actions/get-repo-variable",
					"action": "Gets a specific variable in a repository. You must authenticate using an access token with the `repo` scope to use this ...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/actions/variables/{name}"
						}
					}
				},
				{
					"name": "Update a repository variable",
					"value": "actions/update-repo-variable",
					"action": "Updates a repository variable that you can reference in a GitHub Actions workflow. You must authenticate using an access...",
					"routing": {
						"request": {
							"method": "PATCH",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/actions/variables/{name}"
						}
					}
				},
				{
					"name": "List repository workflows",
					"value": "actions/list-repo-workflows",
					"action": "Lists the workflows in a repository. Anyone with read access to the repository can use this endpoint. If the repository ...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/actions/workflows"
						}
					}
				},
				{
					"name": "Get a workflow",
					"value": "actions/get-workflow",
					"action": "Gets a specific workflow. You can replace `workflow_id` with the workflow file name. For example, you could use `main.ya...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/actions/workflows/{workflow_id}"
						}
					}
				},
				{
					"name": "Disable a workflow",
					"value": "actions/disable-workflow",
					"action": "Disables a workflow and sets the `state` of the workflow to `disabled_manually`. You can replace `workflow_id` with the ...",
					"routing": {
						"request": {
							"method": "PUT",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/actions/workflows/{workflow_id}/disable"
						}
					}
				},
				{
					"name": "Create a workflow dispatch event",
					"value": "actions/create-workflow-dispatch",
					"action": "You can use this endpoint to manually trigger a GitHub Actions workflow run. You can replace `workflow_id` with the work...",
					"routing": {
						"request": {
							"method": "POST",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/actions/workflows/{workflow_id}/dispatches"
						}
					}
				},
				{
					"name": "Enable a workflow",
					"value": "actions/enable-workflow",
					"action": "Enables a workflow and sets the `state` of the workflow to `active`. You can replace `workflow_id` with the workflow fil...",
					"routing": {
						"request": {
							"method": "PUT",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/actions/workflows/{workflow_id}/enable"
						}
					}
				},
				{
					"name": "List workflow runs for a workflow",
					"value": "actions/list-workflow-runs",
					"action": "List all workflow runs for a workflow. You can replace `workflow_id` with the workflow file name. For example, you could...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/actions/workflows/{workflow_id}/runs"
						}
					}
				},
				{
					"name": "Get workflow usage",
					"value": "actions/get-workflow-usage",
					"action": "Gets the number of billable minutes used by a specific workflow during the current billing cycle. Billable minutes only ...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/actions/workflows/{workflow_id}/timing"
						}
					}
				},
				{
					"name": "List environment secrets",
					"value": "actions/list-environment-secrets",
					"action": "Lists all secrets available in an environment without revealing their encrypted values. You must authenticate using an a...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repositories/{{ $parameter[\"repository_id\"] }}/environments/{environment_name}/secrets"
						}
					}
				},
				{
					"name": "Get an environment public key",
					"value": "actions/get-environment-public-key",
					"action": "Get the public key for an environment, which you need to encrypt environment secrets. You need to encrypt a secret befor...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repositories/{{ $parameter[\"repository_id\"] }}/environments/{environment_name}/secrets/public-key"
						}
					}
				},
				{
					"name": "Delete an environment secret",
					"value": "actions/delete-environment-secret",
					"action": "Deletes a secret in an environment using the secret name. You must authenticate using an access token with the `repo` sc...",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/repositories/{{ $parameter[\"repository_id\"] }}/environments/{environment_name}/secrets/{secret_name}"
						}
					}
				},
				{
					"name": "Get an environment secret",
					"value": "actions/get-environment-secret",
					"action": "Gets a single environment secret without revealing its encrypted value. You must authenticate using an access token with...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repositories/{{ $parameter[\"repository_id\"] }}/environments/{environment_name}/secrets/{secret_name}"
						}
					}
				},
				{
					"name": "Create or update an environment secret",
					"value": "actions/create-or-update-environment-secret",
					"action": "Creates or updates an environment secret with an encrypted value. Encrypt your secret using [LibSodium](https://libsodiu...",
					"routing": {
						"request": {
							"method": "PUT",
							"url": "=/repositories/{{ $parameter[\"repository_id\"] }}/environments/{environment_name}/secrets/{secret_name}"
						}
					}
				},
				{
					"name": "List environment variables",
					"value": "actions/list-environment-variables",
					"action": "Lists all environment variables. You must authenticate using an access token with the `repo` scope to use this endpoint....",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repositories/{{ $parameter[\"repository_id\"] }}/environments/{environment_name}/variables"
						}
					}
				},
				{
					"name": "Create an environment variable",
					"value": "actions/create-environment-variable",
					"action": "Create an environment variable that you can reference in a GitHub Actions workflow. You must authenticate using an acces...",
					"routing": {
						"request": {
							"method": "POST",
							"url": "=/repositories/{{ $parameter[\"repository_id\"] }}/environments/{environment_name}/variables"
						}
					}
				},
				{
					"name": "Delete an environment variable",
					"value": "actions/delete-environment-variable",
					"action": "Deletes an environment variable using the variable name. You must authenticate using an access token with the `repo` sco...",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/repositories/{{ $parameter[\"repository_id\"] }}/environments/{environment_name}/variables/{name}"
						}
					}
				},
				{
					"name": "Get an environment variable",
					"value": "actions/get-environment-variable",
					"action": "Gets a specific variable in an environment. You must authenticate using an access token with the `repo` scope to use thi...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repositories/{{ $parameter[\"repository_id\"] }}/environments/{environment_name}/variables/{name}"
						}
					}
				},
				{
					"name": "Update an environment variable",
					"value": "actions/update-environment-variable",
					"action": "Updates an environment variable that you can reference in a GitHub Actions workflow. You must authenticate using an acce...",
					"routing": {
						"request": {
							"method": "PATCH",
							"url": "=/repositories/{{ $parameter[\"repository_id\"] }}/environments/{environment_name}/variables/{name}"
						}
					}
				}
			],
			"displayOptions": { "show": { "resource": ["action"] } }
		},
		{
			"displayName": "Operation",
			"name": "operation",
			"type": "options",
			"noDataExpression": true,
			"default": "oidc/get-oidc-custom-sub-template-for-org",
			"options": [
				{
					"name": "Get the customization template for an OIDC subject claim for an organization",
					"value": "oidc/get-oidc-custom-sub-template-for-org",
					"action": "Gets the customization template for an OpenID Connect (OIDC) subject claim. You must authenticate using an access token ...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/actions/oidc/customization/sub"
						}
					}
				},
				{
					"name": "Set the customization template for an OIDC subject claim for an organization",
					"value": "oidc/update-oidc-custom-sub-template-for-org",
					"action": "Creates or updates the customization template for an OpenID Connect (OIDC) subject claim. You must authenticate using an...",
					"routing": {
						"request": {
							"method": "PUT",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/actions/oidc/customization/sub"
						}
					}
				}
			],
			"displayOptions": { "show": { "resource": ["oidc"] } }
		},
		{
			"displayName": "Operation",
			"name": "operation",
			"type": "options",
			"noDataExpression": true,
			"default": "code-scanning/list-alerts-for-org",
			"options": [
				{
					"name": "List code scanning alerts for an organization",
					"value": "code-scanning/list-alerts-for-org",
					"action": "Lists code scanning alerts for the default branch for all eligible repositories in an organization. Eligible repositorie...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/code-scanning/alerts"
						}
					}
				},
				{
					"name": "List code scanning alerts for a repository",
					"value": "code-scanning/list-alerts-for-repo",
					"action": "Lists code scanning alerts.  To use this endpoint, you must use an access token with the `security_events` scope or, for...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/code-scanning/alerts"
						}
					}
				},
				{
					"name": "Get a code scanning alert",
					"value": "code-scanning/get-alert",
					"action": "Gets a single code scanning alert. You must use an access token with the `security_events` scope to use this endpoint wi...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/code-scanning/alerts/{alert_number}"
						}
					}
				},
				{
					"name": "Update a code scanning alert",
					"value": "code-scanning/update-alert",
					"action": "Updates the status of a single code scanning alert. You must use an access token with the `security_events` scope to use...",
					"routing": {
						"request": {
							"method": "PATCH",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/code-scanning/alerts/{alert_number}"
						}
					}
				},
				{
					"name": "List instances of a code scanning alert",
					"value": "code-scanning/list-alert-instances",
					"action": "Lists all instances of the specified code scanning alert. You must use an access token with the `security_events` scope ...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/code-scanning/alerts/{alert_number}/instances"
						}
					}
				},
				{
					"name": "List code scanning analyses for a repository",
					"value": "code-scanning/list-recent-analyses",
					"action": "Lists the details of all code scanning analyses for a repository, starting with the most recent. The response is paginat...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/code-scanning/analyses"
						}
					}
				},
				{
					"name": "Delete a code scanning analysis from a repository",
					"value": "code-scanning/delete-analysis",
					"action": "Deletes a specified code scanning analysis from a repository. For private repositories, you must use an access token wit...",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/code-scanning/analyses/{analysis_id}"
						}
					}
				},
				{
					"name": "Get a code scanning analysis for a repository",
					"value": "code-scanning/get-analysis",
					"action": "Gets a specified code scanning analysis for a repository. You must use an access token with the `security_events` scope ...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/code-scanning/analyses/{analysis_id}"
						}
					}
				},
				{
					"name": "List CodeQL databases for a repository",
					"value": "code-scanning/list-codeql-databases",
					"action": "Lists the CodeQL databases that are available in a repository.  For private repositories, you must use an access token w...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/code-scanning/codeql/databases"
						}
					}
				},
				{
					"name": "Get a CodeQL database for a repository",
					"value": "code-scanning/get-codeql-database",
					"action": "Gets a CodeQL database for a language in a repository.  By default this endpoint returns JSON metadata about the CodeQL ...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/code-scanning/codeql/databases/{language}"
						}
					}
				},
				{
					"name": "Upload an analysis as SARIF data",
					"value": "code-scanning/upload-sarif",
					"action": "Uploads SARIF data containing the results of a code scanning analysis to make the results available in a repository. You...",
					"routing": {
						"request": {
							"method": "POST",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/code-scanning/sarifs"
						}
					}
				},
				{
					"name": "Get information about a SARIF upload",
					"value": "code-scanning/get-sarif",
					"action": "Gets information about a SARIF upload, including the status and the URL of the analysis that was uploaded so that you ca...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/code-scanning/sarifs/{sarif_id}"
						}
					}
				}
			],
			"displayOptions": { "show": { "resource": ["codeScanning"] } }
		},
		{
			"displayName": "Operation",
			"name": "operation",
			"type": "options",
			"noDataExpression": true,
			"default": "codespaces/list-in-organization",
			"options": [
				{
					"name": "List codespaces for the organization",
					"value": "codespaces/list-in-organization",
					"action": "Lists the codespaces associated to a specified organization.  You must authenticate using an access token with the `admi...",
					"routing": {
						"request": { "method": "GET", "url": "=/orgs/{{ $parameter[\"org\"] }}/codespaces" }
					}
				},
				{
					"name": "Manage access control for organization codespaces",
					"value": "codespaces/set-codespaces-billing",
					"action": "Sets which users can access codespaces in an organization. This is synonymous with granting or revoking codespaces billi...",
					"routing": {
						"request": {
							"method": "PUT",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/codespaces/billing"
						}
					}
				},
				{
					"name": "Removes users from Codespaces billing for an organization",
					"value": "codespaces/delete-codespaces-billing-users",
					"action": "Codespaces for the specified users will no longer be billed to the organization. To use this endpoint, the billing setti...",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/codespaces/billing/selected_users"
						}
					}
				},
				{
					"name": "Add users to Codespaces billing for an organization",
					"value": "codespaces/set-codespaces-billing-users",
					"action": "Codespaces for the specified users will be billed to the organization. To use this endpoint, the billing settings for th...",
					"routing": {
						"request": {
							"method": "POST",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/codespaces/billing/selected_users"
						}
					}
				},
				{
					"name": "List organization secrets",
					"value": "codespaces/list-org-secrets",
					"action": "Lists all Codespaces secrets available at the organization-level without revealing their encrypted values. You must auth...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/codespaces/secrets"
						}
					}
				},
				{
					"name": "Get an organization public key",
					"value": "codespaces/get-org-public-key",
					"action": "Gets a public key for an organization, which is required in order to encrypt secrets. You need to encrypt the value of a...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/codespaces/secrets/public-key"
						}
					}
				},
				{
					"name": "Delete an organization secret",
					"value": "codespaces/delete-org-secret",
					"action": "Deletes an organization secret using the secret name. You must authenticate using an access token with the `admin:org` s...",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/codespaces/secrets/{secret_name}"
						}
					}
				},
				{
					"name": "Get an organization secret",
					"value": "codespaces/get-org-secret",
					"action": "Gets an organization secret without revealing its encrypted value. You must authenticate using an access token with the ...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/codespaces/secrets/{secret_name}"
						}
					}
				},
				{
					"name": "Create or update an organization secret",
					"value": "codespaces/create-or-update-org-secret",
					"action": "Creates or updates an organization secret with an encrypted value. Encrypt your secret using [LibSodium](https://libsodi...",
					"routing": {
						"request": {
							"method": "PUT",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/codespaces/secrets/{secret_name}"
						}
					}
				},
				{
					"name": "List selected repositories for an organization secret",
					"value": "codespaces/list-selected-repos-for-org-secret",
					"action": "Lists all repositories that have been selected when the `visibility` for repository access to a secret is set to `select...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/codespaces/secrets/{secret_name}/repositories"
						}
					}
				},
				{
					"name": "Set selected repositories for an organization secret",
					"value": "codespaces/set-selected-repos-for-org-secret",
					"action": "Replaces all repositories for an organization secret when the `visibility` for repository access is set to `selected`. T...",
					"routing": {
						"request": {
							"method": "PUT",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/codespaces/secrets/{secret_name}/repositories"
						}
					}
				},
				{
					"name": "Remove selected repository from an organization secret",
					"value": "codespaces/remove-selected-repo-from-org-secret",
					"action": "Removes a repository from an organization secret when the `visibility` for repository access is set to `selected`. The v...",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/codespaces/secrets/{secret_name}/repositories/{repository_id}"
						}
					}
				},
				{
					"name": "Add selected repository to an organization secret",
					"value": "codespaces/add-selected-repo-to-org-secret",
					"action": "Adds a repository to an organization secret when the `visibility` for repository access is set to `selected`. The visibi...",
					"routing": {
						"request": {
							"method": "PUT",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/codespaces/secrets/{secret_name}/repositories/{repository_id}"
						}
					}
				},
				{
					"name": "List codespaces for a user in organization",
					"value": "codespaces/get-codespaces-for-user-in-org",
					"action": "Lists the codespaces that a member of an organization has for repositories in that organization.  You must authenticate ...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/members/{username}/codespaces"
						}
					}
				},
				{
					"name": "Delete a codespace from the organization",
					"value": "codespaces/delete-from-organization",
					"action": "Deletes a user's codespace.  You must authenticate using an access token with the `admin:org` scope to use this endpoint",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/members/{username}/codespaces/{codespace_name}"
						}
					}
				},
				{
					"name": "Stop a codespace for an organization user",
					"value": "codespaces/stop-in-organization",
					"action": "Stops a user's codespace.  You must authenticate using an access token with the `admin:org` scope to use this endpoint",
					"routing": {
						"request": {
							"method": "POST",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/members/{username}/codespaces/{codespace_name}/stop"
						}
					}
				},
				{
					"name": "List codespaces in a repository for the authenticated user",
					"value": "codespaces/list-in-repository-for-authenticated-user",
					"action": "Lists the codespaces associated to a specified repository and the authenticated user.  You must authenticate using an ac...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/codespaces"
						}
					}
				},
				{
					"name": "Create a codespace in a repository",
					"value": "codespaces/create-with-repo-for-authenticated-user",
					"action": "Creates a codespace owned by the authenticated user in the specified repository.  You must authenticate using an access ...",
					"routing": {
						"request": {
							"method": "POST",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/codespaces"
						}
					}
				},
				{
					"name": "List devcontainer configurations in a repository for the authenticated user",
					"value": "codespaces/list-devcontainers-in-repository-for-authenticated-user",
					"action": "Lists the devcontainer.json files associated with a specified repository and the authenticated user. These files specify...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/codespaces/devcontainers"
						}
					}
				},
				{
					"name": "List available machine types for a repository",
					"value": "codespaces/repo-machines-for-authenticated-user",
					"action": "List the machine types available for a given repository based on its configuration.  You must authenticate using an acce...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/codespaces/machines"
						}
					}
				},
				{
					"name": "Get default attributes for a codespace",
					"value": "codespaces/pre-flight-with-repo-for-authenticated-user",
					"action": "Gets the default attributes for codespaces created by the user with the repository.  You must authenticate using an acce...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/codespaces/new"
						}
					}
				},
				{
					"name": "List repository secrets",
					"value": "codespaces/list-repo-secrets",
					"action": "Lists all secrets available in a repository without revealing their encrypted values. You must authenticate using an acc...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/codespaces/secrets"
						}
					}
				},
				{
					"name": "Get a repository public key",
					"value": "codespaces/get-repo-public-key",
					"action": "Gets your public key, which you need to encrypt secrets. You need to encrypt a secret before you can create or update se...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/codespaces/secrets/public-key"
						}
					}
				},
				{
					"name": "Delete a repository secret",
					"value": "codespaces/delete-repo-secret",
					"action": "Deletes a secret in a repository using the secret name. You must authenticate using an access token with the `repo` scop...",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/codespaces/secrets/{secret_name}"
						}
					}
				},
				{
					"name": "Get a repository secret",
					"value": "codespaces/get-repo-secret",
					"action": "Gets a single repository secret without revealing its encrypted value. You must authenticate using an access token with ...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/codespaces/secrets/{secret_name}"
						}
					}
				},
				{
					"name": "Create or update a repository secret",
					"value": "codespaces/create-or-update-repo-secret",
					"action": "Creates or updates a repository secret with an encrypted value. Encrypt your secret using [LibSodium](https://libsodium....",
					"routing": {
						"request": {
							"method": "PUT",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/codespaces/secrets/{secret_name}"
						}
					}
				},
				{
					"name": "Create a codespace from a pull request",
					"value": "codespaces/create-with-pr-for-authenticated-user",
					"action": "Creates a codespace owned by the authenticated user for the specified pull request.  You must authenticate using an acce...",
					"routing": {
						"request": {
							"method": "POST",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/pulls/{pull_number}/codespaces"
						}
					}
				},
				{
					"name": "List codespaces for the authenticated user",
					"value": "codespaces/list-for-authenticated-user",
					"action": "Lists the authenticated user's codespaces.  You must authenticate using an access token with the `codespace` scope to us...",
					"routing": { "request": { "method": "GET", "url": "/user/codespaces" } }
				},
				{
					"name": "Create a codespace for the authenticated user",
					"value": "codespaces/create-for-authenticated-user",
					"action": "Creates a new codespace, owned by the authenticated user.  This endpoint requires either a `repository_id` OR a `pull_re...",
					"routing": { "request": { "method": "POST", "url": "/user/codespaces" } }
				},
				{
					"name": "List secrets for the authenticated user",
					"value": "codespaces/list-secrets-for-authenticated-user",
					"action": "Lists all secrets available for a user's Codespaces without revealing their encrypted values.  You must authenticate usi...",
					"routing": { "request": { "method": "GET", "url": "/user/codespaces/secrets" } }
				},
				{
					"name": "Get public key for the authenticated user",
					"value": "codespaces/get-public-key-for-authenticated-user",
					"action": "Gets your public key, which you need to encrypt secrets. You need to encrypt a secret before you can create or update se...",
					"routing": {
						"request": { "method": "GET", "url": "/user/codespaces/secrets/public-key" }
					}
				},
				{
					"name": "Delete a secret for the authenticated user",
					"value": "codespaces/delete-secret-for-authenticated-user",
					"action": "Deletes a secret from a user's codespaces using the secret name. Deleting the secret will remove access from all codespa...",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/user/codespaces/secrets/{{ $parameter[\"secret_name\"] }}"
						}
					}
				},
				{
					"name": "Get a secret for the authenticated user",
					"value": "codespaces/get-secret-for-authenticated-user",
					"action": "Gets a secret available to a user's codespaces without revealing its encrypted value.  You must authenticate using an ac...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/user/codespaces/secrets/{{ $parameter[\"secret_name\"] }}"
						}
					}
				},
				{
					"name": "Create or update a secret for the authenticated user",
					"value": "codespaces/create-or-update-secret-for-authenticated-user",
					"action": "Creates or updates a secret for a user's codespace with an encrypted value. Encrypt your secret using [LibSodium](https:...",
					"routing": {
						"request": {
							"method": "PUT",
							"url": "=/user/codespaces/secrets/{{ $parameter[\"secret_name\"] }}"
						}
					}
				},
				{
					"name": "List selected repositories for a user secret",
					"value": "codespaces/list-repositories-for-secret-for-authenticated-user",
					"action": "List the repositories that have been granted the ability to use a user's codespace secret.  You must authenticate using ...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/user/codespaces/secrets/{{ $parameter[\"secret_name\"] }}/repositories"
						}
					}
				},
				{
					"name": "Set selected repositories for a user secret",
					"value": "codespaces/set-repositories-for-secret-for-authenticated-user",
					"action": "Select the repositories that will use a user's codespace secret.  You must authenticate using an access token with the `...",
					"routing": {
						"request": {
							"method": "PUT",
							"url": "=/user/codespaces/secrets/{{ $parameter[\"secret_name\"] }}/repositories"
						}
					}
				},
				{
					"name": "Remove a selected repository from a user secret",
					"value": "codespaces/remove-repository-for-secret-for-authenticated-user",
					"action": "Removes a repository from the selected repositories for a user's codespace secret. You must authenticate using an access...",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/user/codespaces/secrets/{{ $parameter[\"secret_name\"] }}/repositories/{repository_id}"
						}
					}
				},
				{
					"name": "Add a selected repository to a user secret",
					"value": "codespaces/add-repository-for-secret-for-authenticated-user",
					"action": "Adds a repository to the selected repositories for a user's codespace secret. You must authenticate using an access toke...",
					"routing": {
						"request": {
							"method": "PUT",
							"url": "=/user/codespaces/secrets/{{ $parameter[\"secret_name\"] }}/repositories/{repository_id}"
						}
					}
				},
				{
					"name": "Delete a codespace for the authenticated user",
					"value": "codespaces/delete-for-authenticated-user",
					"action": "Deletes a user's codespace.  You must authenticate using an access token with the `codespace` scope to use this endpoint...",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/user/codespaces/{{ $parameter[\"codespace_name\"] }}"
						}
					}
				},
				{
					"name": "Get a codespace for the authenticated user",
					"value": "codespaces/get-for-authenticated-user",
					"action": "Gets information about a user's codespace.  You must authenticate using an access token with the `codespace` scope to us...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/user/codespaces/{{ $parameter[\"codespace_name\"] }}"
						}
					}
				},
				{
					"name": "Update a codespace for the authenticated user",
					"value": "codespaces/update-for-authenticated-user",
					"action": "Updates a codespace owned by the authenticated user. Currently only the codespace's machine type and recent folders can ...",
					"routing": {
						"request": {
							"method": "PATCH",
							"url": "=/user/codespaces/{{ $parameter[\"codespace_name\"] }}"
						}
					}
				},
				{
					"name": "Export a codespace for the authenticated user",
					"value": "codespaces/export-for-authenticated-user",
					"action": "Triggers an export of the specified codespace and returns a URL and ID where the status of the export can be monitored. ...",
					"routing": {
						"request": {
							"method": "POST",
							"url": "=/user/codespaces/{{ $parameter[\"codespace_name\"] }}/exports"
						}
					}
				},
				{
					"name": "Get details about a codespace export",
					"value": "codespaces/get-export-details-for-authenticated-user",
					"action": "Gets information about an export of a codespace.  You must authenticate using a personal access token with the `codespac...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/user/codespaces/{{ $parameter[\"codespace_name\"] }}/exports/{export_id}"
						}
					}
				},
				{
					"name": "List machine types for a codespace",
					"value": "codespaces/codespace-machines-for-authenticated-user",
					"action": "List the machine types a codespace can transition to use.  You must authenticate using an access token with the `codespa...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/user/codespaces/{{ $parameter[\"codespace_name\"] }}/machines"
						}
					}
				},
				{
					"name": "Create a repository from an unpublished codespace",
					"value": "codespaces/publish-for-authenticated-user",
					"action": "Publishes an unpublished codespace, creating a new repository and assigning it to the codespace.  The codespace's token ...",
					"routing": {
						"request": {
							"method": "POST",
							"url": "=/user/codespaces/{{ $parameter[\"codespace_name\"] }}/publish"
						}
					}
				},
				{
					"name": "Start a codespace for the authenticated user",
					"value": "codespaces/start-for-authenticated-user",
					"action": "Starts a user's codespace.  You must authenticate using an access token with the `codespace` scope to use this endpoint....",
					"routing": {
						"request": {
							"method": "POST",
							"url": "=/user/codespaces/{{ $parameter[\"codespace_name\"] }}/start"
						}
					}
				},
				{
					"name": "Stop a codespace for the authenticated user",
					"value": "codespaces/stop-for-authenticated-user",
					"action": "Stops a user's codespace.  You must authenticate using an access token with the `codespace` scope to use this endpoint. ...",
					"routing": {
						"request": {
							"method": "POST",
							"url": "=/user/codespaces/{{ $parameter[\"codespace_name\"] }}/stop"
						}
					}
				}
			],
			"displayOptions": { "show": { "resource": ["codespace"] } }
		},
		{
			"displayName": "Operation",
			"name": "operation",
			"type": "options",
			"noDataExpression": true,
			"default": "interactions/remove-restrictions-for-org",
			"options": [
				{
					"name": "Remove interaction restrictions for an organization",
					"value": "interactions/remove-restrictions-for-org",
					"action": "Removes all interaction restrictions from public repositories in the given organization. You must be an organization own...",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/interaction-limits"
						}
					}
				},
				{
					"name": "Get interaction restrictions for an organization",
					"value": "interactions/get-restrictions-for-org",
					"action": "Shows which type of GitHub user can interact with this organization and when the restriction expires. If there is no res...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/interaction-limits"
						}
					}
				},
				{
					"name": "Set interaction restrictions for an organization",
					"value": "interactions/set-restrictions-for-org",
					"action": "Temporarily restricts interactions to a certain type of GitHub user in any public repository in the given organization. ...",
					"routing": {
						"request": {
							"method": "PUT",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/interaction-limits"
						}
					}
				},
				{
					"name": "Remove interaction restrictions for a repository",
					"value": "interactions/remove-restrictions-for-repo",
					"action": "Removes all interaction restrictions from the given repository. You must have owner or admin access to remove restrictio...",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/interaction-limits"
						}
					}
				},
				{
					"name": "Get interaction restrictions for a repository",
					"value": "interactions/get-restrictions-for-repo",
					"action": "Shows which type of GitHub user can interact with this repository and when the restriction expires. If there are no rest...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/interaction-limits"
						}
					}
				},
				{
					"name": "Set interaction restrictions for a repository",
					"value": "interactions/set-restrictions-for-repo",
					"action": "Temporarily restricts interactions to a certain type of GitHub user within the given repository. You must have owner or ...",
					"routing": {
						"request": {
							"method": "PUT",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/interaction-limits"
						}
					}
				},
				{
					"name": "Remove interaction restrictions from your public repositories",
					"value": "interactions/remove-restrictions-for-authenticated-user",
					"action": "Removes any interaction restrictions from your public repositories",
					"routing": { "request": { "method": "DELETE", "url": "/user/interaction-limits" } }
				},
				{
					"name": "Get interaction restrictions for your public repositories",
					"value": "interactions/get-restrictions-for-authenticated-user",
					"action": "Shows which type of GitHub user can interact with your public repositories and when the restriction expires",
					"routing": { "request": { "method": "GET", "url": "/user/interaction-limits" } }
				},
				{
					"name": "Set interaction restrictions for your public repositories",
					"value": "interactions/set-restrictions-for-authenticated-user",
					"action": "Temporarily restricts which type of GitHub user can interact with your public repositories. Setting the interaction limi...",
					"routing": { "request": { "method": "PUT", "url": "/user/interaction-limits" } }
				}
			],
			"displayOptions": { "show": { "resource": ["interaction"] } }
		},
		{
			"displayName": "Operation",
			"name": "operation",
			"type": "options",
			"noDataExpression": true,
			"default": "migrations/list-for-org",
			"options": [
				{
					"name": "List organization migrations",
					"value": "migrations/list-for-org",
					"action": "Lists the most recent migrations, including both exports (which can be started through the REST API) and imports (which ...",
					"routing": {
						"request": { "method": "GET", "url": "=/orgs/{{ $parameter[\"org\"] }}/migrations" }
					}
				},
				{
					"name": "Start an organization migration",
					"value": "migrations/start-for-org",
					"action": "Initiates the generation of a migration archive",
					"routing": {
						"request": { "method": "POST", "url": "=/orgs/{{ $parameter[\"org\"] }}/migrations" }
					}
				},
				{
					"name": "Get an organization migration status",
					"value": "migrations/get-status-for-org",
					"action": "Fetches the status of a migration.  The `state` of a migration can be one of the following values:  *   `pending`, which...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/migrations/{migration_id}"
						}
					}
				},
				{
					"name": "Delete an organization migration archive",
					"value": "migrations/delete-archive-for-org",
					"action": "Deletes a previous migration archive. Migration archives are automatically deleted after seven days",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/migrations/{migration_id}/archive"
						}
					}
				},
				{
					"name": "Download an organization migration archive",
					"value": "migrations/download-archive-for-org",
					"action": "Fetches the URL to a migration archive",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/migrations/{migration_id}/archive"
						}
					}
				},
				{
					"name": "Unlock an organization repository",
					"value": "migrations/unlock-repo-for-org",
					"action": "Unlocks a repository that was locked for migration. You should unlock each migrated repository and [delete them](https:/...",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/migrations/{migration_id}/repos/{repo_name}/lock"
						}
					}
				},
				{
					"name": "List repositories in an organization migration",
					"value": "migrations/list-repos-for-org",
					"action": "List all the repositories for this organization migration",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/migrations/{migration_id}/repositories"
						}
					}
				},
				{
					"name": "Cancel an import",
					"value": "migrations/cancel-import",
					"action": "Stop an import for a repository",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/import"
						}
					}
				},
				{
					"name": "Get an import status",
					"value": "migrations/get-import-status",
					"action": "View the progress of an import.  **Import status**  This section includes details about the possible values of the `stat...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/import"
						}
					}
				},
				{
					"name": "Update an import",
					"value": "migrations/update-import",
					"action": "An import can be updated with credentials or a project choice by passing in the appropriate parameters in this API reque...",
					"routing": {
						"request": {
							"method": "PATCH",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/import"
						}
					}
				},
				{
					"name": "Start an import",
					"value": "migrations/start-import",
					"action": "Start a source import to a GitHub repository using GitHub Importer. Importing into a GitHub repository with GitHub Actio...",
					"routing": {
						"request": {
							"method": "PUT",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/import"
						}
					}
				},
				{
					"name": "Get commit authors",
					"value": "migrations/get-commit-authors",
					"action": "Each type of source control system represents authors in a different way. For example, a Git commit author has a display...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/import/authors"
						}
					}
				},
				{
					"name": "Map a commit author",
					"value": "migrations/map-commit-author",
					"action": "Update an author's identity for the import. Your application can continue updating authors any time before you push new ...",
					"routing": {
						"request": {
							"method": "PATCH",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/import/authors/{author_id}"
						}
					}
				},
				{
					"name": "Get large files",
					"value": "migrations/get-large-files",
					"action": "List files larger than 100MB found during the import",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/import/large_files"
						}
					}
				},
				{
					"name": "Update Git LFS preference",
					"value": "migrations/set-lfs-preference",
					"action": "You can import repositories from Subversion, Mercurial, and TFS that include files larger than 100MB. This ability is po...",
					"routing": {
						"request": {
							"method": "PATCH",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/import/lfs"
						}
					}
				},
				{
					"name": "List user migrations",
					"value": "migrations/list-for-authenticated-user",
					"action": "Lists all migrations a user has started",
					"routing": { "request": { "method": "GET", "url": "/user/migrations" } }
				},
				{
					"name": "Start a user migration",
					"value": "migrations/start-for-authenticated-user",
					"action": "Initiates the generation of a user migration archive",
					"routing": { "request": { "method": "POST", "url": "/user/migrations" } }
				},
				{
					"name": "Get a user migration status",
					"value": "migrations/get-status-for-authenticated-user",
					"action": "Fetches a single user migration. The response includes the `state` of the migration, which can be one of the following v...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/user/migrations/{{ $parameter[\"migration_id\"] }}"
						}
					}
				},
				{
					"name": "Delete a user migration archive",
					"value": "migrations/delete-archive-for-authenticated-user",
					"action": "Deletes a previous migration archive. Downloadable migration archives are automatically deleted after seven days. Migrat...",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/user/migrations/{{ $parameter[\"migration_id\"] }}/archive"
						}
					}
				},
				{
					"name": "Download a user migration archive",
					"value": "migrations/get-archive-for-authenticated-user",
					"action": "Fetches the URL to download the migration archive as a `tar.gz` file. Depending on the resources your repository uses, t...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/user/migrations/{{ $parameter[\"migration_id\"] }}/archive"
						}
					}
				},
				{
					"name": "Unlock a user repository",
					"value": "migrations/unlock-repo-for-authenticated-user",
					"action": "Unlocks a repository. You can lock repositories when you [start a user migration](https://docs.github.com/rest/migration...",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/user/migrations/{{ $parameter[\"migration_id\"] }}/repos/{repo_name}/lock"
						}
					}
				},
				{
					"name": "List repositories for a user migration",
					"value": "migrations/list-repos-for-authenticated-user",
					"action": "Lists all the repositories for this user migration",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/user/migrations/{{ $parameter[\"migration_id\"] }}/repositories"
						}
					}
				}
			],
			"displayOptions": { "show": { "resource": ["migration"] } }
		},
		{
			"displayName": "Operation",
			"name": "operation",
			"type": "options",
			"noDataExpression": true,
			"default": "packages/list-packages-for-organization",
			"options": [
				{
					"name": "List packages for an organization",
					"value": "packages/list-packages-for-organization",
					"action": "Lists packages in an organization readable by the user.  To use this endpoint, you must authenticate using an access tok...",
					"routing": {
						"request": { "method": "GET", "url": "=/orgs/{{ $parameter[\"org\"] }}/packages" }
					}
				},
				{
					"name": "Delete a package for an organization",
					"value": "packages/delete-package-for-org",
					"action": "Deletes an entire package in an organization. You cannot delete a public package if any version of the package has more ...",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/orgs/{org}/packages/{{ $parameter[\"package_type\"] }}/{package_name}"
						}
					}
				},
				{
					"name": "Get a package for an organization",
					"value": "packages/get-package-for-organization",
					"action": "Gets a specific package in an organization.  To use this endpoint, you must authenticate using an access token with the ...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/orgs/{org}/packages/{{ $parameter[\"package_type\"] }}/{package_name}"
						}
					}
				},
				{
					"name": "Restore a package for an organization",
					"value": "packages/restore-package-for-org",
					"action": "Restores an entire package in an organization.  You can restore a deleted package under the following conditions:   - Th...",
					"routing": {
						"request": {
							"method": "POST",
							"url": "=/orgs/{org}/packages/{{ $parameter[\"package_type\"] }}/{package_name}/restore"
						}
					}
				},
				{
					"name": "List package versions for a package owned by an organization",
					"value": "packages/get-all-package-versions-for-package-owned-by-org",
					"action": "Lists package versions for a package owned by an organization.  If the `package_type` belongs to a GitHub Packages regis...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/orgs/{org}/packages/{{ $parameter[\"package_type\"] }}/{package_name}/versions"
						}
					}
				},
				{
					"name": "Delete package version for an organization",
					"value": "packages/delete-package-version-for-org",
					"action": "Deletes a specific package version in an organization. If the package is public and the package version has more than 5,...",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/orgs/{org}/packages/{{ $parameter[\"package_type\"] }}/{package_name}/versions/{package_version_id}"
						}
					}
				},
				{
					"name": "Get a package version for an organization",
					"value": "packages/get-package-version-for-organization",
					"action": "Gets a specific package version in an organization.  You must authenticate using an access token with the `read:packages...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/orgs/{org}/packages/{{ $parameter[\"package_type\"] }}/{package_name}/versions/{package_version_id}"
						}
					}
				},
				{
					"name": "Restore package version for an organization",
					"value": "packages/restore-package-version-for-org",
					"action": "Restores a specific package version in an organization.  You can restore a deleted package under the following condition...",
					"routing": {
						"request": {
							"method": "POST",
							"url": "=/orgs/{org}/packages/{{ $parameter[\"package_type\"] }}/{package_name}/versions/{package_version_id}/restore"
						}
					}
				},
				{
					"name": "List packages for the authenticated user's namespace",
					"value": "packages/list-packages-for-authenticated-user",
					"action": "Lists packages owned by the authenticated user within the user's namespace.  To use this endpoint, you must authenticate...",
					"routing": { "request": { "method": "GET", "url": "/user/packages" } }
				},
				{
					"name": "Delete a package for the authenticated user",
					"value": "packages/delete-package-for-authenticated-user",
					"action": "Deletes a package owned by the authenticated user. You cannot delete a public package if any version of the package has ...",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/user/packages/{{ $parameter[\"package_type\"] }}/{package_name}"
						}
					}
				},
				{
					"name": "Get a package for the authenticated user",
					"value": "packages/get-package-for-authenticated-user",
					"action": "Gets a specific package for a package owned by the authenticated user.  To use this endpoint, you must authenticate usin...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/user/packages/{{ $parameter[\"package_type\"] }}/{package_name}"
						}
					}
				},
				{
					"name": "Restore a package for the authenticated user",
					"value": "packages/restore-package-for-authenticated-user",
					"action": "Restores a package owned by the authenticated user.  You can restore a deleted package under the following conditions:  ...",
					"routing": {
						"request": {
							"method": "POST",
							"url": "=/user/packages/{{ $parameter[\"package_type\"] }}/{package_name}/restore"
						}
					}
				},
				{
					"name": "List package versions for a package owned by the authenticated user",
					"value": "packages/get-all-package-versions-for-package-owned-by-authenticated-user",
					"action": "Lists package versions for a package owned by the authenticated user.  To use this endpoint, you must authenticate using...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/user/packages/{{ $parameter[\"package_type\"] }}/{package_name}/versions"
						}
					}
				},
				{
					"name": "Delete a package version for the authenticated user",
					"value": "packages/delete-package-version-for-authenticated-user",
					"action": "Deletes a specific package version for a package owned by the authenticated user.  If the package is public and the pack...",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/user/packages/{{ $parameter[\"package_type\"] }}/{package_name}/versions/{package_version_id}"
						}
					}
				},
				{
					"name": "Get a package version for the authenticated user",
					"value": "packages/get-package-version-for-authenticated-user",
					"action": "Gets a specific package version for a package owned by the authenticated user.  To use this endpoint, you must authentic...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/user/packages/{{ $parameter[\"package_type\"] }}/{package_name}/versions/{package_version_id}"
						}
					}
				},
				{
					"name": "Restore a package version for the authenticated user",
					"value": "packages/restore-package-version-for-authenticated-user",
					"action": "Restores a package version owned by the authenticated user.  You can restore a deleted package version under the followi...",
					"routing": {
						"request": {
							"method": "POST",
							"url": "=/user/packages/{{ $parameter[\"package_type\"] }}/{package_name}/versions/{package_version_id}/restore"
						}
					}
				},
				{
					"name": "List packages for a user",
					"value": "packages/list-packages-for-user",
					"action": "Lists all packages in a user's namespace for which the requesting user has access.  To use this endpoint, you must authe...",
					"routing": {
						"request": { "method": "GET", "url": "=/users/{{ $parameter[\"username\"] }}/packages" }
					}
				},
				{
					"name": "Delete a package for a user",
					"value": "packages/delete-package-for-user",
					"action": "Deletes an entire package for a user. You cannot delete a public package if any version of the package has more than 5,0...",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/users/{username}/packages/{{ $parameter[\"package_type\"] }}/{package_name}"
						}
					}
				},
				{
					"name": "Get a package for a user",
					"value": "packages/get-package-for-user",
					"action": "Gets a specific package metadata for a public package owned by a user.  To use this endpoint, you must authenticate usin...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/users/{username}/packages/{{ $parameter[\"package_type\"] }}/{package_name}"
						}
					}
				},
				{
					"name": "Restore a package for a user",
					"value": "packages/restore-package-for-user",
					"action": "Restores an entire package for a user.  You can restore a deleted package under the following conditions:   - The packag...",
					"routing": {
						"request": {
							"method": "POST",
							"url": "=/users/{username}/packages/{{ $parameter[\"package_type\"] }}/{package_name}/restore"
						}
					}
				},
				{
					"name": "List package versions for a package owned by a user",
					"value": "packages/get-all-package-versions-for-package-owned-by-user",
					"action": "Lists package versions for a public package owned by a specified user.  To use this endpoint, you must authenticate usin...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/users/{username}/packages/{{ $parameter[\"package_type\"] }}/{package_name}/versions"
						}
					}
				},
				{
					"name": "Delete package version for a user",
					"value": "packages/delete-package-version-for-user",
					"action": "Deletes a specific package version for a user. If the package is public and the package version has more than 5,000 down...",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/users/{username}/packages/{{ $parameter[\"package_type\"] }}/{package_name}/versions/{package_version_id}"
						}
					}
				},
				{
					"name": "Get a package version for a user",
					"value": "packages/get-package-version-for-user",
					"action": "Gets a specific package version for a public package owned by a specified user.  At this time, to use this endpoint, you...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/users/{username}/packages/{{ $parameter[\"package_type\"] }}/{package_name}/versions/{package_version_id}"
						}
					}
				},
				{
					"name": "Restore package version for a user",
					"value": "packages/restore-package-version-for-user",
					"action": "Restores a specific package version for a user.  You can restore a deleted package under the following conditions:   - T...",
					"routing": {
						"request": {
							"method": "POST",
							"url": "=/users/{username}/packages/{{ $parameter[\"package_type\"] }}/{package_name}/versions/{package_version_id}/restore"
						}
					}
				}
			],
			"displayOptions": { "show": { "resource": ["package"] } }
		},
		{
			"displayName": "Operation",
			"name": "operation",
			"type": "options",
			"noDataExpression": true,
			"default": "projects/list-for-org",
			"options": [
				{
					"name": "List organization projects",
					"value": "projects/list-for-org",
					"action": "Lists the projects in an organization. Returns a `404 Not Found` status if projects are disabled in the organization. If...",
					"routing": {
						"request": { "method": "GET", "url": "=/orgs/{{ $parameter[\"org\"] }}/projects" }
					}
				},
				{
					"name": "Create an organization project",
					"value": "projects/create-for-org",
					"action": "Creates an organization project board. Returns a `410 Gone` status if projects are disabled in the organization or if th...",
					"routing": {
						"request": { "method": "POST", "url": "=/orgs/{{ $parameter[\"org\"] }}/projects" }
					}
				},
				{
					"name": "Delete a project card",
					"value": "projects/delete-card",
					"action": "",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/projects/columns/cards/{{ $parameter[\"card_id\"] }}"
						}
					}
				},
				{
					"name": "Get a project card",
					"value": "projects/get-card",
					"action": "",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/projects/columns/cards/{{ $parameter[\"card_id\"] }}"
						}
					}
				},
				{
					"name": "Update an existing project card",
					"value": "projects/update-card",
					"action": "",
					"routing": {
						"request": {
							"method": "PATCH",
							"url": "=/projects/columns/cards/{{ $parameter[\"card_id\"] }}"
						}
					}
				},
				{
					"name": "Move a project card",
					"value": "projects/move-card",
					"action": "",
					"routing": {
						"request": {
							"method": "POST",
							"url": "=/projects/columns/cards/{{ $parameter[\"card_id\"] }}/moves"
						}
					}
				},
				{
					"name": "Delete a project column",
					"value": "projects/delete-column",
					"action": "",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/projects/columns/{{ $parameter[\"column_id\"] }}"
						}
					}
				},
				{
					"name": "Get a project column",
					"value": "projects/get-column",
					"action": "",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/projects/columns/{{ $parameter[\"column_id\"] }}"
						}
					}
				},
				{
					"name": "Update an existing project column",
					"value": "projects/update-column",
					"action": "",
					"routing": {
						"request": {
							"method": "PATCH",
							"url": "=/projects/columns/{{ $parameter[\"column_id\"] }}"
						}
					}
				},
				{
					"name": "List project cards",
					"value": "projects/list-cards",
					"action": "",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/projects/columns/{{ $parameter[\"column_id\"] }}/cards"
						}
					}
				},
				{
					"name": "Create a project card",
					"value": "projects/create-card",
					"action": "",
					"routing": {
						"request": {
							"method": "POST",
							"url": "=/projects/columns/{{ $parameter[\"column_id\"] }}/cards"
						}
					}
				},
				{
					"name": "Move a project column",
					"value": "projects/move-column",
					"action": "",
					"routing": {
						"request": {
							"method": "POST",
							"url": "=/projects/columns/{{ $parameter[\"column_id\"] }}/moves"
						}
					}
				},
				{
					"name": "Delete a project",
					"value": "projects/delete",
					"action": "Deletes a project board. Returns a `404 Not Found` status if projects are disabled",
					"routing": {
						"request": { "method": "DELETE", "url": "=/projects/{{ $parameter[\"project_id\"] }}" }
					}
				},
				{
					"name": "Get a project",
					"value": "projects/get",
					"action": "Gets a project by its `id`. Returns a `404 Not Found` status if projects are disabled. If you do not have sufficient pri...",
					"routing": {
						"request": { "method": "GET", "url": "=/projects/{{ $parameter[\"project_id\"] }}" }
					}
				},
				{
					"name": "Update a project",
					"value": "projects/update",
					"action": "Updates a project board's information. Returns a `404 Not Found` status if projects are disabled. If you do not have suf...",
					"routing": {
						"request": { "method": "PATCH", "url": "=/projects/{{ $parameter[\"project_id\"] }}" }
					}
				},
				{
					"name": "List project collaborators",
					"value": "projects/list-collaborators",
					"action": "Lists the collaborators for an organization project. For a project, the list of collaborators includes outside collabora...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/projects/{{ $parameter[\"project_id\"] }}/collaborators"
						}
					}
				},
				{
					"name": "Remove user as a collaborator",
					"value": "projects/remove-collaborator",
					"action": "Removes a collaborator from an organization project. You must be an organization owner or a project `admin` to remove a ...",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/projects/{{ $parameter[\"project_id\"] }}/collaborators/{username}"
						}
					}
				},
				{
					"name": "Add project collaborator",
					"value": "projects/add-collaborator",
					"action": "Adds a collaborator to an organization project and sets their permission level. You must be an organization owner or a p...",
					"routing": {
						"request": {
							"method": "PUT",
							"url": "=/projects/{{ $parameter[\"project_id\"] }}/collaborators/{username}"
						}
					}
				},
				{
					"name": "Get project permission for a user",
					"value": "projects/get-permission-for-user",
					"action": "Returns the collaborator's permission level for an organization project. Possible values for the `permission` key: `admi...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/projects/{{ $parameter[\"project_id\"] }}/collaborators/{username}/permission"
						}
					}
				},
				{
					"name": "List project columns",
					"value": "projects/list-columns",
					"action": "",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/projects/{{ $parameter[\"project_id\"] }}/columns"
						}
					}
				},
				{
					"name": "Create a project column",
					"value": "projects/create-column",
					"action": "",
					"routing": {
						"request": {
							"method": "POST",
							"url": "=/projects/{{ $parameter[\"project_id\"] }}/columns"
						}
					}
				},
				{
					"name": "List repository projects",
					"value": "projects/list-for-repo",
					"action": "Lists the projects in a repository. Returns a `404 Not Found` status if projects are disabled in the repository. If you ...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/projects"
						}
					}
				},
				{
					"name": "Create a repository project",
					"value": "projects/create-for-repo",
					"action": "Creates a repository project board. Returns a `410 Gone` status if projects are disabled in the repository or if the rep...",
					"routing": {
						"request": {
							"method": "POST",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/projects"
						}
					}
				},
				{
					"name": "Create a user project",
					"value": "projects/create-for-authenticated-user",
					"action": "Creates a user project board. Returns a `410 Gone` status if the user does not have existing classic projects. If you do...",
					"routing": { "request": { "method": "POST", "url": "/user/projects" } }
				},
				{
					"name": "List user projects",
					"value": "projects/list-for-user",
					"action": "",
					"routing": {
						"request": { "method": "GET", "url": "=/users/{{ $parameter[\"username\"] }}/projects" }
					}
				}
			],
			"displayOptions": { "show": { "resource": ["project"] } }
		},
		{
			"displayName": "Operation",
			"name": "operation",
			"type": "options",
			"noDataExpression": true,
			"default": "repos/list-for-org",
			"options": [
				{
					"name": "List organization repositories",
					"value": "repos/list-for-org",
					"action": "Lists repositories for the specified organization.  **Note:** In order to see the `security_and_analysis` block for a re...",
					"routing": {
						"request": { "method": "GET", "url": "=/orgs/{{ $parameter[\"org\"] }}/repos" }
					}
				},
				{
					"name": "Create an organization repository",
					"value": "repos/create-in-org",
					"action": "Creates a new repository in the specified organization. The authenticated user must be a member of the organization.  **...",
					"routing": {
						"request": { "method": "POST", "url": "=/orgs/{{ $parameter[\"org\"] }}/repos" }
					}
				},
				{
					"name": "Delete a repository",
					"value": "repos/delete",
					"action": "Deleting a repository requires admin access. If OAuth is used, the `delete_repo` scope is required.  If an organization ...",
					"routing": {
						"request": { "method": "DELETE", "url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}" }
					}
				},
				{
					"name": "Get a repository",
					"value": "repos/get",
					"action": "The `parent` and `source` objects are present when the repository is a fork. `parent` is the repository this repository ...",
					"routing": {
						"request": { "method": "GET", "url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}" }
					}
				},
				{
					"name": "Update a repository",
					"value": "repos/update",
					"action": "**Note**: To edit a repository's topics, use the [Replace all repository topics](https://docs.github.com/rest/reference/...",
					"routing": {
						"request": { "method": "PATCH", "url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}" }
					}
				},
				{
					"name": "List all autolinks of a repository",
					"value": "repos/list-autolinks",
					"action": "This returns a list of autolinks configured for the given repository.  Information about autolinks are only available to...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/autolinks"
						}
					}
				},
				{
					"name": "Create an autolink reference for a repository",
					"value": "repos/create-autolink",
					"action": "Users with admin access to the repository can create an autolink",
					"routing": {
						"request": {
							"method": "POST",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/autolinks"
						}
					}
				},
				{
					"name": "Delete an autolink reference from a repository",
					"value": "repos/delete-autolink",
					"action": "This deletes a single autolink reference by ID that was configured for the given repository.  Information about autolink...",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/autolinks/{autolink_id}"
						}
					}
				},
				{
					"name": "Get an autolink reference of a repository",
					"value": "repos/get-autolink",
					"action": "This returns a single autolink reference by ID that was configured for the given repository.  Information about autolink...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/autolinks/{autolink_id}"
						}
					}
				},
				{
					"name": "Disable automated security fixes",
					"value": "repos/disable-automated-security-fixes",
					"action": "Disables automated security fixes for a repository. The authenticated user must have admin access to the repository. For...",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/automated-security-fixes"
						}
					}
				},
				{
					"name": "Enable automated security fixes",
					"value": "repos/enable-automated-security-fixes",
					"action": "Enables automated security fixes for a repository. The authenticated user must have admin access to the repository. For ...",
					"routing": {
						"request": {
							"method": "PUT",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/automated-security-fixes"
						}
					}
				},
				{
					"name": "List branches",
					"value": "repos/list-branches",
					"action": "",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/branches"
						}
					}
				},
				{
					"name": "Get a branch",
					"value": "repos/get-branch",
					"action": "",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/branches/{branch}"
						}
					}
				},
				{
					"name": "Delete branch protection",
					"value": "repos/delete-branch-protection",
					"action": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in publi...",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/branches/{branch}/protection"
						}
					}
				},
				{
					"name": "Get branch protection",
					"value": "repos/get-branch-protection",
					"action": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in publi...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/branches/{branch}/protection"
						}
					}
				},
				{
					"name": "Update branch protection",
					"value": "repos/update-branch-protection",
					"action": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in publi...",
					"routing": {
						"request": {
							"method": "PUT",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/branches/{branch}/protection"
						}
					}
				},
				{
					"name": "Delete admin branch protection",
					"value": "repos/delete-admin-branch-protection",
					"action": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in publi...",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/branches/{branch}/protection/enforce_admins"
						}
					}
				},
				{
					"name": "Get admin branch protection",
					"value": "repos/get-admin-branch-protection",
					"action": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in publi...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/branches/{branch}/protection/enforce_admins"
						}
					}
				},
				{
					"name": "Set admin branch protection",
					"value": "repos/set-admin-branch-protection",
					"action": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in publi...",
					"routing": {
						"request": {
							"method": "POST",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/branches/{branch}/protection/enforce_admins"
						}
					}
				},
				{
					"name": "Delete pull request review protection",
					"value": "repos/delete-pull-request-review-protection",
					"action": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in publi...",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/branches/{branch}/protection/required_pull_request_reviews"
						}
					}
				},
				{
					"name": "Get pull request review protection",
					"value": "repos/get-pull-request-review-protection",
					"action": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in publi...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/branches/{branch}/protection/required_pull_request_reviews"
						}
					}
				},
				{
					"name": "Update pull request review protection",
					"value": "repos/update-pull-request-review-protection",
					"action": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in publi...",
					"routing": {
						"request": {
							"method": "PATCH",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/branches/{branch}/protection/required_pull_request_reviews"
						}
					}
				},
				{
					"name": "Delete commit signature protection",
					"value": "repos/delete-commit-signature-protection",
					"action": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in publi...",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/branches/{branch}/protection/required_signatures"
						}
					}
				},
				{
					"name": "Get commit signature protection",
					"value": "repos/get-commit-signature-protection",
					"action": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in publi...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/branches/{branch}/protection/required_signatures"
						}
					}
				},
				{
					"name": "Create commit signature protection",
					"value": "repos/create-commit-signature-protection",
					"action": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in publi...",
					"routing": {
						"request": {
							"method": "POST",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/branches/{branch}/protection/required_signatures"
						}
					}
				},
				{
					"name": "Remove status check protection",
					"value": "repos/remove-status-check-protection",
					"action": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in publi...",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/branches/{branch}/protection/required_status_checks"
						}
					}
				},
				{
					"name": "Get status checks protection",
					"value": "repos/get-status-checks-protection",
					"action": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in publi...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/branches/{branch}/protection/required_status_checks"
						}
					}
				},
				{
					"name": "Update status check protection",
					"value": "repos/update-status-check-protection",
					"action": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in publi...",
					"routing": {
						"request": {
							"method": "PATCH",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/branches/{branch}/protection/required_status_checks"
						}
					}
				},
				{
					"name": "Remove status check contexts",
					"value": "repos/remove-status-check-contexts",
					"action": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in publi...",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/branches/{branch}/protection/required_status_checks/contexts"
						}
					}
				},
				{
					"name": "Get all status check contexts",
					"value": "repos/get-all-status-check-contexts",
					"action": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in publi...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/branches/{branch}/protection/required_status_checks/contexts"
						}
					}
				},
				{
					"name": "Add status check contexts",
					"value": "repos/add-status-check-contexts",
					"action": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in publi...",
					"routing": {
						"request": {
							"method": "POST",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/branches/{branch}/protection/required_status_checks/contexts"
						}
					}
				},
				{
					"name": "Set status check contexts",
					"value": "repos/set-status-check-contexts",
					"action": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in publi...",
					"routing": {
						"request": {
							"method": "PUT",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/branches/{branch}/protection/required_status_checks/contexts"
						}
					}
				},
				{
					"name": "Delete access restrictions",
					"value": "repos/delete-access-restrictions",
					"action": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in publi...",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/branches/{branch}/protection/restrictions"
						}
					}
				},
				{
					"name": "Get access restrictions",
					"value": "repos/get-access-restrictions",
					"action": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in publi...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/branches/{branch}/protection/restrictions"
						}
					}
				},
				{
					"name": "Remove app access restrictions",
					"value": "repos/remove-app-access-restrictions",
					"action": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in publi...",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/branches/{branch}/protection/restrictions/apps"
						}
					}
				},
				{
					"name": "Get apps with access to the protected branch",
					"value": "repos/get-apps-with-access-to-protected-branch",
					"action": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in publi...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/branches/{branch}/protection/restrictions/apps"
						}
					}
				},
				{
					"name": "Add app access restrictions",
					"value": "repos/add-app-access-restrictions",
					"action": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in publi...",
					"routing": {
						"request": {
							"method": "POST",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/branches/{branch}/protection/restrictions/apps"
						}
					}
				},
				{
					"name": "Set app access restrictions",
					"value": "repos/set-app-access-restrictions",
					"action": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in publi...",
					"routing": {
						"request": {
							"method": "PUT",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/branches/{branch}/protection/restrictions/apps"
						}
					}
				},
				{
					"name": "Remove team access restrictions",
					"value": "repos/remove-team-access-restrictions",
					"action": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in publi...",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/branches/{branch}/protection/restrictions/teams"
						}
					}
				},
				{
					"name": "Get teams with access to the protected branch",
					"value": "repos/get-teams-with-access-to-protected-branch",
					"action": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in publi...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/branches/{branch}/protection/restrictions/teams"
						}
					}
				},
				{
					"name": "Add team access restrictions",
					"value": "repos/add-team-access-restrictions",
					"action": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in publi...",
					"routing": {
						"request": {
							"method": "POST",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/branches/{branch}/protection/restrictions/teams"
						}
					}
				},
				{
					"name": "Set team access restrictions",
					"value": "repos/set-team-access-restrictions",
					"action": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in publi...",
					"routing": {
						"request": {
							"method": "PUT",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/branches/{branch}/protection/restrictions/teams"
						}
					}
				},
				{
					"name": "Remove user access restrictions",
					"value": "repos/remove-user-access-restrictions",
					"action": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in publi...",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/branches/{branch}/protection/restrictions/users"
						}
					}
				},
				{
					"name": "Get users with access to the protected branch",
					"value": "repos/get-users-with-access-to-protected-branch",
					"action": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in publi...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/branches/{branch}/protection/restrictions/users"
						}
					}
				},
				{
					"name": "Add user access restrictions",
					"value": "repos/add-user-access-restrictions",
					"action": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in publi...",
					"routing": {
						"request": {
							"method": "POST",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/branches/{branch}/protection/restrictions/users"
						}
					}
				},
				{
					"name": "Set user access restrictions",
					"value": "repos/set-user-access-restrictions",
					"action": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in publi...",
					"routing": {
						"request": {
							"method": "PUT",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/branches/{branch}/protection/restrictions/users"
						}
					}
				},
				{
					"name": "Rename a branch",
					"value": "repos/rename-branch",
					"action": "Renames a branch in a repository.  **Note:** Although the API responds immediately, the branch rename process might take...",
					"routing": {
						"request": {
							"method": "POST",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/branches/{branch}/rename"
						}
					}
				},
				{
					"name": "List CODEOWNERS errors",
					"value": "repos/codeowners-errors",
					"action": "List any syntax errors that are detected in the CODEOWNERS file.  For more information about the correct CODEOWNERS synt...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/codeowners/errors"
						}
					}
				},
				{
					"name": "List repository collaborators",
					"value": "repos/list-collaborators",
					"action": "For organization-owned repositories, the list of collaborators includes outside collaborators, organization members that...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/collaborators"
						}
					}
				},
				{
					"name": "Remove a repository collaborator",
					"value": "repos/remove-collaborator",
					"action": "",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/collaborators/{username}"
						}
					}
				},
				{
					"name": "Check if a user is a repository collaborator",
					"value": "repos/check-collaborator",
					"action": "For organization-owned repositories, the list of collaborators includes outside collaborators, organization members that...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/collaborators/{username}"
						}
					}
				},
				{
					"name": "Add a repository collaborator",
					"value": "repos/add-collaborator",
					"action": "This endpoint triggers [notifications](https://docs.github.com/github/managing-subscriptions-and-notifications-on-github...",
					"routing": {
						"request": {
							"method": "PUT",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/collaborators/{username}"
						}
					}
				},
				{
					"name": "Get repository permissions for a user",
					"value": "repos/get-collaborator-permission-level",
					"action": "Checks the repository permission of a collaborator. The possible repository permissions are `admin`, `write`, `read`, an...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/collaborators/{username}/permission"
						}
					}
				},
				{
					"name": "List commit comments for a repository",
					"value": "repos/list-commit-comments-for-repo",
					"action": "Commit Comments use [these custom media types](https://docs.github.com/rest/reference/repos#custom-media-types). You can...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/comments"
						}
					}
				},
				{
					"name": "Delete a commit comment",
					"value": "repos/delete-commit-comment",
					"action": "",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/comments/{comment_id}"
						}
					}
				},
				{
					"name": "Get a commit comment",
					"value": "repos/get-commit-comment",
					"action": "",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/comments/{comment_id}"
						}
					}
				},
				{
					"name": "Update a commit comment",
					"value": "repos/update-commit-comment",
					"action": "",
					"routing": {
						"request": {
							"method": "PATCH",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/comments/{comment_id}"
						}
					}
				},
				{
					"name": "List commits",
					"value": "repos/list-commits",
					"action": "**Signature verification object**  The response will include a `verification` object that describes the result of verify...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/commits"
						}
					}
				},
				{
					"name": "List branches for HEAD commit",
					"value": "repos/list-branches-for-head-commit",
					"action": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in publi...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/commits/{commit_sha}/branches-where-head"
						}
					}
				},
				{
					"name": "List commit comments",
					"value": "repos/list-comments-for-commit",
					"action": "Use the `:commit_sha` to specify the commit that will have its comments listed",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/commits/{commit_sha}/comments"
						}
					}
				},
				{
					"name": "Create a commit comment",
					"value": "repos/create-commit-comment",
					"action": "Create a comment for a commit using its `:commit_sha`.  This endpoint triggers [notifications](https://docs.github.com/g...",
					"routing": {
						"request": {
							"method": "POST",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/commits/{commit_sha}/comments"
						}
					}
				},
				{
					"name": "List pull requests associated with a commit",
					"value": "repos/list-pull-requests-associated-with-commit",
					"action": "Lists the merged pull request that introduced the commit to the repository. If the commit is not present in the default ...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/commits/{commit_sha}/pulls"
						}
					}
				},
				{
					"name": "Get a commit",
					"value": "repos/get-commit",
					"action": "Returns the contents of a single commit reference. You must have `read` access for the repository to use this endpoint. ...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/commits/{ref}"
						}
					}
				},
				{
					"name": "Get the combined status for a specific reference",
					"value": "repos/get-combined-status-for-ref",
					"action": "Users with pull access in a repository can access a combined view of commit statuses for a given ref. The ref can be a S...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/commits/{ref}/status"
						}
					}
				},
				{
					"name": "List commit statuses for a reference",
					"value": "repos/list-commit-statuses-for-ref",
					"action": "Users with pull access in a repository can view commit statuses for a given ref. The ref can be a SHA, a branch name, or...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/commits/{ref}/statuses"
						}
					}
				},
				{
					"name": "Get community profile metrics",
					"value": "repos/get-community-profile-metrics",
					"action": "Returns all community profile metrics for a repository. The repository cannot be a fork.  The returned metrics include a...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/community/profile"
						}
					}
				},
				{
					"name": "Compare two commits",
					"value": "repos/compare-commits",
					"action": "Compares two commits against one another. You can compare branches in the same repository, or you can compare branches t...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/compare/{basehead}"
						}
					}
				},
				{
					"name": "Delete a file",
					"value": "repos/delete-file",
					"action": "Deletes a file in a repository.  You can provide an additional `committer` parameter, which is an object containing info...",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/contents/{path}"
						}
					}
				},
				{
					"name": "Get repository content",
					"value": "repos/get-content",
					"action": "Gets the contents of a file or directory in a repository. Specify the file path or directory in `:path`. If you omit `:p...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/contents/{path}"
						}
					}
				},
				{
					"name": "Create or update file contents",
					"value": "repos/create-or-update-file-contents",
					"action": "Creates a new file or replaces an existing file in a repository. You must authenticate using an access token with the `w...",
					"routing": {
						"request": {
							"method": "PUT",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/contents/{path}"
						}
					}
				},
				{
					"name": "List repository contributors",
					"value": "repos/list-contributors",
					"action": "Lists contributors to the specified repository and sorts them by the number of commits per contributor in descending ord...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/contributors"
						}
					}
				},
				{
					"name": "List deployments",
					"value": "repos/list-deployments",
					"action": "Simple filtering of deployments is available via query parameters:",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/deployments"
						}
					}
				},
				{
					"name": "Create a deployment",
					"value": "repos/create-deployment",
					"action": "Deployments offer a few configurable parameters with certain defaults.  The `ref` parameter can be any named branch, tag...",
					"routing": {
						"request": {
							"method": "POST",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/deployments"
						}
					}
				},
				{
					"name": "Delete a deployment",
					"value": "repos/delete-deployment",
					"action": "If the repository only has one deployment, you can delete the deployment regardless of its status. If the repository has...",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/deployments/{deployment_id}"
						}
					}
				},
				{
					"name": "Get a deployment",
					"value": "repos/get-deployment",
					"action": "",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/deployments/{deployment_id}"
						}
					}
				},
				{
					"name": "List deployment statuses",
					"value": "repos/list-deployment-statuses",
					"action": "Users with pull access can view deployment statuses for a deployment:",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/deployments/{deployment_id}/statuses"
						}
					}
				},
				{
					"name": "Create a deployment status",
					"value": "repos/create-deployment-status",
					"action": "Users with `push` access can create deployment statuses for a given deployment.  GitHub Apps require `read & write` acce...",
					"routing": {
						"request": {
							"method": "POST",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/deployments/{deployment_id}/statuses"
						}
					}
				},
				{
					"name": "Get a deployment status",
					"value": "repos/get-deployment-status",
					"action": "Users with pull access can view a deployment status for a deployment:",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/deployments/{deployment_id}/statuses/{status_id}"
						}
					}
				},
				{
					"name": "Create a repository dispatch event",
					"value": "repos/create-dispatch-event",
					"action": "You can use this endpoint to trigger a webhook event called `repository_dispatch` when you want activity that happens ou...",
					"routing": {
						"request": {
							"method": "POST",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/dispatches"
						}
					}
				},
				{
					"name": "List environments",
					"value": "repos/get-all-environments",
					"action": "Lists the environments for a repository.  Anyone with read access to the repository can use this endpoint. If the reposi...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/environments"
						}
					}
				},
				{
					"name": "Delete an environment",
					"value": "repos/delete-an-environment",
					"action": "You must authenticate using an access token with the repo scope to use this endpoint",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/environments/{environment_name}"
						}
					}
				},
				{
					"name": "Get an environment",
					"value": "repos/get-environment",
					"action": "**Note:** To get information about name patterns that branches must match in order to deploy to this environment, see \"[...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/environments/{environment_name}"
						}
					}
				},
				{
					"name": "Create or update an environment",
					"value": "repos/create-or-update-environment",
					"action": "Create or update an environment with protection rules, such as required reviewers. For more information about environmen...",
					"routing": {
						"request": {
							"method": "PUT",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/environments/{environment_name}"
						}
					}
				},
				{
					"name": "List deployment branch policies",
					"value": "repos/list-deployment-branch-policies",
					"action": "Lists the deployment branch policies for an environment.  Anyone with read access to the repository can use this endpoin...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/environments/{environment_name}/deployment-branch-policies"
						}
					}
				},
				{
					"name": "Create a deployment branch policy",
					"value": "repos/create-deployment-branch-policy",
					"action": "Creates a deployment branch policy for an environment.  You must authenticate using an access token with the `repo` scop...",
					"routing": {
						"request": {
							"method": "POST",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/environments/{environment_name}/deployment-branch-policies"
						}
					}
				},
				{
					"name": "Delete a deployment branch policy",
					"value": "repos/delete-deployment-branch-policy",
					"action": "Deletes a deployment branch policy for an environment.  You must authenticate using an access token with the `repo` scop...",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}"
						}
					}
				},
				{
					"name": "Get a deployment branch policy",
					"value": "repos/get-deployment-branch-policy",
					"action": "Gets a deployment branch policy for an environment.  Anyone with read access to the repository can use this endpoint. If...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}"
						}
					}
				},
				{
					"name": "Update a deployment branch policy",
					"value": "repos/update-deployment-branch-policy",
					"action": "Updates a deployment branch policy for an environment.  You must authenticate using an access token with the `repo` scop...",
					"routing": {
						"request": {
							"method": "PUT",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}"
						}
					}
				},
				{
					"name": "List forks",
					"value": "repos/list-forks",
					"action": "",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/forks"
						}
					}
				},
				{
					"name": "Create a fork",
					"value": "repos/create-fork",
					"action": "Create a fork for the authenticated user.  **Note**: Forking a Repository happens asynchronously. You may have to wait a...",
					"routing": {
						"request": {
							"method": "POST",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/forks"
						}
					}
				},
				{
					"name": "List repository webhooks",
					"value": "repos/list-webhooks",
					"action": "Lists webhooks for a repository. `last response` may return null if there have not been any deliveries within 30 days",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/hooks"
						}
					}
				},
				{
					"name": "Create a repository webhook",
					"value": "repos/create-webhook",
					"action": "Repositories can have multiple webhooks installed. Each webhook should have a unique `config`. Multiple webhooks can sha...",
					"routing": {
						"request": {
							"method": "POST",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/hooks"
						}
					}
				},
				{
					"name": "Delete a repository webhook",
					"value": "repos/delete-webhook",
					"action": "",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/hooks/{hook_id}"
						}
					}
				},
				{
					"name": "Get a repository webhook",
					"value": "repos/get-webhook",
					"action": "Returns a webhook configured in a repository. To get only the webhook `config` properties, see \"[Get a webhook configura...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/hooks/{hook_id}"
						}
					}
				},
				{
					"name": "Update a repository webhook",
					"value": "repos/update-webhook",
					"action": "Updates a webhook configured in a repository. If you previously had a `secret` set, you must provide the same `secret` o...",
					"routing": {
						"request": {
							"method": "PATCH",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/hooks/{hook_id}"
						}
					}
				},
				{
					"name": "Get a webhook configuration for a repository",
					"value": "repos/get-webhook-config-for-repo",
					"action": "Returns the webhook configuration for a repository. To get more information about the webhook, including the `active` st...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/hooks/{hook_id}/config"
						}
					}
				},
				{
					"name": "Update a webhook configuration for a repository",
					"value": "repos/update-webhook-config-for-repo",
					"action": "Updates the webhook configuration for a repository. To update more information about the webhook, including the `active`...",
					"routing": {
						"request": {
							"method": "PATCH",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/hooks/{hook_id}/config"
						}
					}
				},
				{
					"name": "List deliveries for a repository webhook",
					"value": "repos/list-webhook-deliveries",
					"action": "Returns a list of webhook deliveries for a webhook configured in a repository",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/hooks/{hook_id}/deliveries"
						}
					}
				},
				{
					"name": "Get a delivery for a repository webhook",
					"value": "repos/get-webhook-delivery",
					"action": "Returns a delivery for a webhook configured in a repository",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}"
						}
					}
				},
				{
					"name": "Redeliver a delivery for a repository webhook",
					"value": "repos/redeliver-webhook-delivery",
					"action": "Redeliver a webhook delivery for a webhook configured in a repository",
					"routing": {
						"request": {
							"method": "POST",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}/attempts"
						}
					}
				},
				{
					"name": "Ping a repository webhook",
					"value": "repos/ping-webhook",
					"action": "This will trigger a [ping event](https://docs.github.com/webhooks/#ping-event) to be sent to the hook",
					"routing": {
						"request": {
							"method": "POST",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/hooks/{hook_id}/pings"
						}
					}
				},
				{
					"name": "Test the push repository webhook",
					"value": "repos/test-push-webhook",
					"action": "This will trigger the hook with the latest push to the current repository if the hook is subscribed to `push` events. If...",
					"routing": {
						"request": {
							"method": "POST",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/hooks/{hook_id}/tests"
						}
					}
				},
				{
					"name": "List repository invitations",
					"value": "repos/list-invitations",
					"action": "When authenticating as a user with admin rights to a repository, this endpoint will list all currently open repository i...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/invitations"
						}
					}
				},
				{
					"name": "Delete a repository invitation",
					"value": "repos/delete-invitation",
					"action": "",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/invitations/{invitation_id}"
						}
					}
				},
				{
					"name": "Update a repository invitation",
					"value": "repos/update-invitation",
					"action": "",
					"routing": {
						"request": {
							"method": "PATCH",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/invitations/{invitation_id}"
						}
					}
				},
				{
					"name": "List deploy keys",
					"value": "repos/list-deploy-keys",
					"action": "",
					"routing": {
						"request": { "method": "GET", "url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/keys" }
					}
				},
				{
					"name": "Create a deploy key",
					"value": "repos/create-deploy-key",
					"action": "You can create a read-only deploy key",
					"routing": {
						"request": {
							"method": "POST",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/keys"
						}
					}
				},
				{
					"name": "Delete a deploy key",
					"value": "repos/delete-deploy-key",
					"action": "Deploy keys are immutable. If you need to update a key, remove the key and create a new one instead",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/keys/{key_id}"
						}
					}
				},
				{
					"name": "Get a deploy key",
					"value": "repos/get-deploy-key",
					"action": "",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/keys/{key_id}"
						}
					}
				},
				{
					"name": "List repository languages",
					"value": "repos/list-languages",
					"action": "Lists languages for the specified repository. The value shown for each language is the number of bytes of code written i...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/languages"
						}
					}
				},
				{
					"name": "Disable Git LFS for a repository",
					"value": "repos/disable-lfs-for-repo",
					"action": "Disables Git LFS for a repository. Access tokens must have the `admin:enterprise` scope",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/lfs"
						}
					}
				},
				{
					"name": "Enable Git LFS for a repository",
					"value": "repos/enable-lfs-for-repo",
					"action": "Enables Git LFS for a repository. Access tokens must have the `admin:enterprise` scope",
					"routing": {
						"request": { "method": "PUT", "url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/lfs" }
					}
				},
				{
					"name": "Sync a fork branch with the upstream repository",
					"value": "repos/merge-upstream",
					"action": "Sync a branch of a forked repository to keep it up-to-date with the upstream repository",
					"routing": {
						"request": {
							"method": "POST",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/merge-upstream"
						}
					}
				},
				{
					"name": "Merge a branch",
					"value": "repos/merge",
					"action": "",
					"routing": {
						"request": {
							"method": "POST",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/merges"
						}
					}
				},
				{
					"name": "Delete a GitHub Pages site",
					"value": "repos/delete-pages-site",
					"action": "Deletes a GitHub Pages site. For more information, see \"[About GitHub Pages](/github/working-with-github-pages/about-git...",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/pages"
						}
					}
				},
				{
					"name": "Get a GitHub Pages site",
					"value": "repos/get-pages",
					"action": "",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/pages"
						}
					}
				},
				{
					"name": "Create a GitHub Pages site",
					"value": "repos/create-pages-site",
					"action": "Configures a GitHub Pages site. For more information, see \"[About GitHub Pages](/github/working-with-github-pages/about-...",
					"routing": {
						"request": {
							"method": "POST",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/pages"
						}
					}
				},
				{
					"name": "Update information about a GitHub Pages site",
					"value": "repos/update-information-about-pages-site",
					"action": "Updates information for a GitHub Pages site. For more information, see \"[About GitHub Pages](/github/working-with-github...",
					"routing": {
						"request": {
							"method": "PUT",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/pages"
						}
					}
				},
				{
					"name": "List GitHub Pages builds",
					"value": "repos/list-pages-builds",
					"action": "",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/pages/builds"
						}
					}
				},
				{
					"name": "Request a GitHub Pages build",
					"value": "repos/request-pages-build",
					"action": "You can request that your site be built from the latest revision on the default branch. This has the same effect as push...",
					"routing": {
						"request": {
							"method": "POST",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/pages/builds"
						}
					}
				},
				{
					"name": "Get latest Pages build",
					"value": "repos/get-latest-pages-build",
					"action": "",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/pages/builds/latest"
						}
					}
				},
				{
					"name": "Get GitHub Pages build",
					"value": "repos/get-pages-build",
					"action": "",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/pages/builds/{build_id}"
						}
					}
				},
				{
					"name": "Create a GitHub Pages deployment",
					"value": "repos/create-pages-deployment",
					"action": "Create a GitHub Pages deployment for a repository.  Users must have write permissions. GitHub Apps must have the `pages:...",
					"routing": {
						"request": {
							"method": "POST",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/pages/deployment"
						}
					}
				},
				{
					"name": "Get a DNS health check for GitHub Pages",
					"value": "repos/get-pages-health-check",
					"action": "Gets a health check of the DNS settings for the `CNAME` record configured for a repository's GitHub Pages.  The first re...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/pages/health"
						}
					}
				},
				{
					"name": "Get a repository README",
					"value": "repos/get-readme",
					"action": "Gets the preferred README for a repository.  READMEs support [custom media types](https://docs.github.com/rest/reference...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/readme"
						}
					}
				},
				{
					"name": "Get a repository README for a directory",
					"value": "repos/get-readme-in-directory",
					"action": "Gets the README from a repository directory.  READMEs support [custom media types](https://docs.github.com/rest/referenc...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/readme/{dir}"
						}
					}
				},
				{
					"name": "List releases",
					"value": "repos/list-releases",
					"action": "This returns a list of releases, which does not include regular Git tags that have not been associated with a release. T...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/releases"
						}
					}
				},
				{
					"name": "Create a release",
					"value": "repos/create-release",
					"action": "Users with push access to the repository can create a release.  This endpoint triggers [notifications](https://docs.gith...",
					"routing": {
						"request": {
							"method": "POST",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/releases"
						}
					}
				},
				{
					"name": "Delete a release asset",
					"value": "repos/delete-release-asset",
					"action": "",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/releases/assets/{asset_id}"
						}
					}
				},
				{
					"name": "Get a release asset",
					"value": "repos/get-release-asset",
					"action": "To download the asset's binary content, set the `Accept` header of the request to [`application/octet-stream`](https://d...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/releases/assets/{asset_id}"
						}
					}
				},
				{
					"name": "Update a release asset",
					"value": "repos/update-release-asset",
					"action": "Users with push access to the repository can edit a release asset",
					"routing": {
						"request": {
							"method": "PATCH",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/releases/assets/{asset_id}"
						}
					}
				},
				{
					"name": "Generate release notes content for a release",
					"value": "repos/generate-release-notes",
					"action": "Generate a name and body describing a [release](https://docs.github.com/rest/reference/repos#releases). The body content...",
					"routing": {
						"request": {
							"method": "POST",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/releases/generate-notes"
						}
					}
				},
				{
					"name": "Get the latest release",
					"value": "repos/get-latest-release",
					"action": "View the latest published full release for the repository.  The latest release is the most recent non-prerelease, non-dr...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/releases/latest"
						}
					}
				},
				{
					"name": "Get a release by tag name",
					"value": "repos/get-release-by-tag",
					"action": "Get a published release with the specified tag",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/releases/tags/{tag}"
						}
					}
				},
				{
					"name": "Delete a release",
					"value": "repos/delete-release",
					"action": "Users with push access to the repository can delete a release",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/releases/{release_id}"
						}
					}
				},
				{
					"name": "Get a release",
					"value": "repos/get-release",
					"action": "**Note:** This returns an `upload_url` key corresponding to the endpoint for uploading release assets. This key is a [hy...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/releases/{release_id}"
						}
					}
				},
				{
					"name": "Update a release",
					"value": "repos/update-release",
					"action": "Users with push access to the repository can edit a release",
					"routing": {
						"request": {
							"method": "PATCH",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/releases/{release_id}"
						}
					}
				},
				{
					"name": "List release assets",
					"value": "repos/list-release-assets",
					"action": "",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/releases/{release_id}/assets"
						}
					}
				},
				{
					"name": "Upload a release asset",
					"value": "repos/upload-release-asset",
					"action": "This endpoint makes use of [a Hypermedia relation](https://docs.github.com/rest/overview/resources-in-the-rest-api#hyper...",
					"routing": {
						"request": {
							"method": "POST",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/releases/{release_id}/assets",
							"headers": { "Content-Type": "application/octet-stream" }
						}
					}
				},
				{
					"name": "Get the weekly commit activity",
					"value": "repos/get-code-frequency-stats",
					"action": "Returns a weekly aggregate of the number of additions and deletions pushed to a repository",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/stats/code_frequency"
						}
					}
				},
				{
					"name": "Get the last year of commit activity",
					"value": "repos/get-commit-activity-stats",
					"action": "Returns the last year of commit activity grouped by week. The `days` array is a group of commits per day, starting on `S...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/stats/commit_activity"
						}
					}
				},
				{
					"name": "Get all contributor commit activity",
					"value": "repos/get-contributors-stats",
					"action": "Returns the `total` number of commits authored by the contributor. In addition, the response includes a Weekly Hash (`we...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/stats/contributors"
						}
					}
				},
				{
					"name": "Get the weekly commit count",
					"value": "repos/get-participation-stats",
					"action": "Returns the total commit counts for the `owner` and total commit counts in `all`. `all` is everyone combined, including ...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/stats/participation"
						}
					}
				},
				{
					"name": "Get the hourly commit count for each day",
					"value": "repos/get-punch-card-stats",
					"action": "Each array contains the day number, hour number, and number of commits:  *   `0-6`: Sunday - Saturday *   `0-23`: Hour o...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/stats/punch_card"
						}
					}
				},
				{
					"name": "Create a commit status",
					"value": "repos/create-commit-status",
					"action": "Users with push access in a repository can create commit statuses for a given SHA.  Note: there is a limit of 1000 statu...",
					"routing": {
						"request": {
							"method": "POST",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/statuses/{sha}"
						}
					}
				},
				{
					"name": "List repository tags",
					"value": "repos/list-tags",
					"action": "",
					"routing": {
						"request": { "method": "GET", "url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/tags" }
					}
				},
				{
					"name": "List tag protection states for a repository",
					"value": "repos/list-tag-protection",
					"action": "This returns the tag protection states of a repository.  This information is only available to repository administrators",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/tags/protection"
						}
					}
				},
				{
					"name": "Create a tag protection state for a repository",
					"value": "repos/create-tag-protection",
					"action": "This creates a tag protection state for a repository. This endpoint is only available to repository administrators",
					"routing": {
						"request": {
							"method": "POST",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/tags/protection"
						}
					}
				},
				{
					"name": "Delete a tag protection state for a repository",
					"value": "repos/delete-tag-protection",
					"action": "This deletes a tag protection state for a repository. This endpoint is only available to repository administrators",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/tags/protection/{tag_protection_id}"
						}
					}
				},
				{
					"name": "Download a repository archive (tar)",
					"value": "repos/download-tarball-archive",
					"action": "Gets a redirect URL to download a tar archive for a repository. If you omit `:ref`, the repository’s default branch (usu...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/tarball/{ref}"
						}
					}
				},
				{
					"name": "List repository teams",
					"value": "repos/list-teams",
					"action": "",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/teams"
						}
					}
				},
				{
					"name": "Get all repository topics",
					"value": "repos/get-all-topics",
					"action": "",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/topics"
						}
					}
				},
				{
					"name": "Replace all repository topics",
					"value": "repos/replace-all-topics",
					"action": "",
					"routing": {
						"request": {
							"method": "PUT",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/topics"
						}
					}
				},
				{
					"name": "Get repository clones",
					"value": "repos/get-clones",
					"action": "Get the total number of clones and breakdown per day or week for the last 14 days. Timestamps are aligned to UTC midnigh...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/traffic/clones"
						}
					}
				},
				{
					"name": "Get top referral paths",
					"value": "repos/get-top-paths",
					"action": "Get the top 10 popular contents over the last 14 days",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/traffic/popular/paths"
						}
					}
				},
				{
					"name": "Get top referral sources",
					"value": "repos/get-top-referrers",
					"action": "Get the top 10 referrers over the last 14 days",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/traffic/popular/referrers"
						}
					}
				},
				{
					"name": "Get page views",
					"value": "repos/get-views",
					"action": "Get the total number of views and breakdown per day or week for the last 14 days. Timestamps are aligned to UTC midnight...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/traffic/views"
						}
					}
				},
				{
					"name": "Transfer a repository",
					"value": "repos/transfer",
					"action": "A transfer request will need to be accepted by the new owner when transferring a personal repository to another user. Th...",
					"routing": {
						"request": {
							"method": "POST",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/transfer"
						}
					}
				},
				{
					"name": "Disable vulnerability alerts",
					"value": "repos/disable-vulnerability-alerts",
					"action": "Disables dependency alerts and the dependency graph for a repository. The authenticated user must have admin access to t...",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/vulnerability-alerts"
						}
					}
				},
				{
					"name": "Check if vulnerability alerts are enabled for a repository",
					"value": "repos/check-vulnerability-alerts",
					"action": "Shows whether dependency alerts are enabled or disabled for a repository. The authenticated user must have admin read ac...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/vulnerability-alerts"
						}
					}
				},
				{
					"name": "Enable vulnerability alerts",
					"value": "repos/enable-vulnerability-alerts",
					"action": "Enables dependency alerts and the dependency graph for a repository. The authenticated user must have admin access to th...",
					"routing": {
						"request": {
							"method": "PUT",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/vulnerability-alerts"
						}
					}
				},
				{
					"name": "Download a repository archive (zip)",
					"value": "repos/download-zipball-archive",
					"action": "Gets a redirect URL to download a zip archive for a repository. If you omit `:ref`, the repository’s default branch (usu...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/zipball/{ref}"
						}
					}
				},
				{
					"name": "Create a repository using a template",
					"value": "repos/create-using-template",
					"action": "Creates a new repository using a repository template. Use the `template_owner` and `template_repo` route parameters to s...",
					"routing": {
						"request": {
							"method": "POST",
							"url": "=/repos/{{ $parameter[\"template_owner\"] }}/{template_repo}/generate"
						}
					}
				},
				{
					"name": "List public repositories",
					"value": "repos/list-public",
					"action": "Lists all public repositories in the order that they were created.  Note: - For GitHub Enterprise Server, this endpoint ...",
					"routing": { "request": { "method": "GET", "url": "/repositories" } }
				},
				{
					"name": "List repositories for the authenticated user",
					"value": "repos/list-for-authenticated-user",
					"action": "Lists repositories that the authenticated user has explicit permission (`:read`, `:write`, or `:admin`) to access.  The ...",
					"routing": { "request": { "method": "GET", "url": "/user/repos" } }
				},
				{
					"name": "Create a repository for the authenticated user",
					"value": "repos/create-for-authenticated-user",
					"action": "Creates a new repository for the authenticated user.  **OAuth scope requirements**  When using [OAuth](https://docs.gith...",
					"routing": { "request": { "method": "POST", "url": "/user/repos" } }
				},
				{
					"name": "List repository invitations for the authenticated user",
					"value": "repos/list-invitations-for-authenticated-user",
					"action": "When authenticating as a user, this endpoint will list all currently open repository invitations for that user",
					"routing": { "request": { "method": "GET", "url": "/user/repository_invitations" } }
				},
				{
					"name": "Decline a repository invitation",
					"value": "repos/decline-invitation-for-authenticated-user",
					"action": "",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/user/repository_invitations/{{ $parameter[\"invitation_id\"] }}"
						}
					}
				},
				{
					"name": "Accept a repository invitation",
					"value": "repos/accept-invitation-for-authenticated-user",
					"action": "",
					"routing": {
						"request": {
							"method": "PATCH",
							"url": "=/user/repository_invitations/{{ $parameter[\"invitation_id\"] }}"
						}
					}
				},
				{
					"name": "List repositories for a user",
					"value": "repos/list-for-user",
					"action": "Lists public repositories for the specified user. Note: For GitHub AE, this endpoint will list internal repositories for...",
					"routing": {
						"request": { "method": "GET", "url": "=/users/{{ $parameter[\"username\"] }}/repos" }
					}
				}
			],
			"displayOptions": { "show": { "resource": ["repo"] } }
		},
		{
			"displayName": "Operation",
			"name": "operation",
			"type": "options",
			"noDataExpression": true,
			"default": "billing/get-github-actions-billing-org",
			"options": [
				{
					"name": "Get GitHub Actions billing for an organization",
					"value": "billing/get-github-actions-billing-org",
					"action": "Gets the summary of the free and paid GitHub Actions minutes used.  Paid minutes only apply to workflows in private repo...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/settings/billing/actions"
						}
					}
				},
				{
					"name": "Get GitHub Packages billing for an organization",
					"value": "billing/get-github-packages-billing-org",
					"action": "Gets the free and paid storage used for GitHub Packages in gigabytes.  Paid minutes only apply to packages stored for pr...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/settings/billing/packages"
						}
					}
				},
				{
					"name": "Get shared storage billing for an organization",
					"value": "billing/get-shared-storage-billing-org",
					"action": "Gets the estimated paid and estimated total storage used for GitHub Actions and GitHub Packages.  Paid minutes only appl...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/settings/billing/shared-storage"
						}
					}
				},
				{
					"name": "Get GitHub Actions billing for a user",
					"value": "billing/get-github-actions-billing-user",
					"action": "Gets the summary of the free and paid GitHub Actions minutes used.  Paid minutes only apply to workflows in private repo...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/users/{{ $parameter[\"username\"] }}/settings/billing/actions"
						}
					}
				},
				{
					"name": "Get GitHub Packages billing for a user",
					"value": "billing/get-github-packages-billing-user",
					"action": "Gets the free and paid storage used for GitHub Packages in gigabytes.  Paid minutes only apply to packages stored for pr...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/users/{{ $parameter[\"username\"] }}/settings/billing/packages"
						}
					}
				},
				{
					"name": "Get shared storage billing for a user",
					"value": "billing/get-shared-storage-billing-user",
					"action": "Gets the estimated paid and estimated total storage used for GitHub Actions and GitHub Packages.  Paid minutes only appl...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/users/{{ $parameter[\"username\"] }}/settings/billing/shared-storage"
						}
					}
				}
			],
			"displayOptions": { "show": { "resource": ["billing"] } }
		},
		{
			"displayName": "Operation",
			"name": "operation",
			"type": "options",
			"noDataExpression": true,
			"default": "teams/list",
			"options": [
				{
					"name": "List teams",
					"value": "teams/list",
					"action": "Lists all teams in an organization that are visible to the authenticated user",
					"routing": {
						"request": { "method": "GET", "url": "=/orgs/{{ $parameter[\"org\"] }}/teams" }
					}
				},
				{
					"name": "Create a team",
					"value": "teams/create",
					"action": "To create a team, the authenticated user must be a member or owner of `{org}`. By default, organization members can crea...",
					"routing": {
						"request": { "method": "POST", "url": "=/orgs/{{ $parameter[\"org\"] }}/teams" }
					}
				},
				{
					"name": "Delete a team",
					"value": "teams/delete-in-org",
					"action": "To delete a team, the authenticated user must be an organization owner or team maintainer.  If you are an organization o...",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/teams/{team_slug}"
						}
					}
				},
				{
					"name": "Get a team by name",
					"value": "teams/get-by-name",
					"action": "Gets a team using the team's `slug`. To create the `slug`, GitHub replaces special characters in the `name` string, chan...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/teams/{team_slug}"
						}
					}
				},
				{
					"name": "Update a team",
					"value": "teams/update-in-org",
					"action": "To edit a team, the authenticated user must either be an organization owner or a team maintainer.  **Note:** You can als...",
					"routing": {
						"request": {
							"method": "PATCH",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/teams/{team_slug}"
						}
					}
				},
				{
					"name": "List discussions",
					"value": "teams/list-discussions-in-org",
					"action": "List all discussions on a team's page. OAuth access tokens require the `read:discussion` [scope](https://docs.github.com...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/teams/{team_slug}/discussions"
						}
					}
				},
				{
					"name": "Create a discussion",
					"value": "teams/create-discussion-in-org",
					"action": "Creates a new discussion post on a team's page. OAuth access tokens require the `write:discussion` [scope](https://docs....",
					"routing": {
						"request": {
							"method": "POST",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/teams/{team_slug}/discussions"
						}
					}
				},
				{
					"name": "Delete a discussion",
					"value": "teams/delete-discussion-in-org",
					"action": "Delete a discussion from a team's page. OAuth access tokens require the `write:discussion` [scope](https://docs.github.c...",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/teams/{team_slug}/discussions/{discussion_number}"
						}
					}
				},
				{
					"name": "Get a discussion",
					"value": "teams/get-discussion-in-org",
					"action": "Get a specific discussion on a team's page. OAuth access tokens require the `read:discussion` [scope](https://docs.githu...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/teams/{team_slug}/discussions/{discussion_number}"
						}
					}
				},
				{
					"name": "Update a discussion",
					"value": "teams/update-discussion-in-org",
					"action": "Edits the title and body text of a discussion post. Only the parameters you provide are updated. OAuth access tokens req...",
					"routing": {
						"request": {
							"method": "PATCH",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/teams/{team_slug}/discussions/{discussion_number}"
						}
					}
				},
				{
					"name": "List discussion comments",
					"value": "teams/list-discussion-comments-in-org",
					"action": "List all comments on a team discussion. OAuth access tokens require the `read:discussion` [scope](https://docs.github.co...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/teams/{team_slug}/discussions/{discussion_number}/comments"
						}
					}
				},
				{
					"name": "Create a discussion comment",
					"value": "teams/create-discussion-comment-in-org",
					"action": "Creates a new comment on a team discussion. OAuth access tokens require the `write:discussion` [scope](https://docs.gith...",
					"routing": {
						"request": {
							"method": "POST",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/teams/{team_slug}/discussions/{discussion_number}/comments"
						}
					}
				},
				{
					"name": "Delete a discussion comment",
					"value": "teams/delete-discussion-comment-in-org",
					"action": "Deletes a comment on a team discussion. OAuth access tokens require the `write:discussion` [scope](https://docs.github.c...",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"
						}
					}
				},
				{
					"name": "Get a discussion comment",
					"value": "teams/get-discussion-comment-in-org",
					"action": "Get a specific comment on a team discussion. OAuth access tokens require the `read:discussion` [scope](https://docs.gith...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"
						}
					}
				},
				{
					"name": "Update a discussion comment",
					"value": "teams/update-discussion-comment-in-org",
					"action": "Edits the body text of a discussion comment. OAuth access tokens require the `write:discussion` [scope](https://docs.git...",
					"routing": {
						"request": {
							"method": "PATCH",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"
						}
					}
				},
				{
					"name": "List pending team invitations",
					"value": "teams/list-pending-invitations-in-org",
					"action": "The return hash contains a `role` field which refers to the Organization Invitation role and will be one of the followin...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/teams/{team_slug}/invitations"
						}
					}
				},
				{
					"name": "List team members",
					"value": "teams/list-members-in-org",
					"action": "Team members will include the members of child teams.  To list members in a team, the team must be visible to the authen...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/teams/{team_slug}/members"
						}
					}
				},
				{
					"name": "Remove team membership for a user",
					"value": "teams/remove-membership-for-user-in-org",
					"action": "To remove a membership between a user and a team, the authenticated user must have 'admin' permissions to the team or be...",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/teams/{team_slug}/memberships/{username}"
						}
					}
				},
				{
					"name": "Get team membership for a user",
					"value": "teams/get-membership-for-user-in-org",
					"action": "Team members will include the members of child teams.  To get a user's membership with a team, the team must be visible ...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/teams/{team_slug}/memberships/{username}"
						}
					}
				},
				{
					"name": "Add or update team membership for a user",
					"value": "teams/add-or-update-membership-for-user-in-org",
					"action": "Adds an organization member to a team. An authenticated organization owner or team maintainer can add organization membe...",
					"routing": {
						"request": {
							"method": "PUT",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/teams/{team_slug}/memberships/{username}"
						}
					}
				},
				{
					"name": "List team projects",
					"value": "teams/list-projects-in-org",
					"action": "Lists the organization projects for a team.  **Note:** You can also specify a team by `org_id` and `team_id` using the r...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/teams/{team_slug}/projects"
						}
					}
				},
				{
					"name": "Remove a project from a team",
					"value": "teams/remove-project-in-org",
					"action": "Removes an organization project from a team. An organization owner or a team maintainer can remove any project from the ...",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/teams/{team_slug}/projects/{project_id}"
						}
					}
				},
				{
					"name": "Check team permissions for a project",
					"value": "teams/check-permissions-for-project-in-org",
					"action": "Checks whether a team has `read`, `write`, or `admin` permissions for an organization project. The response includes pro...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/teams/{team_slug}/projects/{project_id}"
						}
					}
				},
				{
					"name": "Add or update team project permissions",
					"value": "teams/add-or-update-project-permissions-in-org",
					"action": "Adds an organization project to a team. To add a project to a team or update the team's permission on a project, the aut...",
					"routing": {
						"request": {
							"method": "PUT",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/teams/{team_slug}/projects/{project_id}"
						}
					}
				},
				{
					"name": "List team repositories",
					"value": "teams/list-repos-in-org",
					"action": "Lists a team's repositories visible to the authenticated user.  **Note:** You can also specify a team by `org_id` and `t...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/teams/{team_slug}/repos"
						}
					}
				},
				{
					"name": "Remove a repository from a team",
					"value": "teams/remove-repo-in-org",
					"action": "If the authenticated user is an organization owner or a team maintainer, they can remove any repositories from the team....",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/teams/{team_slug}/repos/{owner}/{repo}"
						}
					}
				},
				{
					"name": "Check team permissions for a repository",
					"value": "teams/check-permissions-for-repo-in-org",
					"action": "Checks whether a team has `admin`, `push`, `maintain`, `triage`, or `pull` permission for a repository. Repositories inh...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/teams/{team_slug}/repos/{owner}/{repo}"
						}
					}
				},
				{
					"name": "Add or update team repository permissions",
					"value": "teams/add-or-update-repo-permissions-in-org",
					"action": "To add a repository to a team or update the team's permission on a repository, the authenticated user must have admin ac...",
					"routing": {
						"request": {
							"method": "PUT",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/teams/{team_slug}/repos/{owner}/{repo}"
						}
					}
				},
				{
					"name": "List child teams",
					"value": "teams/list-child-in-org",
					"action": "Lists the child teams of the team specified by `{team_slug}`.  **Note:** You can also specify a team by `org_id` and `te...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/teams/{team_slug}/teams"
						}
					}
				},
				{
					"name": "Delete a team (Legacy)",
					"value": "teams/delete-legacy",
					"action": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating...",
					"routing": {
						"request": { "method": "DELETE", "url": "=/teams/{{ $parameter[\"team_id\"] }}" }
					}
				},
				{
					"name": "Get a team (Legacy)",
					"value": "teams/get-legacy",
					"action": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating...",
					"routing": {
						"request": { "method": "GET", "url": "=/teams/{{ $parameter[\"team_id\"] }}" }
					}
				},
				{
					"name": "Update a team (Legacy)",
					"value": "teams/update-legacy",
					"action": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating...",
					"routing": {
						"request": { "method": "PATCH", "url": "=/teams/{{ $parameter[\"team_id\"] }}" }
					}
				},
				{
					"name": "List discussions (Legacy)",
					"value": "teams/list-discussions-legacy",
					"action": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/teams/{{ $parameter[\"team_id\"] }}/discussions"
						}
					}
				},
				{
					"name": "Create a discussion (Legacy)",
					"value": "teams/create-discussion-legacy",
					"action": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating...",
					"routing": {
						"request": {
							"method": "POST",
							"url": "=/teams/{{ $parameter[\"team_id\"] }}/discussions"
						}
					}
				},
				{
					"name": "Delete a discussion (Legacy)",
					"value": "teams/delete-discussion-legacy",
					"action": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating...",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/teams/{{ $parameter[\"team_id\"] }}/discussions/{discussion_number}"
						}
					}
				},
				{
					"name": "Get a discussion (Legacy)",
					"value": "teams/get-discussion-legacy",
					"action": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/teams/{{ $parameter[\"team_id\"] }}/discussions/{discussion_number}"
						}
					}
				},
				{
					"name": "Update a discussion (Legacy)",
					"value": "teams/update-discussion-legacy",
					"action": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating...",
					"routing": {
						"request": {
							"method": "PATCH",
							"url": "=/teams/{{ $parameter[\"team_id\"] }}/discussions/{discussion_number}"
						}
					}
				},
				{
					"name": "List discussion comments (Legacy)",
					"value": "teams/list-discussion-comments-legacy",
					"action": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/teams/{{ $parameter[\"team_id\"] }}/discussions/{discussion_number}/comments"
						}
					}
				},
				{
					"name": "Create a discussion comment (Legacy)",
					"value": "teams/create-discussion-comment-legacy",
					"action": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating...",
					"routing": {
						"request": {
							"method": "POST",
							"url": "=/teams/{{ $parameter[\"team_id\"] }}/discussions/{discussion_number}/comments"
						}
					}
				},
				{
					"name": "Delete a discussion comment (Legacy)",
					"value": "teams/delete-discussion-comment-legacy",
					"action": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating...",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/teams/{{ $parameter[\"team_id\"] }}/discussions/{discussion_number}/comments/{comment_number}"
						}
					}
				},
				{
					"name": "Get a discussion comment (Legacy)",
					"value": "teams/get-discussion-comment-legacy",
					"action": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/teams/{{ $parameter[\"team_id\"] }}/discussions/{discussion_number}/comments/{comment_number}"
						}
					}
				},
				{
					"name": "Update a discussion comment (Legacy)",
					"value": "teams/update-discussion-comment-legacy",
					"action": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating...",
					"routing": {
						"request": {
							"method": "PATCH",
							"url": "=/teams/{{ $parameter[\"team_id\"] }}/discussions/{discussion_number}/comments/{comment_number}"
						}
					}
				},
				{
					"name": "List pending team invitations (Legacy)",
					"value": "teams/list-pending-invitations-legacy",
					"action": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/teams/{{ $parameter[\"team_id\"] }}/invitations"
						}
					}
				},
				{
					"name": "List team members (Legacy)",
					"value": "teams/list-members-legacy",
					"action": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating...",
					"routing": {
						"request": { "method": "GET", "url": "=/teams/{{ $parameter[\"team_id\"] }}/members" }
					}
				},
				{
					"name": "Remove team member (Legacy)",
					"value": "teams/remove-member-legacy",
					"action": "The \"Remove team member\" endpoint (described below) is deprecated.  We recommend using the [Remove team membership for a...",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/teams/{{ $parameter[\"team_id\"] }}/members/{username}"
						}
					}
				},
				{
					"name": "Get team member (Legacy)",
					"value": "teams/get-member-legacy",
					"action": "The \"Get team member\" endpoint (described below) is deprecated.  We recommend using the [Get team membership for a user]...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/teams/{{ $parameter[\"team_id\"] }}/members/{username}"
						}
					}
				},
				{
					"name": "Add team member (Legacy)",
					"value": "teams/add-member-legacy",
					"action": "The \"Add team member\" endpoint (described below) is deprecated.  We recommend using the [Add or update team membership f...",
					"routing": {
						"request": {
							"method": "PUT",
							"url": "=/teams/{{ $parameter[\"team_id\"] }}/members/{username}"
						}
					}
				},
				{
					"name": "Remove team membership for a user (Legacy)",
					"value": "teams/remove-membership-for-user-legacy",
					"action": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating...",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/teams/{{ $parameter[\"team_id\"] }}/memberships/{username}"
						}
					}
				},
				{
					"name": "Get team membership for a user (Legacy)",
					"value": "teams/get-membership-for-user-legacy",
					"action": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/teams/{{ $parameter[\"team_id\"] }}/memberships/{username}"
						}
					}
				},
				{
					"name": "Add or update team membership for a user (Legacy)",
					"value": "teams/add-or-update-membership-for-user-legacy",
					"action": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating...",
					"routing": {
						"request": {
							"method": "PUT",
							"url": "=/teams/{{ $parameter[\"team_id\"] }}/memberships/{username}"
						}
					}
				},
				{
					"name": "List team projects (Legacy)",
					"value": "teams/list-projects-legacy",
					"action": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating...",
					"routing": {
						"request": { "method": "GET", "url": "=/teams/{{ $parameter[\"team_id\"] }}/projects" }
					}
				},
				{
					"name": "Remove a project from a team (Legacy)",
					"value": "teams/remove-project-legacy",
					"action": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating...",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/teams/{{ $parameter[\"team_id\"] }}/projects/{project_id}"
						}
					}
				},
				{
					"name": "Check team permissions for a project (Legacy)",
					"value": "teams/check-permissions-for-project-legacy",
					"action": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/teams/{{ $parameter[\"team_id\"] }}/projects/{project_id}"
						}
					}
				},
				{
					"name": "Add or update team project permissions (Legacy)",
					"value": "teams/add-or-update-project-permissions-legacy",
					"action": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating...",
					"routing": {
						"request": {
							"method": "PUT",
							"url": "=/teams/{{ $parameter[\"team_id\"] }}/projects/{project_id}"
						}
					}
				},
				{
					"name": "List team repositories (Legacy)",
					"value": "teams/list-repos-legacy",
					"action": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating...",
					"routing": {
						"request": { "method": "GET", "url": "=/teams/{{ $parameter[\"team_id\"] }}/repos" }
					}
				},
				{
					"name": "Remove a repository from a team (Legacy)",
					"value": "teams/remove-repo-legacy",
					"action": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating...",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/teams/{{ $parameter[\"team_id\"] }}/repos/{owner}/{repo}"
						}
					}
				},
				{
					"name": "Check team permissions for a repository (Legacy)",
					"value": "teams/check-permissions-for-repo-legacy",
					"action": "**Note**: Repositories inherited through a parent team will also be checked.  **Deprecation Notice:** This endpoint rout...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/teams/{{ $parameter[\"team_id\"] }}/repos/{owner}/{repo}"
						}
					}
				},
				{
					"name": "Add or update team repository permissions (Legacy)",
					"value": "teams/add-or-update-repo-permissions-legacy",
					"action": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating...",
					"routing": {
						"request": {
							"method": "PUT",
							"url": "=/teams/{{ $parameter[\"team_id\"] }}/repos/{owner}/{repo}"
						}
					}
				},
				{
					"name": "List child teams (Legacy)",
					"value": "teams/list-child-legacy",
					"action": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating...",
					"routing": {
						"request": { "method": "GET", "url": "=/teams/{{ $parameter[\"team_id\"] }}/teams" }
					}
				},
				{
					"name": "List teams for the authenticated user",
					"value": "teams/list-for-authenticated-user",
					"action": "List all of the teams across all of the organizations to which the authenticated user belongs. This method requires `use...",
					"routing": { "request": { "method": "GET", "url": "/user/teams" } }
				}
			],
			"displayOptions": { "show": { "resource": ["team"] } }
		},
		{
			"displayName": "Operation",
			"name": "operation",
			"type": "options",
			"noDataExpression": true,
			"default": "reactions/list-for-team-discussion-comment-in-org",
			"options": [
				{
					"name": "List reactions for a team discussion comment",
					"value": "reactions/list-for-team-discussion-comment-in-org",
					"action": "List the reactions to a [team discussion comment](https://docs.github.com/rest/reference/teams#discussion-comments/). OA...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions"
						}
					}
				},
				{
					"name": "Create reaction for a team discussion comment",
					"value": "reactions/create-for-team-discussion-comment-in-org",
					"action": "Create a reaction to a [team discussion comment](https://docs.github.com/rest/reference/teams#discussion-comments). OAut...",
					"routing": {
						"request": {
							"method": "POST",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions"
						}
					}
				},
				{
					"name": "Delete team discussion comment reaction",
					"value": "reactions/delete-for-team-discussion-comment",
					"action": "**Note:** You can also specify a team or organization with `team_id` and `org_id` using the route `DELETE /organizations...",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions/{reaction_id}"
						}
					}
				},
				{
					"name": "List reactions for a team discussion",
					"value": "reactions/list-for-team-discussion-in-org",
					"action": "List the reactions to a [team discussion](https://docs.github.com/rest/reference/teams#discussions). OAuth access tokens...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/teams/{team_slug}/discussions/{discussion_number}/reactions"
						}
					}
				},
				{
					"name": "Create reaction for a team discussion",
					"value": "reactions/create-for-team-discussion-in-org",
					"action": "Create a reaction to a [team discussion](https://docs.github.com/rest/reference/teams#discussions). OAuth access tokens ...",
					"routing": {
						"request": {
							"method": "POST",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/teams/{team_slug}/discussions/{discussion_number}/reactions"
						}
					}
				},
				{
					"name": "Delete team discussion reaction",
					"value": "reactions/delete-for-team-discussion",
					"action": "**Note:** You can also specify a team or organization with `team_id` and `org_id` using the route `DELETE /organizations...",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/orgs/{{ $parameter[\"org\"] }}/teams/{team_slug}/discussions/{discussion_number}/reactions/{reaction_id}"
						}
					}
				},
				{
					"name": "List reactions for a commit comment",
					"value": "reactions/list-for-commit-comment",
					"action": "List the reactions to a [commit comment](https://docs.github.com/rest/reference/repos#comments)",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/comments/{comment_id}/reactions"
						}
					}
				},
				{
					"name": "Create reaction for a commit comment",
					"value": "reactions/create-for-commit-comment",
					"action": "Create a reaction to a [commit comment](https://docs.github.com/rest/reference/repos#comments). A response with an HTTP ...",
					"routing": {
						"request": {
							"method": "POST",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/comments/{comment_id}/reactions"
						}
					}
				},
				{
					"name": "Delete a commit comment reaction",
					"value": "reactions/delete-for-commit-comment",
					"action": "**Note:** You can also specify a repository by `repository_id` using the route `DELETE /repositories/:repository_id/comm...",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/comments/{comment_id}/reactions/{reaction_id}"
						}
					}
				},
				{
					"name": "List reactions for an issue comment",
					"value": "reactions/list-for-issue-comment",
					"action": "List the reactions to an [issue comment](https://docs.github.com/rest/reference/issues#comments)",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/issues/comments/{comment_id}/reactions"
						}
					}
				},
				{
					"name": "Create reaction for an issue comment",
					"value": "reactions/create-for-issue-comment",
					"action": "Create a reaction to an [issue comment](https://docs.github.com/rest/reference/issues#comments). A response with an HTTP...",
					"routing": {
						"request": {
							"method": "POST",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/issues/comments/{comment_id}/reactions"
						}
					}
				},
				{
					"name": "Delete an issue comment reaction",
					"value": "reactions/delete-for-issue-comment",
					"action": "**Note:** You can also specify a repository by `repository_id` using the route `DELETE delete /repositories/:repository_...",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/issues/comments/{comment_id}/reactions/{reaction_id}"
						}
					}
				},
				{
					"name": "List reactions for an issue",
					"value": "reactions/list-for-issue",
					"action": "List the reactions to an [issue](https://docs.github.com/rest/reference/issues)",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/issues/{issue_number}/reactions"
						}
					}
				},
				{
					"name": "Create reaction for an issue",
					"value": "reactions/create-for-issue",
					"action": "Create a reaction to an [issue](https://docs.github.com/rest/reference/issues/). A response with an HTTP `200` status me...",
					"routing": {
						"request": {
							"method": "POST",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/issues/{issue_number}/reactions"
						}
					}
				},
				{
					"name": "Delete an issue reaction",
					"value": "reactions/delete-for-issue",
					"action": "**Note:** You can also specify a repository by `repository_id` using the route `DELETE /repositories/:repository_id/issu...",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/issues/{issue_number}/reactions/{reaction_id}"
						}
					}
				},
				{
					"name": "List reactions for a pull request review comment",
					"value": "reactions/list-for-pull-request-review-comment",
					"action": "List the reactions to a [pull request review comment](https://docs.github.com/rest/reference/pulls#review-comments)",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/pulls/comments/{comment_id}/reactions"
						}
					}
				},
				{
					"name": "Create reaction for a pull request review comment",
					"value": "reactions/create-for-pull-request-review-comment",
					"action": "Create a reaction to a [pull request review comment](https://docs.github.com/rest/reference/pulls#comments). A response ...",
					"routing": {
						"request": {
							"method": "POST",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/pulls/comments/{comment_id}/reactions"
						}
					}
				},
				{
					"name": "Delete a pull request comment reaction",
					"value": "reactions/delete-for-pull-request-comment",
					"action": "**Note:** You can also specify a repository by `repository_id` using the route `DELETE /repositories/:repository_id/pull...",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/pulls/comments/{comment_id}/reactions/{reaction_id}"
						}
					}
				},
				{
					"name": "List reactions for a release",
					"value": "reactions/list-for-release",
					"action": "List the reactions to a [release](https://docs.github.com/rest/reference/repos#releases)",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/releases/{release_id}/reactions"
						}
					}
				},
				{
					"name": "Create reaction for a release",
					"value": "reactions/create-for-release",
					"action": "Create a reaction to a [release](https://docs.github.com/rest/reference/repos#releases). A response with a `Status: 200 ...",
					"routing": {
						"request": {
							"method": "POST",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/releases/{release_id}/reactions"
						}
					}
				},
				{
					"name": "Delete a release reaction",
					"value": "reactions/delete-for-release",
					"action": "**Note:** You can also specify a repository by `repository_id` using the route `DELETE delete /repositories/:repository_...",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/releases/{release_id}/reactions/{reaction_id}"
						}
					}
				},
				{
					"name": "List reactions for a team discussion comment (Legacy)",
					"value": "reactions/list-for-team-discussion-comment-legacy",
					"action": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/teams/{{ $parameter[\"team_id\"] }}/discussions/{discussion_number}/comments/{comment_number}/reactions"
						}
					}
				},
				{
					"name": "Create reaction for a team discussion comment (Legacy)",
					"value": "reactions/create-for-team-discussion-comment-legacy",
					"action": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating...",
					"routing": {
						"request": {
							"method": "POST",
							"url": "=/teams/{{ $parameter[\"team_id\"] }}/discussions/{discussion_number}/comments/{comment_number}/reactions"
						}
					}
				},
				{
					"name": "List reactions for a team discussion (Legacy)",
					"value": "reactions/list-for-team-discussion-legacy",
					"action": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/teams/{{ $parameter[\"team_id\"] }}/discussions/{discussion_number}/reactions"
						}
					}
				},
				{
					"name": "Create reaction for a team discussion (Legacy)",
					"value": "reactions/create-for-team-discussion-legacy",
					"action": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating...",
					"routing": {
						"request": {
							"method": "POST",
							"url": "=/teams/{{ $parameter[\"team_id\"] }}/discussions/{discussion_number}/reactions"
						}
					}
				}
			],
			"displayOptions": { "show": { "resource": ["reaction"] } }
		},
		{
			"displayName": "Operation",
			"name": "operation",
			"type": "options",
			"noDataExpression": true,
			"default": "rate-limit/get",
			"options": [
				{
					"name": "Get rate limit status for the authenticated user",
					"value": "rate-limit/get",
					"action": "**Note:** Accessing this endpoint does not count against your REST API rate limit.  **Note:** The `rate` object is depre...",
					"routing": { "request": { "method": "GET", "url": "/rate_limit" } }
				}
			],
			"displayOptions": { "show": { "resource": ["rateLimit"] } }
		},
		{
			"displayName": "Operation",
			"name": "operation",
			"type": "options",
			"noDataExpression": true,
			"default": "checks/create",
			"options": [
				{
					"name": "Create a check run",
					"value": "checks/create",
					"action": "**Note:** The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes...",
					"routing": {
						"request": {
							"method": "POST",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/check-runs"
						}
					}
				},
				{
					"name": "Get a check run",
					"value": "checks/get",
					"action": "**Note:** The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/check-runs/{check_run_id}"
						}
					}
				},
				{
					"name": "Update a check run",
					"value": "checks/update",
					"action": "**Note:** The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes...",
					"routing": {
						"request": {
							"method": "PATCH",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/check-runs/{check_run_id}"
						}
					}
				},
				{
					"name": "List check run annotations",
					"value": "checks/list-annotations",
					"action": "Lists annotations for a check run using the annotation `id`. GitHub Apps must have the `checks:read` permission on a pri...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/check-runs/{check_run_id}/annotations"
						}
					}
				},
				{
					"name": "Rerequest a check run",
					"value": "checks/rerequest-run",
					"action": "Triggers GitHub to rerequest an existing check run, without pushing new code to a repository. This endpoint will trigger...",
					"routing": {
						"request": {
							"method": "POST",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/check-runs/{check_run_id}/rerequest"
						}
					}
				},
				{
					"name": "Create a check suite",
					"value": "checks/create-suite",
					"action": "**Note:** The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes...",
					"routing": {
						"request": {
							"method": "POST",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/check-suites"
						}
					}
				},
				{
					"name": "Update repository preferences for check suites",
					"value": "checks/set-suites-preferences",
					"action": "Changes the default automatic flow when creating check suites. By default, a check suite is automatically created each t...",
					"routing": {
						"request": {
							"method": "PATCH",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/check-suites/preferences"
						}
					}
				},
				{
					"name": "Get a check suite",
					"value": "checks/get-suite",
					"action": "**Note:** The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/check-suites/{check_suite_id}"
						}
					}
				},
				{
					"name": "List check runs in a check suite",
					"value": "checks/list-for-suite",
					"action": "**Note:** The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/check-suites/{check_suite_id}/check-runs"
						}
					}
				},
				{
					"name": "Rerequest a check suite",
					"value": "checks/rerequest-suite",
					"action": "Triggers GitHub to rerequest an existing check suite, without pushing new code to a repository. This endpoint will trigg...",
					"routing": {
						"request": {
							"method": "POST",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/check-suites/{check_suite_id}/rerequest"
						}
					}
				},
				{
					"name": "List check runs for a Git reference",
					"value": "checks/list-for-ref",
					"action": "**Note:** The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/commits/{ref}/check-runs"
						}
					}
				},
				{
					"name": "List check suites for a Git reference",
					"value": "checks/list-suites-for-ref",
					"action": "**Note:** The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/commits/{ref}/check-suites"
						}
					}
				}
			],
			"displayOptions": { "show": { "resource": ["check"] } }
		},
		{
			"displayName": "Operation",
			"name": "operation",
			"type": "options",
			"noDataExpression": true,
			"default": "dependency-graph/diff-range",
			"options": [
				{
					"name": "Get a diff of the dependencies between commits",
					"value": "dependency-graph/diff-range",
					"action": "Gets the diff of the dependency changes between two commits of a repository, based on the changes to the dependency mani...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/dependency-graph/compare/{basehead}"
						}
					}
				},
				{
					"name": "Create a snapshot of dependencies for a repository",
					"value": "dependency-graph/create-repository-snapshot",
					"action": "Create a new snapshot of a repository's dependencies. You must authenticate using an access token with the `repo` scope ...",
					"routing": {
						"request": {
							"method": "POST",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/dependency-graph/snapshots"
						}
					}
				}
			],
			"displayOptions": { "show": { "resource": ["dependencyGraph"] } }
		},
		{
			"displayName": "Operation",
			"name": "operation",
			"type": "options",
			"noDataExpression": true,
			"default": "git/create-blob",
			"options": [
				{
					"name": "Create a blob",
					"value": "git/create-blob",
					"action": "",
					"routing": {
						"request": {
							"method": "POST",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/git/blobs"
						}
					}
				},
				{
					"name": "Get a blob",
					"value": "git/get-blob",
					"action": "The `content` in the response will always be Base64 encoded.  _Note_: This API supports blobs up to 100 megabytes in siz...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/git/blobs/{file_sha}"
						}
					}
				},
				{
					"name": "Create a commit",
					"value": "git/create-commit",
					"action": "Creates a new Git [commit object](https://git-scm.com/book/en/v1/Git-Internals-Git-Objects#Commit-Objects).  **Signature...",
					"routing": {
						"request": {
							"method": "POST",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/git/commits"
						}
					}
				},
				{
					"name": "Get a commit",
					"value": "git/get-commit",
					"action": "Gets a Git [commit object](https://git-scm.com/book/en/v1/Git-Internals-Git-Objects#Commit-Objects).  **Signature verifi...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/git/commits/{commit_sha}"
						}
					}
				},
				{
					"name": "List matching references",
					"value": "git/list-matching-refs",
					"action": "Returns an array of references from your Git database that match the supplied name. The `:ref` in the URL must be format...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/git/matching-refs/{ref}"
						}
					}
				},
				{
					"name": "Get a reference",
					"value": "git/get-ref",
					"action": "Returns a single reference from your Git database. The `:ref` in the URL must be formatted as `heads/<branch name>` for ...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/git/ref/{ref}"
						}
					}
				},
				{
					"name": "Create a reference",
					"value": "git/create-ref",
					"action": "Creates a reference for your repository. You are unable to create new references for empty repositories, even if the com...",
					"routing": {
						"request": {
							"method": "POST",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/git/refs"
						}
					}
				},
				{
					"name": "Delete a reference",
					"value": "git/delete-ref",
					"action": "",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/git/refs/{ref}"
						}
					}
				},
				{
					"name": "Update a reference",
					"value": "git/update-ref",
					"action": "",
					"routing": {
						"request": {
							"method": "PATCH",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/git/refs/{ref}"
						}
					}
				},
				{
					"name": "Create a tag object",
					"value": "git/create-tag",
					"action": "Note that creating a tag object does not create the reference that makes a tag in Git. If you want to create an annotate...",
					"routing": {
						"request": {
							"method": "POST",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/git/tags"
						}
					}
				},
				{
					"name": "Get a tag",
					"value": "git/get-tag",
					"action": "**Signature verification object**  The response will include a `verification` object that describes the result of verify...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/git/tags/{tag_sha}"
						}
					}
				},
				{
					"name": "Create a tree",
					"value": "git/create-tree",
					"action": "The tree creation API accepts nested entries. If you specify both a tree and a nested path modifying that tree, this end...",
					"routing": {
						"request": {
							"method": "POST",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/git/trees"
						}
					}
				},
				{
					"name": "Get a tree",
					"value": "git/get-tree",
					"action": "Returns a single tree using the SHA1 value for that tree.  If `truncated` is `true` in the response then the number of i...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/git/trees/{tree_sha}"
						}
					}
				}
			],
			"displayOptions": { "show": { "resource": ["git"] } }
		},
		{
			"displayName": "Operation",
			"name": "operation",
			"type": "options",
			"noDataExpression": true,
			"default": "pulls/list",
			"options": [
				{
					"name": "List pull requests",
					"value": "pulls/list",
					"action": "Draft pull requests are available in public repositories with GitHub Free and GitHub Free for organizations, GitHub Pro,...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/pulls"
						}
					}
				},
				{
					"name": "Create a pull request",
					"value": "pulls/create",
					"action": "Draft pull requests are available in public repositories with GitHub Free and GitHub Free for organizations, GitHub Pro,...",
					"routing": {
						"request": {
							"method": "POST",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/pulls"
						}
					}
				},
				{
					"name": "List review comments in a repository",
					"value": "pulls/list-review-comments-for-repo",
					"action": "Lists review comments for all pull requests in a repository. By default, review comments are in ascending order by ID",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/pulls/comments"
						}
					}
				},
				{
					"name": "Delete a review comment for a pull request",
					"value": "pulls/delete-review-comment",
					"action": "Deletes a review comment",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/pulls/comments/{comment_id}"
						}
					}
				},
				{
					"name": "Get a review comment for a pull request",
					"value": "pulls/get-review-comment",
					"action": "Provides details for a review comment",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/pulls/comments/{comment_id}"
						}
					}
				},
				{
					"name": "Update a review comment for a pull request",
					"value": "pulls/update-review-comment",
					"action": "Enables you to edit a review comment",
					"routing": {
						"request": {
							"method": "PATCH",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/pulls/comments/{comment_id}"
						}
					}
				},
				{
					"name": "Get a pull request",
					"value": "pulls/get",
					"action": "Draft pull requests are available in public repositories with GitHub Free and GitHub Free for organizations, GitHub Pro,...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/pulls/{pull_number}"
						}
					}
				},
				{
					"name": "Update a pull request",
					"value": "pulls/update",
					"action": "Draft pull requests are available in public repositories with GitHub Free and GitHub Free for organizations, GitHub Pro,...",
					"routing": {
						"request": {
							"method": "PATCH",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/pulls/{pull_number}"
						}
					}
				},
				{
					"name": "List review comments on a pull request",
					"value": "pulls/list-review-comments",
					"action": "Lists all review comments for a pull request. By default, review comments are in ascending order by ID",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/pulls/{pull_number}/comments"
						}
					}
				},
				{
					"name": "Create a review comment for a pull request",
					"value": "pulls/create-review-comment",
					"action": "Creates a review comment in the pull request diff. To add a regular comment to a pull request timeline, see \"[Create an ...",
					"routing": {
						"request": {
							"method": "POST",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/pulls/{pull_number}/comments"
						}
					}
				},
				{
					"name": "Create a reply for a review comment",
					"value": "pulls/create-reply-for-review-comment",
					"action": "Creates a reply to a review comment for a pull request. For the `comment_id`, provide the ID of the review comment you a...",
					"routing": {
						"request": {
							"method": "POST",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/pulls/{pull_number}/comments/{comment_id}/replies"
						}
					}
				},
				{
					"name": "List commits on a pull request",
					"value": "pulls/list-commits",
					"action": "Lists a maximum of 250 commits for a pull request. To receive a complete commit list for pull requests with more than 25...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/pulls/{pull_number}/commits"
						}
					}
				},
				{
					"name": "List pull requests files",
					"value": "pulls/list-files",
					"action": "**Note:** Responses include a maximum of 3000 files. The paginated response returns 30 files per page by default",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/pulls/{pull_number}/files"
						}
					}
				},
				{
					"name": "Check if a pull request has been merged",
					"value": "pulls/check-if-merged",
					"action": "",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/pulls/{pull_number}/merge"
						}
					}
				},
				{
					"name": "Merge a pull request",
					"value": "pulls/merge",
					"action": "This endpoint triggers [notifications](https://docs.github.com/github/managing-subscriptions-and-notifications-on-github...",
					"routing": {
						"request": {
							"method": "PUT",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/pulls/{pull_number}/merge"
						}
					}
				},
				{
					"name": "Remove requested reviewers from a pull request",
					"value": "pulls/remove-requested-reviewers",
					"action": "",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/pulls/{pull_number}/requested_reviewers"
						}
					}
				},
				{
					"name": "Get all requested reviewers for a pull request",
					"value": "pulls/list-requested-reviewers",
					"action": "Gets the users or teams whose review is requested for a pull request. Once a requested reviewer submits a review, they a...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/pulls/{pull_number}/requested_reviewers"
						}
					}
				},
				{
					"name": "Request reviewers for a pull request",
					"value": "pulls/request-reviewers",
					"action": "This endpoint triggers [notifications](https://docs.github.com/github/managing-subscriptions-and-notifications-on-github...",
					"routing": {
						"request": {
							"method": "POST",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/pulls/{pull_number}/requested_reviewers"
						}
					}
				},
				{
					"name": "List reviews for a pull request",
					"value": "pulls/list-reviews",
					"action": "The list of reviews returns in chronological order",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/pulls/{pull_number}/reviews"
						}
					}
				},
				{
					"name": "Create a review for a pull request",
					"value": "pulls/create-review",
					"action": "This endpoint triggers [notifications](https://docs.github.com/github/managing-subscriptions-and-notifications-on-github...",
					"routing": {
						"request": {
							"method": "POST",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/pulls/{pull_number}/reviews"
						}
					}
				},
				{
					"name": "Delete a pending review for a pull request",
					"value": "pulls/delete-pending-review",
					"action": "",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/pulls/{pull_number}/reviews/{review_id}"
						}
					}
				},
				{
					"name": "Get a review for a pull request",
					"value": "pulls/get-review",
					"action": "",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/pulls/{pull_number}/reviews/{review_id}"
						}
					}
				},
				{
					"name": "Update a review for a pull request",
					"value": "pulls/update-review",
					"action": "Update the review summary comment with new text",
					"routing": {
						"request": {
							"method": "PUT",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/pulls/{pull_number}/reviews/{review_id}"
						}
					}
				},
				{
					"name": "List comments for a pull request review",
					"value": "pulls/list-comments-for-review",
					"action": "List comments for a specific pull request review",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/pulls/{pull_number}/reviews/{review_id}/comments"
						}
					}
				},
				{
					"name": "Dismiss a review for a pull request",
					"value": "pulls/dismiss-review",
					"action": "**Note:** To dismiss a pull request review on a [protected branch](https://docs.github.com/rest/reference/repos#branches...",
					"routing": {
						"request": {
							"method": "PUT",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/pulls/{pull_number}/reviews/{review_id}/dismissals"
						}
					}
				},
				{
					"name": "Submit a review for a pull request",
					"value": "pulls/submit-review",
					"action": "Submits a pending review for a pull request. For more information about creating a pending review for a pull request, se...",
					"routing": {
						"request": {
							"method": "POST",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/pulls/{pull_number}/reviews/{review_id}/events"
						}
					}
				},
				{
					"name": "Update a pull request branch",
					"value": "pulls/update-branch",
					"action": "Updates the pull request branch with the latest upstream changes by merging HEAD from the base branch into the pull requ...",
					"routing": {
						"request": {
							"method": "PUT",
							"url": "=/repos/{{ $parameter[\"owner\"] }}/{repo}/pulls/{pull_number}/update-branch"
						}
					}
				}
			],
			"displayOptions": { "show": { "resource": ["pull"] } }
		},
		{
			"displayName": "Operation",
			"name": "operation",
			"type": "options",
			"noDataExpression": true,
			"default": "search/code",
			"options": [
				{
					"name": "Search code",
					"value": "search/code",
					"action": "Searches for query terms inside of a file. This method returns up to 100 results [per page](https://docs.github.com/rest...",
					"routing": { "request": { "method": "GET", "url": "/search/code" } }
				},
				{
					"name": "Search commits",
					"value": "search/commits",
					"action": "Find commits via various criteria on the default branch (usually `main`). This method returns up to 100 results [per pag...",
					"routing": { "request": { "method": "GET", "url": "/search/commits" } }
				},
				{
					"name": "Search issues and pull requests",
					"value": "search/issues-and-pull-requests",
					"action": "Find issues by state and keyword. This method returns up to 100 results [per page](https://docs.github.com/rest/overview...",
					"routing": { "request": { "method": "GET", "url": "/search/issues" } }
				},
				{
					"name": "Search labels",
					"value": "search/labels",
					"action": "Find labels in a repository with names or descriptions that match search keywords. Returns up to 100 results [per page](...",
					"routing": { "request": { "method": "GET", "url": "/search/labels" } }
				},
				{
					"name": "Search repositories",
					"value": "search/repos",
					"action": "Find repositories via various criteria. This method returns up to 100 results [per page](https://docs.github.com/rest/ov...",
					"routing": { "request": { "method": "GET", "url": "/search/repositories" } }
				},
				{
					"name": "Search topics",
					"value": "search/topics",
					"action": "Find topics via various criteria. Results are sorted by best match. This method returns up to 100 results [per page](htt...",
					"routing": { "request": { "method": "GET", "url": "/search/topics" } }
				},
				{
					"name": "Search users",
					"value": "search/users",
					"action": "Find users via various criteria. This method returns up to 100 results [per page](https://docs.github.com/rest/overview/...",
					"routing": { "request": { "method": "GET", "url": "/search/users" } }
				}
			],
			"displayOptions": { "show": { "resource": ["search"] } }
		},
		{
			"displayName": "Operation",
			"name": "operation",
			"type": "options",
			"noDataExpression": true,
			"default": "users/get-authenticated",
			"options": [
				{
					"name": "Get the authenticated user",
					"value": "users/get-authenticated",
					"action": "If the authenticated user is authenticated through basic authentication or OAuth with the `user` scope, then the respons...",
					"routing": { "request": { "method": "GET", "url": "/user" } }
				},
				{
					"name": "Update the authenticated user",
					"value": "users/update-authenticated",
					"action": "**Note:** If your email is set to private and you send an `email` parameter as part of this request to update your profi...",
					"routing": { "request": { "method": "PATCH", "url": "/user" } }
				},
				{
					"name": "List users blocked by the authenticated user",
					"value": "users/list-blocked-by-authenticated-user",
					"action": "List the users you've blocked on your personal account",
					"routing": { "request": { "method": "GET", "url": "/user/blocks" } }
				},
				{
					"name": "Unblock a user",
					"value": "users/unblock",
					"action": "",
					"routing": {
						"request": { "method": "DELETE", "url": "=/user/blocks/{{ $parameter[\"username\"] }}" }
					}
				},
				{
					"name": "Check if a user is blocked by the authenticated user",
					"value": "users/check-blocked",
					"action": "",
					"routing": {
						"request": { "method": "GET", "url": "=/user/blocks/{{ $parameter[\"username\"] }}" }
					}
				},
				{
					"name": "Block a user",
					"value": "users/block",
					"action": "",
					"routing": {
						"request": { "method": "PUT", "url": "=/user/blocks/{{ $parameter[\"username\"] }}" }
					}
				},
				{
					"name": "Set primary email visibility for the authenticated user",
					"value": "users/set-primary-email-visibility-for-authenticated-user",
					"action": "Sets the visibility for your primary email addresses",
					"routing": { "request": { "method": "PATCH", "url": "/user/email/visibility" } }
				},
				{
					"name": "Delete an email address for the authenticated user",
					"value": "users/delete-email-for-authenticated-user",
					"action": "This endpoint is accessible with the `user` scope",
					"routing": { "request": { "method": "DELETE", "url": "/user/emails" } }
				},
				{
					"name": "List email addresses for the authenticated user",
					"value": "users/list-emails-for-authenticated-user",
					"action": "Lists all of your email addresses, and specifies which one is visible to the public. This endpoint is accessible with th...",
					"routing": { "request": { "method": "GET", "url": "/user/emails" } }
				},
				{
					"name": "Add an email address for the authenticated user",
					"value": "users/add-email-for-authenticated-user",
					"action": "This endpoint is accessible with the `user` scope",
					"routing": { "request": { "method": "POST", "url": "/user/emails" } }
				},
				{
					"name": "List followers of the authenticated user",
					"value": "users/list-followers-for-authenticated-user",
					"action": "Lists the people following the authenticated user",
					"routing": { "request": { "method": "GET", "url": "/user/followers" } }
				},
				{
					"name": "List the people the authenticated user follows",
					"value": "users/list-followed-by-authenticated-user",
					"action": "Lists the people who the authenticated user follows",
					"routing": { "request": { "method": "GET", "url": "/user/following" } }
				},
				{
					"name": "Unfollow a user",
					"value": "users/unfollow",
					"action": "Unfollowing a user requires the user to be logged in and authenticated with basic auth or OAuth with the `user:follow` s...",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/user/following/{{ $parameter[\"username\"] }}"
						}
					}
				},
				{
					"name": "Check if a person is followed by the authenticated user",
					"value": "users/check-person-is-followed-by-authenticated",
					"action": "",
					"routing": {
						"request": { "method": "GET", "url": "=/user/following/{{ $parameter[\"username\"] }}" }
					}
				},
				{
					"name": "Follow a user",
					"value": "users/follow",
					"action": "Note that you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see \"[HTT...",
					"routing": {
						"request": { "method": "PUT", "url": "=/user/following/{{ $parameter[\"username\"] }}" }
					}
				},
				{
					"name": "List GPG keys for the authenticated user",
					"value": "users/list-gpg-keys-for-authenticated-user",
					"action": "Lists the current user's GPG keys. Requires that you are authenticated via Basic Auth or via OAuth with at least `read:g...",
					"routing": { "request": { "method": "GET", "url": "/user/gpg_keys" } }
				},
				{
					"name": "Create a GPG key for the authenticated user",
					"value": "users/create-gpg-key-for-authenticated-user",
					"action": "Adds a GPG key to the authenticated user's GitHub account. Requires that you are authenticated via Basic Auth, or OAuth ...",
					"routing": { "request": { "method": "POST", "url": "/user/gpg_keys" } }
				},
				{
					"name": "Delete a GPG key for the authenticated user",
					"value": "users/delete-gpg-key-for-authenticated-user",
					"action": "Removes a GPG key from the authenticated user's GitHub account. Requires that you are authenticated via Basic Auth or vi...",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/user/gpg_keys/{{ $parameter[\"gpg_key_id\"] }}"
						}
					}
				},
				{
					"name": "Get a GPG key for the authenticated user",
					"value": "users/get-gpg-key-for-authenticated-user",
					"action": "View extended details for a single GPG key. Requires that you are authenticated via Basic Auth or via OAuth with at leas...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/user/gpg_keys/{{ $parameter[\"gpg_key_id\"] }}"
						}
					}
				},
				{
					"name": "List public SSH keys for the authenticated user",
					"value": "users/list-public-ssh-keys-for-authenticated-user",
					"action": "Lists the public SSH keys for the authenticated user's GitHub account. Requires that you are authenticated via Basic Aut...",
					"routing": { "request": { "method": "GET", "url": "/user/keys" } }
				},
				{
					"name": "Create a public SSH key for the authenticated user",
					"value": "users/create-public-ssh-key-for-authenticated-user",
					"action": "Adds a public SSH key to the authenticated user's GitHub account. Requires that you are authenticated via Basic Auth, or...",
					"routing": { "request": { "method": "POST", "url": "/user/keys" } }
				},
				{
					"name": "Delete a public SSH key for the authenticated user",
					"value": "users/delete-public-ssh-key-for-authenticated-user",
					"action": "Removes a public SSH key from the authenticated user's GitHub account. Requires that you are authenticated via Basic Aut...",
					"routing": {
						"request": { "method": "DELETE", "url": "=/user/keys/{{ $parameter[\"key_id\"] }}" }
					}
				},
				{
					"name": "Get a public SSH key for the authenticated user",
					"value": "users/get-public-ssh-key-for-authenticated-user",
					"action": "View extended details for a single public SSH key. Requires that you are authenticated via Basic Auth or via OAuth with ...",
					"routing": {
						"request": { "method": "GET", "url": "=/user/keys/{{ $parameter[\"key_id\"] }}" }
					}
				},
				{
					"name": "List public email addresses for the authenticated user",
					"value": "users/list-public-emails-for-authenticated-user",
					"action": "Lists your publicly visible email address, which you can set with the [Set primary email visibility for the authenticate...",
					"routing": { "request": { "method": "GET", "url": "/user/public_emails" } }
				},
				{
					"name": "List SSH signing keys for the authenticated user",
					"value": "users/list-ssh-signing-keys-for-authenticated-user",
					"action": "Lists the SSH signing keys for the authenticated user's GitHub account. You must authenticate with Basic Authentication,...",
					"routing": { "request": { "method": "GET", "url": "/user/ssh_signing_keys" } }
				},
				{
					"name": "Create a SSH signing key for the authenticated user",
					"value": "users/create-ssh-signing-key-for-authenticated-user",
					"action": "Creates an SSH signing key for the authenticated user's GitHub account. You must authenticate with Basic Authentication,...",
					"routing": { "request": { "method": "POST", "url": "/user/ssh_signing_keys" } }
				},
				{
					"name": "Delete an SSH signing key for the authenticated user",
					"value": "users/delete-ssh-signing-key-for-authenticated-user",
					"action": "Deletes an SSH signing key from the authenticated user's GitHub account. You must authenticate with Basic Authentication...",
					"routing": {
						"request": {
							"method": "DELETE",
							"url": "=/user/ssh_signing_keys/{{ $parameter[\"ssh_signing_key_id\"] }}"
						}
					}
				},
				{
					"name": "Get an SSH signing key for the authenticated user",
					"value": "users/get-ssh-signing-key-for-authenticated-user",
					"action": "Gets extended details for an SSH signing key. You must authenticate with Basic Authentication, or you must authenticate ...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/user/ssh_signing_keys/{{ $parameter[\"ssh_signing_key_id\"] }}"
						}
					}
				},
				{
					"name": "List users",
					"value": "users/list",
					"action": "Lists all users, in the order that they signed up on GitHub. This list includes personal user accounts and organization ...",
					"routing": { "request": { "method": "GET", "url": "/users" } }
				},
				{
					"name": "Get a user",
					"value": "users/get-by-username",
					"action": "Provides publicly available information about someone with a GitHub account.  GitHub Apps with the `Plan` user permissio...",
					"routing": {
						"request": { "method": "GET", "url": "=/users/{{ $parameter[\"username\"] }}" }
					}
				},
				{
					"name": "List followers of a user",
					"value": "users/list-followers-for-user",
					"action": "Lists the people following the specified user",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/users/{{ $parameter[\"username\"] }}/followers"
						}
					}
				},
				{
					"name": "List the people a user follows",
					"value": "users/list-following-for-user",
					"action": "Lists the people who the specified user follows",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/users/{{ $parameter[\"username\"] }}/following"
						}
					}
				},
				{
					"name": "Check if a user follows another user",
					"value": "users/check-following-for-user",
					"action": "",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/users/{{ $parameter[\"username\"] }}/following/{target_user}"
						}
					}
				},
				{
					"name": "List GPG keys for a user",
					"value": "users/list-gpg-keys-for-user",
					"action": "Lists the GPG keys for a user. This information is accessible by anyone",
					"routing": {
						"request": { "method": "GET", "url": "=/users/{{ $parameter[\"username\"] }}/gpg_keys" }
					}
				},
				{
					"name": "Get contextual information for a user",
					"value": "users/get-context-for-user",
					"action": "Provides hovercard information when authenticated through basic auth or OAuth with the `repo` scope. You can find out mo...",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/users/{{ $parameter[\"username\"] }}/hovercard"
						}
					}
				},
				{
					"name": "List public keys for a user",
					"value": "users/list-public-keys-for-user",
					"action": "Lists the _verified_ public SSH keys for a user. This is accessible by anyone",
					"routing": {
						"request": { "method": "GET", "url": "=/users/{{ $parameter[\"username\"] }}/keys" }
					}
				},
				{
					"name": "List SSH signing keys for a user",
					"value": "users/list-ssh-signing-keys-for-user",
					"action": "Lists the SSH signing keys for a user. This operation is accessible by anyone",
					"routing": {
						"request": {
							"method": "GET",
							"url": "=/users/{{ $parameter[\"username\"] }}/ssh_signing_keys"
						}
					}
				}
			],
			"displayOptions": { "show": { "resource": ["user"] } }
		},
		{
			"name": "code",
			"displayName": "Code",
			"type": "string",
			"default": "",
			"required": true,
			"displayOptions": {
				"show": { "operation": ["apps/create-from-manifest"], "resource": ["app"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "content_type",
					"displayName": "Content Type",
					"type": "string",
					"default": "",
					"description": "The media type used to serialize the payloads. Supported values include `json` and `form`. The default is `form`",
					"placeholder": "e.g. \"json\"",
					"routing": { "send": { "type": "body", "property": "content_type" } }
				},
				{
					"name": "insecure_ssl",
					"displayName": "Insecure Ssl",
					"type": "string",
					"default": "",
					"description": "Determines whether the SSL certificate of the host for `url` will be verified when delivering payloads. Supported values...",
					"placeholder": "e.g. \"0\"",
					"routing": { "send": { "type": "body", "property": "insecure_ssl" } }
				},
				{
					"name": "secret",
					"displayName": "Secret",
					"type": "string",
					"default": "",
					"description": "If provided, the `secret` will be used as the `key` to generate the HMAC hex digest value for [delivery signature header...",
					"placeholder": "e.g. \"********\"",
					"routing": { "send": { "type": "body", "property": "secret" } }
				},
				{
					"name": "url",
					"displayName": "URL",
					"type": "string",
					"default": "",
					"description": "The URL to which the payloads will be delivered",
					"placeholder": "e.g. https://example.com/webhook",
					"routing": { "send": { "type": "body", "property": "url" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["apps/update-webhook-config-for-app"], "resource": ["app"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "cursor",
					"displayName": "Cursor",
					"type": "string",
					"default": "",
					"description": "Used for pagination: the starting delivery from which the page of deliveries is fetched. Refer to the `link` header for ...",
					"routing": { "send": { "type": "query", "property": "cursor" } }
				},
				{
					"name": "redelivery",
					"displayName": "Redelivery",
					"type": "boolean",
					"default": false,
					"routing": { "send": { "type": "query", "property": "redelivery" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["apps/list-webhook-deliveries"], "resource": ["app"] }
			}
		},
		{
			"name": "delivery_id",
			"displayName": "Delivery ID",
			"type": "number",
			"default": 0,
			"required": true,
			"displayOptions": {
				"show": { "operation": ["apps/get-webhook-delivery"], "resource": ["app"] }
			}
		},
		{
			"name": "delivery_id",
			"displayName": "Delivery ID",
			"type": "number",
			"default": 0,
			"required": true,
			"displayOptions": {
				"show": { "operation": ["apps/redeliver-webhook-delivery"], "resource": ["app"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				},
				{
					"name": "since",
					"displayName": "Since",
					"type": "string",
					"default": "",
					"description": "Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/IS...",
					"routing": { "send": { "type": "query", "property": "since" } }
				},
				{
					"name": "outdated",
					"displayName": "Outdated",
					"type": "string",
					"default": "",
					"routing": { "send": { "type": "query", "property": "outdated" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["apps/list-installations"], "resource": ["app"] }
			}
		},
		{
			"name": "installation_id",
			"displayName": "Installation ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the installation",
			"displayOptions": {
				"show": { "operation": ["apps/delete-installation"], "resource": ["app"] }
			}
		},
		{
			"name": "installation_id",
			"displayName": "Installation ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the installation",
			"displayOptions": { "show": { "operation": ["apps/get-installation"], "resource": ["app"] } }
		},
		{
			"name": "installation_id",
			"displayName": "Installation ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the installation",
			"displayOptions": {
				"show": { "operation": ["apps/create-installation-access-token"], "resource": ["app"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "permissions",
					"displayName": "Permissions",
					"type": "json",
					"default": "{}",
					"description": "The permissions granted to the user-to-server access token",
					"routing": { "send": { "type": "body", "property": "permissions" } }
				},
				{
					"name": "repositories",
					"displayName": "Repositories",
					"type": "string",
					"default": "",
					"description": "List of repository names that the token should have access to",
					"routing": { "send": { "type": "body", "property": "repositories" } }
				},
				{
					"name": "repository_ids",
					"displayName": "Repository IDs",
					"type": "json",
					"default": "{}",
					"description": "List of repository IDs that the token should have access to",
					"routing": { "send": { "type": "body", "property": "repository_ids" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["apps/create-installation-access-token"], "resource": ["app"] }
			}
		},
		{
			"name": "installation_id",
			"displayName": "Installation ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the installation",
			"displayOptions": {
				"show": { "operation": ["apps/unsuspend-installation"], "resource": ["app"] }
			}
		},
		{
			"name": "installation_id",
			"displayName": "Installation ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the installation",
			"displayOptions": {
				"show": { "operation": ["apps/suspend-installation"], "resource": ["app"] }
			}
		},
		{
			"name": "client_id",
			"displayName": "Client ID",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The client ID of the GitHub app",
			"displayOptions": {
				"show": { "operation": ["apps/delete-authorization"], "resource": ["app"] }
			}
		},
		{
			"name": "access_token",
			"displayName": "Access Token",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The OAuth access token used to authenticate to the GitHub API",
			"routing": { "send": { "type": "body", "property": "access_token" } },
			"displayOptions": {
				"show": { "operation": ["apps/delete-authorization"], "resource": ["app"] }
			}
		},
		{
			"name": "client_id",
			"displayName": "Client ID",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The client ID of the GitHub app",
			"displayOptions": { "show": { "operation": ["apps/delete-token"], "resource": ["app"] } }
		},
		{
			"name": "access_token",
			"displayName": "Access Token",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The OAuth access token used to authenticate to the GitHub API",
			"routing": { "send": { "type": "body", "property": "access_token" } },
			"displayOptions": { "show": { "operation": ["apps/delete-token"], "resource": ["app"] } }
		},
		{
			"name": "client_id",
			"displayName": "Client ID",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The client ID of the GitHub app",
			"displayOptions": { "show": { "operation": ["apps/reset-token"], "resource": ["app"] } }
		},
		{
			"name": "access_token",
			"displayName": "Access Token",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The access_token of the OAuth application",
			"routing": { "send": { "type": "body", "property": "access_token" } },
			"displayOptions": { "show": { "operation": ["apps/reset-token"], "resource": ["app"] } }
		},
		{
			"name": "client_id",
			"displayName": "Client ID",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The client ID of the GitHub app",
			"displayOptions": { "show": { "operation": ["apps/check-token"], "resource": ["app"] } }
		},
		{
			"name": "access_token",
			"displayName": "Access Token",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The access_token of the OAuth application",
			"routing": { "send": { "type": "body", "property": "access_token" } },
			"displayOptions": { "show": { "operation": ["apps/check-token"], "resource": ["app"] } }
		},
		{
			"name": "client_id",
			"displayName": "Client ID",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The client ID of the GitHub app",
			"displayOptions": { "show": { "operation": ["apps/scope-token"], "resource": ["app"] } }
		},
		{
			"name": "access_token",
			"displayName": "Access Token",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The access token used to authenticate to the GitHub API",
			"placeholder": "e.g. e72e16c7e42f292c6912e7710c838347ae178b4a",
			"routing": { "send": { "type": "body", "property": "access_token" } },
			"displayOptions": { "show": { "operation": ["apps/scope-token"], "resource": ["app"] } }
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "permissions",
					"displayName": "Permissions",
					"type": "json",
					"default": "{}",
					"description": "The permissions granted to the user-to-server access token",
					"routing": { "send": { "type": "body", "property": "permissions" } }
				},
				{
					"name": "repositories",
					"displayName": "Repositories",
					"type": "string",
					"default": "",
					"description": "The list of repository names to scope the user-to-server access token to. `repositories` may not be specified if `reposi...",
					"routing": { "send": { "type": "body", "property": "repositories" } }
				},
				{
					"name": "repository_ids",
					"displayName": "Repository IDs",
					"type": "json",
					"default": "{}",
					"description": "The list of repository IDs to scope the user-to-server access token to. `repository_ids` may not be specified if `reposi...",
					"routing": { "send": { "type": "body", "property": "repository_ids" } }
				},
				{
					"name": "target",
					"displayName": "Target",
					"type": "string",
					"default": "",
					"description": "The name of the user or organization to scope the user-to-server access token to. **Required** unless `target_id` is spe...",
					"placeholder": "e.g. octocat",
					"routing": { "send": { "type": "body", "property": "target" } }
				},
				{
					"name": "target_id",
					"displayName": "Target ID",
					"type": "number",
					"default": 0,
					"description": "The ID of the user or organization to scope the user-to-server access token to. **Required** unless `target` is specifie...",
					"routing": { "send": { "type": "body", "property": "target_id" } }
				}
			],
			"displayOptions": { "show": { "operation": ["apps/scope-token"], "resource": ["app"] } }
		},
		{
			"name": "app_slug",
			"displayName": "App Slug",
			"type": "string",
			"default": "",
			"required": true,
			"displayOptions": { "show": { "operation": ["apps/get-by-slug"], "resource": ["app"] } }
		},
		{
			"name": "key",
			"displayName": "Key",
			"type": "string",
			"default": "",
			"required": true,
			"displayOptions": {
				"show": {
					"operation": ["codes-of-conduct/get-conduct-code"],
					"resource": ["codesOfConduct"]
				}
			}
		},
		{
			"name": "enterprise",
			"displayName": "Enterprise",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id",
			"displayOptions": {
				"show": {
					"operation": ["dependabot/list-alerts-for-enterprise"],
					"resource": ["dependabot"]
				}
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "state",
					"displayName": "State",
					"type": "string",
					"default": "",
					"description": "A comma-separated list of states. If specified, only alerts with these states will be returned.  Can be: `dismissed`, `f...",
					"routing": { "send": { "type": "query", "property": "state" } }
				},
				{
					"name": "severity",
					"displayName": "Severity",
					"type": "string",
					"default": "",
					"description": "A comma-separated list of severities. If specified, only alerts with these severities will be returned.  Can be: `low`, ...",
					"routing": { "send": { "type": "query", "property": "severity" } }
				},
				{
					"name": "ecosystem",
					"displayName": "Ecosystem",
					"type": "string",
					"default": "",
					"description": "A comma-separated list of ecosystems. If specified, only alerts for these ecosystems will be returned.  Can be: `compose...",
					"routing": { "send": { "type": "query", "property": "ecosystem" } }
				},
				{
					"name": "package",
					"displayName": "Package",
					"type": "string",
					"default": "",
					"description": "A comma-separated list of package names. If specified, only alerts for these packages will be returned",
					"routing": { "send": { "type": "query", "property": "package" } }
				},
				{
					"name": "scope",
					"displayName": "Scope",
					"type": "options",
					"default": "development",
					"description": "The scope of the vulnerable dependency. If specified, only alerts with this scope will be returned",
					"options": [
						{ "name": "Development", "value": "development" },
						{ "name": "Runtime", "value": "runtime" }
					],
					"routing": { "send": { "type": "query", "property": "scope" } }
				},
				{
					"name": "sort",
					"displayName": "Sort",
					"type": "options",
					"default": "created",
					"description": "The property by which to sort the results. `created` means when the alert was created. `updated` means when the alert's ...",
					"options": [
						{ "name": "Created", "value": "created" },
						{ "name": "Updated", "value": "updated" }
					],
					"routing": { "send": { "type": "query", "property": "sort" } }
				},
				{
					"name": "direction",
					"displayName": "Direction",
					"type": "options",
					"default": "desc",
					"description": "The direction to sort the results by",
					"options": [{ "name": "Asc", "value": "asc" }, { "name": "Desc", "value": "desc" }],
					"routing": { "send": { "type": "query", "property": "direction" } }
				},
				{
					"name": "before",
					"displayName": "Before",
					"type": "string",
					"default": "",
					"description": "A cursor, as given in the [Link header](https://docs.github.com/rest/overview/resources-in-the-rest-api#link-header). If...",
					"routing": { "send": { "type": "query", "property": "before" } }
				},
				{
					"name": "after",
					"displayName": "After",
					"type": "string",
					"default": "",
					"description": "A cursor, as given in the [Link header](https://docs.github.com/rest/overview/resources-in-the-rest-api#link-header). If...",
					"routing": { "send": { "type": "query", "property": "after" } }
				},
				{
					"name": "first",
					"displayName": "First",
					"type": "number",
					"default": 30,
					"description": "**Deprecated**. The number of results per page (max 100), starting from the first matching result. This parameter must n...",
					"routing": { "send": { "type": "query", "property": "first" } }
				},
				{
					"name": "last",
					"displayName": "Last",
					"type": "number",
					"default": 0,
					"description": "**Deprecated**. The number of results per page (max 100), starting from the last matching result. This parameter must no...",
					"routing": { "send": { "type": "query", "property": "last" } }
				},
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				}
			],
			"displayOptions": {
				"show": {
					"operation": ["dependabot/list-alerts-for-enterprise"],
					"resource": ["dependabot"]
				}
			}
		},
		{
			"name": "enterprise",
			"displayName": "Enterprise",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id",
			"displayOptions": {
				"show": {
					"operation": ["secret-scanning/list-alerts-for-enterprise"],
					"resource": ["secretScanning"]
				}
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "state",
					"displayName": "State",
					"type": "options",
					"default": "open",
					"description": "Set to `open` or `resolved` to only list secret scanning alerts in a specific state",
					"options": [
						{ "name": "Open", "value": "open" },
						{ "name": "Resolved", "value": "resolved" }
					],
					"routing": { "send": { "type": "query", "property": "state" } }
				},
				{
					"name": "secret_type",
					"displayName": "Secret Type",
					"type": "string",
					"default": "",
					"description": "A comma-separated list of secret types to return. By default all secret types are returned. See \"[Secret scanning patter...",
					"routing": { "send": { "type": "query", "property": "secret_type" } }
				},
				{
					"name": "resolution",
					"displayName": "Resolution",
					"type": "string",
					"default": "",
					"description": "A comma-separated list of resolutions. Only secret scanning alerts with one of these resolutions are listed. Valid resol...",
					"routing": { "send": { "type": "query", "property": "resolution" } }
				},
				{
					"name": "sort",
					"displayName": "Sort",
					"type": "options",
					"default": "created",
					"description": "The property to sort the results by. `created` means when the alert was created. `updated` means when the alert was upda...",
					"options": [
						{ "name": "Created", "value": "created" },
						{ "name": "Updated", "value": "updated" }
					],
					"routing": { "send": { "type": "query", "property": "sort" } }
				},
				{
					"name": "direction",
					"displayName": "Direction",
					"type": "options",
					"default": "desc",
					"description": "The direction to sort the results by",
					"options": [{ "name": "Asc", "value": "asc" }, { "name": "Desc", "value": "desc" }],
					"routing": { "send": { "type": "query", "property": "direction" } }
				},
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "before",
					"displayName": "Before",
					"type": "string",
					"default": "",
					"description": "A cursor, as given in the [Link header](https://docs.github.com/rest/overview/resources-in-the-rest-api#link-header). If...",
					"routing": { "send": { "type": "query", "property": "before" } }
				},
				{
					"name": "after",
					"displayName": "After",
					"type": "string",
					"default": "",
					"description": "A cursor, as given in the [Link header](https://docs.github.com/rest/overview/resources-in-the-rest-api#link-header). If...",
					"routing": { "send": { "type": "query", "property": "after" } }
				}
			],
			"displayOptions": {
				"show": {
					"operation": ["secret-scanning/list-alerts-for-enterprise"],
					"resource": ["secretScanning"]
				}
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["activity/list-public-events"], "resource": ["activity"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "since",
					"displayName": "Since",
					"type": "string",
					"default": "",
					"description": "Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/IS...",
					"routing": { "send": { "type": "query", "property": "since" } }
				},
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": { "show": { "operation": ["gists/list"], "resource": ["gist"] } }
		},
		{
			"name": "files",
			"displayName": "Files",
			"type": "json",
			"default": "{}",
			"required": true,
			"description": "Names and content for the files that make up the gist",
			"routing": { "send": { "type": "body", "property": "files" } },
			"displayOptions": { "show": { "operation": ["gists/create"], "resource": ["gist"] } }
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "description",
					"displayName": "Description",
					"type": "string",
					"default": "",
					"description": "Description of the gist",
					"placeholder": "e.g. Example Ruby script",
					"routing": { "send": { "type": "body", "property": "description" } }
				},
				{
					"name": "public",
					"displayName": "Public",
					"type": "boolean",
					"default": false,
					"description": "Flag indicating whether the gist is public",
					"routing": { "send": { "type": "body", "property": "public" } }
				}
			],
			"displayOptions": { "show": { "operation": ["gists/create"], "resource": ["gist"] } }
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "since",
					"displayName": "Since",
					"type": "string",
					"default": "",
					"description": "Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/IS...",
					"routing": { "send": { "type": "query", "property": "since" } }
				},
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": { "show": { "operation": ["gists/list-public"], "resource": ["gist"] } }
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "since",
					"displayName": "Since",
					"type": "string",
					"default": "",
					"description": "Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/IS...",
					"routing": { "send": { "type": "query", "property": "since" } }
				},
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": { "show": { "operation": ["gists/list-starred"], "resource": ["gist"] } }
		},
		{
			"name": "gist_id",
			"displayName": "Gist ID",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The unique identifier of the gist",
			"displayOptions": { "show": { "operation": ["gists/delete"], "resource": ["gist"] } }
		},
		{
			"name": "gist_id",
			"displayName": "Gist ID",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The unique identifier of the gist",
			"displayOptions": { "show": { "operation": ["gists/get"], "resource": ["gist"] } }
		},
		{
			"name": "gist_id",
			"displayName": "Gist ID",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The unique identifier of the gist",
			"displayOptions": { "show": { "operation": ["gists/update"], "resource": ["gist"] } }
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "description",
					"displayName": "Description",
					"type": "string",
					"default": "",
					"description": "The description of the gist",
					"placeholder": "e.g. Example Ruby script",
					"routing": { "send": { "type": "body", "property": "description" } }
				},
				{
					"name": "files",
					"displayName": "Files",
					"type": "json",
					"default": "{}",
					"description": "The gist files to be updated, renamed, or deleted. Each `key` must match the current filename (including extension) of t...",
					"routing": { "send": { "type": "body", "property": "files" } }
				}
			],
			"displayOptions": { "show": { "operation": ["gists/update"], "resource": ["gist"] } }
		},
		{
			"name": "gist_id",
			"displayName": "Gist ID",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The unique identifier of the gist",
			"displayOptions": { "show": { "operation": ["gists/list-comments"], "resource": ["gist"] } }
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": { "show": { "operation": ["gists/list-comments"], "resource": ["gist"] } }
		},
		{
			"name": "gist_id",
			"displayName": "Gist ID",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The unique identifier of the gist",
			"displayOptions": { "show": { "operation": ["gists/create-comment"], "resource": ["gist"] } }
		},
		{
			"name": "body",
			"displayName": "Body",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The comment text",
			"placeholder": "e.g. Body of the attachment",
			"routing": { "send": { "type": "body", "property": "body" } },
			"displayOptions": { "show": { "operation": ["gists/create-comment"], "resource": ["gist"] } }
		},
		{
			"name": "gist_id",
			"displayName": "Gist ID",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The unique identifier of the gist",
			"displayOptions": { "show": { "operation": ["gists/delete-comment"], "resource": ["gist"] } }
		},
		{
			"name": "comment_id",
			"displayName": "Comment ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the comment",
			"displayOptions": { "show": { "operation": ["gists/delete-comment"], "resource": ["gist"] } }
		},
		{
			"name": "gist_id",
			"displayName": "Gist ID",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The unique identifier of the gist",
			"displayOptions": { "show": { "operation": ["gists/get-comment"], "resource": ["gist"] } }
		},
		{
			"name": "comment_id",
			"displayName": "Comment ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the comment",
			"displayOptions": { "show": { "operation": ["gists/get-comment"], "resource": ["gist"] } }
		},
		{
			"name": "gist_id",
			"displayName": "Gist ID",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The unique identifier of the gist",
			"displayOptions": { "show": { "operation": ["gists/update-comment"], "resource": ["gist"] } }
		},
		{
			"name": "comment_id",
			"displayName": "Comment ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the comment",
			"displayOptions": { "show": { "operation": ["gists/update-comment"], "resource": ["gist"] } }
		},
		{
			"name": "body",
			"displayName": "Body",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The comment text",
			"placeholder": "e.g. Body of the attachment",
			"routing": { "send": { "type": "body", "property": "body" } },
			"displayOptions": { "show": { "operation": ["gists/update-comment"], "resource": ["gist"] } }
		},
		{
			"name": "gist_id",
			"displayName": "Gist ID",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The unique identifier of the gist",
			"displayOptions": { "show": { "operation": ["gists/list-commits"], "resource": ["gist"] } }
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": { "show": { "operation": ["gists/list-commits"], "resource": ["gist"] } }
		},
		{
			"name": "gist_id",
			"displayName": "Gist ID",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The unique identifier of the gist",
			"displayOptions": { "show": { "operation": ["gists/list-forks"], "resource": ["gist"] } }
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": { "show": { "operation": ["gists/list-forks"], "resource": ["gist"] } }
		},
		{
			"name": "gist_id",
			"displayName": "Gist ID",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The unique identifier of the gist",
			"displayOptions": { "show": { "operation": ["gists/fork"], "resource": ["gist"] } }
		},
		{
			"name": "gist_id",
			"displayName": "Gist ID",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The unique identifier of the gist",
			"displayOptions": { "show": { "operation": ["gists/unstar"], "resource": ["gist"] } }
		},
		{
			"name": "gist_id",
			"displayName": "Gist ID",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The unique identifier of the gist",
			"displayOptions": {
				"show": { "operation": ["gists/check-is-starred"], "resource": ["gist"] }
			}
		},
		{
			"name": "gist_id",
			"displayName": "Gist ID",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The unique identifier of the gist",
			"displayOptions": { "show": { "operation": ["gists/star"], "resource": ["gist"] } }
		},
		{
			"name": "gist_id",
			"displayName": "Gist ID",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The unique identifier of the gist",
			"displayOptions": { "show": { "operation": ["gists/get-revision"], "resource": ["gist"] } }
		},
		{
			"name": "sha",
			"displayName": "Sha",
			"type": "string",
			"default": "",
			"required": true,
			"displayOptions": { "show": { "operation": ["gists/get-revision"], "resource": ["gist"] } }
		},
		{
			"name": "name",
			"displayName": "Name",
			"type": "string",
			"default": "",
			"required": true,
			"displayOptions": {
				"show": { "operation": ["gitignore/get-template"], "resource": ["gitignore"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["apps/list-repos-accessible-to-installation"], "resource": ["app"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "filter",
					"displayName": "Filter",
					"type": "options",
					"default": "assigned",
					"description": "Indicates which sorts of issues to return. `assigned` means issues assigned to you. `created` means issues created by yo...",
					"options": [
						{ "name": "Assigned", "value": "assigned" },
						{ "name": "Created", "value": "created" },
						{ "name": "Mentioned", "value": "mentioned" },
						{ "name": "Subscribed", "value": "subscribed" },
						{ "name": "Repos", "value": "repos" },
						{ "name": "All", "value": "all" }
					],
					"routing": { "send": { "type": "query", "property": "filter" } }
				},
				{
					"name": "state",
					"displayName": "State",
					"type": "options",
					"default": "open",
					"description": "Indicates the state of the issues to return",
					"options": [
						{ "name": "Open", "value": "open" },
						{ "name": "Closed", "value": "closed" },
						{ "name": "All", "value": "all" }
					],
					"routing": { "send": { "type": "query", "property": "state" } }
				},
				{
					"name": "labels",
					"displayName": "Labels",
					"type": "string",
					"default": "",
					"description": "A list of comma separated label names. Example: `bug,ui,@high`",
					"routing": { "send": { "type": "query", "property": "labels" } }
				},
				{
					"name": "sort",
					"displayName": "Sort",
					"type": "options",
					"default": "created",
					"description": "What to sort results by",
					"options": [
						{ "name": "Created", "value": "created" },
						{ "name": "Updated", "value": "updated" },
						{ "name": "Comments", "value": "comments" }
					],
					"routing": { "send": { "type": "query", "property": "sort" } }
				},
				{
					"name": "direction",
					"displayName": "Direction",
					"type": "options",
					"default": "desc",
					"description": "The direction to sort the results by",
					"options": [{ "name": "Asc", "value": "asc" }, { "name": "Desc", "value": "desc" }],
					"routing": { "send": { "type": "query", "property": "direction" } }
				},
				{
					"name": "since",
					"displayName": "Since",
					"type": "string",
					"default": "",
					"description": "Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/IS...",
					"routing": { "send": { "type": "query", "property": "since" } }
				},
				{
					"name": "collab",
					"displayName": "Collab",
					"type": "boolean",
					"default": false,
					"routing": { "send": { "type": "query", "property": "collab" } }
				},
				{
					"name": "orgs",
					"displayName": "Orgs",
					"type": "boolean",
					"default": false,
					"routing": { "send": { "type": "query", "property": "orgs" } }
				},
				{
					"name": "owned",
					"displayName": "Owned",
					"type": "boolean",
					"default": false,
					"routing": { "send": { "type": "query", "property": "owned" } }
				},
				{
					"name": "pulls",
					"displayName": "Pulls",
					"type": "boolean",
					"default": false,
					"routing": { "send": { "type": "query", "property": "pulls" } }
				},
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": { "show": { "operation": ["issues/list"], "resource": ["issue"] } }
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "featured",
					"displayName": "Featured",
					"type": "boolean",
					"default": false,
					"routing": { "send": { "type": "query", "property": "featured" } }
				},
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["licenses/get-all-commonly-used"], "resource": ["license"] }
			}
		},
		{
			"name": "license",
			"displayName": "License",
			"type": "string",
			"default": "",
			"required": true,
			"displayOptions": { "show": { "operation": ["licenses/get"], "resource": ["license"] } }
		},
		{
			"name": "text",
			"displayName": "Text",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The Markdown text to render in HTML",
			"routing": { "send": { "type": "body", "property": "text" } },
			"displayOptions": { "show": { "operation": ["markdown/render"], "resource": ["markdown"] } }
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "context",
					"displayName": "Context",
					"type": "string",
					"default": "",
					"description": "The repository context to use when creating references in `gfm` mode.  For example, setting `context` to `octo-org/octo-...",
					"routing": { "send": { "type": "body", "property": "context" } }
				},
				{
					"name": "mode",
					"displayName": "Mode",
					"type": "string",
					"default": "",
					"description": "The rendering mode",
					"placeholder": "e.g. markdown",
					"routing": { "send": { "type": "body", "property": "mode" } }
				}
			],
			"displayOptions": { "show": { "operation": ["markdown/render"], "resource": ["markdown"] } }
		},
		{
			"name": "text",
			"displayName": "Text",
			"type": "string",
			"default": "",
			"required": true,
			"routing": { "send": { "type": "body", "property": "text" } },
			"displayOptions": {
				"show": { "operation": ["markdown/render-raw"], "resource": ["markdown"] }
			}
		},
		{
			"name": "account_id",
			"displayName": "Account ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "account_id parameter",
			"displayOptions": {
				"show": { "operation": ["apps/get-subscription-plan-for-account"], "resource": ["app"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": { "show": { "operation": ["apps/list-plans"], "resource": ["app"] } }
		},
		{
			"name": "plan_id",
			"displayName": "Plan ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the plan",
			"displayOptions": {
				"show": { "operation": ["apps/list-accounts-for-plan"], "resource": ["app"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "sort",
					"displayName": "Sort",
					"type": "options",
					"default": "created",
					"description": "The property to sort the results by. `created` means when the repository was starred. `updated` means when the repositor...",
					"options": [
						{ "name": "Created", "value": "created" },
						{ "name": "Updated", "value": "updated" }
					],
					"routing": { "send": { "type": "query", "property": "sort" } }
				},
				{
					"name": "direction",
					"displayName": "Direction",
					"type": "options",
					"default": "asc",
					"description": "To return the oldest accounts first, set to `asc`. Ignored without the `sort` parameter",
					"options": [{ "name": "Asc", "value": "asc" }, { "name": "Desc", "value": "desc" }],
					"routing": { "send": { "type": "query", "property": "direction" } }
				},
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["apps/list-accounts-for-plan"], "resource": ["app"] }
			}
		},
		{
			"name": "account_id",
			"displayName": "Account ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "account_id parameter",
			"displayOptions": {
				"show": {
					"operation": ["apps/get-subscription-plan-for-account-stubbed"],
					"resource": ["app"]
				}
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["apps/list-plans-stubbed"], "resource": ["app"] }
			}
		},
		{
			"name": "plan_id",
			"displayName": "Plan ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the plan",
			"displayOptions": {
				"show": { "operation": ["apps/list-accounts-for-plan-stubbed"], "resource": ["app"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "sort",
					"displayName": "Sort",
					"type": "options",
					"default": "created",
					"description": "The property to sort the results by. `created` means when the repository was starred. `updated` means when the repositor...",
					"options": [
						{ "name": "Created", "value": "created" },
						{ "name": "Updated", "value": "updated" }
					],
					"routing": { "send": { "type": "query", "property": "sort" } }
				},
				{
					"name": "direction",
					"displayName": "Direction",
					"type": "options",
					"default": "asc",
					"description": "To return the oldest accounts first, set to `asc`. Ignored without the `sort` parameter",
					"options": [{ "name": "Asc", "value": "asc" }, { "name": "Desc", "value": "desc" }],
					"routing": { "send": { "type": "query", "property": "direction" } }
				},
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["apps/list-accounts-for-plan-stubbed"], "resource": ["app"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["activity/list-public-events-for-repo-network"],
					"resource": ["activity"]
				}
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["activity/list-public-events-for-repo-network"],
					"resource": ["activity"]
				}
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": {
					"operation": ["activity/list-public-events-for-repo-network"],
					"resource": ["activity"]
				}
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "all",
					"displayName": "All",
					"type": "boolean",
					"default": false,
					"description": "If `true`, show notifications marked as read",
					"routing": { "send": { "type": "query", "property": "all" } }
				},
				{
					"name": "participating",
					"displayName": "Participating",
					"type": "boolean",
					"default": false,
					"description": "If `true`, only shows notifications in which the user is directly participating or mentioned",
					"routing": { "send": { "type": "query", "property": "participating" } }
				},
				{
					"name": "since",
					"displayName": "Since",
					"type": "string",
					"default": "",
					"description": "Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/IS...",
					"routing": { "send": { "type": "query", "property": "since" } }
				},
				{
					"name": "before",
					"displayName": "Before",
					"type": "string",
					"default": "",
					"description": "Only show notifications updated before the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/I...",
					"routing": { "send": { "type": "query", "property": "before" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				},
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 50,
					"description": "The number of results per page (max 50)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				}
			],
			"displayOptions": {
				"show": {
					"operation": ["activity/list-notifications-for-authenticated-user"],
					"resource": ["activity"]
				}
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "last_read_at",
					"displayName": "Last Read At",
					"type": "string",
					"default": "",
					"description": "Describes the last point that notifications were checked. Anything updated since this time will not be marked as read. I...",
					"routing": { "send": { "type": "body", "property": "last_read_at" } }
				},
				{
					"name": "read",
					"displayName": "Read",
					"type": "boolean",
					"default": false,
					"description": "Whether the notification has been read",
					"routing": { "send": { "type": "body", "property": "read" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["activity/mark-notifications-as-read"], "resource": ["activity"] }
			}
		},
		{
			"name": "thread_id",
			"displayName": "Thread ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the notification thread. This corresponds to the value returned in the `id` field when you retr...",
			"displayOptions": {
				"show": { "operation": ["activity/get-thread"], "resource": ["activity"] }
			}
		},
		{
			"name": "thread_id",
			"displayName": "Thread ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the notification thread. This corresponds to the value returned in the `id` field when you retr...",
			"displayOptions": {
				"show": { "operation": ["activity/mark-thread-as-read"], "resource": ["activity"] }
			}
		},
		{
			"name": "thread_id",
			"displayName": "Thread ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the notification thread. This corresponds to the value returned in the `id` field when you retr...",
			"displayOptions": {
				"show": { "operation": ["activity/delete-thread-subscription"], "resource": ["activity"] }
			}
		},
		{
			"name": "thread_id",
			"displayName": "Thread ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the notification thread. This corresponds to the value returned in the `id` field when you retr...",
			"displayOptions": {
				"show": {
					"operation": ["activity/get-thread-subscription-for-authenticated-user"],
					"resource": ["activity"]
				}
			}
		},
		{
			"name": "thread_id",
			"displayName": "Thread ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the notification thread. This corresponds to the value returned in the `id` field when you retr...",
			"displayOptions": {
				"show": { "operation": ["activity/set-thread-subscription"], "resource": ["activity"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "ignored",
					"displayName": "Ignored",
					"type": "boolean",
					"default": false,
					"description": "Whether to block all notifications from a thread",
					"routing": { "send": { "type": "body", "property": "ignored" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["activity/set-thread-subscription"], "resource": ["activity"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "s",
					"displayName": "S",
					"type": "string",
					"default": "",
					"description": "The words to show in Octocat's speech bubble",
					"routing": { "send": { "type": "query", "property": "s" } }
				}
			],
			"displayOptions": { "show": { "operation": ["meta/get-octocat"], "resource": ["meta"] } }
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "since",
					"displayName": "Since",
					"type": "number",
					"default": 0,
					"description": "An organization ID. Only return organizations with an ID greater than this ID",
					"routing": { "send": { "type": "query", "property": "since" } }
				},
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				}
			],
			"displayOptions": { "show": { "operation": ["orgs/list"], "resource": ["org"] } }
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["orgs/get"], "resource": ["org"] } }
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["orgs/update"], "resource": ["org"] } }
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "advanced_security_enabled_for_new_repositories",
					"displayName": "Advanced Security Enabled For New Repositories",
					"type": "boolean",
					"default": false,
					"description": "Whether GitHub Advanced Security is automatically enabled for new repositories.  To use this parameter, you must have ad...",
					"routing": {
						"send": { "type": "body", "property": "advanced_security_enabled_for_new_repositories" }
					}
				},
				{
					"name": "billing_email",
					"displayName": "Billing Email",
					"type": "string",
					"default": "",
					"description": "Billing email address. This address is not publicized",
					"routing": { "send": { "type": "body", "property": "billing_email" } }
				},
				{
					"name": "blog",
					"displayName": "Blog",
					"type": "string",
					"default": "",
					"placeholder": "e.g. \"http://github.blog\"",
					"routing": { "send": { "type": "body", "property": "blog" } }
				},
				{
					"name": "company",
					"displayName": "Company",
					"type": "string",
					"default": "",
					"description": "The company name",
					"routing": { "send": { "type": "body", "property": "company" } }
				},
				{
					"name": "default_repository_permission",
					"displayName": "Default Repository Permission",
					"type": "string",
					"default": "",
					"description": "Default permission level members have for organization repositories",
					"routing": { "send": { "type": "body", "property": "default_repository_permission" } }
				},
				{
					"name": "dependabot_alerts_enabled_for_new_repositories",
					"displayName": "Dependabot Alerts Enabled For New Repositories",
					"type": "boolean",
					"default": false,
					"description": "Whether Dependabot alerts is automatically enabled for new repositories.  To use this parameter, you must have admin per...",
					"routing": {
						"send": { "type": "body", "property": "dependabot_alerts_enabled_for_new_repositories" }
					}
				},
				{
					"name": "dependabot_security_updates_enabled_for_new_repositories",
					"displayName": "Dependabot Security Updates Enabled For New Repositories",
					"type": "boolean",
					"default": false,
					"description": "Whether Dependabot security updates is automatically enabled for new repositories.  To use this parameter, you must have...",
					"routing": {
						"send": {
							"type": "body",
							"property": "dependabot_security_updates_enabled_for_new_repositories"
						}
					}
				},
				{
					"name": "dependency_graph_enabled_for_new_repositories",
					"displayName": "Dependency Graph Enabled For New Repositories",
					"type": "boolean",
					"default": false,
					"description": "Whether dependency graph is automatically enabled for new repositories.  To use this parameter, you must have admin perm...",
					"routing": {
						"send": { "type": "body", "property": "dependency_graph_enabled_for_new_repositories" }
					}
				},
				{
					"name": "description",
					"displayName": "Description",
					"type": "string",
					"default": "",
					"description": "The description of the company",
					"routing": { "send": { "type": "body", "property": "description" } }
				},
				{
					"name": "email",
					"displayName": "Email",
					"type": "string",
					"default": "",
					"description": "The publicly visible email address",
					"routing": { "send": { "type": "body", "property": "email" } }
				},
				{
					"name": "has_organization_projects",
					"displayName": "Has Organization Projects",
					"type": "boolean",
					"default": false,
					"description": "Whether an organization can use organization projects",
					"routing": { "send": { "type": "body", "property": "has_organization_projects" } }
				},
				{
					"name": "has_repository_projects",
					"displayName": "Has Repository Projects",
					"type": "boolean",
					"default": false,
					"description": "Whether repositories that belong to the organization can use repository projects",
					"routing": { "send": { "type": "body", "property": "has_repository_projects" } }
				},
				{
					"name": "location",
					"displayName": "Location",
					"type": "string",
					"default": "",
					"description": "The location",
					"routing": { "send": { "type": "body", "property": "location" } }
				},
				{
					"name": "members_allowed_repository_creation_type",
					"displayName": "Members Allowed Repository Creation Type",
					"type": "string",
					"default": "",
					"description": "Specifies which types of repositories non-admin organization members can create. `private` is only available to reposito...",
					"routing": {
						"send": { "type": "body", "property": "members_allowed_repository_creation_type" }
					}
				},
				{
					"name": "members_can_create_internal_repositories",
					"displayName": "Members Can Create Internal Repositories",
					"type": "boolean",
					"default": false,
					"description": "Whether organization members can create internal repositories, which are visible to all enterprise members. You can only...",
					"routing": {
						"send": { "type": "body", "property": "members_can_create_internal_repositories" }
					}
				},
				{
					"name": "members_can_create_pages",
					"displayName": "Members Can Create Pages",
					"type": "boolean",
					"default": false,
					"description": "Whether organization members can create GitHub Pages sites. Existing published sites will not be impacted",
					"routing": { "send": { "type": "body", "property": "members_can_create_pages" } }
				},
				{
					"name": "members_can_create_private_pages",
					"displayName": "Members Can Create Private Pages",
					"type": "boolean",
					"default": false,
					"description": "Whether organization members can create private GitHub Pages sites. Existing published sites will not be impacted",
					"routing": { "send": { "type": "body", "property": "members_can_create_private_pages" } }
				},
				{
					"name": "members_can_create_private_repositories",
					"displayName": "Members Can Create Private Repositories",
					"type": "boolean",
					"default": false,
					"description": "Whether organization members can create private repositories, which are visible to organization members with permission....",
					"routing": {
						"send": { "type": "body", "property": "members_can_create_private_repositories" }
					}
				},
				{
					"name": "members_can_create_public_pages",
					"displayName": "Members Can Create Public Pages",
					"type": "boolean",
					"default": false,
					"description": "Whether organization members can create public GitHub Pages sites. Existing published sites will not be impacted",
					"routing": { "send": { "type": "body", "property": "members_can_create_public_pages" } }
				},
				{
					"name": "members_can_create_public_repositories",
					"displayName": "Members Can Create Public Repositories",
					"type": "boolean",
					"default": false,
					"description": "Whether organization members can create public repositories, which are visible to anyone. For more information, see \"[Re...",
					"routing": {
						"send": { "type": "body", "property": "members_can_create_public_repositories" }
					}
				},
				{
					"name": "members_can_create_repositories",
					"displayName": "Members Can Create Repositories",
					"type": "boolean",
					"default": false,
					"description": "Whether of non-admin organization members can create repositories. **Note:** A parameter can override this parameter. Se...",
					"routing": { "send": { "type": "body", "property": "members_can_create_repositories" } }
				},
				{
					"name": "members_can_fork_private_repositories",
					"displayName": "Members Can Fork Private Repositories",
					"type": "boolean",
					"default": false,
					"description": "Whether organization members can fork private organization repositories",
					"routing": {
						"send": { "type": "body", "property": "members_can_fork_private_repositories" }
					}
				},
				{
					"name": "name",
					"displayName": "Name",
					"type": "string",
					"default": "",
					"description": "The shorthand name of the company",
					"routing": { "send": { "type": "body", "property": "name" } }
				},
				{
					"name": "secret_scanning_enabled_for_new_repositories",
					"displayName": "Secret Scanning Enabled For New Repositories",
					"type": "boolean",
					"default": false,
					"description": "Whether secret scanning is automatically enabled for new repositories.  To use this parameter, you must have admin permi...",
					"routing": {
						"send": { "type": "body", "property": "secret_scanning_enabled_for_new_repositories" }
					}
				},
				{
					"name": "secret_scanning_push_protection_custom_link",
					"displayName": "Secret Scanning Push Protection Custom Link",
					"type": "string",
					"default": "",
					"description": "If `secret_scanning_push_protection_custom_link_enabled` is true, the URL that will be displayed to contributors who are...",
					"routing": {
						"send": { "type": "body", "property": "secret_scanning_push_protection_custom_link" }
					}
				},
				{
					"name": "secret_scanning_push_protection_custom_link_enabled",
					"displayName": "Secret Scanning Push Protection Custom Link Enabled",
					"type": "boolean",
					"default": false,
					"description": "Whether a custom link is shown to contributors who are blocked from pushing a secret by push protection",
					"routing": {
						"send": {
							"type": "body",
							"property": "secret_scanning_push_protection_custom_link_enabled"
						}
					}
				},
				{
					"name": "secret_scanning_push_protection_enabled_for_new_repositories",
					"displayName": "Secret Scanning Push Protection Enabled For New Repositories",
					"type": "boolean",
					"default": false,
					"description": "Whether secret scanning push protection is automatically enabled for new repositories.  To use this parameter, you must ...",
					"routing": {
						"send": {
							"type": "body",
							"property": "secret_scanning_push_protection_enabled_for_new_repositories"
						}
					}
				},
				{
					"name": "twitter_username",
					"displayName": "Twitter Username",
					"type": "string",
					"default": "",
					"description": "The Twitter username of the company",
					"routing": { "send": { "type": "body", "property": "twitter_username" } }
				},
				{
					"name": "web_commit_signoff_required",
					"displayName": "Web Commit Signoff Required",
					"type": "boolean",
					"default": false,
					"description": "Whether contributors to organization repositories are required to sign off on commits they make through GitHub's web int...",
					"routing": { "send": { "type": "body", "property": "web_commit_signoff_required" } }
				}
			],
			"displayOptions": { "show": { "operation": ["orgs/update"], "resource": ["org"] } }
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["actions/get-actions-cache-usage-for-org"], "resource": ["action"] }
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["actions/get-actions-cache-usage-by-repo-for-org"],
					"resource": ["action"]
				}
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": {
					"operation": ["actions/get-actions-cache-usage-by-repo-for-org"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["oidc/get-oidc-custom-sub-template-for-org"], "resource": ["oidc"] }
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["oidc/update-oidc-custom-sub-template-for-org"],
					"resource": ["oidc"]
				}
			}
		},
		{
			"name": "include_claim_keys",
			"displayName": "Include Claim Keys",
			"type": "string",
			"default": "",
			"required": true,
			"description": "Array of unique strings. Each claim key can only contain alphanumeric characters and underscores",
			"routing": { "send": { "type": "body", "property": "include_claim_keys" } },
			"displayOptions": {
				"show": {
					"operation": ["oidc/update-oidc-custom-sub-template-for-org"],
					"resource": ["oidc"]
				}
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["actions/get-github-actions-permissions-organization"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["actions/set-github-actions-permissions-organization"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "enabled_repositories",
			"displayName": "Enabled Repositories",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The policy that controls the repositories in the organization that are allowed to run GitHub Actions",
			"routing": { "send": { "type": "body", "property": "enabled_repositories" } },
			"displayOptions": {
				"show": {
					"operation": ["actions/set-github-actions-permissions-organization"],
					"resource": ["action"]
				}
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "allowed_actions",
					"displayName": "Allowed Actions",
					"type": "string",
					"default": "",
					"description": "The permissions policy that controls the actions and reusable workflows that are allowed to run",
					"routing": { "send": { "type": "body", "property": "allowed_actions" } }
				}
			],
			"displayOptions": {
				"show": {
					"operation": ["actions/set-github-actions-permissions-organization"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["actions/list-selected-repositories-enabled-github-actions-organization"],
					"resource": ["action"]
				}
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": {
					"operation": ["actions/list-selected-repositories-enabled-github-actions-organization"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["actions/set-selected-repositories-enabled-github-actions-organization"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "selected_repository_ids",
			"displayName": "Selected Repository IDs",
			"type": "json",
			"default": "{}",
			"required": true,
			"description": "List of repository IDs to enable for GitHub Actions",
			"routing": { "send": { "type": "body", "property": "selected_repository_ids" } },
			"displayOptions": {
				"show": {
					"operation": ["actions/set-selected-repositories-enabled-github-actions-organization"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["actions/disable-selected-repository-github-actions-organization"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "repository_id",
			"displayName": "Repository ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the repository",
			"displayOptions": {
				"show": {
					"operation": ["actions/disable-selected-repository-github-actions-organization"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["actions/enable-selected-repository-github-actions-organization"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "repository_id",
			"displayName": "Repository ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the repository",
			"displayOptions": {
				"show": {
					"operation": ["actions/enable-selected-repository-github-actions-organization"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["actions/get-allowed-actions-organization"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["actions/set-allowed-actions-organization"],
					"resource": ["action"]
				}
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "github_owned_allowed",
					"displayName": "Github Owned Allowed",
					"type": "boolean",
					"default": false,
					"description": "Whether GitHub-owned actions are allowed. For example, this includes the actions in the `actions` organization",
					"routing": { "send": { "type": "body", "property": "github_owned_allowed" } }
				},
				{
					"name": "patterns_allowed",
					"displayName": "Patterns Allowed",
					"type": "string",
					"default": "",
					"description": "Specifies a list of string-matching patterns to allow specific action(s) and reusable workflow(s). Wildcards, tags, and ...",
					"routing": { "send": { "type": "body", "property": "patterns_allowed" } }
				},
				{
					"name": "verified_allowed",
					"displayName": "Verified Allowed",
					"type": "boolean",
					"default": false,
					"description": "Whether actions from GitHub Marketplace verified creators are allowed. Set to `true` to allow all actions by GitHub Mark...",
					"routing": { "send": { "type": "body", "property": "verified_allowed" } }
				}
			],
			"displayOptions": {
				"show": {
					"operation": ["actions/set-allowed-actions-organization"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["actions/get-github-actions-default-workflow-permissions-organization"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["actions/set-github-actions-default-workflow-permissions-organization"],
					"resource": ["action"]
				}
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "can_approve_pull_request_reviews",
					"displayName": "Can Approve Pull Request Reviews",
					"type": "boolean",
					"default": false,
					"description": "Whether GitHub Actions can approve pull requests. Enabling this can be a security risk",
					"routing": { "send": { "type": "body", "property": "can_approve_pull_request_reviews" } }
				},
				{
					"name": "default_workflow_permissions",
					"displayName": "Default Workflow Permissions",
					"type": "string",
					"default": "",
					"description": "The default workflow permissions granted to the GITHUB_TOKEN when running workflows",
					"routing": { "send": { "type": "body", "property": "default_workflow_permissions" } }
				}
			],
			"displayOptions": {
				"show": {
					"operation": ["actions/set-github-actions-default-workflow-permissions-organization"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["actions/list-required-workflows"], "resource": ["action"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["actions/list-required-workflows"], "resource": ["action"] }
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["actions/create-required-workflow"], "resource": ["action"] }
			}
		},
		{
			"name": "repository_id",
			"displayName": "Repository ID",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The ID of the repository that contains the workflow file",
			"routing": { "send": { "type": "body", "property": "repository_id" } },
			"displayOptions": {
				"show": { "operation": ["actions/create-required-workflow"], "resource": ["action"] }
			}
		},
		{
			"name": "workflow_file_path",
			"displayName": "Workflow File Path",
			"type": "string",
			"default": "",
			"required": true,
			"description": "Path of the workflow file to be configured as a required workflow",
			"routing": { "send": { "type": "body", "property": "workflow_file_path" } },
			"displayOptions": {
				"show": { "operation": ["actions/create-required-workflow"], "resource": ["action"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "scope",
					"displayName": "Scope",
					"type": "string",
					"default": "",
					"description": "Enable the required workflow for all repositories or selected repositories in the organization",
					"routing": { "send": { "type": "body", "property": "scope" } }
				},
				{
					"name": "selected_repository_ids",
					"displayName": "Selected Repository IDs",
					"type": "json",
					"default": "{}",
					"description": "A list of repository IDs where you want to enable the required workflow. You can only provide a list of repository ids w...",
					"routing": { "send": { "type": "body", "property": "selected_repository_ids" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["actions/create-required-workflow"], "resource": ["action"] }
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["actions/delete-required-workflow"], "resource": ["action"] }
			}
		},
		{
			"name": "required_workflow_id",
			"displayName": "Required Workflow ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the required workflow",
			"displayOptions": {
				"show": { "operation": ["actions/delete-required-workflow"], "resource": ["action"] }
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["actions/get-required-workflow"], "resource": ["action"] }
			}
		},
		{
			"name": "required_workflow_id",
			"displayName": "Required Workflow ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the required workflow",
			"displayOptions": {
				"show": { "operation": ["actions/get-required-workflow"], "resource": ["action"] }
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["actions/update-required-workflow"], "resource": ["action"] }
			}
		},
		{
			"name": "required_workflow_id",
			"displayName": "Required Workflow ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the required workflow",
			"displayOptions": {
				"show": { "operation": ["actions/update-required-workflow"], "resource": ["action"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "repository_id",
					"displayName": "Repository ID",
					"type": "string",
					"default": "",
					"description": "The ID of the repository that contains the workflow file",
					"routing": { "send": { "type": "body", "property": "repository_id" } }
				},
				{
					"name": "scope",
					"displayName": "Scope",
					"type": "string",
					"default": "",
					"description": "Enable the required workflow for all repositories or selected repositories in the organization",
					"routing": { "send": { "type": "body", "property": "scope" } }
				},
				{
					"name": "selected_repository_ids",
					"displayName": "Selected Repository IDs",
					"type": "json",
					"default": "{}",
					"description": "A list of repository IDs where you want to enable the required workflow. A list of repository IDs where you want to enab...",
					"routing": { "send": { "type": "body", "property": "selected_repository_ids" } }
				},
				{
					"name": "workflow_file_path",
					"displayName": "Workflow File Path",
					"type": "string",
					"default": "",
					"description": "Path of the workflow file to be configured as a required workflow",
					"routing": { "send": { "type": "body", "property": "workflow_file_path" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["actions/update-required-workflow"], "resource": ["action"] }
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["actions/list-selected-repositories-required-workflow"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "required_workflow_id",
			"displayName": "Required Workflow ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the required workflow",
			"displayOptions": {
				"show": {
					"operation": ["actions/list-selected-repositories-required-workflow"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["actions/set-selected-repos-to-required-workflow"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "required_workflow_id",
			"displayName": "Required Workflow ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the required workflow",
			"displayOptions": {
				"show": {
					"operation": ["actions/set-selected-repos-to-required-workflow"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "selected_repository_ids",
			"displayName": "Selected Repository IDs",
			"type": "json",
			"default": "{}",
			"required": true,
			"description": "The IDs of the repositories for which the workflow should be required",
			"routing": { "send": { "type": "body", "property": "selected_repository_ids" } },
			"displayOptions": {
				"show": {
					"operation": ["actions/set-selected-repos-to-required-workflow"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["actions/remove-selected-repo-from-required-workflow"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "required_workflow_id",
			"displayName": "Required Workflow ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the required workflow",
			"displayOptions": {
				"show": {
					"operation": ["actions/remove-selected-repo-from-required-workflow"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "repository_id",
			"displayName": "Repository ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the repository",
			"displayOptions": {
				"show": {
					"operation": ["actions/remove-selected-repo-from-required-workflow"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["actions/add-selected-repo-to-required-workflow"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "required_workflow_id",
			"displayName": "Required Workflow ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the required workflow",
			"displayOptions": {
				"show": {
					"operation": ["actions/add-selected-repo-to-required-workflow"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "repository_id",
			"displayName": "Repository ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the repository",
			"displayOptions": {
				"show": {
					"operation": ["actions/add-selected-repo-to-required-workflow"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["actions/list-self-hosted-runners-for-org"],
					"resource": ["action"]
				}
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": {
					"operation": ["actions/list-self-hosted-runners-for-org"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["actions/list-runner-applications-for-org"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["actions/create-registration-token-for-org"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["actions/create-remove-token-for-org"], "resource": ["action"] }
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["actions/delete-self-hosted-runner-from-org"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "runner_id",
			"displayName": "Runner ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "Unique identifier of the self-hosted runner",
			"displayOptions": {
				"show": {
					"operation": ["actions/delete-self-hosted-runner-from-org"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["actions/get-self-hosted-runner-for-org"], "resource": ["action"] }
			}
		},
		{
			"name": "runner_id",
			"displayName": "Runner ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "Unique identifier of the self-hosted runner",
			"displayOptions": {
				"show": { "operation": ["actions/get-self-hosted-runner-for-org"], "resource": ["action"] }
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["actions/remove-all-custom-labels-from-self-hosted-runner-for-org"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "runner_id",
			"displayName": "Runner ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "Unique identifier of the self-hosted runner",
			"displayOptions": {
				"show": {
					"operation": ["actions/remove-all-custom-labels-from-self-hosted-runner-for-org"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["actions/list-labels-for-self-hosted-runner-for-org"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "runner_id",
			"displayName": "Runner ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "Unique identifier of the self-hosted runner",
			"displayOptions": {
				"show": {
					"operation": ["actions/list-labels-for-self-hosted-runner-for-org"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["actions/add-custom-labels-to-self-hosted-runner-for-org"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "runner_id",
			"displayName": "Runner ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "Unique identifier of the self-hosted runner",
			"displayOptions": {
				"show": {
					"operation": ["actions/add-custom-labels-to-self-hosted-runner-for-org"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "labels",
			"displayName": "Labels",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The names of the custom labels to add to the runner",
			"routing": { "send": { "type": "body", "property": "labels" } },
			"displayOptions": {
				"show": {
					"operation": ["actions/add-custom-labels-to-self-hosted-runner-for-org"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["actions/set-custom-labels-for-self-hosted-runner-for-org"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "runner_id",
			"displayName": "Runner ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "Unique identifier of the self-hosted runner",
			"displayOptions": {
				"show": {
					"operation": ["actions/set-custom-labels-for-self-hosted-runner-for-org"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "labels",
			"displayName": "Labels",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The names of the custom labels to set for the runner. You can pass an empty array to remove all custom labels",
			"routing": { "send": { "type": "body", "property": "labels" } },
			"displayOptions": {
				"show": {
					"operation": ["actions/set-custom-labels-for-self-hosted-runner-for-org"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["actions/remove-custom-label-from-self-hosted-runner-for-org"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "runner_id",
			"displayName": "Runner ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "Unique identifier of the self-hosted runner",
			"displayOptions": {
				"show": {
					"operation": ["actions/remove-custom-label-from-self-hosted-runner-for-org"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "name",
			"displayName": "Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of a self-hosted runner's custom label",
			"displayOptions": {
				"show": {
					"operation": ["actions/remove-custom-label-from-self-hosted-runner-for-org"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["actions/list-org-secrets"], "resource": ["action"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["actions/list-org-secrets"], "resource": ["action"] }
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["actions/get-org-public-key"], "resource": ["action"] }
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["actions/delete-org-secret"], "resource": ["action"] }
			}
		},
		{
			"name": "secret_name",
			"displayName": "Secret Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the secret",
			"displayOptions": {
				"show": { "operation": ["actions/delete-org-secret"], "resource": ["action"] }
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["actions/get-org-secret"], "resource": ["action"] }
			}
		},
		{
			"name": "secret_name",
			"displayName": "Secret Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the secret",
			"displayOptions": {
				"show": { "operation": ["actions/get-org-secret"], "resource": ["action"] }
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["actions/create-or-update-org-secret"], "resource": ["action"] }
			}
		},
		{
			"name": "secret_name",
			"displayName": "Secret Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the secret",
			"displayOptions": {
				"show": { "operation": ["actions/create-or-update-org-secret"], "resource": ["action"] }
			}
		},
		{
			"name": "visibility",
			"displayName": "Visibility",
			"type": "string",
			"default": "",
			"required": true,
			"description": "Which type of organization repositories have access to the organization secret. `selected` means only the repositories s...",
			"routing": { "send": { "type": "body", "property": "visibility" } },
			"displayOptions": {
				"show": { "operation": ["actions/create-or-update-org-secret"], "resource": ["action"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "encrypted_value",
					"displayName": "Encrypted Value",
					"type": "string",
					"default": "",
					"description": "Value for your secret, encrypted with [LibSodium](https://libsodium.gitbook.io/doc/bindings_for_other_languages) using t...",
					"routing": { "send": { "type": "body", "property": "encrypted_value" } }
				},
				{
					"name": "key_id",
					"displayName": "Key ID",
					"type": "string",
					"default": "",
					"description": "ID of the key you used to encrypt the secret",
					"routing": { "send": { "type": "body", "property": "key_id" } }
				},
				{
					"name": "selected_repository_ids",
					"displayName": "Selected Repository IDs",
					"type": "json",
					"default": "{}",
					"description": "An array of repository ids that can access the organization secret. You can only provide a list of repository ids when t...",
					"routing": { "send": { "type": "body", "property": "selected_repository_ids" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["actions/create-or-update-org-secret"], "resource": ["action"] }
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["actions/list-selected-repos-for-org-secret"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "secret_name",
			"displayName": "Secret Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the secret",
			"displayOptions": {
				"show": {
					"operation": ["actions/list-selected-repos-for-org-secret"],
					"resource": ["action"]
				}
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				},
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				}
			],
			"displayOptions": {
				"show": {
					"operation": ["actions/list-selected-repos-for-org-secret"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["actions/set-selected-repos-for-org-secret"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "secret_name",
			"displayName": "Secret Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the secret",
			"displayOptions": {
				"show": {
					"operation": ["actions/set-selected-repos-for-org-secret"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "selected_repository_ids",
			"displayName": "Selected Repository IDs",
			"type": "json",
			"default": "{}",
			"required": true,
			"description": "An array of repository ids that can access the organization secret. You can only provide a list of repository ids when t...",
			"routing": { "send": { "type": "body", "property": "selected_repository_ids" } },
			"displayOptions": {
				"show": {
					"operation": ["actions/set-selected-repos-for-org-secret"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["actions/remove-selected-repo-from-org-secret"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "secret_name",
			"displayName": "Secret Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the secret",
			"displayOptions": {
				"show": {
					"operation": ["actions/remove-selected-repo-from-org-secret"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "repository_id",
			"displayName": "Repository ID",
			"type": "number",
			"default": 0,
			"required": true,
			"displayOptions": {
				"show": {
					"operation": ["actions/remove-selected-repo-from-org-secret"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["actions/add-selected-repo-to-org-secret"], "resource": ["action"] }
			}
		},
		{
			"name": "secret_name",
			"displayName": "Secret Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the secret",
			"displayOptions": {
				"show": { "operation": ["actions/add-selected-repo-to-org-secret"], "resource": ["action"] }
			}
		},
		{
			"name": "repository_id",
			"displayName": "Repository ID",
			"type": "number",
			"default": 0,
			"required": true,
			"displayOptions": {
				"show": { "operation": ["actions/add-selected-repo-to-org-secret"], "resource": ["action"] }
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["actions/list-org-variables"], "resource": ["action"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 10,
					"description": "The number of results per page (max 30)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["actions/list-org-variables"], "resource": ["action"] }
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["actions/create-org-variable"], "resource": ["action"] }
			}
		},
		{
			"name": "name",
			"displayName": "Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the variable",
			"routing": { "send": { "type": "body", "property": "name" } },
			"displayOptions": {
				"show": { "operation": ["actions/create-org-variable"], "resource": ["action"] }
			}
		},
		{
			"name": "value",
			"displayName": "Value",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The value of the variable",
			"routing": { "send": { "type": "body", "property": "value" } },
			"displayOptions": {
				"show": { "operation": ["actions/create-org-variable"], "resource": ["action"] }
			}
		},
		{
			"name": "visibility",
			"displayName": "Visibility",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The type of repositories in the organization that can access the variable. `selected` means only the repositories specif...",
			"routing": { "send": { "type": "body", "property": "visibility" } },
			"displayOptions": {
				"show": { "operation": ["actions/create-org-variable"], "resource": ["action"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "selected_repository_ids",
					"displayName": "Selected Repository IDs",
					"type": "json",
					"default": "{}",
					"description": "An array of repository ids that can access the organization variable. You can only provide a list of repository ids when...",
					"routing": { "send": { "type": "body", "property": "selected_repository_ids" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["actions/create-org-variable"], "resource": ["action"] }
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["actions/delete-org-variable"], "resource": ["action"] }
			}
		},
		{
			"name": "name",
			"displayName": "Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the variable",
			"displayOptions": {
				"show": { "operation": ["actions/delete-org-variable"], "resource": ["action"] }
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["actions/get-org-variable"], "resource": ["action"] }
			}
		},
		{
			"name": "name",
			"displayName": "Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the variable",
			"displayOptions": {
				"show": { "operation": ["actions/get-org-variable"], "resource": ["action"] }
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["actions/update-org-variable"], "resource": ["action"] }
			}
		},
		{
			"name": "name",
			"displayName": "Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the variable",
			"displayOptions": {
				"show": { "operation": ["actions/update-org-variable"], "resource": ["action"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "name",
					"displayName": "Name",
					"type": "string",
					"default": "",
					"description": "The name of the variable",
					"routing": { "send": { "type": "body", "property": "name" } }
				},
				{
					"name": "selected_repository_ids",
					"displayName": "Selected Repository IDs",
					"type": "json",
					"default": "{}",
					"description": "An array of repository ids that can access the organization variable. You can only provide a list of repository ids when...",
					"routing": { "send": { "type": "body", "property": "selected_repository_ids" } }
				},
				{
					"name": "value",
					"displayName": "Value",
					"type": "string",
					"default": "",
					"description": "The value of the variable",
					"routing": { "send": { "type": "body", "property": "value" } }
				},
				{
					"name": "visibility",
					"displayName": "Visibility",
					"type": "string",
					"default": "",
					"description": "The type of repositories in the organization that can access the variable. `selected` means only the repositories specif...",
					"routing": { "send": { "type": "body", "property": "visibility" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["actions/update-org-variable"], "resource": ["action"] }
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["actions/list-selected-repos-for-org-variable"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "name",
			"displayName": "Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the variable",
			"displayOptions": {
				"show": {
					"operation": ["actions/list-selected-repos-for-org-variable"],
					"resource": ["action"]
				}
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				},
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				}
			],
			"displayOptions": {
				"show": {
					"operation": ["actions/list-selected-repos-for-org-variable"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["actions/set-selected-repos-for-org-variable"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "name",
			"displayName": "Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the variable",
			"displayOptions": {
				"show": {
					"operation": ["actions/set-selected-repos-for-org-variable"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "selected_repository_ids",
			"displayName": "Selected Repository IDs",
			"type": "json",
			"default": "{}",
			"required": true,
			"description": "The IDs of the repositories that can access the organization variable",
			"routing": { "send": { "type": "body", "property": "selected_repository_ids" } },
			"displayOptions": {
				"show": {
					"operation": ["actions/set-selected-repos-for-org-variable"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["actions/remove-selected-repo-from-org-variable"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "name",
			"displayName": "Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the variable",
			"displayOptions": {
				"show": {
					"operation": ["actions/remove-selected-repo-from-org-variable"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "repository_id",
			"displayName": "Repository ID",
			"type": "number",
			"default": 0,
			"required": true,
			"displayOptions": {
				"show": {
					"operation": ["actions/remove-selected-repo-from-org-variable"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["actions/add-selected-repo-to-org-variable"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "name",
			"displayName": "Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the variable",
			"displayOptions": {
				"show": {
					"operation": ["actions/add-selected-repo-to-org-variable"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "repository_id",
			"displayName": "Repository ID",
			"type": "number",
			"default": 0,
			"required": true,
			"displayOptions": {
				"show": {
					"operation": ["actions/add-selected-repo-to-org-variable"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["orgs/list-blocked-users"], "resource": ["org"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["orgs/list-blocked-users"], "resource": ["org"] }
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["orgs/unblock-user"], "resource": ["org"] } }
		},
		{
			"name": "username",
			"displayName": "Username",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The handle for the GitHub user account",
			"displayOptions": { "show": { "operation": ["orgs/unblock-user"], "resource": ["org"] } }
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["orgs/check-blocked-user"], "resource": ["org"] }
			}
		},
		{
			"name": "username",
			"displayName": "Username",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The handle for the GitHub user account",
			"displayOptions": {
				"show": { "operation": ["orgs/check-blocked-user"], "resource": ["org"] }
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["orgs/block-user"], "resource": ["org"] } }
		},
		{
			"name": "username",
			"displayName": "Username",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The handle for the GitHub user account",
			"displayOptions": { "show": { "operation": ["orgs/block-user"], "resource": ["org"] } }
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["code-scanning/list-alerts-for-org"], "resource": ["codeScanning"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "tool_name",
					"displayName": "Tool Name",
					"type": "string",
					"default": "",
					"description": "The name of a code scanning tool. Only results by this tool will be listed. You can specify the tool by using either `to...",
					"routing": { "send": { "type": "query", "property": "tool_name" } }
				},
				{
					"name": "tool_guid",
					"displayName": "Tool Guid",
					"type": "string",
					"default": "",
					"description": "The GUID of a code scanning tool. Only results by this tool will be listed. Note that some code scanning tools may not i...",
					"routing": { "send": { "type": "query", "property": "tool_guid" } }
				},
				{
					"name": "before",
					"displayName": "Before",
					"type": "string",
					"default": "",
					"description": "A cursor, as given in the [Link header](https://docs.github.com/rest/overview/resources-in-the-rest-api#link-header). If...",
					"routing": { "send": { "type": "query", "property": "before" } }
				},
				{
					"name": "after",
					"displayName": "After",
					"type": "string",
					"default": "",
					"description": "A cursor, as given in the [Link header](https://docs.github.com/rest/overview/resources-in-the-rest-api#link-header). If...",
					"routing": { "send": { "type": "query", "property": "after" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				},
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "direction",
					"displayName": "Direction",
					"type": "options",
					"default": "desc",
					"description": "The direction to sort the results by",
					"options": [{ "name": "Asc", "value": "asc" }, { "name": "Desc", "value": "desc" }],
					"routing": { "send": { "type": "query", "property": "direction" } }
				},
				{
					"name": "state",
					"displayName": "State",
					"type": "options",
					"default": "open",
					"description": "If specified, only code scanning alerts with this state will be returned",
					"options": [
						{ "name": "Open", "value": "open" },
						{ "name": "Closed", "value": "closed" },
						{ "name": "Dismissed", "value": "dismissed" },
						{ "name": "Fixed", "value": "fixed" }
					],
					"routing": { "send": { "type": "query", "property": "state" } }
				},
				{
					"name": "sort",
					"displayName": "Sort",
					"type": "options",
					"default": "created",
					"description": "The property by which to sort the results",
					"options": [
						{ "name": "Created", "value": "created" },
						{ "name": "Updated", "value": "updated" }
					],
					"routing": { "send": { "type": "query", "property": "sort" } }
				},
				{
					"name": "severity",
					"displayName": "Severity",
					"type": "options",
					"default": "critical",
					"description": "If specified, only code scanning alerts with this severity will be returned",
					"options": [
						{ "name": "Critical", "value": "critical" },
						{ "name": "High", "value": "high" },
						{ "name": "Medium", "value": "medium" },
						{ "name": "Low", "value": "low" },
						{ "name": "Warning", "value": "warning" },
						{ "name": "Note", "value": "note" },
						{ "name": "Error", "value": "error" }
					],
					"routing": { "send": { "type": "query", "property": "severity" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["code-scanning/list-alerts-for-org"], "resource": ["codeScanning"] }
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["codespaces/list-in-organization"], "resource": ["codespace"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["codespaces/list-in-organization"], "resource": ["codespace"] }
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["codespaces/set-codespaces-billing"], "resource": ["codespace"] }
			}
		},
		{
			"name": "visibility",
			"displayName": "Visibility",
			"type": "string",
			"default": "",
			"required": true,
			"description": "Which users can access codespaces in the organization. `disabled` means that no users can access codespaces in the organ...",
			"routing": { "send": { "type": "body", "property": "visibility" } },
			"displayOptions": {
				"show": { "operation": ["codespaces/set-codespaces-billing"], "resource": ["codespace"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "selected_usernames",
					"displayName": "Selected Usernames",
					"type": "string",
					"default": "",
					"description": "The usernames of the organization members who should have access to codespaces in the organization. Required when `visib...",
					"routing": { "send": { "type": "body", "property": "selected_usernames" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["codespaces/set-codespaces-billing"], "resource": ["codespace"] }
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["codespaces/delete-codespaces-billing-users"],
					"resource": ["codespace"]
				}
			}
		},
		{
			"name": "selected_usernames",
			"displayName": "Selected Usernames",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The usernames of the organization members whose codespaces should not be billed to the organization",
			"routing": { "send": { "type": "body", "property": "selected_usernames" } },
			"displayOptions": {
				"show": {
					"operation": ["codespaces/delete-codespaces-billing-users"],
					"resource": ["codespace"]
				}
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["codespaces/set-codespaces-billing-users"],
					"resource": ["codespace"]
				}
			}
		},
		{
			"name": "selected_usernames",
			"displayName": "Selected Usernames",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The usernames of the organization members whose codespaces be billed to the organization",
			"routing": { "send": { "type": "body", "property": "selected_usernames" } },
			"displayOptions": {
				"show": {
					"operation": ["codespaces/set-codespaces-billing-users"],
					"resource": ["codespace"]
				}
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["codespaces/list-org-secrets"], "resource": ["codespace"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["codespaces/list-org-secrets"], "resource": ["codespace"] }
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["codespaces/get-org-public-key"], "resource": ["codespace"] }
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["codespaces/delete-org-secret"], "resource": ["codespace"] }
			}
		},
		{
			"name": "secret_name",
			"displayName": "Secret Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the secret",
			"displayOptions": {
				"show": { "operation": ["codespaces/delete-org-secret"], "resource": ["codespace"] }
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["codespaces/get-org-secret"], "resource": ["codespace"] }
			}
		},
		{
			"name": "secret_name",
			"displayName": "Secret Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the secret",
			"displayOptions": {
				"show": { "operation": ["codespaces/get-org-secret"], "resource": ["codespace"] }
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["codespaces/create-or-update-org-secret"],
					"resource": ["codespace"]
				}
			}
		},
		{
			"name": "secret_name",
			"displayName": "Secret Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the secret",
			"displayOptions": {
				"show": {
					"operation": ["codespaces/create-or-update-org-secret"],
					"resource": ["codespace"]
				}
			}
		},
		{
			"name": "visibility",
			"displayName": "Visibility",
			"type": "string",
			"default": "",
			"required": true,
			"description": "Which type of organization repositories have access to the organization secret. `selected` means only the repositories s...",
			"routing": { "send": { "type": "body", "property": "visibility" } },
			"displayOptions": {
				"show": {
					"operation": ["codespaces/create-or-update-org-secret"],
					"resource": ["codespace"]
				}
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "encrypted_value",
					"displayName": "Encrypted Value",
					"type": "string",
					"default": "",
					"description": "The value for your secret, encrypted with [LibSodium](https://libsodium.gitbook.io/doc/bindings_for_other_languages) usi...",
					"routing": { "send": { "type": "body", "property": "encrypted_value" } }
				},
				{
					"name": "key_id",
					"displayName": "Key ID",
					"type": "string",
					"default": "",
					"description": "The ID of the key you used to encrypt the secret",
					"routing": { "send": { "type": "body", "property": "key_id" } }
				},
				{
					"name": "selected_repository_ids",
					"displayName": "Selected Repository IDs",
					"type": "json",
					"default": "{}",
					"description": "An array of repository IDs that can access the organization secret. You can only provide a list of repository IDs when t...",
					"routing": { "send": { "type": "body", "property": "selected_repository_ids" } }
				}
			],
			"displayOptions": {
				"show": {
					"operation": ["codespaces/create-or-update-org-secret"],
					"resource": ["codespace"]
				}
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["codespaces/list-selected-repos-for-org-secret"],
					"resource": ["codespace"]
				}
			}
		},
		{
			"name": "secret_name",
			"displayName": "Secret Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the secret",
			"displayOptions": {
				"show": {
					"operation": ["codespaces/list-selected-repos-for-org-secret"],
					"resource": ["codespace"]
				}
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				},
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				}
			],
			"displayOptions": {
				"show": {
					"operation": ["codespaces/list-selected-repos-for-org-secret"],
					"resource": ["codespace"]
				}
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["codespaces/set-selected-repos-for-org-secret"],
					"resource": ["codespace"]
				}
			}
		},
		{
			"name": "secret_name",
			"displayName": "Secret Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the secret",
			"displayOptions": {
				"show": {
					"operation": ["codespaces/set-selected-repos-for-org-secret"],
					"resource": ["codespace"]
				}
			}
		},
		{
			"name": "selected_repository_ids",
			"displayName": "Selected Repository IDs",
			"type": "json",
			"default": "{}",
			"required": true,
			"description": "An array of repository ids that can access the organization secret. You can only provide a list of repository ids when t...",
			"routing": { "send": { "type": "body", "property": "selected_repository_ids" } },
			"displayOptions": {
				"show": {
					"operation": ["codespaces/set-selected-repos-for-org-secret"],
					"resource": ["codespace"]
				}
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["codespaces/remove-selected-repo-from-org-secret"],
					"resource": ["codespace"]
				}
			}
		},
		{
			"name": "secret_name",
			"displayName": "Secret Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the secret",
			"displayOptions": {
				"show": {
					"operation": ["codespaces/remove-selected-repo-from-org-secret"],
					"resource": ["codespace"]
				}
			}
		},
		{
			"name": "repository_id",
			"displayName": "Repository ID",
			"type": "number",
			"default": 0,
			"required": true,
			"displayOptions": {
				"show": {
					"operation": ["codespaces/remove-selected-repo-from-org-secret"],
					"resource": ["codespace"]
				}
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["codespaces/add-selected-repo-to-org-secret"],
					"resource": ["codespace"]
				}
			}
		},
		{
			"name": "secret_name",
			"displayName": "Secret Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the secret",
			"displayOptions": {
				"show": {
					"operation": ["codespaces/add-selected-repo-to-org-secret"],
					"resource": ["codespace"]
				}
			}
		},
		{
			"name": "repository_id",
			"displayName": "Repository ID",
			"type": "number",
			"default": 0,
			"required": true,
			"displayOptions": {
				"show": {
					"operation": ["codespaces/add-selected-repo-to-org-secret"],
					"resource": ["codespace"]
				}
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["dependabot/list-alerts-for-org"], "resource": ["dependabot"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "state",
					"displayName": "State",
					"type": "string",
					"default": "",
					"description": "A comma-separated list of states. If specified, only alerts with these states will be returned.  Can be: `dismissed`, `f...",
					"routing": { "send": { "type": "query", "property": "state" } }
				},
				{
					"name": "severity",
					"displayName": "Severity",
					"type": "string",
					"default": "",
					"description": "A comma-separated list of severities. If specified, only alerts with these severities will be returned.  Can be: `low`, ...",
					"routing": { "send": { "type": "query", "property": "severity" } }
				},
				{
					"name": "ecosystem",
					"displayName": "Ecosystem",
					"type": "string",
					"default": "",
					"description": "A comma-separated list of ecosystems. If specified, only alerts for these ecosystems will be returned.  Can be: `compose...",
					"routing": { "send": { "type": "query", "property": "ecosystem" } }
				},
				{
					"name": "package",
					"displayName": "Package",
					"type": "string",
					"default": "",
					"description": "A comma-separated list of package names. If specified, only alerts for these packages will be returned",
					"routing": { "send": { "type": "query", "property": "package" } }
				},
				{
					"name": "scope",
					"displayName": "Scope",
					"type": "options",
					"default": "development",
					"description": "The scope of the vulnerable dependency. If specified, only alerts with this scope will be returned",
					"options": [
						{ "name": "Development", "value": "development" },
						{ "name": "Runtime", "value": "runtime" }
					],
					"routing": { "send": { "type": "query", "property": "scope" } }
				},
				{
					"name": "sort",
					"displayName": "Sort",
					"type": "options",
					"default": "created",
					"description": "The property by which to sort the results. `created` means when the alert was created. `updated` means when the alert's ...",
					"options": [
						{ "name": "Created", "value": "created" },
						{ "name": "Updated", "value": "updated" }
					],
					"routing": { "send": { "type": "query", "property": "sort" } }
				},
				{
					"name": "direction",
					"displayName": "Direction",
					"type": "options",
					"default": "desc",
					"description": "The direction to sort the results by",
					"options": [{ "name": "Asc", "value": "asc" }, { "name": "Desc", "value": "desc" }],
					"routing": { "send": { "type": "query", "property": "direction" } }
				},
				{
					"name": "before",
					"displayName": "Before",
					"type": "string",
					"default": "",
					"description": "A cursor, as given in the [Link header](https://docs.github.com/rest/overview/resources-in-the-rest-api#link-header). If...",
					"routing": { "send": { "type": "query", "property": "before" } }
				},
				{
					"name": "after",
					"displayName": "After",
					"type": "string",
					"default": "",
					"description": "A cursor, as given in the [Link header](https://docs.github.com/rest/overview/resources-in-the-rest-api#link-header). If...",
					"routing": { "send": { "type": "query", "property": "after" } }
				},
				{
					"name": "first",
					"displayName": "First",
					"type": "number",
					"default": 30,
					"description": "**Deprecated**. The number of results per page (max 100), starting from the first matching result. This parameter must n...",
					"routing": { "send": { "type": "query", "property": "first" } }
				},
				{
					"name": "last",
					"displayName": "Last",
					"type": "number",
					"default": 0,
					"description": "**Deprecated**. The number of results per page (max 100), starting from the last matching result. This parameter must no...",
					"routing": { "send": { "type": "query", "property": "last" } }
				},
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["dependabot/list-alerts-for-org"], "resource": ["dependabot"] }
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["dependabot/list-org-secrets"], "resource": ["dependabot"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["dependabot/list-org-secrets"], "resource": ["dependabot"] }
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["dependabot/get-org-public-key"], "resource": ["dependabot"] }
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["dependabot/delete-org-secret"], "resource": ["dependabot"] }
			}
		},
		{
			"name": "secret_name",
			"displayName": "Secret Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the secret",
			"displayOptions": {
				"show": { "operation": ["dependabot/delete-org-secret"], "resource": ["dependabot"] }
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["dependabot/get-org-secret"], "resource": ["dependabot"] }
			}
		},
		{
			"name": "secret_name",
			"displayName": "Secret Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the secret",
			"displayOptions": {
				"show": { "operation": ["dependabot/get-org-secret"], "resource": ["dependabot"] }
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["dependabot/create-or-update-org-secret"],
					"resource": ["dependabot"]
				}
			}
		},
		{
			"name": "secret_name",
			"displayName": "Secret Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the secret",
			"displayOptions": {
				"show": {
					"operation": ["dependabot/create-or-update-org-secret"],
					"resource": ["dependabot"]
				}
			}
		},
		{
			"name": "visibility",
			"displayName": "Visibility",
			"type": "string",
			"default": "",
			"required": true,
			"description": "Which type of organization repositories have access to the organization secret. `selected` means only the repositories s...",
			"routing": { "send": { "type": "body", "property": "visibility" } },
			"displayOptions": {
				"show": {
					"operation": ["dependabot/create-or-update-org-secret"],
					"resource": ["dependabot"]
				}
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "encrypted_value",
					"displayName": "Encrypted Value",
					"type": "string",
					"default": "",
					"description": "Value for your secret, encrypted with [LibSodium](https://libsodium.gitbook.io/doc/bindings_for_other_languages) using t...",
					"routing": { "send": { "type": "body", "property": "encrypted_value" } }
				},
				{
					"name": "key_id",
					"displayName": "Key ID",
					"type": "string",
					"default": "",
					"description": "ID of the key you used to encrypt the secret",
					"routing": { "send": { "type": "body", "property": "key_id" } }
				},
				{
					"name": "selected_repository_ids",
					"displayName": "Selected Repository IDs",
					"type": "string",
					"default": "",
					"description": "An array of repository ids that can access the organization secret. You can only provide a list of repository ids when t...",
					"routing": { "send": { "type": "body", "property": "selected_repository_ids" } }
				}
			],
			"displayOptions": {
				"show": {
					"operation": ["dependabot/create-or-update-org-secret"],
					"resource": ["dependabot"]
				}
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["dependabot/list-selected-repos-for-org-secret"],
					"resource": ["dependabot"]
				}
			}
		},
		{
			"name": "secret_name",
			"displayName": "Secret Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the secret",
			"displayOptions": {
				"show": {
					"operation": ["dependabot/list-selected-repos-for-org-secret"],
					"resource": ["dependabot"]
				}
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				},
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				}
			],
			"displayOptions": {
				"show": {
					"operation": ["dependabot/list-selected-repos-for-org-secret"],
					"resource": ["dependabot"]
				}
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["dependabot/set-selected-repos-for-org-secret"],
					"resource": ["dependabot"]
				}
			}
		},
		{
			"name": "secret_name",
			"displayName": "Secret Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the secret",
			"displayOptions": {
				"show": {
					"operation": ["dependabot/set-selected-repos-for-org-secret"],
					"resource": ["dependabot"]
				}
			}
		},
		{
			"name": "selected_repository_ids",
			"displayName": "Selected Repository IDs",
			"type": "json",
			"default": "{}",
			"required": true,
			"description": "An array of repository ids that can access the organization secret. You can only provide a list of repository ids when t...",
			"routing": { "send": { "type": "body", "property": "selected_repository_ids" } },
			"displayOptions": {
				"show": {
					"operation": ["dependabot/set-selected-repos-for-org-secret"],
					"resource": ["dependabot"]
				}
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["dependabot/remove-selected-repo-from-org-secret"],
					"resource": ["dependabot"]
				}
			}
		},
		{
			"name": "secret_name",
			"displayName": "Secret Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the secret",
			"displayOptions": {
				"show": {
					"operation": ["dependabot/remove-selected-repo-from-org-secret"],
					"resource": ["dependabot"]
				}
			}
		},
		{
			"name": "repository_id",
			"displayName": "Repository ID",
			"type": "number",
			"default": 0,
			"required": true,
			"displayOptions": {
				"show": {
					"operation": ["dependabot/remove-selected-repo-from-org-secret"],
					"resource": ["dependabot"]
				}
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["dependabot/add-selected-repo-to-org-secret"],
					"resource": ["dependabot"]
				}
			}
		},
		{
			"name": "secret_name",
			"displayName": "Secret Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the secret",
			"displayOptions": {
				"show": {
					"operation": ["dependabot/add-selected-repo-to-org-secret"],
					"resource": ["dependabot"]
				}
			}
		},
		{
			"name": "repository_id",
			"displayName": "Repository ID",
			"type": "number",
			"default": 0,
			"required": true,
			"displayOptions": {
				"show": {
					"operation": ["dependabot/add-selected-repo-to-org-secret"],
					"resource": ["dependabot"]
				}
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["activity/list-public-org-events"], "resource": ["activity"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["activity/list-public-org-events"], "resource": ["activity"] }
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["orgs/list-failed-invitations"], "resource": ["org"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["orgs/list-failed-invitations"], "resource": ["org"] }
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["orgs/list-webhooks"], "resource": ["org"] } }
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": { "show": { "operation": ["orgs/list-webhooks"], "resource": ["org"] } }
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["orgs/create-webhook"], "resource": ["org"] } }
		},
		{
			"name": "config",
			"displayName": "Config",
			"type": "json",
			"default": "{}",
			"required": true,
			"description": "Key/value pairs to provide settings for this webhook. [These are defined below](https://docs.github.com/rest/reference/o...",
			"routing": { "send": { "type": "body", "property": "config" } },
			"displayOptions": { "show": { "operation": ["orgs/create-webhook"], "resource": ["org"] } }
		},
		{
			"name": "name",
			"displayName": "Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "Must be passed as \"web\"",
			"routing": { "send": { "type": "body", "property": "name" } },
			"displayOptions": { "show": { "operation": ["orgs/create-webhook"], "resource": ["org"] } }
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "active",
					"displayName": "Active",
					"type": "boolean",
					"default": false,
					"description": "Determines if notifications are sent when the webhook is triggered. Set to `true` to send notifications",
					"routing": { "send": { "type": "body", "property": "active" } }
				},
				{
					"name": "events",
					"displayName": "Events",
					"type": "string",
					"default": "",
					"description": "Determines what [events](https://docs.github.com/webhooks/event-payloads) the hook is triggered for. Set to `[\"*\"]` to r...",
					"routing": { "send": { "type": "body", "property": "events" } }
				}
			],
			"displayOptions": { "show": { "operation": ["orgs/create-webhook"], "resource": ["org"] } }
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["orgs/delete-webhook"], "resource": ["org"] } }
		},
		{
			"name": "hook_id",
			"displayName": "Hook ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the hook",
			"displayOptions": { "show": { "operation": ["orgs/delete-webhook"], "resource": ["org"] } }
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["orgs/get-webhook"], "resource": ["org"] } }
		},
		{
			"name": "hook_id",
			"displayName": "Hook ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the hook",
			"displayOptions": { "show": { "operation": ["orgs/get-webhook"], "resource": ["org"] } }
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["orgs/update-webhook"], "resource": ["org"] } }
		},
		{
			"name": "hook_id",
			"displayName": "Hook ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the hook",
			"displayOptions": { "show": { "operation": ["orgs/update-webhook"], "resource": ["org"] } }
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "active",
					"displayName": "Active",
					"type": "boolean",
					"default": false,
					"description": "Determines if notifications are sent when the webhook is triggered. Set to `true` to send notifications",
					"routing": { "send": { "type": "body", "property": "active" } }
				},
				{
					"name": "config",
					"displayName": "Config",
					"type": "json",
					"default": "{}",
					"description": "Key/value pairs to provide settings for this webhook. [These are defined below](https://docs.github.com/rest/reference/o...",
					"routing": { "send": { "type": "body", "property": "config" } }
				},
				{
					"name": "events",
					"displayName": "Events",
					"type": "string",
					"default": "",
					"description": "Determines what [events](https://docs.github.com/webhooks/event-payloads) the hook is triggered for",
					"routing": { "send": { "type": "body", "property": "events" } }
				},
				{
					"name": "name",
					"displayName": "Name",
					"type": "string",
					"default": "",
					"placeholder": "e.g. \"web\"",
					"routing": { "send": { "type": "body", "property": "name" } }
				}
			],
			"displayOptions": { "show": { "operation": ["orgs/update-webhook"], "resource": ["org"] } }
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["orgs/get-webhook-config-for-org"], "resource": ["org"] }
			}
		},
		{
			"name": "hook_id",
			"displayName": "Hook ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the hook",
			"displayOptions": {
				"show": { "operation": ["orgs/get-webhook-config-for-org"], "resource": ["org"] }
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["orgs/update-webhook-config-for-org"], "resource": ["org"] }
			}
		},
		{
			"name": "hook_id",
			"displayName": "Hook ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the hook",
			"displayOptions": {
				"show": { "operation": ["orgs/update-webhook-config-for-org"], "resource": ["org"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "content_type",
					"displayName": "Content Type",
					"type": "string",
					"default": "",
					"description": "The media type used to serialize the payloads. Supported values include `json` and `form`. The default is `form`",
					"placeholder": "e.g. \"json\"",
					"routing": { "send": { "type": "body", "property": "content_type" } }
				},
				{
					"name": "insecure_ssl",
					"displayName": "Insecure Ssl",
					"type": "string",
					"default": "",
					"description": "Determines whether the SSL certificate of the host for `url` will be verified when delivering payloads. Supported values...",
					"placeholder": "e.g. \"0\"",
					"routing": { "send": { "type": "body", "property": "insecure_ssl" } }
				},
				{
					"name": "secret",
					"displayName": "Secret",
					"type": "string",
					"default": "",
					"description": "If provided, the `secret` will be used as the `key` to generate the HMAC hex digest value for [delivery signature header...",
					"placeholder": "e.g. \"********\"",
					"routing": { "send": { "type": "body", "property": "secret" } }
				},
				{
					"name": "url",
					"displayName": "URL",
					"type": "string",
					"default": "",
					"description": "The URL to which the payloads will be delivered",
					"placeholder": "e.g. https://example.com/webhook",
					"routing": { "send": { "type": "body", "property": "url" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["orgs/update-webhook-config-for-org"], "resource": ["org"] }
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["orgs/list-webhook-deliveries"], "resource": ["org"] }
			}
		},
		{
			"name": "hook_id",
			"displayName": "Hook ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the hook",
			"displayOptions": {
				"show": { "operation": ["orgs/list-webhook-deliveries"], "resource": ["org"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "cursor",
					"displayName": "Cursor",
					"type": "string",
					"default": "",
					"description": "Used for pagination: the starting delivery from which the page of deliveries is fetched. Refer to the `link` header for ...",
					"routing": { "send": { "type": "query", "property": "cursor" } }
				},
				{
					"name": "redelivery",
					"displayName": "Redelivery",
					"type": "boolean",
					"default": false,
					"routing": { "send": { "type": "query", "property": "redelivery" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["orgs/list-webhook-deliveries"], "resource": ["org"] }
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["orgs/get-webhook-delivery"], "resource": ["org"] }
			}
		},
		{
			"name": "hook_id",
			"displayName": "Hook ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the hook",
			"displayOptions": {
				"show": { "operation": ["orgs/get-webhook-delivery"], "resource": ["org"] }
			}
		},
		{
			"name": "delivery_id",
			"displayName": "Delivery ID",
			"type": "number",
			"default": 0,
			"required": true,
			"displayOptions": {
				"show": { "operation": ["orgs/get-webhook-delivery"], "resource": ["org"] }
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["orgs/redeliver-webhook-delivery"], "resource": ["org"] }
			}
		},
		{
			"name": "hook_id",
			"displayName": "Hook ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the hook",
			"displayOptions": {
				"show": { "operation": ["orgs/redeliver-webhook-delivery"], "resource": ["org"] }
			}
		},
		{
			"name": "delivery_id",
			"displayName": "Delivery ID",
			"type": "number",
			"default": 0,
			"required": true,
			"displayOptions": {
				"show": { "operation": ["orgs/redeliver-webhook-delivery"], "resource": ["org"] }
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["orgs/ping-webhook"], "resource": ["org"] } }
		},
		{
			"name": "hook_id",
			"displayName": "Hook ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the hook",
			"displayOptions": { "show": { "operation": ["orgs/ping-webhook"], "resource": ["org"] } }
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["apps/get-org-installation"], "resource": ["app"] }
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["orgs/list-app-installations"], "resource": ["org"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["orgs/list-app-installations"], "resource": ["org"] }
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["interactions/remove-restrictions-for-org"],
					"resource": ["interaction"]
				}
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["interactions/get-restrictions-for-org"],
					"resource": ["interaction"]
				}
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["interactions/set-restrictions-for-org"],
					"resource": ["interaction"]
				}
			}
		},
		{
			"name": "limit",
			"displayName": "Limit",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The type of GitHub user that can comment, open issues, or create pull requests while the interaction limit is in effect",
			"placeholder": "e.g. collaborators_only",
			"routing": { "send": { "type": "body", "property": "limit" } },
			"displayOptions": {
				"show": {
					"operation": ["interactions/set-restrictions-for-org"],
					"resource": ["interaction"]
				}
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "expiry",
					"displayName": "Expiry",
					"type": "string",
					"default": "",
					"description": "The duration of the interaction restriction. Default: `one_day`",
					"placeholder": "e.g. one_month",
					"routing": { "send": { "type": "body", "property": "expiry" } }
				}
			],
			"displayOptions": {
				"show": {
					"operation": ["interactions/set-restrictions-for-org"],
					"resource": ["interaction"]
				}
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["orgs/list-pending-invitations"], "resource": ["org"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				},
				{
					"name": "role",
					"displayName": "Role",
					"type": "options",
					"default": "all",
					"description": "Filter invitations by their member role",
					"options": [
						{ "name": "All", "value": "all" },
						{ "name": "Admin", "value": "admin" },
						{ "name": "Direct Member", "value": "direct_member" },
						{ "name": "Billing Manager", "value": "billing_manager" },
						{ "name": "Hiring Manager", "value": "hiring_manager" }
					],
					"routing": { "send": { "type": "query", "property": "role" } }
				},
				{
					"name": "invitation_source",
					"displayName": "Invitation Source",
					"type": "options",
					"default": "all",
					"description": "Filter invitations by their invitation source",
					"options": [
						{ "name": "All", "value": "all" },
						{ "name": "Member", "value": "member" },
						{ "name": "Scim", "value": "scim" }
					],
					"routing": { "send": { "type": "query", "property": "invitation_source" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["orgs/list-pending-invitations"], "resource": ["org"] }
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["orgs/create-invitation"], "resource": ["org"] } }
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "email",
					"displayName": "Email",
					"type": "string",
					"default": "",
					"description": "**Required unless you provide `invitee_id`**. Email address of the person you are inviting, which can be an existing Git...",
					"routing": { "send": { "type": "body", "property": "email" } }
				},
				{
					"name": "invitee_id",
					"displayName": "Invitee ID",
					"type": "number",
					"default": 0,
					"description": "**Required unless you provide `email`**. GitHub user ID for the person you are inviting",
					"routing": { "send": { "type": "body", "property": "invitee_id" } }
				},
				{
					"name": "role",
					"displayName": "Role",
					"type": "string",
					"default": "",
					"description": "The role for the new member.   * `admin` - Organization owners with full administrative rights to the organization and c...",
					"routing": { "send": { "type": "body", "property": "role" } }
				},
				{
					"name": "team_ids",
					"displayName": "Team IDs",
					"type": "json",
					"default": "{}",
					"description": "Specify IDs for the teams you want to invite new members to",
					"routing": { "send": { "type": "body", "property": "team_ids" } }
				}
			],
			"displayOptions": { "show": { "operation": ["orgs/create-invitation"], "resource": ["org"] } }
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["orgs/cancel-invitation"], "resource": ["org"] } }
		},
		{
			"name": "invitation_id",
			"displayName": "Invitation ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the invitation",
			"displayOptions": { "show": { "operation": ["orgs/cancel-invitation"], "resource": ["org"] } }
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["orgs/list-invitation-teams"], "resource": ["org"] }
			}
		},
		{
			"name": "invitation_id",
			"displayName": "Invitation ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the invitation",
			"displayOptions": {
				"show": { "operation": ["orgs/list-invitation-teams"], "resource": ["org"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["orgs/list-invitation-teams"], "resource": ["org"] }
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["issues/list-for-org"], "resource": ["issue"] } }
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "filter",
					"displayName": "Filter",
					"type": "options",
					"default": "assigned",
					"description": "Indicates which sorts of issues to return. `assigned` means issues assigned to you. `created` means issues created by yo...",
					"options": [
						{ "name": "Assigned", "value": "assigned" },
						{ "name": "Created", "value": "created" },
						{ "name": "Mentioned", "value": "mentioned" },
						{ "name": "Subscribed", "value": "subscribed" },
						{ "name": "Repos", "value": "repos" },
						{ "name": "All", "value": "all" }
					],
					"routing": { "send": { "type": "query", "property": "filter" } }
				},
				{
					"name": "state",
					"displayName": "State",
					"type": "options",
					"default": "open",
					"description": "Indicates the state of the issues to return",
					"options": [
						{ "name": "Open", "value": "open" },
						{ "name": "Closed", "value": "closed" },
						{ "name": "All", "value": "all" }
					],
					"routing": { "send": { "type": "query", "property": "state" } }
				},
				{
					"name": "labels",
					"displayName": "Labels",
					"type": "string",
					"default": "",
					"description": "A list of comma separated label names. Example: `bug,ui,@high`",
					"routing": { "send": { "type": "query", "property": "labels" } }
				},
				{
					"name": "sort",
					"displayName": "Sort",
					"type": "options",
					"default": "created",
					"description": "What to sort results by",
					"options": [
						{ "name": "Created", "value": "created" },
						{ "name": "Updated", "value": "updated" },
						{ "name": "Comments", "value": "comments" }
					],
					"routing": { "send": { "type": "query", "property": "sort" } }
				},
				{
					"name": "direction",
					"displayName": "Direction",
					"type": "options",
					"default": "desc",
					"description": "The direction to sort the results by",
					"options": [{ "name": "Asc", "value": "asc" }, { "name": "Desc", "value": "desc" }],
					"routing": { "send": { "type": "query", "property": "direction" } }
				},
				{
					"name": "since",
					"displayName": "Since",
					"type": "string",
					"default": "",
					"description": "Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/IS...",
					"routing": { "send": { "type": "query", "property": "since" } }
				},
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": { "show": { "operation": ["issues/list-for-org"], "resource": ["issue"] } }
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["orgs/list-members"], "resource": ["org"] } }
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "filter",
					"displayName": "Filter",
					"type": "options",
					"default": "all",
					"description": "Filter members returned in the list. `2fa_disabled` means that only members without [two-factor authentication](https://...",
					"options": [
						{ "name": "2fa Disabled", "value": "2fa_disabled" },
						{ "name": "All", "value": "all" }
					],
					"routing": { "send": { "type": "query", "property": "filter" } }
				},
				{
					"name": "role",
					"displayName": "Role",
					"type": "options",
					"default": "all",
					"description": "Filter members returned by their role",
					"options": [
						{ "name": "All", "value": "all" },
						{ "name": "Admin", "value": "admin" },
						{ "name": "Member", "value": "member" }
					],
					"routing": { "send": { "type": "query", "property": "role" } }
				},
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": { "show": { "operation": ["orgs/list-members"], "resource": ["org"] } }
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["orgs/remove-member"], "resource": ["org"] } }
		},
		{
			"name": "username",
			"displayName": "Username",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The handle for the GitHub user account",
			"displayOptions": { "show": { "operation": ["orgs/remove-member"], "resource": ["org"] } }
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["orgs/check-membership-for-user"], "resource": ["org"] }
			}
		},
		{
			"name": "username",
			"displayName": "Username",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The handle for the GitHub user account",
			"displayOptions": {
				"show": { "operation": ["orgs/check-membership-for-user"], "resource": ["org"] }
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["codespaces/get-codespaces-for-user-in-org"],
					"resource": ["codespace"]
				}
			}
		},
		{
			"name": "username",
			"displayName": "Username",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The handle for the GitHub user account",
			"displayOptions": {
				"show": {
					"operation": ["codespaces/get-codespaces-for-user-in-org"],
					"resource": ["codespace"]
				}
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": {
					"operation": ["codespaces/get-codespaces-for-user-in-org"],
					"resource": ["codespace"]
				}
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["codespaces/delete-from-organization"], "resource": ["codespace"] }
			}
		},
		{
			"name": "username",
			"displayName": "Username",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The handle for the GitHub user account",
			"displayOptions": {
				"show": { "operation": ["codespaces/delete-from-organization"], "resource": ["codespace"] }
			}
		},
		{
			"name": "codespace_name",
			"displayName": "Codespace Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the codespace",
			"displayOptions": {
				"show": { "operation": ["codespaces/delete-from-organization"], "resource": ["codespace"] }
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["codespaces/stop-in-organization"], "resource": ["codespace"] }
			}
		},
		{
			"name": "username",
			"displayName": "Username",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The handle for the GitHub user account",
			"displayOptions": {
				"show": { "operation": ["codespaces/stop-in-organization"], "resource": ["codespace"] }
			}
		},
		{
			"name": "codespace_name",
			"displayName": "Codespace Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the codespace",
			"displayOptions": {
				"show": { "operation": ["codespaces/stop-in-organization"], "resource": ["codespace"] }
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["orgs/remove-membership-for-user"], "resource": ["org"] }
			}
		},
		{
			"name": "username",
			"displayName": "Username",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The handle for the GitHub user account",
			"displayOptions": {
				"show": { "operation": ["orgs/remove-membership-for-user"], "resource": ["org"] }
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["orgs/get-membership-for-user"], "resource": ["org"] }
			}
		},
		{
			"name": "username",
			"displayName": "Username",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The handle for the GitHub user account",
			"displayOptions": {
				"show": { "operation": ["orgs/get-membership-for-user"], "resource": ["org"] }
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["orgs/set-membership-for-user"], "resource": ["org"] }
			}
		},
		{
			"name": "username",
			"displayName": "Username",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The handle for the GitHub user account",
			"displayOptions": {
				"show": { "operation": ["orgs/set-membership-for-user"], "resource": ["org"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "role",
					"displayName": "Role",
					"type": "string",
					"default": "",
					"description": "The role to give the user in the organization. Can be one of:    * `admin` - The user will become an owner of the organi...",
					"routing": { "send": { "type": "body", "property": "role" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["orgs/set-membership-for-user"], "resource": ["org"] }
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["migrations/list-for-org"], "resource": ["migration"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				},
				{
					"name": "exclude",
					"displayName": "Exclude",
					"type": "string",
					"default": "",
					"description": "Exclude attributes from the API response to improve performance",
					"routing": { "send": { "type": "query", "property": "exclude" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["migrations/list-for-org"], "resource": ["migration"] }
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["migrations/start-for-org"], "resource": ["migration"] }
			}
		},
		{
			"name": "repositories",
			"displayName": "Repositories",
			"type": "string",
			"default": "",
			"required": true,
			"description": "A list of arrays indicating which repositories should be migrated",
			"routing": { "send": { "type": "body", "property": "repositories" } },
			"displayOptions": {
				"show": { "operation": ["migrations/start-for-org"], "resource": ["migration"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "exclude",
					"displayName": "Exclude",
					"type": "string",
					"default": "",
					"description": "Exclude related items from being returned in the response in order to improve performance of the request. The array can ...",
					"routing": { "send": { "type": "body", "property": "exclude" } }
				},
				{
					"name": "exclude_attachments",
					"displayName": "Exclude Attachments",
					"type": "boolean",
					"default": false,
					"description": "Indicates whether attachments should be excluded from the migration (to reduce migration archive file size)",
					"routing": { "send": { "type": "body", "property": "exclude_attachments" } }
				},
				{
					"name": "exclude_git_data",
					"displayName": "Exclude Git Data",
					"type": "boolean",
					"default": false,
					"description": "Indicates whether the repository git data should be excluded from the migration",
					"routing": { "send": { "type": "body", "property": "exclude_git_data" } }
				},
				{
					"name": "exclude_metadata",
					"displayName": "Exclude Metadata",
					"type": "boolean",
					"default": false,
					"description": "Indicates whether metadata should be excluded and only git source should be included for the migration",
					"routing": { "send": { "type": "body", "property": "exclude_metadata" } }
				},
				{
					"name": "exclude_owner_projects",
					"displayName": "Exclude Owner Projects",
					"type": "boolean",
					"default": false,
					"description": "Indicates whether projects owned by the organization or users should be excluded. from the migration",
					"routing": { "send": { "type": "body", "property": "exclude_owner_projects" } }
				},
				{
					"name": "exclude_releases",
					"displayName": "Exclude Releases",
					"type": "boolean",
					"default": false,
					"description": "Indicates whether releases should be excluded from the migration (to reduce migration archive file size)",
					"routing": { "send": { "type": "body", "property": "exclude_releases" } }
				},
				{
					"name": "lock_repositories",
					"displayName": "Lock Repositories",
					"type": "boolean",
					"default": false,
					"description": "Indicates whether repositories should be locked (to prevent manipulation) while migrating data",
					"routing": { "send": { "type": "body", "property": "lock_repositories" } }
				},
				{
					"name": "org_metadata_only",
					"displayName": "Org Metadata Only",
					"type": "boolean",
					"default": false,
					"description": "Indicates whether this should only include organization metadata (repositories array should be empty and will ignore oth...",
					"routing": { "send": { "type": "body", "property": "org_metadata_only" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["migrations/start-for-org"], "resource": ["migration"] }
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["migrations/get-status-for-org"], "resource": ["migration"] }
			}
		},
		{
			"name": "migration_id",
			"displayName": "Migration ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the migration",
			"displayOptions": {
				"show": { "operation": ["migrations/get-status-for-org"], "resource": ["migration"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "exclude",
					"displayName": "Exclude",
					"type": "string",
					"default": "",
					"description": "Exclude attributes from the API response to improve performance",
					"routing": { "send": { "type": "query", "property": "exclude" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["migrations/get-status-for-org"], "resource": ["migration"] }
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["migrations/delete-archive-for-org"], "resource": ["migration"] }
			}
		},
		{
			"name": "migration_id",
			"displayName": "Migration ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the migration",
			"displayOptions": {
				"show": { "operation": ["migrations/delete-archive-for-org"], "resource": ["migration"] }
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["migrations/download-archive-for-org"], "resource": ["migration"] }
			}
		},
		{
			"name": "migration_id",
			"displayName": "Migration ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the migration",
			"displayOptions": {
				"show": { "operation": ["migrations/download-archive-for-org"], "resource": ["migration"] }
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["migrations/unlock-repo-for-org"], "resource": ["migration"] }
			}
		},
		{
			"name": "migration_id",
			"displayName": "Migration ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the migration",
			"displayOptions": {
				"show": { "operation": ["migrations/unlock-repo-for-org"], "resource": ["migration"] }
			}
		},
		{
			"name": "repo_name",
			"displayName": "Repo Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "repo_name parameter",
			"displayOptions": {
				"show": { "operation": ["migrations/unlock-repo-for-org"], "resource": ["migration"] }
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["migrations/list-repos-for-org"], "resource": ["migration"] }
			}
		},
		{
			"name": "migration_id",
			"displayName": "Migration ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the migration",
			"displayOptions": {
				"show": { "operation": ["migrations/list-repos-for-org"], "resource": ["migration"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["migrations/list-repos-for-org"], "resource": ["migration"] }
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["orgs/list-outside-collaborators"], "resource": ["org"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "filter",
					"displayName": "Filter",
					"type": "options",
					"default": "all",
					"description": "Filter the list of outside collaborators. `2fa_disabled` means that only outside collaborators without [two-factor authe...",
					"options": [
						{ "name": "2fa Disabled", "value": "2fa_disabled" },
						{ "name": "All", "value": "all" }
					],
					"routing": { "send": { "type": "query", "property": "filter" } }
				},
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["orgs/list-outside-collaborators"], "resource": ["org"] }
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["orgs/remove-outside-collaborator"], "resource": ["org"] }
			}
		},
		{
			"name": "username",
			"displayName": "Username",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The handle for the GitHub user account",
			"displayOptions": {
				"show": { "operation": ["orgs/remove-outside-collaborator"], "resource": ["org"] }
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["orgs/convert-member-to-outside-collaborator"],
					"resource": ["org"]
				}
			}
		},
		{
			"name": "username",
			"displayName": "Username",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The handle for the GitHub user account",
			"displayOptions": {
				"show": {
					"operation": ["orgs/convert-member-to-outside-collaborator"],
					"resource": ["org"]
				}
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "async",
					"displayName": "Async",
					"type": "boolean",
					"default": false,
					"description": "When set to `true`, the request will be performed asynchronously. Returns a 202 status code when the job is successfully...",
					"routing": { "send": { "type": "body", "property": "async" } }
				}
			],
			"displayOptions": {
				"show": {
					"operation": ["orgs/convert-member-to-outside-collaborator"],
					"resource": ["org"]
				}
			}
		},
		{
			"name": "package_type",
			"displayName": "Package Type",
			"type": "options",
			"default": "npm",
			"required": true,
			"description": "The type of supported package. Packages in GitHub's Gradle registry have the type `maven`. Docker images pushed to GitHu...",
			"options": [
				{ "name": "Npm", "value": "npm" },
				{ "name": "Maven", "value": "maven" },
				{ "name": "Rubygems", "value": "rubygems" },
				{ "name": "Docker", "value": "docker" },
				{ "name": "Nuget", "value": "nuget" },
				{ "name": "Container", "value": "container" }
			],
			"routing": { "send": { "type": "query", "property": "package_type" } },
			"displayOptions": {
				"show": {
					"operation": ["packages/list-packages-for-organization"],
					"resource": ["package"]
				}
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["packages/list-packages-for-organization"],
					"resource": ["package"]
				}
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "visibility",
					"displayName": "Visibility",
					"type": "options",
					"default": "public",
					"description": "The selected visibility of the packages.  This parameter is optional and only filters an existing result set.  The `inte...",
					"options": [
						{ "name": "Public", "value": "public" },
						{ "name": "Private", "value": "private" },
						{ "name": "Internal", "value": "internal" }
					],
					"routing": { "send": { "type": "query", "property": "visibility" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				},
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				}
			],
			"displayOptions": {
				"show": {
					"operation": ["packages/list-packages-for-organization"],
					"resource": ["package"]
				}
			}
		},
		{
			"name": "package_type",
			"displayName": "Package Type",
			"type": "options",
			"default": "npm",
			"required": true,
			"description": "The type of supported package. Packages in GitHub's Gradle registry have the type `maven`. Docker images pushed to GitHu...",
			"options": [
				{ "name": "Npm", "value": "npm" },
				{ "name": "Maven", "value": "maven" },
				{ "name": "Rubygems", "value": "rubygems" },
				{ "name": "Docker", "value": "docker" },
				{ "name": "Nuget", "value": "nuget" },
				{ "name": "Container", "value": "container" }
			],
			"displayOptions": {
				"show": { "operation": ["packages/delete-package-for-org"], "resource": ["package"] }
			}
		},
		{
			"name": "package_name",
			"displayName": "Package Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the package",
			"displayOptions": {
				"show": { "operation": ["packages/delete-package-for-org"], "resource": ["package"] }
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["packages/delete-package-for-org"], "resource": ["package"] }
			}
		},
		{
			"name": "package_type",
			"displayName": "Package Type",
			"type": "options",
			"default": "npm",
			"required": true,
			"description": "The type of supported package. Packages in GitHub's Gradle registry have the type `maven`. Docker images pushed to GitHu...",
			"options": [
				{ "name": "Npm", "value": "npm" },
				{ "name": "Maven", "value": "maven" },
				{ "name": "Rubygems", "value": "rubygems" },
				{ "name": "Docker", "value": "docker" },
				{ "name": "Nuget", "value": "nuget" },
				{ "name": "Container", "value": "container" }
			],
			"displayOptions": {
				"show": { "operation": ["packages/get-package-for-organization"], "resource": ["package"] }
			}
		},
		{
			"name": "package_name",
			"displayName": "Package Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the package",
			"displayOptions": {
				"show": { "operation": ["packages/get-package-for-organization"], "resource": ["package"] }
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["packages/get-package-for-organization"], "resource": ["package"] }
			}
		},
		{
			"name": "package_type",
			"displayName": "Package Type",
			"type": "options",
			"default": "npm",
			"required": true,
			"description": "The type of supported package. Packages in GitHub's Gradle registry have the type `maven`. Docker images pushed to GitHu...",
			"options": [
				{ "name": "Npm", "value": "npm" },
				{ "name": "Maven", "value": "maven" },
				{ "name": "Rubygems", "value": "rubygems" },
				{ "name": "Docker", "value": "docker" },
				{ "name": "Nuget", "value": "nuget" },
				{ "name": "Container", "value": "container" }
			],
			"displayOptions": {
				"show": { "operation": ["packages/restore-package-for-org"], "resource": ["package"] }
			}
		},
		{
			"name": "package_name",
			"displayName": "Package Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the package",
			"displayOptions": {
				"show": { "operation": ["packages/restore-package-for-org"], "resource": ["package"] }
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["packages/restore-package-for-org"], "resource": ["package"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "token",
					"displayName": "Token",
					"type": "string",
					"default": "",
					"description": "package token",
					"routing": { "send": { "type": "query", "property": "token" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["packages/restore-package-for-org"], "resource": ["package"] }
			}
		},
		{
			"name": "package_type",
			"displayName": "Package Type",
			"type": "options",
			"default": "npm",
			"required": true,
			"description": "The type of supported package. Packages in GitHub's Gradle registry have the type `maven`. Docker images pushed to GitHu...",
			"options": [
				{ "name": "Npm", "value": "npm" },
				{ "name": "Maven", "value": "maven" },
				{ "name": "Rubygems", "value": "rubygems" },
				{ "name": "Docker", "value": "docker" },
				{ "name": "Nuget", "value": "nuget" },
				{ "name": "Container", "value": "container" }
			],
			"displayOptions": {
				"show": {
					"operation": ["packages/get-all-package-versions-for-package-owned-by-org"],
					"resource": ["package"]
				}
			}
		},
		{
			"name": "package_name",
			"displayName": "Package Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the package",
			"displayOptions": {
				"show": {
					"operation": ["packages/get-all-package-versions-for-package-owned-by-org"],
					"resource": ["package"]
				}
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["packages/get-all-package-versions-for-package-owned-by-org"],
					"resource": ["package"]
				}
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				},
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "state",
					"displayName": "State",
					"type": "options",
					"default": "active",
					"description": "The state of the package, either active or deleted",
					"options": [
						{ "name": "Active", "value": "active" },
						{ "name": "Deleted", "value": "deleted" }
					],
					"routing": { "send": { "type": "query", "property": "state" } }
				}
			],
			"displayOptions": {
				"show": {
					"operation": ["packages/get-all-package-versions-for-package-owned-by-org"],
					"resource": ["package"]
				}
			}
		},
		{
			"name": "package_type",
			"displayName": "Package Type",
			"type": "options",
			"default": "npm",
			"required": true,
			"description": "The type of supported package. Packages in GitHub's Gradle registry have the type `maven`. Docker images pushed to GitHu...",
			"options": [
				{ "name": "Npm", "value": "npm" },
				{ "name": "Maven", "value": "maven" },
				{ "name": "Rubygems", "value": "rubygems" },
				{ "name": "Docker", "value": "docker" },
				{ "name": "Nuget", "value": "nuget" },
				{ "name": "Container", "value": "container" }
			],
			"displayOptions": {
				"show": {
					"operation": ["packages/delete-package-version-for-org"],
					"resource": ["package"]
				}
			}
		},
		{
			"name": "package_name",
			"displayName": "Package Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the package",
			"displayOptions": {
				"show": {
					"operation": ["packages/delete-package-version-for-org"],
					"resource": ["package"]
				}
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["packages/delete-package-version-for-org"],
					"resource": ["package"]
				}
			}
		},
		{
			"name": "package_version_id",
			"displayName": "Package Version ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "Unique identifier of the package version",
			"displayOptions": {
				"show": {
					"operation": ["packages/delete-package-version-for-org"],
					"resource": ["package"]
				}
			}
		},
		{
			"name": "package_type",
			"displayName": "Package Type",
			"type": "options",
			"default": "npm",
			"required": true,
			"description": "The type of supported package. Packages in GitHub's Gradle registry have the type `maven`. Docker images pushed to GitHu...",
			"options": [
				{ "name": "Npm", "value": "npm" },
				{ "name": "Maven", "value": "maven" },
				{ "name": "Rubygems", "value": "rubygems" },
				{ "name": "Docker", "value": "docker" },
				{ "name": "Nuget", "value": "nuget" },
				{ "name": "Container", "value": "container" }
			],
			"displayOptions": {
				"show": {
					"operation": ["packages/get-package-version-for-organization"],
					"resource": ["package"]
				}
			}
		},
		{
			"name": "package_name",
			"displayName": "Package Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the package",
			"displayOptions": {
				"show": {
					"operation": ["packages/get-package-version-for-organization"],
					"resource": ["package"]
				}
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["packages/get-package-version-for-organization"],
					"resource": ["package"]
				}
			}
		},
		{
			"name": "package_version_id",
			"displayName": "Package Version ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "Unique identifier of the package version",
			"displayOptions": {
				"show": {
					"operation": ["packages/get-package-version-for-organization"],
					"resource": ["package"]
				}
			}
		},
		{
			"name": "package_type",
			"displayName": "Package Type",
			"type": "options",
			"default": "npm",
			"required": true,
			"description": "The type of supported package. Packages in GitHub's Gradle registry have the type `maven`. Docker images pushed to GitHu...",
			"options": [
				{ "name": "Npm", "value": "npm" },
				{ "name": "Maven", "value": "maven" },
				{ "name": "Rubygems", "value": "rubygems" },
				{ "name": "Docker", "value": "docker" },
				{ "name": "Nuget", "value": "nuget" },
				{ "name": "Container", "value": "container" }
			],
			"displayOptions": {
				"show": {
					"operation": ["packages/restore-package-version-for-org"],
					"resource": ["package"]
				}
			}
		},
		{
			"name": "package_name",
			"displayName": "Package Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the package",
			"displayOptions": {
				"show": {
					"operation": ["packages/restore-package-version-for-org"],
					"resource": ["package"]
				}
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["packages/restore-package-version-for-org"],
					"resource": ["package"]
				}
			}
		},
		{
			"name": "package_version_id",
			"displayName": "Package Version ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "Unique identifier of the package version",
			"displayOptions": {
				"show": {
					"operation": ["packages/restore-package-version-for-org"],
					"resource": ["package"]
				}
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["projects/list-for-org"], "resource": ["project"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "state",
					"displayName": "State",
					"type": "options",
					"default": "open",
					"description": "Indicates the state of the projects to return",
					"options": [
						{ "name": "Open", "value": "open" },
						{ "name": "Closed", "value": "closed" },
						{ "name": "All", "value": "all" }
					],
					"routing": { "send": { "type": "query", "property": "state" } }
				},
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["projects/list-for-org"], "resource": ["project"] }
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["projects/create-for-org"], "resource": ["project"] }
			}
		},
		{
			"name": "name",
			"displayName": "Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the project",
			"routing": { "send": { "type": "body", "property": "name" } },
			"displayOptions": {
				"show": { "operation": ["projects/create-for-org"], "resource": ["project"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "body",
					"displayName": "Body",
					"type": "string",
					"default": "",
					"description": "The description of the project",
					"routing": { "send": { "type": "body", "property": "body" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["projects/create-for-org"], "resource": ["project"] }
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["orgs/list-public-members"], "resource": ["org"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["orgs/list-public-members"], "resource": ["org"] }
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["orgs/remove-public-membership-for-authenticated-user"],
					"resource": ["org"]
				}
			}
		},
		{
			"name": "username",
			"displayName": "Username",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The handle for the GitHub user account",
			"displayOptions": {
				"show": {
					"operation": ["orgs/remove-public-membership-for-authenticated-user"],
					"resource": ["org"]
				}
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["orgs/check-public-membership-for-user"], "resource": ["org"] }
			}
		},
		{
			"name": "username",
			"displayName": "Username",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The handle for the GitHub user account",
			"displayOptions": {
				"show": { "operation": ["orgs/check-public-membership-for-user"], "resource": ["org"] }
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["orgs/set-public-membership-for-authenticated-user"],
					"resource": ["org"]
				}
			}
		},
		{
			"name": "username",
			"displayName": "Username",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The handle for the GitHub user account",
			"displayOptions": {
				"show": {
					"operation": ["orgs/set-public-membership-for-authenticated-user"],
					"resource": ["org"]
				}
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["repos/list-for-org"], "resource": ["repo"] } }
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "type",
					"displayName": "Type",
					"type": "options",
					"default": "all",
					"description": "Specifies the types of repositories you want returned",
					"options": [
						{ "name": "All", "value": "all" },
						{ "name": "Public", "value": "public" },
						{ "name": "Private", "value": "private" },
						{ "name": "Forks", "value": "forks" },
						{ "name": "Sources", "value": "sources" },
						{ "name": "Member", "value": "member" }
					],
					"routing": { "send": { "type": "query", "property": "type" } }
				},
				{
					"name": "sort",
					"displayName": "Sort",
					"type": "options",
					"default": "created",
					"description": "The property to sort the results by",
					"options": [
						{ "name": "Created", "value": "created" },
						{ "name": "Updated", "value": "updated" },
						{ "name": "Pushed", "value": "pushed" },
						{ "name": "Full Name", "value": "full_name" }
					],
					"routing": { "send": { "type": "query", "property": "sort" } }
				},
				{
					"name": "direction",
					"displayName": "Direction",
					"type": "options",
					"default": "asc",
					"description": "The order to sort by. Default: `asc` when using `full_name`, otherwise `desc`",
					"options": [{ "name": "Asc", "value": "asc" }, { "name": "Desc", "value": "desc" }],
					"routing": { "send": { "type": "query", "property": "direction" } }
				},
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": { "show": { "operation": ["repos/list-for-org"], "resource": ["repo"] } }
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["repos/create-in-org"], "resource": ["repo"] } }
		},
		{
			"name": "name",
			"displayName": "Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository",
			"routing": { "send": { "type": "body", "property": "name" } },
			"displayOptions": { "show": { "operation": ["repos/create-in-org"], "resource": ["repo"] } }
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "allow_auto_merge",
					"displayName": "Allow Auto Merge",
					"type": "boolean",
					"default": false,
					"description": "Either `true` to allow auto-merge on pull requests, or `false` to disallow auto-merge",
					"routing": { "send": { "type": "body", "property": "allow_auto_merge" } }
				},
				{
					"name": "allow_merge_commit",
					"displayName": "Allow Merge Commit",
					"type": "boolean",
					"default": false,
					"description": "Either `true` to allow merging pull requests with a merge commit, or `false` to prevent merging pull requests with merge...",
					"routing": { "send": { "type": "body", "property": "allow_merge_commit" } }
				},
				{
					"name": "allow_rebase_merge",
					"displayName": "Allow Rebase Merge",
					"type": "boolean",
					"default": false,
					"description": "Either `true` to allow rebase-merging pull requests, or `false` to prevent rebase-merging",
					"routing": { "send": { "type": "body", "property": "allow_rebase_merge" } }
				},
				{
					"name": "allow_squash_merge",
					"displayName": "Allow Squash Merge",
					"type": "boolean",
					"default": false,
					"description": "Either `true` to allow squash-merging pull requests, or `false` to prevent squash-merging",
					"routing": { "send": { "type": "body", "property": "allow_squash_merge" } }
				},
				{
					"name": "auto_init",
					"displayName": "Auto Init",
					"type": "boolean",
					"default": false,
					"description": "Pass `true` to create an initial commit with empty README",
					"routing": { "send": { "type": "body", "property": "auto_init" } }
				},
				{
					"name": "delete_branch_on_merge",
					"displayName": "Delete Branch On Merge",
					"type": "boolean",
					"default": false,
					"description": "Either `true` to allow automatically deleting head branches when pull requests are merged, or `false` to prevent automat...",
					"routing": { "send": { "type": "body", "property": "delete_branch_on_merge" } }
				},
				{
					"name": "description",
					"displayName": "Description",
					"type": "string",
					"default": "",
					"description": "A short description of the repository",
					"routing": { "send": { "type": "body", "property": "description" } }
				},
				{
					"name": "gitignore_template",
					"displayName": "Gitignore Template",
					"type": "string",
					"default": "",
					"description": "Desired language or platform [.gitignore template](https://github.com/github/gitignore) to apply. Use the name of the te...",
					"routing": { "send": { "type": "body", "property": "gitignore_template" } }
				},
				{
					"name": "has_downloads",
					"displayName": "Has Downloads",
					"type": "boolean",
					"default": false,
					"description": "Whether downloads are enabled",
					"routing": { "send": { "type": "body", "property": "has_downloads" } }
				},
				{
					"name": "has_issues",
					"displayName": "Has Issues",
					"type": "boolean",
					"default": false,
					"description": "Either `true` to enable issues for this repository or `false` to disable them",
					"routing": { "send": { "type": "body", "property": "has_issues" } }
				},
				{
					"name": "has_projects",
					"displayName": "Has Projects",
					"type": "boolean",
					"default": false,
					"description": "Either `true` to enable projects for this repository or `false` to disable them. **Note:** If you're creating a reposito...",
					"routing": { "send": { "type": "body", "property": "has_projects" } }
				},
				{
					"name": "has_wiki",
					"displayName": "Has Wiki",
					"type": "boolean",
					"default": false,
					"description": "Either `true` to enable the wiki for this repository or `false` to disable it",
					"routing": { "send": { "type": "body", "property": "has_wiki" } }
				},
				{
					"name": "homepage",
					"displayName": "Homepage",
					"type": "string",
					"default": "",
					"description": "A URL with more information about the repository",
					"routing": { "send": { "type": "body", "property": "homepage" } }
				},
				{
					"name": "is_template",
					"displayName": "Is Template",
					"type": "boolean",
					"default": false,
					"description": "Either `true` to make this repo available as a template repository or `false` to prevent it",
					"routing": { "send": { "type": "body", "property": "is_template" } }
				},
				{
					"name": "license_template",
					"displayName": "License Template",
					"type": "string",
					"default": "",
					"description": "Choose an [open source license template](https://choosealicense.com/) that best suits your needs, and then use the [lice...",
					"routing": { "send": { "type": "body", "property": "license_template" } }
				},
				{
					"name": "merge_commit_message",
					"displayName": "Merge Commit Message",
					"type": "string",
					"default": "",
					"description": "The default value for a merge commit message.  - `PR_TITLE` - default to the pull request's title. - `PR_BODY` - default...",
					"routing": { "send": { "type": "body", "property": "merge_commit_message" } }
				},
				{
					"name": "merge_commit_title",
					"displayName": "Merge Commit Title",
					"type": "string",
					"default": "",
					"description": "The default value for a merge commit title.  - `PR_TITLE` - default to the pull request's title. - `MERGE_MESSAGE` - def...",
					"routing": { "send": { "type": "body", "property": "merge_commit_title" } }
				},
				{
					"name": "private",
					"displayName": "Private",
					"type": "boolean",
					"default": false,
					"description": "Whether the repository is private",
					"routing": { "send": { "type": "body", "property": "private" } }
				},
				{
					"name": "squash_merge_commit_message",
					"displayName": "Squash Merge Commit Message",
					"type": "string",
					"default": "",
					"description": "The default value for a squash merge commit message:  - `PR_BODY` - default to the pull request's body. - `COMMIT_MESSAG...",
					"routing": { "send": { "type": "body", "property": "squash_merge_commit_message" } }
				},
				{
					"name": "squash_merge_commit_title",
					"displayName": "Squash Merge Commit Title",
					"type": "string",
					"default": "",
					"description": "The default value for a squash merge commit title:  - `PR_TITLE` - default to the pull request's title. - `COMMIT_OR_PR_...",
					"routing": { "send": { "type": "body", "property": "squash_merge_commit_title" } }
				},
				{
					"name": "team_id",
					"displayName": "Team ID",
					"type": "number",
					"default": 0,
					"description": "The id of the team that will be granted access to this repository. This is only valid when creating a repository in an o...",
					"routing": { "send": { "type": "body", "property": "team_id" } }
				},
				{
					"name": "use_squash_pr_title_as_default",
					"displayName": "Use Squash Pr Title As Default",
					"type": "boolean",
					"default": false,
					"description": "Either `true` to allow squash-merge commits to use pull request title, or `false` to use commit message. **This property...",
					"routing": { "send": { "type": "body", "property": "use_squash_pr_title_as_default" } }
				},
				{
					"name": "visibility",
					"displayName": "Visibility",
					"type": "string",
					"default": "",
					"description": "The visibility of the repository",
					"routing": { "send": { "type": "body", "property": "visibility" } }
				}
			],
			"displayOptions": { "show": { "operation": ["repos/create-in-org"], "resource": ["repo"] } }
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["secret-scanning/list-alerts-for-org"],
					"resource": ["secretScanning"]
				}
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "state",
					"displayName": "State",
					"type": "options",
					"default": "open",
					"description": "Set to `open` or `resolved` to only list secret scanning alerts in a specific state",
					"options": [
						{ "name": "Open", "value": "open" },
						{ "name": "Resolved", "value": "resolved" }
					],
					"routing": { "send": { "type": "query", "property": "state" } }
				},
				{
					"name": "secret_type",
					"displayName": "Secret Type",
					"type": "string",
					"default": "",
					"description": "A comma-separated list of secret types to return. By default all secret types are returned. See \"[Secret scanning patter...",
					"routing": { "send": { "type": "query", "property": "secret_type" } }
				},
				{
					"name": "resolution",
					"displayName": "Resolution",
					"type": "string",
					"default": "",
					"description": "A comma-separated list of resolutions. Only secret scanning alerts with one of these resolutions are listed. Valid resol...",
					"routing": { "send": { "type": "query", "property": "resolution" } }
				},
				{
					"name": "sort",
					"displayName": "Sort",
					"type": "options",
					"default": "created",
					"description": "The property to sort the results by. `created` means when the alert was created. `updated` means when the alert was upda...",
					"options": [
						{ "name": "Created", "value": "created" },
						{ "name": "Updated", "value": "updated" }
					],
					"routing": { "send": { "type": "query", "property": "sort" } }
				},
				{
					"name": "direction",
					"displayName": "Direction",
					"type": "options",
					"default": "desc",
					"description": "The direction to sort the results by",
					"options": [{ "name": "Asc", "value": "asc" }, { "name": "Desc", "value": "desc" }],
					"routing": { "send": { "type": "query", "property": "direction" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				},
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "before",
					"displayName": "Before",
					"type": "string",
					"default": "",
					"description": "A cursor, as given in the [Link header](https://docs.github.com/rest/overview/resources-in-the-rest-api#link-header). If...",
					"routing": { "send": { "type": "query", "property": "before" } }
				},
				{
					"name": "after",
					"displayName": "After",
					"type": "string",
					"default": "",
					"description": "A cursor, as given in the [Link header](https://docs.github.com/rest/overview/resources-in-the-rest-api#link-header). If...",
					"routing": { "send": { "type": "query", "property": "after" } }
				}
			],
			"displayOptions": {
				"show": {
					"operation": ["secret-scanning/list-alerts-for-org"],
					"resource": ["secretScanning"]
				}
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["orgs/list-security-manager-teams"], "resource": ["org"] }
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["orgs/remove-security-manager-team"], "resource": ["org"] }
			}
		},
		{
			"name": "team_slug",
			"displayName": "Team Slug",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The slug of the team name",
			"displayOptions": {
				"show": { "operation": ["orgs/remove-security-manager-team"], "resource": ["org"] }
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["orgs/add-security-manager-team"], "resource": ["org"] }
			}
		},
		{
			"name": "team_slug",
			"displayName": "Team Slug",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The slug of the team name",
			"displayOptions": {
				"show": { "operation": ["orgs/add-security-manager-team"], "resource": ["org"] }
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["billing/get-github-actions-billing-org"], "resource": ["billing"] }
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["billing/get-github-packages-billing-org"],
					"resource": ["billing"]
				}
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["billing/get-shared-storage-billing-org"], "resource": ["billing"] }
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["teams/list"], "resource": ["team"] } }
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": { "show": { "operation": ["teams/list"], "resource": ["team"] } }
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["teams/create"], "resource": ["team"] } }
		},
		{
			"name": "name",
			"displayName": "Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the team",
			"routing": { "send": { "type": "body", "property": "name" } },
			"displayOptions": { "show": { "operation": ["teams/create"], "resource": ["team"] } }
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "description",
					"displayName": "Description",
					"type": "string",
					"default": "",
					"description": "The description of the team",
					"routing": { "send": { "type": "body", "property": "description" } }
				},
				{
					"name": "maintainers",
					"displayName": "Maintainers",
					"type": "string",
					"default": "",
					"description": "List GitHub IDs for organization members who will become team maintainers",
					"routing": { "send": { "type": "body", "property": "maintainers" } }
				},
				{
					"name": "parent_team_id",
					"displayName": "Parent Team ID",
					"type": "number",
					"default": 0,
					"description": "The ID of a team to set as the parent team",
					"routing": { "send": { "type": "body", "property": "parent_team_id" } }
				},
				{
					"name": "permission",
					"displayName": "Permission",
					"type": "string",
					"default": "",
					"description": "**Deprecated**. The permission that new repositories will be added to the team with when none is specified",
					"routing": { "send": { "type": "body", "property": "permission" } }
				},
				{
					"name": "privacy",
					"displayName": "Privacy",
					"type": "string",
					"default": "",
					"description": "The level of privacy this team should have. The options are:   **For a non-nested team:**    * `secret` - only visible t...",
					"routing": { "send": { "type": "body", "property": "privacy" } }
				},
				{
					"name": "repo_names",
					"displayName": "Repo Names",
					"type": "string",
					"default": "",
					"description": "The full name (e.g., \"organization-name/repository-name\") of repositories to add the team to",
					"routing": { "send": { "type": "body", "property": "repo_names" } }
				}
			],
			"displayOptions": { "show": { "operation": ["teams/create"], "resource": ["team"] } }
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["teams/delete-in-org"], "resource": ["team"] } }
		},
		{
			"name": "team_slug",
			"displayName": "Team Slug",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The slug of the team name",
			"displayOptions": { "show": { "operation": ["teams/delete-in-org"], "resource": ["team"] } }
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["teams/get-by-name"], "resource": ["team"] } }
		},
		{
			"name": "team_slug",
			"displayName": "Team Slug",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The slug of the team name",
			"displayOptions": { "show": { "operation": ["teams/get-by-name"], "resource": ["team"] } }
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["teams/update-in-org"], "resource": ["team"] } }
		},
		{
			"name": "team_slug",
			"displayName": "Team Slug",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The slug of the team name",
			"displayOptions": { "show": { "operation": ["teams/update-in-org"], "resource": ["team"] } }
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "description",
					"displayName": "Description",
					"type": "string",
					"default": "",
					"description": "The description of the team",
					"routing": { "send": { "type": "body", "property": "description" } }
				},
				{
					"name": "name",
					"displayName": "Name",
					"type": "string",
					"default": "",
					"description": "The name of the team",
					"routing": { "send": { "type": "body", "property": "name" } }
				},
				{
					"name": "parent_team_id",
					"displayName": "Parent Team ID",
					"type": "number",
					"default": 0,
					"description": "The ID of a team to set as the parent team",
					"routing": { "send": { "type": "body", "property": "parent_team_id" } }
				},
				{
					"name": "permission",
					"displayName": "Permission",
					"type": "string",
					"default": "",
					"description": "**Deprecated**. The permission that new repositories will be added to the team with when none is specified",
					"routing": { "send": { "type": "body", "property": "permission" } }
				},
				{
					"name": "privacy",
					"displayName": "Privacy",
					"type": "string",
					"default": "",
					"description": "The level of privacy this team should have. Editing teams without specifying this parameter leaves `privacy` intact. Whe...",
					"routing": { "send": { "type": "body", "property": "privacy" } }
				}
			],
			"displayOptions": { "show": { "operation": ["teams/update-in-org"], "resource": ["team"] } }
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["teams/list-discussions-in-org"], "resource": ["team"] }
			}
		},
		{
			"name": "team_slug",
			"displayName": "Team Slug",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The slug of the team name",
			"displayOptions": {
				"show": { "operation": ["teams/list-discussions-in-org"], "resource": ["team"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "direction",
					"displayName": "Direction",
					"type": "options",
					"default": "desc",
					"description": "The direction to sort the results by",
					"options": [{ "name": "Asc", "value": "asc" }, { "name": "Desc", "value": "desc" }],
					"routing": { "send": { "type": "query", "property": "direction" } }
				},
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				},
				{
					"name": "pinned",
					"displayName": "Pinned",
					"type": "string",
					"default": "",
					"description": "Pinned discussions only filter",
					"routing": { "send": { "type": "query", "property": "pinned" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["teams/list-discussions-in-org"], "resource": ["team"] }
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["teams/create-discussion-in-org"], "resource": ["team"] }
			}
		},
		{
			"name": "team_slug",
			"displayName": "Team Slug",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The slug of the team name",
			"displayOptions": {
				"show": { "operation": ["teams/create-discussion-in-org"], "resource": ["team"] }
			}
		},
		{
			"name": "body",
			"displayName": "Body",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The discussion post's body text",
			"routing": { "send": { "type": "body", "property": "body" } },
			"displayOptions": {
				"show": { "operation": ["teams/create-discussion-in-org"], "resource": ["team"] }
			}
		},
		{
			"name": "title",
			"displayName": "Title",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The discussion post's title",
			"routing": { "send": { "type": "body", "property": "title" } },
			"displayOptions": {
				"show": { "operation": ["teams/create-discussion-in-org"], "resource": ["team"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "private",
					"displayName": "Private",
					"type": "boolean",
					"default": false,
					"description": "Private posts are only visible to team members, organization owners, and team maintainers. Public posts are visible to a...",
					"routing": { "send": { "type": "body", "property": "private" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["teams/create-discussion-in-org"], "resource": ["team"] }
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["teams/delete-discussion-in-org"], "resource": ["team"] }
			}
		},
		{
			"name": "team_slug",
			"displayName": "Team Slug",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The slug of the team name",
			"displayOptions": {
				"show": { "operation": ["teams/delete-discussion-in-org"], "resource": ["team"] }
			}
		},
		{
			"name": "discussion_number",
			"displayName": "Discussion Number",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The number that identifies the discussion",
			"displayOptions": {
				"show": { "operation": ["teams/delete-discussion-in-org"], "resource": ["team"] }
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["teams/get-discussion-in-org"], "resource": ["team"] }
			}
		},
		{
			"name": "team_slug",
			"displayName": "Team Slug",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The slug of the team name",
			"displayOptions": {
				"show": { "operation": ["teams/get-discussion-in-org"], "resource": ["team"] }
			}
		},
		{
			"name": "discussion_number",
			"displayName": "Discussion Number",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The number that identifies the discussion",
			"displayOptions": {
				"show": { "operation": ["teams/get-discussion-in-org"], "resource": ["team"] }
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["teams/update-discussion-in-org"], "resource": ["team"] }
			}
		},
		{
			"name": "team_slug",
			"displayName": "Team Slug",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The slug of the team name",
			"displayOptions": {
				"show": { "operation": ["teams/update-discussion-in-org"], "resource": ["team"] }
			}
		},
		{
			"name": "discussion_number",
			"displayName": "Discussion Number",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The number that identifies the discussion",
			"displayOptions": {
				"show": { "operation": ["teams/update-discussion-in-org"], "resource": ["team"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "body",
					"displayName": "Body",
					"type": "string",
					"default": "",
					"description": "The discussion post's body text",
					"routing": { "send": { "type": "body", "property": "body" } }
				},
				{
					"name": "title",
					"displayName": "Title",
					"type": "string",
					"default": "",
					"description": "The discussion post's title",
					"routing": { "send": { "type": "body", "property": "title" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["teams/update-discussion-in-org"], "resource": ["team"] }
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["teams/list-discussion-comments-in-org"], "resource": ["team"] }
			}
		},
		{
			"name": "team_slug",
			"displayName": "Team Slug",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The slug of the team name",
			"displayOptions": {
				"show": { "operation": ["teams/list-discussion-comments-in-org"], "resource": ["team"] }
			}
		},
		{
			"name": "discussion_number",
			"displayName": "Discussion Number",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The number that identifies the discussion",
			"displayOptions": {
				"show": { "operation": ["teams/list-discussion-comments-in-org"], "resource": ["team"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "direction",
					"displayName": "Direction",
					"type": "options",
					"default": "desc",
					"description": "The direction to sort the results by",
					"options": [{ "name": "Asc", "value": "asc" }, { "name": "Desc", "value": "desc" }],
					"routing": { "send": { "type": "query", "property": "direction" } }
				},
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["teams/list-discussion-comments-in-org"], "resource": ["team"] }
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["teams/create-discussion-comment-in-org"], "resource": ["team"] }
			}
		},
		{
			"name": "team_slug",
			"displayName": "Team Slug",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The slug of the team name",
			"displayOptions": {
				"show": { "operation": ["teams/create-discussion-comment-in-org"], "resource": ["team"] }
			}
		},
		{
			"name": "discussion_number",
			"displayName": "Discussion Number",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The number that identifies the discussion",
			"displayOptions": {
				"show": { "operation": ["teams/create-discussion-comment-in-org"], "resource": ["team"] }
			}
		},
		{
			"name": "body",
			"displayName": "Body",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The discussion comment's body text",
			"routing": { "send": { "type": "body", "property": "body" } },
			"displayOptions": {
				"show": { "operation": ["teams/create-discussion-comment-in-org"], "resource": ["team"] }
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["teams/delete-discussion-comment-in-org"], "resource": ["team"] }
			}
		},
		{
			"name": "team_slug",
			"displayName": "Team Slug",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The slug of the team name",
			"displayOptions": {
				"show": { "operation": ["teams/delete-discussion-comment-in-org"], "resource": ["team"] }
			}
		},
		{
			"name": "discussion_number",
			"displayName": "Discussion Number",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The number that identifies the discussion",
			"displayOptions": {
				"show": { "operation": ["teams/delete-discussion-comment-in-org"], "resource": ["team"] }
			}
		},
		{
			"name": "comment_number",
			"displayName": "Comment Number",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The number that identifies the comment",
			"displayOptions": {
				"show": { "operation": ["teams/delete-discussion-comment-in-org"], "resource": ["team"] }
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["teams/get-discussion-comment-in-org"], "resource": ["team"] }
			}
		},
		{
			"name": "team_slug",
			"displayName": "Team Slug",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The slug of the team name",
			"displayOptions": {
				"show": { "operation": ["teams/get-discussion-comment-in-org"], "resource": ["team"] }
			}
		},
		{
			"name": "discussion_number",
			"displayName": "Discussion Number",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The number that identifies the discussion",
			"displayOptions": {
				"show": { "operation": ["teams/get-discussion-comment-in-org"], "resource": ["team"] }
			}
		},
		{
			"name": "comment_number",
			"displayName": "Comment Number",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The number that identifies the comment",
			"displayOptions": {
				"show": { "operation": ["teams/get-discussion-comment-in-org"], "resource": ["team"] }
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["teams/update-discussion-comment-in-org"], "resource": ["team"] }
			}
		},
		{
			"name": "team_slug",
			"displayName": "Team Slug",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The slug of the team name",
			"displayOptions": {
				"show": { "operation": ["teams/update-discussion-comment-in-org"], "resource": ["team"] }
			}
		},
		{
			"name": "discussion_number",
			"displayName": "Discussion Number",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The number that identifies the discussion",
			"displayOptions": {
				"show": { "operation": ["teams/update-discussion-comment-in-org"], "resource": ["team"] }
			}
		},
		{
			"name": "comment_number",
			"displayName": "Comment Number",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The number that identifies the comment",
			"displayOptions": {
				"show": { "operation": ["teams/update-discussion-comment-in-org"], "resource": ["team"] }
			}
		},
		{
			"name": "body",
			"displayName": "Body",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The discussion comment's body text",
			"routing": { "send": { "type": "body", "property": "body" } },
			"displayOptions": {
				"show": { "operation": ["teams/update-discussion-comment-in-org"], "resource": ["team"] }
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["reactions/list-for-team-discussion-comment-in-org"],
					"resource": ["reaction"]
				}
			}
		},
		{
			"name": "team_slug",
			"displayName": "Team Slug",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The slug of the team name",
			"displayOptions": {
				"show": {
					"operation": ["reactions/list-for-team-discussion-comment-in-org"],
					"resource": ["reaction"]
				}
			}
		},
		{
			"name": "discussion_number",
			"displayName": "Discussion Number",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The number that identifies the discussion",
			"displayOptions": {
				"show": {
					"operation": ["reactions/list-for-team-discussion-comment-in-org"],
					"resource": ["reaction"]
				}
			}
		},
		{
			"name": "comment_number",
			"displayName": "Comment Number",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The number that identifies the comment",
			"displayOptions": {
				"show": {
					"operation": ["reactions/list-for-team-discussion-comment-in-org"],
					"resource": ["reaction"]
				}
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "content",
					"displayName": "Content",
					"type": "options",
					"default": "+1",
					"description": "Returns a single [reaction type](https://docs.github.com/rest/reference/reactions#reaction-types). Omit this parameter t...",
					"options": [
						{ "name": "1", "value": "+1" },
						{ "name": "1", "value": "-1" },
						{ "name": "Laugh", "value": "laugh" },
						{ "name": "Confused", "value": "confused" },
						{ "name": "Heart", "value": "heart" },
						{ "name": "Hooray", "value": "hooray" },
						{ "name": "Rocket", "value": "rocket" },
						{ "name": "Eyes", "value": "eyes" }
					],
					"routing": { "send": { "type": "query", "property": "content" } }
				},
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": {
					"operation": ["reactions/list-for-team-discussion-comment-in-org"],
					"resource": ["reaction"]
				}
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["reactions/create-for-team-discussion-comment-in-org"],
					"resource": ["reaction"]
				}
			}
		},
		{
			"name": "team_slug",
			"displayName": "Team Slug",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The slug of the team name",
			"displayOptions": {
				"show": {
					"operation": ["reactions/create-for-team-discussion-comment-in-org"],
					"resource": ["reaction"]
				}
			}
		},
		{
			"name": "discussion_number",
			"displayName": "Discussion Number",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The number that identifies the discussion",
			"displayOptions": {
				"show": {
					"operation": ["reactions/create-for-team-discussion-comment-in-org"],
					"resource": ["reaction"]
				}
			}
		},
		{
			"name": "comment_number",
			"displayName": "Comment Number",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The number that identifies the comment",
			"displayOptions": {
				"show": {
					"operation": ["reactions/create-for-team-discussion-comment-in-org"],
					"resource": ["reaction"]
				}
			}
		},
		{
			"name": "content",
			"displayName": "Content",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The [reaction type](https://docs.github.com/rest/reference/reactions#reaction-types) to add to the team discussion comme...",
			"routing": { "send": { "type": "body", "property": "content" } },
			"displayOptions": {
				"show": {
					"operation": ["reactions/create-for-team-discussion-comment-in-org"],
					"resource": ["reaction"]
				}
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["reactions/delete-for-team-discussion-comment"],
					"resource": ["reaction"]
				}
			}
		},
		{
			"name": "team_slug",
			"displayName": "Team Slug",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The slug of the team name",
			"displayOptions": {
				"show": {
					"operation": ["reactions/delete-for-team-discussion-comment"],
					"resource": ["reaction"]
				}
			}
		},
		{
			"name": "discussion_number",
			"displayName": "Discussion Number",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The number that identifies the discussion",
			"displayOptions": {
				"show": {
					"operation": ["reactions/delete-for-team-discussion-comment"],
					"resource": ["reaction"]
				}
			}
		},
		{
			"name": "comment_number",
			"displayName": "Comment Number",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The number that identifies the comment",
			"displayOptions": {
				"show": {
					"operation": ["reactions/delete-for-team-discussion-comment"],
					"resource": ["reaction"]
				}
			}
		},
		{
			"name": "reaction_id",
			"displayName": "Reaction ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the reaction",
			"displayOptions": {
				"show": {
					"operation": ["reactions/delete-for-team-discussion-comment"],
					"resource": ["reaction"]
				}
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["reactions/list-for-team-discussion-in-org"],
					"resource": ["reaction"]
				}
			}
		},
		{
			"name": "team_slug",
			"displayName": "Team Slug",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The slug of the team name",
			"displayOptions": {
				"show": {
					"operation": ["reactions/list-for-team-discussion-in-org"],
					"resource": ["reaction"]
				}
			}
		},
		{
			"name": "discussion_number",
			"displayName": "Discussion Number",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The number that identifies the discussion",
			"displayOptions": {
				"show": {
					"operation": ["reactions/list-for-team-discussion-in-org"],
					"resource": ["reaction"]
				}
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "content",
					"displayName": "Content",
					"type": "options",
					"default": "+1",
					"description": "Returns a single [reaction type](https://docs.github.com/rest/reference/reactions#reaction-types). Omit this parameter t...",
					"options": [
						{ "name": "1", "value": "+1" },
						{ "name": "1", "value": "-1" },
						{ "name": "Laugh", "value": "laugh" },
						{ "name": "Confused", "value": "confused" },
						{ "name": "Heart", "value": "heart" },
						{ "name": "Hooray", "value": "hooray" },
						{ "name": "Rocket", "value": "rocket" },
						{ "name": "Eyes", "value": "eyes" }
					],
					"routing": { "send": { "type": "query", "property": "content" } }
				},
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": {
					"operation": ["reactions/list-for-team-discussion-in-org"],
					"resource": ["reaction"]
				}
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["reactions/create-for-team-discussion-in-org"],
					"resource": ["reaction"]
				}
			}
		},
		{
			"name": "team_slug",
			"displayName": "Team Slug",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The slug of the team name",
			"displayOptions": {
				"show": {
					"operation": ["reactions/create-for-team-discussion-in-org"],
					"resource": ["reaction"]
				}
			}
		},
		{
			"name": "discussion_number",
			"displayName": "Discussion Number",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The number that identifies the discussion",
			"displayOptions": {
				"show": {
					"operation": ["reactions/create-for-team-discussion-in-org"],
					"resource": ["reaction"]
				}
			}
		},
		{
			"name": "content",
			"displayName": "Content",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The [reaction type](https://docs.github.com/rest/reference/reactions#reaction-types) to add to the team discussion",
			"routing": { "send": { "type": "body", "property": "content" } },
			"displayOptions": {
				"show": {
					"operation": ["reactions/create-for-team-discussion-in-org"],
					"resource": ["reaction"]
				}
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["reactions/delete-for-team-discussion"], "resource": ["reaction"] }
			}
		},
		{
			"name": "team_slug",
			"displayName": "Team Slug",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The slug of the team name",
			"displayOptions": {
				"show": { "operation": ["reactions/delete-for-team-discussion"], "resource": ["reaction"] }
			}
		},
		{
			"name": "discussion_number",
			"displayName": "Discussion Number",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The number that identifies the discussion",
			"displayOptions": {
				"show": { "operation": ["reactions/delete-for-team-discussion"], "resource": ["reaction"] }
			}
		},
		{
			"name": "reaction_id",
			"displayName": "Reaction ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the reaction",
			"displayOptions": {
				"show": { "operation": ["reactions/delete-for-team-discussion"], "resource": ["reaction"] }
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["teams/list-pending-invitations-in-org"], "resource": ["team"] }
			}
		},
		{
			"name": "team_slug",
			"displayName": "Team Slug",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The slug of the team name",
			"displayOptions": {
				"show": { "operation": ["teams/list-pending-invitations-in-org"], "resource": ["team"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["teams/list-pending-invitations-in-org"], "resource": ["team"] }
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["teams/list-members-in-org"], "resource": ["team"] }
			}
		},
		{
			"name": "team_slug",
			"displayName": "Team Slug",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The slug of the team name",
			"displayOptions": {
				"show": { "operation": ["teams/list-members-in-org"], "resource": ["team"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "role",
					"displayName": "Role",
					"type": "options",
					"default": "all",
					"description": "Filters members returned by their role in the team",
					"options": [
						{ "name": "Member", "value": "member" },
						{ "name": "Maintainer", "value": "maintainer" },
						{ "name": "All", "value": "all" }
					],
					"routing": { "send": { "type": "query", "property": "role" } }
				},
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["teams/list-members-in-org"], "resource": ["team"] }
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["teams/remove-membership-for-user-in-org"], "resource": ["team"] }
			}
		},
		{
			"name": "team_slug",
			"displayName": "Team Slug",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The slug of the team name",
			"displayOptions": {
				"show": { "operation": ["teams/remove-membership-for-user-in-org"], "resource": ["team"] }
			}
		},
		{
			"name": "username",
			"displayName": "Username",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The handle for the GitHub user account",
			"displayOptions": {
				"show": { "operation": ["teams/remove-membership-for-user-in-org"], "resource": ["team"] }
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["teams/get-membership-for-user-in-org"], "resource": ["team"] }
			}
		},
		{
			"name": "team_slug",
			"displayName": "Team Slug",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The slug of the team name",
			"displayOptions": {
				"show": { "operation": ["teams/get-membership-for-user-in-org"], "resource": ["team"] }
			}
		},
		{
			"name": "username",
			"displayName": "Username",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The handle for the GitHub user account",
			"displayOptions": {
				"show": { "operation": ["teams/get-membership-for-user-in-org"], "resource": ["team"] }
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["teams/add-or-update-membership-for-user-in-org"],
					"resource": ["team"]
				}
			}
		},
		{
			"name": "team_slug",
			"displayName": "Team Slug",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The slug of the team name",
			"displayOptions": {
				"show": {
					"operation": ["teams/add-or-update-membership-for-user-in-org"],
					"resource": ["team"]
				}
			}
		},
		{
			"name": "username",
			"displayName": "Username",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The handle for the GitHub user account",
			"displayOptions": {
				"show": {
					"operation": ["teams/add-or-update-membership-for-user-in-org"],
					"resource": ["team"]
				}
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "role",
					"displayName": "Role",
					"type": "string",
					"default": "",
					"description": "The role that this user should have in the team",
					"routing": { "send": { "type": "body", "property": "role" } }
				}
			],
			"displayOptions": {
				"show": {
					"operation": ["teams/add-or-update-membership-for-user-in-org"],
					"resource": ["team"]
				}
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["teams/list-projects-in-org"], "resource": ["team"] }
			}
		},
		{
			"name": "team_slug",
			"displayName": "Team Slug",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The slug of the team name",
			"displayOptions": {
				"show": { "operation": ["teams/list-projects-in-org"], "resource": ["team"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["teams/list-projects-in-org"], "resource": ["team"] }
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["teams/remove-project-in-org"], "resource": ["team"] }
			}
		},
		{
			"name": "team_slug",
			"displayName": "Team Slug",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The slug of the team name",
			"displayOptions": {
				"show": { "operation": ["teams/remove-project-in-org"], "resource": ["team"] }
			}
		},
		{
			"name": "project_id",
			"displayName": "Project ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the project",
			"displayOptions": {
				"show": { "operation": ["teams/remove-project-in-org"], "resource": ["team"] }
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["teams/check-permissions-for-project-in-org"],
					"resource": ["team"]
				}
			}
		},
		{
			"name": "team_slug",
			"displayName": "Team Slug",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The slug of the team name",
			"displayOptions": {
				"show": {
					"operation": ["teams/check-permissions-for-project-in-org"],
					"resource": ["team"]
				}
			}
		},
		{
			"name": "project_id",
			"displayName": "Project ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the project",
			"displayOptions": {
				"show": {
					"operation": ["teams/check-permissions-for-project-in-org"],
					"resource": ["team"]
				}
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["teams/add-or-update-project-permissions-in-org"],
					"resource": ["team"]
				}
			}
		},
		{
			"name": "team_slug",
			"displayName": "Team Slug",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The slug of the team name",
			"displayOptions": {
				"show": {
					"operation": ["teams/add-or-update-project-permissions-in-org"],
					"resource": ["team"]
				}
			}
		},
		{
			"name": "project_id",
			"displayName": "Project ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the project",
			"displayOptions": {
				"show": {
					"operation": ["teams/add-or-update-project-permissions-in-org"],
					"resource": ["team"]
				}
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "permission",
					"displayName": "Permission",
					"type": "string",
					"default": "",
					"description": "The permission to grant to the team for this project. Default: the team's `permission` attribute will be used to determi...",
					"routing": { "send": { "type": "body", "property": "permission" } }
				}
			],
			"displayOptions": {
				"show": {
					"operation": ["teams/add-or-update-project-permissions-in-org"],
					"resource": ["team"]
				}
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["teams/list-repos-in-org"], "resource": ["team"] }
			}
		},
		{
			"name": "team_slug",
			"displayName": "Team Slug",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The slug of the team name",
			"displayOptions": {
				"show": { "operation": ["teams/list-repos-in-org"], "resource": ["team"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["teams/list-repos-in-org"], "resource": ["team"] }
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["teams/remove-repo-in-org"], "resource": ["team"] }
			}
		},
		{
			"name": "team_slug",
			"displayName": "Team Slug",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The slug of the team name",
			"displayOptions": {
				"show": { "operation": ["teams/remove-repo-in-org"], "resource": ["team"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["teams/remove-repo-in-org"], "resource": ["team"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["teams/remove-repo-in-org"], "resource": ["team"] }
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["teams/check-permissions-for-repo-in-org"], "resource": ["team"] }
			}
		},
		{
			"name": "team_slug",
			"displayName": "Team Slug",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The slug of the team name",
			"displayOptions": {
				"show": { "operation": ["teams/check-permissions-for-repo-in-org"], "resource": ["team"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["teams/check-permissions-for-repo-in-org"], "resource": ["team"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["teams/check-permissions-for-repo-in-org"], "resource": ["team"] }
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["teams/add-or-update-repo-permissions-in-org"],
					"resource": ["team"]
				}
			}
		},
		{
			"name": "team_slug",
			"displayName": "Team Slug",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The slug of the team name",
			"displayOptions": {
				"show": {
					"operation": ["teams/add-or-update-repo-permissions-in-org"],
					"resource": ["team"]
				}
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["teams/add-or-update-repo-permissions-in-org"],
					"resource": ["team"]
				}
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["teams/add-or-update-repo-permissions-in-org"],
					"resource": ["team"]
				}
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "permission",
					"displayName": "Permission",
					"type": "string",
					"default": "",
					"description": "The permission to grant the team on this repository. We accept the following permissions to be set: `pull`, `triage`, `p...",
					"routing": { "send": { "type": "body", "property": "permission" } }
				}
			],
			"displayOptions": {
				"show": {
					"operation": ["teams/add-or-update-repo-permissions-in-org"],
					"resource": ["team"]
				}
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["teams/list-child-in-org"], "resource": ["team"] }
			}
		},
		{
			"name": "team_slug",
			"displayName": "Team Slug",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The slug of the team name",
			"displayOptions": {
				"show": { "operation": ["teams/list-child-in-org"], "resource": ["team"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["teams/list-child-in-org"], "resource": ["team"] }
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["orgs/enable-or-disable-security-product-on-all-org-repos"],
					"resource": ["org"]
				}
			}
		},
		{
			"name": "security_product",
			"displayName": "Security Product",
			"type": "options",
			"default": "dependency_graph",
			"required": true,
			"description": "The security feature to enable or disable",
			"options": [
				{ "name": "Dependency Graph", "value": "dependency_graph" },
				{ "name": "Dependabot Alerts", "value": "dependabot_alerts" },
				{ "name": "Dependabot Security Updates", "value": "dependabot_security_updates" },
				{ "name": "Advanced Security", "value": "advanced_security" },
				{ "name": "Secret Scanning", "value": "secret_scanning" },
				{ "name": "Secret Scanning Push Protection", "value": "secret_scanning_push_protection" }
			],
			"displayOptions": {
				"show": {
					"operation": ["orgs/enable-or-disable-security-product-on-all-org-repos"],
					"resource": ["org"]
				}
			}
		},
		{
			"name": "enablement",
			"displayName": "Enablement",
			"type": "options",
			"default": "enable_all",
			"required": true,
			"description": "The action to take.  `enable_all` means to enable the specified security feature for all repositories in the organizatio...",
			"options": [
				{ "name": "Enable All", "value": "enable_all" },
				{ "name": "Disable All", "value": "disable_all" }
			],
			"displayOptions": {
				"show": {
					"operation": ["orgs/enable-or-disable-security-product-on-all-org-repos"],
					"resource": ["org"]
				}
			}
		},
		{
			"name": "card_id",
			"displayName": "Card ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the card",
			"displayOptions": {
				"show": { "operation": ["projects/delete-card"], "resource": ["project"] }
			}
		},
		{
			"name": "card_id",
			"displayName": "Card ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the card",
			"displayOptions": { "show": { "operation": ["projects/get-card"], "resource": ["project"] } }
		},
		{
			"name": "card_id",
			"displayName": "Card ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the card",
			"displayOptions": {
				"show": { "operation": ["projects/update-card"], "resource": ["project"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "archived",
					"displayName": "Archived",
					"type": "boolean",
					"default": false,
					"description": "Whether or not the card is archived",
					"routing": { "send": { "type": "body", "property": "archived" } }
				},
				{
					"name": "note",
					"displayName": "Note",
					"type": "string",
					"default": "",
					"description": "The project card's note",
					"placeholder": "e.g. Update all gems",
					"routing": { "send": { "type": "body", "property": "note" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["projects/update-card"], "resource": ["project"] }
			}
		},
		{
			"name": "card_id",
			"displayName": "Card ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the card",
			"displayOptions": { "show": { "operation": ["projects/move-card"], "resource": ["project"] } }
		},
		{
			"name": "position",
			"displayName": "Position",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The position of the card in a column. Can be one of: `top`, `bottom`, or `after:<card_id>` to place after the specified ...",
			"placeholder": "e.g. bottom",
			"routing": { "send": { "type": "body", "property": "position" } },
			"displayOptions": { "show": { "operation": ["projects/move-card"], "resource": ["project"] } }
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "column_id",
					"displayName": "Column ID",
					"type": "number",
					"default": 0,
					"description": "The unique identifier of the column the card should be moved to",
					"routing": { "send": { "type": "body", "property": "column_id" } }
				}
			],
			"displayOptions": { "show": { "operation": ["projects/move-card"], "resource": ["project"] } }
		},
		{
			"name": "column_id",
			"displayName": "Column ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the column",
			"displayOptions": {
				"show": { "operation": ["projects/delete-column"], "resource": ["project"] }
			}
		},
		{
			"name": "column_id",
			"displayName": "Column ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the column",
			"displayOptions": {
				"show": { "operation": ["projects/get-column"], "resource": ["project"] }
			}
		},
		{
			"name": "column_id",
			"displayName": "Column ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the column",
			"displayOptions": {
				"show": { "operation": ["projects/update-column"], "resource": ["project"] }
			}
		},
		{
			"name": "name",
			"displayName": "Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "Name of the project column",
			"placeholder": "e.g. Remaining tasks",
			"routing": { "send": { "type": "body", "property": "name" } },
			"displayOptions": {
				"show": { "operation": ["projects/update-column"], "resource": ["project"] }
			}
		},
		{
			"name": "column_id",
			"displayName": "Column ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the column",
			"displayOptions": {
				"show": { "operation": ["projects/list-cards"], "resource": ["project"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "archived_state",
					"displayName": "Archived State",
					"type": "options",
					"default": "not_archived",
					"description": "Filters the project cards that are returned by the card's state",
					"options": [
						{ "name": "All", "value": "all" },
						{ "name": "Archived", "value": "archived" },
						{ "name": "Not Archived", "value": "not_archived" }
					],
					"routing": { "send": { "type": "query", "property": "archived_state" } }
				},
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["projects/list-cards"], "resource": ["project"] }
			}
		},
		{
			"name": "column_id",
			"displayName": "Column ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the column",
			"displayOptions": {
				"show": { "operation": ["projects/create-card"], "resource": ["project"] }
			}
		},
		{
			"name": "column_id",
			"displayName": "Column ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the column",
			"displayOptions": {
				"show": { "operation": ["projects/move-column"], "resource": ["project"] }
			}
		},
		{
			"name": "position",
			"displayName": "Position",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The position of the column in a project. Can be one of: `first`, `last`, or `after:<column_id>` to place after the speci...",
			"placeholder": "e.g. last",
			"routing": { "send": { "type": "body", "property": "position" } },
			"displayOptions": {
				"show": { "operation": ["projects/move-column"], "resource": ["project"] }
			}
		},
		{
			"name": "project_id",
			"displayName": "Project ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the project",
			"displayOptions": { "show": { "operation": ["projects/delete"], "resource": ["project"] } }
		},
		{
			"name": "project_id",
			"displayName": "Project ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the project",
			"displayOptions": { "show": { "operation": ["projects/get"], "resource": ["project"] } }
		},
		{
			"name": "project_id",
			"displayName": "Project ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the project",
			"displayOptions": { "show": { "operation": ["projects/update"], "resource": ["project"] } }
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "body",
					"displayName": "Body",
					"type": "string",
					"default": "",
					"description": "Body of the project",
					"placeholder": "e.g. This project represents the sprint of the first week in January",
					"routing": { "send": { "type": "body", "property": "body" } }
				},
				{
					"name": "name",
					"displayName": "Name",
					"type": "string",
					"default": "",
					"description": "Name of the project",
					"placeholder": "e.g. Week One Sprint",
					"routing": { "send": { "type": "body", "property": "name" } }
				},
				{
					"name": "organization_permission",
					"displayName": "Organization Permission",
					"type": "string",
					"default": "",
					"description": "The baseline permission that all organization members have on this project",
					"routing": { "send": { "type": "body", "property": "organization_permission" } }
				},
				{
					"name": "private",
					"displayName": "Private",
					"type": "boolean",
					"default": false,
					"description": "Whether or not this project can be seen by everyone",
					"routing": { "send": { "type": "body", "property": "private" } }
				},
				{
					"name": "state",
					"displayName": "State",
					"type": "string",
					"default": "",
					"description": "State of the project; either 'open' or 'closed'",
					"placeholder": "e.g. open",
					"routing": { "send": { "type": "body", "property": "state" } }
				}
			],
			"displayOptions": { "show": { "operation": ["projects/update"], "resource": ["project"] } }
		},
		{
			"name": "project_id",
			"displayName": "Project ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the project",
			"displayOptions": {
				"show": { "operation": ["projects/list-collaborators"], "resource": ["project"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "affiliation",
					"displayName": "Affiliation",
					"type": "options",
					"default": "all",
					"description": "Filters the collaborators by their affiliation. `outside` means outside collaborators of a project that are not a member...",
					"options": [
						{ "name": "Outside", "value": "outside" },
						{ "name": "Direct", "value": "direct" },
						{ "name": "All", "value": "all" }
					],
					"routing": { "send": { "type": "query", "property": "affiliation" } }
				},
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["projects/list-collaborators"], "resource": ["project"] }
			}
		},
		{
			"name": "project_id",
			"displayName": "Project ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the project",
			"displayOptions": {
				"show": { "operation": ["projects/remove-collaborator"], "resource": ["project"] }
			}
		},
		{
			"name": "username",
			"displayName": "Username",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The handle for the GitHub user account",
			"displayOptions": {
				"show": { "operation": ["projects/remove-collaborator"], "resource": ["project"] }
			}
		},
		{
			"name": "project_id",
			"displayName": "Project ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the project",
			"displayOptions": {
				"show": { "operation": ["projects/add-collaborator"], "resource": ["project"] }
			}
		},
		{
			"name": "username",
			"displayName": "Username",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The handle for the GitHub user account",
			"displayOptions": {
				"show": { "operation": ["projects/add-collaborator"], "resource": ["project"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "permission",
					"displayName": "Permission",
					"type": "string",
					"default": "",
					"description": "The permission to grant the collaborator",
					"placeholder": "e.g. write",
					"routing": { "send": { "type": "body", "property": "permission" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["projects/add-collaborator"], "resource": ["project"] }
			}
		},
		{
			"name": "project_id",
			"displayName": "Project ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the project",
			"displayOptions": {
				"show": { "operation": ["projects/get-permission-for-user"], "resource": ["project"] }
			}
		},
		{
			"name": "username",
			"displayName": "Username",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The handle for the GitHub user account",
			"displayOptions": {
				"show": { "operation": ["projects/get-permission-for-user"], "resource": ["project"] }
			}
		},
		{
			"name": "project_id",
			"displayName": "Project ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the project",
			"displayOptions": {
				"show": { "operation": ["projects/list-columns"], "resource": ["project"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["projects/list-columns"], "resource": ["project"] }
			}
		},
		{
			"name": "project_id",
			"displayName": "Project ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the project",
			"displayOptions": {
				"show": { "operation": ["projects/create-column"], "resource": ["project"] }
			}
		},
		{
			"name": "name",
			"displayName": "Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "Name of the project column",
			"placeholder": "e.g. Remaining tasks",
			"routing": { "send": { "type": "body", "property": "name" } },
			"displayOptions": {
				"show": { "operation": ["projects/create-column"], "resource": ["project"] }
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["actions/list-repo-required-workflows"], "resource": ["action"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["actions/list-repo-required-workflows"], "resource": ["action"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["actions/list-repo-required-workflows"], "resource": ["action"] }
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["actions/get-repo-required-workflow"], "resource": ["action"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["actions/get-repo-required-workflow"], "resource": ["action"] }
			}
		},
		{
			"name": "required_workflow_id_for_repo",
			"displayName": "Required Workflow ID For Repo",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The ID of the required workflow that has run at least once in a repository",
			"displayOptions": {
				"show": { "operation": ["actions/get-repo-required-workflow"], "resource": ["action"] }
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["actions/get-repo-required-workflow-usage"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["actions/get-repo-required-workflow-usage"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "required_workflow_id_for_repo",
			"displayName": "Required Workflow ID For Repo",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The ID of the required workflow that has run at least once in a repository",
			"displayOptions": {
				"show": {
					"operation": ["actions/get-repo-required-workflow-usage"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["repos/delete"], "resource": ["repo"] } }
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["repos/delete"], "resource": ["repo"] } }
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["repos/get"], "resource": ["repo"] } }
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["repos/get"], "resource": ["repo"] } }
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["repos/update"], "resource": ["repo"] } }
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["repos/update"], "resource": ["repo"] } }
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "allow_auto_merge",
					"displayName": "Allow Auto Merge",
					"type": "boolean",
					"default": false,
					"description": "Either `true` to allow auto-merge on pull requests, or `false` to disallow auto-merge",
					"routing": { "send": { "type": "body", "property": "allow_auto_merge" } }
				},
				{
					"name": "allow_forking",
					"displayName": "Allow Forking",
					"type": "boolean",
					"default": false,
					"description": "Either `true` to allow private forks, or `false` to prevent private forks",
					"routing": { "send": { "type": "body", "property": "allow_forking" } }
				},
				{
					"name": "allow_merge_commit",
					"displayName": "Allow Merge Commit",
					"type": "boolean",
					"default": false,
					"description": "Either `true` to allow merging pull requests with a merge commit, or `false` to prevent merging pull requests with merge...",
					"routing": { "send": { "type": "body", "property": "allow_merge_commit" } }
				},
				{
					"name": "allow_rebase_merge",
					"displayName": "Allow Rebase Merge",
					"type": "boolean",
					"default": false,
					"description": "Either `true` to allow rebase-merging pull requests, or `false` to prevent rebase-merging",
					"routing": { "send": { "type": "body", "property": "allow_rebase_merge" } }
				},
				{
					"name": "allow_squash_merge",
					"displayName": "Allow Squash Merge",
					"type": "boolean",
					"default": false,
					"description": "Either `true` to allow squash-merging pull requests, or `false` to prevent squash-merging",
					"routing": { "send": { "type": "body", "property": "allow_squash_merge" } }
				},
				{
					"name": "allow_update_branch",
					"displayName": "Allow Update Branch",
					"type": "boolean",
					"default": false,
					"description": "Either `true` to always allow a pull request head branch that is behind its base branch to be updated even if it is not ...",
					"routing": { "send": { "type": "body", "property": "allow_update_branch" } }
				},
				{
					"name": "archived",
					"displayName": "Archived",
					"type": "boolean",
					"default": false,
					"description": "Whether to archive this repository. `false` will unarchive a previously archived repository",
					"routing": { "send": { "type": "body", "property": "archived" } }
				},
				{
					"name": "default_branch",
					"displayName": "Default Branch",
					"type": "string",
					"default": "",
					"description": "Updates the default branch for this repository",
					"routing": { "send": { "type": "body", "property": "default_branch" } }
				},
				{
					"name": "delete_branch_on_merge",
					"displayName": "Delete Branch On Merge",
					"type": "boolean",
					"default": false,
					"description": "Either `true` to allow automatically deleting head branches when pull requests are merged, or `false` to prevent automat...",
					"routing": { "send": { "type": "body", "property": "delete_branch_on_merge" } }
				},
				{
					"name": "description",
					"displayName": "Description",
					"type": "string",
					"default": "",
					"description": "A short description of the repository",
					"routing": { "send": { "type": "body", "property": "description" } }
				},
				{
					"name": "has_issues",
					"displayName": "Has Issues",
					"type": "boolean",
					"default": false,
					"description": "Either `true` to enable issues for this repository or `false` to disable them",
					"routing": { "send": { "type": "body", "property": "has_issues" } }
				},
				{
					"name": "has_projects",
					"displayName": "Has Projects",
					"type": "boolean",
					"default": false,
					"description": "Either `true` to enable projects for this repository or `false` to disable them. **Note:** If you're creating a reposito...",
					"routing": { "send": { "type": "body", "property": "has_projects" } }
				},
				{
					"name": "has_wiki",
					"displayName": "Has Wiki",
					"type": "boolean",
					"default": false,
					"description": "Either `true` to enable the wiki for this repository or `false` to disable it",
					"routing": { "send": { "type": "body", "property": "has_wiki" } }
				},
				{
					"name": "homepage",
					"displayName": "Homepage",
					"type": "string",
					"default": "",
					"description": "A URL with more information about the repository",
					"routing": { "send": { "type": "body", "property": "homepage" } }
				},
				{
					"name": "is_template",
					"displayName": "Is Template",
					"type": "boolean",
					"default": false,
					"description": "Either `true` to make this repo available as a template repository or `false` to prevent it",
					"routing": { "send": { "type": "body", "property": "is_template" } }
				},
				{
					"name": "merge_commit_message",
					"displayName": "Merge Commit Message",
					"type": "string",
					"default": "",
					"description": "The default value for a merge commit message.  - `PR_TITLE` - default to the pull request's title. - `PR_BODY` - default...",
					"routing": { "send": { "type": "body", "property": "merge_commit_message" } }
				},
				{
					"name": "merge_commit_title",
					"displayName": "Merge Commit Title",
					"type": "string",
					"default": "",
					"description": "The default value for a merge commit title.  - `PR_TITLE` - default to the pull request's title. - `MERGE_MESSAGE` - def...",
					"routing": { "send": { "type": "body", "property": "merge_commit_title" } }
				},
				{
					"name": "name",
					"displayName": "Name",
					"type": "string",
					"default": "",
					"description": "The name of the repository",
					"routing": { "send": { "type": "body", "property": "name" } }
				},
				{
					"name": "private",
					"displayName": "Private",
					"type": "boolean",
					"default": false,
					"description": "Either `true` to make the repository private or `false` to make it public. Default: `false`.   **Note**: You will get a ...",
					"routing": { "send": { "type": "body", "property": "private" } }
				},
				{
					"name": "security_and_analysis",
					"displayName": "Security And Analysis",
					"type": "json",
					"default": "{}",
					"description": "Specify which security and analysis features to enable or disable for the repository.  To use this parameter, you must h...",
					"routing": { "send": { "type": "body", "property": "security_and_analysis" } }
				},
				{
					"name": "squash_merge_commit_message",
					"displayName": "Squash Merge Commit Message",
					"type": "string",
					"default": "",
					"description": "The default value for a squash merge commit message:  - `PR_BODY` - default to the pull request's body. - `COMMIT_MESSAG...",
					"routing": { "send": { "type": "body", "property": "squash_merge_commit_message" } }
				},
				{
					"name": "squash_merge_commit_title",
					"displayName": "Squash Merge Commit Title",
					"type": "string",
					"default": "",
					"description": "The default value for a squash merge commit title:  - `PR_TITLE` - default to the pull request's title. - `COMMIT_OR_PR_...",
					"routing": { "send": { "type": "body", "property": "squash_merge_commit_title" } }
				},
				{
					"name": "use_squash_pr_title_as_default",
					"displayName": "Use Squash Pr Title As Default",
					"type": "boolean",
					"default": false,
					"description": "Either `true` to allow squash-merge commits to use pull request title, or `false` to use commit message. **This property...",
					"routing": { "send": { "type": "body", "property": "use_squash_pr_title_as_default" } }
				},
				{
					"name": "visibility",
					"displayName": "Visibility",
					"type": "string",
					"default": "",
					"description": "The visibility of the repository",
					"routing": { "send": { "type": "body", "property": "visibility" } }
				},
				{
					"name": "web_commit_signoff_required",
					"displayName": "Web Commit Signoff Required",
					"type": "boolean",
					"default": false,
					"description": "Either `true` to require contributors to sign off on web-based commits, or `false` to not require contributors to sign o...",
					"routing": { "send": { "type": "body", "property": "web_commit_signoff_required" } }
				}
			],
			"displayOptions": { "show": { "operation": ["repos/update"], "resource": ["repo"] } }
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["actions/list-artifacts-for-repo"], "resource": ["action"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["actions/list-artifacts-for-repo"], "resource": ["action"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				},
				{
					"name": "name",
					"displayName": "Name",
					"type": "string",
					"default": "",
					"description": "Filters artifacts by exact match on their name field",
					"routing": { "send": { "type": "query", "property": "name" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["actions/list-artifacts-for-repo"], "resource": ["action"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["actions/delete-artifact"], "resource": ["action"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["actions/delete-artifact"], "resource": ["action"] }
			}
		},
		{
			"name": "artifact_id",
			"displayName": "Artifact ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the artifact",
			"displayOptions": {
				"show": { "operation": ["actions/delete-artifact"], "resource": ["action"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["actions/get-artifact"], "resource": ["action"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["actions/get-artifact"], "resource": ["action"] }
			}
		},
		{
			"name": "artifact_id",
			"displayName": "Artifact ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the artifact",
			"displayOptions": {
				"show": { "operation": ["actions/get-artifact"], "resource": ["action"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["actions/download-artifact"], "resource": ["action"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["actions/download-artifact"], "resource": ["action"] }
			}
		},
		{
			"name": "artifact_id",
			"displayName": "Artifact ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the artifact",
			"displayOptions": {
				"show": { "operation": ["actions/download-artifact"], "resource": ["action"] }
			}
		},
		{
			"name": "archive_format",
			"displayName": "Archive Format",
			"type": "string",
			"default": "",
			"required": true,
			"displayOptions": {
				"show": { "operation": ["actions/download-artifact"], "resource": ["action"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["actions/get-actions-cache-usage"], "resource": ["action"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["actions/get-actions-cache-usage"], "resource": ["action"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["actions/delete-actions-cache-by-key"], "resource": ["action"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["actions/delete-actions-cache-by-key"], "resource": ["action"] }
			}
		},
		{
			"name": "key",
			"displayName": "Key",
			"type": "string",
			"default": "",
			"required": true,
			"description": "A key for identifying the cache",
			"routing": { "send": { "type": "query", "property": "key" } },
			"displayOptions": {
				"show": { "operation": ["actions/delete-actions-cache-by-key"], "resource": ["action"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "ref",
					"displayName": "Ref",
					"type": "string",
					"default": "",
					"description": "The Git reference for the results you want to list. The `ref` for a branch can be formatted either as `refs/heads/<branc...",
					"routing": { "send": { "type": "query", "property": "ref" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["actions/delete-actions-cache-by-key"], "resource": ["action"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["actions/get-actions-cache-list"], "resource": ["action"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["actions/get-actions-cache-list"], "resource": ["action"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				},
				{
					"name": "ref",
					"displayName": "Ref",
					"type": "string",
					"default": "",
					"description": "The Git reference for the results you want to list. The `ref` for a branch can be formatted either as `refs/heads/<branc...",
					"routing": { "send": { "type": "query", "property": "ref" } }
				},
				{
					"name": "key",
					"displayName": "Key",
					"type": "string",
					"default": "",
					"description": "An explicit key or prefix for identifying the cache",
					"routing": { "send": { "type": "query", "property": "key" } }
				},
				{
					"name": "sort",
					"displayName": "Sort",
					"type": "options",
					"default": "last_accessed_at",
					"description": "The property to sort the results by. `created_at` means when the cache was created. `last_accessed_at` means when the ca...",
					"options": [
						{ "name": "Created At", "value": "created_at" },
						{ "name": "Last Accessed At", "value": "last_accessed_at" },
						{ "name": "Size In Bytes", "value": "size_in_bytes" }
					],
					"routing": { "send": { "type": "query", "property": "sort" } }
				},
				{
					"name": "direction",
					"displayName": "Direction",
					"type": "options",
					"default": "desc",
					"description": "The direction to sort the results by",
					"options": [{ "name": "Asc", "value": "asc" }, { "name": "Desc", "value": "desc" }],
					"routing": { "send": { "type": "query", "property": "direction" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["actions/get-actions-cache-list"], "resource": ["action"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["actions/delete-actions-cache-by-id"], "resource": ["action"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["actions/delete-actions-cache-by-id"], "resource": ["action"] }
			}
		},
		{
			"name": "cache_id",
			"displayName": "Cache ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the GitHub Actions cache",
			"displayOptions": {
				"show": { "operation": ["actions/delete-actions-cache-by-id"], "resource": ["action"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["actions/get-job-for-workflow-run"], "resource": ["action"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["actions/get-job-for-workflow-run"], "resource": ["action"] }
			}
		},
		{
			"name": "job_id",
			"displayName": "Job ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the job",
			"displayOptions": {
				"show": { "operation": ["actions/get-job-for-workflow-run"], "resource": ["action"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["actions/download-job-logs-for-workflow-run"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["actions/download-job-logs-for-workflow-run"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "job_id",
			"displayName": "Job ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the job",
			"displayOptions": {
				"show": {
					"operation": ["actions/download-job-logs-for-workflow-run"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["actions/re-run-job-for-workflow-run"], "resource": ["action"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["actions/re-run-job-for-workflow-run"], "resource": ["action"] }
			}
		},
		{
			"name": "job_id",
			"displayName": "Job ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the job",
			"displayOptions": {
				"show": { "operation": ["actions/re-run-job-for-workflow-run"], "resource": ["action"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "enable_debug_logging",
					"displayName": "Enable Debug Logging",
					"type": "boolean",
					"default": false,
					"description": "Whether to enable debug logging for the re-run",
					"routing": { "send": { "type": "body", "property": "enable_debug_logging" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["actions/re-run-job-for-workflow-run"], "resource": ["action"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["actions/get-custom-oidc-sub-claim-for-repo"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["actions/get-custom-oidc-sub-claim-for-repo"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["actions/set-custom-oidc-sub-claim-for-repo"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["actions/set-custom-oidc-sub-claim-for-repo"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "use_default",
			"displayName": "Use Default",
			"type": "boolean",
			"default": false,
			"required": true,
			"description": "Whether to use the default template or not. If `true`, the `include_claim_keys` field is ignored",
			"routing": { "send": { "type": "body", "property": "use_default" } },
			"displayOptions": {
				"show": {
					"operation": ["actions/set-custom-oidc-sub-claim-for-repo"],
					"resource": ["action"]
				}
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "include_claim_keys",
					"displayName": "Include Claim Keys",
					"type": "string",
					"default": "",
					"description": "Array of unique strings. Each claim key can only contain alphanumeric characters and underscores",
					"routing": { "send": { "type": "body", "property": "include_claim_keys" } }
				}
			],
			"displayOptions": {
				"show": {
					"operation": ["actions/set-custom-oidc-sub-claim-for-repo"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["actions/get-github-actions-permissions-repository"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["actions/get-github-actions-permissions-repository"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["actions/set-github-actions-permissions-repository"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["actions/set-github-actions-permissions-repository"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "enabled",
			"displayName": "Enabled",
			"type": "boolean",
			"default": false,
			"required": true,
			"description": "Whether GitHub Actions is enabled on the repository",
			"routing": { "send": { "type": "body", "property": "enabled" } },
			"displayOptions": {
				"show": {
					"operation": ["actions/set-github-actions-permissions-repository"],
					"resource": ["action"]
				}
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "allowed_actions",
					"displayName": "Allowed Actions",
					"type": "string",
					"default": "",
					"description": "The permissions policy that controls the actions and reusable workflows that are allowed to run",
					"routing": { "send": { "type": "body", "property": "allowed_actions" } }
				}
			],
			"displayOptions": {
				"show": {
					"operation": ["actions/set-github-actions-permissions-repository"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["actions/get-workflow-access-to-repository"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["actions/get-workflow-access-to-repository"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["actions/set-workflow-access-to-repository"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["actions/set-workflow-access-to-repository"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "access_level",
			"displayName": "Access Level",
			"type": "string",
			"default": "",
			"required": true,
			"description": "Defines the level of access that workflows outside of the repository have to actions and reusable workflows within the r...",
			"routing": { "send": { "type": "body", "property": "access_level" } },
			"displayOptions": {
				"show": {
					"operation": ["actions/set-workflow-access-to-repository"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["actions/get-allowed-actions-repository"], "resource": ["action"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["actions/get-allowed-actions-repository"], "resource": ["action"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["actions/set-allowed-actions-repository"], "resource": ["action"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["actions/set-allowed-actions-repository"], "resource": ["action"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "github_owned_allowed",
					"displayName": "Github Owned Allowed",
					"type": "boolean",
					"default": false,
					"description": "Whether GitHub-owned actions are allowed. For example, this includes the actions in the `actions` organization",
					"routing": { "send": { "type": "body", "property": "github_owned_allowed" } }
				},
				{
					"name": "patterns_allowed",
					"displayName": "Patterns Allowed",
					"type": "string",
					"default": "",
					"description": "Specifies a list of string-matching patterns to allow specific action(s) and reusable workflow(s). Wildcards, tags, and ...",
					"routing": { "send": { "type": "body", "property": "patterns_allowed" } }
				},
				{
					"name": "verified_allowed",
					"displayName": "Verified Allowed",
					"type": "boolean",
					"default": false,
					"description": "Whether actions from GitHub Marketplace verified creators are allowed. Set to `true` to allow all actions by GitHub Mark...",
					"routing": { "send": { "type": "body", "property": "verified_allowed" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["actions/set-allowed-actions-repository"], "resource": ["action"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["actions/get-github-actions-default-workflow-permissions-repository"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["actions/get-github-actions-default-workflow-permissions-repository"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["actions/set-github-actions-default-workflow-permissions-repository"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["actions/set-github-actions-default-workflow-permissions-repository"],
					"resource": ["action"]
				}
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "can_approve_pull_request_reviews",
					"displayName": "Can Approve Pull Request Reviews",
					"type": "boolean",
					"default": false,
					"description": "Whether GitHub Actions can approve pull requests. Enabling this can be a security risk",
					"routing": { "send": { "type": "body", "property": "can_approve_pull_request_reviews" } }
				},
				{
					"name": "default_workflow_permissions",
					"displayName": "Default Workflow Permissions",
					"type": "string",
					"default": "",
					"description": "The default workflow permissions granted to the GITHUB_TOKEN when running workflows",
					"routing": { "send": { "type": "body", "property": "default_workflow_permissions" } }
				}
			],
			"displayOptions": {
				"show": {
					"operation": ["actions/set-github-actions-default-workflow-permissions-repository"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["actions/list-required-workflow-runs"], "resource": ["action"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["actions/list-required-workflow-runs"], "resource": ["action"] }
			}
		},
		{
			"name": "required_workflow_id_for_repo",
			"displayName": "Required Workflow ID For Repo",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The ID of the required workflow that has run at least once in a repository",
			"displayOptions": {
				"show": { "operation": ["actions/list-required-workflow-runs"], "resource": ["action"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "actor",
					"displayName": "Actor",
					"type": "string",
					"default": "",
					"description": "Returns someone's workflow runs. Use the login for the user who created the `push` associated with the check suite or wo...",
					"routing": { "send": { "type": "query", "property": "actor" } }
				},
				{
					"name": "branch",
					"displayName": "Branch",
					"type": "string",
					"default": "",
					"description": "Returns workflow runs associated with a branch. Use the name of the branch of the `push`",
					"routing": { "send": { "type": "query", "property": "branch" } }
				},
				{
					"name": "event",
					"displayName": "Event",
					"type": "string",
					"default": "",
					"description": "Returns workflow run triggered by the event you specify. For example, `push`, `pull_request` or `issue`. For more inform...",
					"routing": { "send": { "type": "query", "property": "event" } }
				},
				{
					"name": "status",
					"displayName": "Status",
					"type": "options",
					"default": "completed",
					"description": "Returns workflow runs with the check run `status` or `conclusion` that you specify. For example, a conclusion can be `su...",
					"options": [
						{ "name": "Completed", "value": "completed" },
						{ "name": "Action Required", "value": "action_required" },
						{ "name": "Cancelled", "value": "cancelled" },
						{ "name": "Failure", "value": "failure" },
						{ "name": "Neutral", "value": "neutral" },
						{ "name": "Skipped", "value": "skipped" },
						{ "name": "Stale", "value": "stale" },
						{ "name": "Success", "value": "success" },
						{ "name": "Timed Out", "value": "timed_out" },
						{ "name": "In Progress", "value": "in_progress" },
						{ "name": "Queued", "value": "queued" },
						{ "name": "Requested", "value": "requested" },
						{ "name": "Waiting", "value": "waiting" },
						{ "name": "Pending", "value": "pending" }
					],
					"routing": { "send": { "type": "query", "property": "status" } }
				},
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				},
				{
					"name": "created",
					"displayName": "Created",
					"type": "string",
					"default": "",
					"description": "Returns workflow runs created within the given date-time range. For more information on the syntax, see \"[Understanding ...",
					"routing": { "send": { "type": "query", "property": "created" } }
				},
				{
					"name": "exclude_pull_requests",
					"displayName": "Exclude Pull Requests",
					"type": "boolean",
					"default": false,
					"description": "If `true` pull requests are omitted from the response (empty array)",
					"routing": { "send": { "type": "query", "property": "exclude_pull_requests" } }
				},
				{
					"name": "check_suite_id",
					"displayName": "Check Suite ID",
					"type": "number",
					"default": 0,
					"description": "Returns workflow runs with the `check_suite_id` that you specify",
					"routing": { "send": { "type": "query", "property": "check_suite_id" } }
				},
				{
					"name": "head_sha",
					"displayName": "Head Sha",
					"type": "string",
					"default": "",
					"description": "Only returns workflow runs that are associated with the specified `head_sha`",
					"routing": { "send": { "type": "query", "property": "head_sha" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["actions/list-required-workflow-runs"], "resource": ["action"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["actions/list-self-hosted-runners-for-repo"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["actions/list-self-hosted-runners-for-repo"],
					"resource": ["action"]
				}
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": {
					"operation": ["actions/list-self-hosted-runners-for-repo"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["actions/list-runner-applications-for-repo"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["actions/list-runner-applications-for-repo"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["actions/create-registration-token-for-repo"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["actions/create-registration-token-for-repo"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["actions/create-remove-token-for-repo"], "resource": ["action"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["actions/create-remove-token-for-repo"], "resource": ["action"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["actions/delete-self-hosted-runner-from-repo"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["actions/delete-self-hosted-runner-from-repo"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "runner_id",
			"displayName": "Runner ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "Unique identifier of the self-hosted runner",
			"displayOptions": {
				"show": {
					"operation": ["actions/delete-self-hosted-runner-from-repo"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["actions/get-self-hosted-runner-for-repo"], "resource": ["action"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["actions/get-self-hosted-runner-for-repo"], "resource": ["action"] }
			}
		},
		{
			"name": "runner_id",
			"displayName": "Runner ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "Unique identifier of the self-hosted runner",
			"displayOptions": {
				"show": { "operation": ["actions/get-self-hosted-runner-for-repo"], "resource": ["action"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["actions/remove-all-custom-labels-from-self-hosted-runner-for-repo"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["actions/remove-all-custom-labels-from-self-hosted-runner-for-repo"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "runner_id",
			"displayName": "Runner ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "Unique identifier of the self-hosted runner",
			"displayOptions": {
				"show": {
					"operation": ["actions/remove-all-custom-labels-from-self-hosted-runner-for-repo"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["actions/list-labels-for-self-hosted-runner-for-repo"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["actions/list-labels-for-self-hosted-runner-for-repo"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "runner_id",
			"displayName": "Runner ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "Unique identifier of the self-hosted runner",
			"displayOptions": {
				"show": {
					"operation": ["actions/list-labels-for-self-hosted-runner-for-repo"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["actions/add-custom-labels-to-self-hosted-runner-for-repo"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["actions/add-custom-labels-to-self-hosted-runner-for-repo"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "runner_id",
			"displayName": "Runner ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "Unique identifier of the self-hosted runner",
			"displayOptions": {
				"show": {
					"operation": ["actions/add-custom-labels-to-self-hosted-runner-for-repo"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "labels",
			"displayName": "Labels",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The names of the custom labels to add to the runner",
			"routing": { "send": { "type": "body", "property": "labels" } },
			"displayOptions": {
				"show": {
					"operation": ["actions/add-custom-labels-to-self-hosted-runner-for-repo"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["actions/set-custom-labels-for-self-hosted-runner-for-repo"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["actions/set-custom-labels-for-self-hosted-runner-for-repo"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "runner_id",
			"displayName": "Runner ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "Unique identifier of the self-hosted runner",
			"displayOptions": {
				"show": {
					"operation": ["actions/set-custom-labels-for-self-hosted-runner-for-repo"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "labels",
			"displayName": "Labels",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The names of the custom labels to set for the runner. You can pass an empty array to remove all custom labels",
			"routing": { "send": { "type": "body", "property": "labels" } },
			"displayOptions": {
				"show": {
					"operation": ["actions/set-custom-labels-for-self-hosted-runner-for-repo"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["actions/remove-custom-label-from-self-hosted-runner-for-repo"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["actions/remove-custom-label-from-self-hosted-runner-for-repo"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "runner_id",
			"displayName": "Runner ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "Unique identifier of the self-hosted runner",
			"displayOptions": {
				"show": {
					"operation": ["actions/remove-custom-label-from-self-hosted-runner-for-repo"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "name",
			"displayName": "Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of a self-hosted runner's custom label",
			"displayOptions": {
				"show": {
					"operation": ["actions/remove-custom-label-from-self-hosted-runner-for-repo"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["actions/list-workflow-runs-for-repo"], "resource": ["action"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["actions/list-workflow-runs-for-repo"], "resource": ["action"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "actor",
					"displayName": "Actor",
					"type": "string",
					"default": "",
					"description": "Returns someone's workflow runs. Use the login for the user who created the `push` associated with the check suite or wo...",
					"routing": { "send": { "type": "query", "property": "actor" } }
				},
				{
					"name": "branch",
					"displayName": "Branch",
					"type": "string",
					"default": "",
					"description": "Returns workflow runs associated with a branch. Use the name of the branch of the `push`",
					"routing": { "send": { "type": "query", "property": "branch" } }
				},
				{
					"name": "event",
					"displayName": "Event",
					"type": "string",
					"default": "",
					"description": "Returns workflow run triggered by the event you specify. For example, `push`, `pull_request` or `issue`. For more inform...",
					"routing": { "send": { "type": "query", "property": "event" } }
				},
				{
					"name": "status",
					"displayName": "Status",
					"type": "options",
					"default": "completed",
					"description": "Returns workflow runs with the check run `status` or `conclusion` that you specify. For example, a conclusion can be `su...",
					"options": [
						{ "name": "Completed", "value": "completed" },
						{ "name": "Action Required", "value": "action_required" },
						{ "name": "Cancelled", "value": "cancelled" },
						{ "name": "Failure", "value": "failure" },
						{ "name": "Neutral", "value": "neutral" },
						{ "name": "Skipped", "value": "skipped" },
						{ "name": "Stale", "value": "stale" },
						{ "name": "Success", "value": "success" },
						{ "name": "Timed Out", "value": "timed_out" },
						{ "name": "In Progress", "value": "in_progress" },
						{ "name": "Queued", "value": "queued" },
						{ "name": "Requested", "value": "requested" },
						{ "name": "Waiting", "value": "waiting" },
						{ "name": "Pending", "value": "pending" }
					],
					"routing": { "send": { "type": "query", "property": "status" } }
				},
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				},
				{
					"name": "created",
					"displayName": "Created",
					"type": "string",
					"default": "",
					"description": "Returns workflow runs created within the given date-time range. For more information on the syntax, see \"[Understanding ...",
					"routing": { "send": { "type": "query", "property": "created" } }
				},
				{
					"name": "exclude_pull_requests",
					"displayName": "Exclude Pull Requests",
					"type": "boolean",
					"default": false,
					"description": "If `true` pull requests are omitted from the response (empty array)",
					"routing": { "send": { "type": "query", "property": "exclude_pull_requests" } }
				},
				{
					"name": "check_suite_id",
					"displayName": "Check Suite ID",
					"type": "number",
					"default": 0,
					"description": "Returns workflow runs with the `check_suite_id` that you specify",
					"routing": { "send": { "type": "query", "property": "check_suite_id" } }
				},
				{
					"name": "head_sha",
					"displayName": "Head Sha",
					"type": "string",
					"default": "",
					"description": "Only returns workflow runs that are associated with the specified `head_sha`",
					"routing": { "send": { "type": "query", "property": "head_sha" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["actions/list-workflow-runs-for-repo"], "resource": ["action"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["actions/delete-workflow-run"], "resource": ["action"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["actions/delete-workflow-run"], "resource": ["action"] }
			}
		},
		{
			"name": "run_id",
			"displayName": "Run ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the workflow run",
			"displayOptions": {
				"show": { "operation": ["actions/delete-workflow-run"], "resource": ["action"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["actions/get-workflow-run"], "resource": ["action"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["actions/get-workflow-run"], "resource": ["action"] }
			}
		},
		{
			"name": "run_id",
			"displayName": "Run ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the workflow run",
			"displayOptions": {
				"show": { "operation": ["actions/get-workflow-run"], "resource": ["action"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "exclude_pull_requests",
					"displayName": "Exclude Pull Requests",
					"type": "boolean",
					"default": false,
					"description": "If `true` pull requests are omitted from the response (empty array)",
					"routing": { "send": { "type": "query", "property": "exclude_pull_requests" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["actions/get-workflow-run"], "resource": ["action"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["actions/get-reviews-for-run"], "resource": ["action"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["actions/get-reviews-for-run"], "resource": ["action"] }
			}
		},
		{
			"name": "run_id",
			"displayName": "Run ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the workflow run",
			"displayOptions": {
				"show": { "operation": ["actions/get-reviews-for-run"], "resource": ["action"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["actions/approve-workflow-run"], "resource": ["action"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["actions/approve-workflow-run"], "resource": ["action"] }
			}
		},
		{
			"name": "run_id",
			"displayName": "Run ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the workflow run",
			"displayOptions": {
				"show": { "operation": ["actions/approve-workflow-run"], "resource": ["action"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["actions/list-workflow-run-artifacts"], "resource": ["action"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["actions/list-workflow-run-artifacts"], "resource": ["action"] }
			}
		},
		{
			"name": "run_id",
			"displayName": "Run ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the workflow run",
			"displayOptions": {
				"show": { "operation": ["actions/list-workflow-run-artifacts"], "resource": ["action"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["actions/list-workflow-run-artifacts"], "resource": ["action"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["actions/get-workflow-run-attempt"], "resource": ["action"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["actions/get-workflow-run-attempt"], "resource": ["action"] }
			}
		},
		{
			"name": "run_id",
			"displayName": "Run ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the workflow run",
			"displayOptions": {
				"show": { "operation": ["actions/get-workflow-run-attempt"], "resource": ["action"] }
			}
		},
		{
			"name": "attempt_number",
			"displayName": "Attempt Number",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The attempt number of the workflow run",
			"displayOptions": {
				"show": { "operation": ["actions/get-workflow-run-attempt"], "resource": ["action"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "exclude_pull_requests",
					"displayName": "Exclude Pull Requests",
					"type": "boolean",
					"default": false,
					"description": "If `true` pull requests are omitted from the response (empty array)",
					"routing": { "send": { "type": "query", "property": "exclude_pull_requests" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["actions/get-workflow-run-attempt"], "resource": ["action"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["actions/list-jobs-for-workflow-run-attempt"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["actions/list-jobs-for-workflow-run-attempt"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "run_id",
			"displayName": "Run ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the workflow run",
			"displayOptions": {
				"show": {
					"operation": ["actions/list-jobs-for-workflow-run-attempt"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "attempt_number",
			"displayName": "Attempt Number",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The attempt number of the workflow run",
			"displayOptions": {
				"show": {
					"operation": ["actions/list-jobs-for-workflow-run-attempt"],
					"resource": ["action"]
				}
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": {
					"operation": ["actions/list-jobs-for-workflow-run-attempt"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["actions/download-workflow-run-attempt-logs"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["actions/download-workflow-run-attempt-logs"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "run_id",
			"displayName": "Run ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the workflow run",
			"displayOptions": {
				"show": {
					"operation": ["actions/download-workflow-run-attempt-logs"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "attempt_number",
			"displayName": "Attempt Number",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The attempt number of the workflow run",
			"displayOptions": {
				"show": {
					"operation": ["actions/download-workflow-run-attempt-logs"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["actions/cancel-workflow-run"], "resource": ["action"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["actions/cancel-workflow-run"], "resource": ["action"] }
			}
		},
		{
			"name": "run_id",
			"displayName": "Run ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the workflow run",
			"displayOptions": {
				"show": { "operation": ["actions/cancel-workflow-run"], "resource": ["action"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["actions/list-jobs-for-workflow-run"], "resource": ["action"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["actions/list-jobs-for-workflow-run"], "resource": ["action"] }
			}
		},
		{
			"name": "run_id",
			"displayName": "Run ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the workflow run",
			"displayOptions": {
				"show": { "operation": ["actions/list-jobs-for-workflow-run"], "resource": ["action"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "filter",
					"displayName": "Filter",
					"type": "options",
					"default": "latest",
					"description": "Filters jobs by their `completed_at` timestamp. `latest` returns jobs from the most recent execution of the workflow run...",
					"options": [{ "name": "Latest", "value": "latest" }, { "name": "All", "value": "all" }],
					"routing": { "send": { "type": "query", "property": "filter" } }
				},
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["actions/list-jobs-for-workflow-run"], "resource": ["action"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["actions/delete-workflow-run-logs"], "resource": ["action"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["actions/delete-workflow-run-logs"], "resource": ["action"] }
			}
		},
		{
			"name": "run_id",
			"displayName": "Run ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the workflow run",
			"displayOptions": {
				"show": { "operation": ["actions/delete-workflow-run-logs"], "resource": ["action"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["actions/download-workflow-run-logs"], "resource": ["action"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["actions/download-workflow-run-logs"], "resource": ["action"] }
			}
		},
		{
			"name": "run_id",
			"displayName": "Run ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the workflow run",
			"displayOptions": {
				"show": { "operation": ["actions/download-workflow-run-logs"], "resource": ["action"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["actions/get-pending-deployments-for-run"], "resource": ["action"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["actions/get-pending-deployments-for-run"], "resource": ["action"] }
			}
		},
		{
			"name": "run_id",
			"displayName": "Run ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the workflow run",
			"displayOptions": {
				"show": { "operation": ["actions/get-pending-deployments-for-run"], "resource": ["action"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["actions/review-pending-deployments-for-run"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["actions/review-pending-deployments-for-run"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "run_id",
			"displayName": "Run ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the workflow run",
			"displayOptions": {
				"show": {
					"operation": ["actions/review-pending-deployments-for-run"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "comment",
			"displayName": "Comment",
			"type": "string",
			"default": "",
			"required": true,
			"description": "A comment to accompany the deployment review",
			"placeholder": "e.g. Ship it!",
			"routing": { "send": { "type": "body", "property": "comment" } },
			"displayOptions": {
				"show": {
					"operation": ["actions/review-pending-deployments-for-run"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "environment_ids",
			"displayName": "Environment IDs",
			"type": "json",
			"default": "{}",
			"required": true,
			"description": "The list of environment ids to approve or reject",
			"routing": { "send": { "type": "body", "property": "environment_ids" } },
			"displayOptions": {
				"show": {
					"operation": ["actions/review-pending-deployments-for-run"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "state",
			"displayName": "State",
			"type": "string",
			"default": "",
			"required": true,
			"description": "Whether to approve or reject deployment to the specified environments",
			"placeholder": "e.g. approved",
			"routing": { "send": { "type": "body", "property": "state" } },
			"displayOptions": {
				"show": {
					"operation": ["actions/review-pending-deployments-for-run"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["actions/re-run-workflow"], "resource": ["action"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["actions/re-run-workflow"], "resource": ["action"] }
			}
		},
		{
			"name": "run_id",
			"displayName": "Run ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the workflow run",
			"displayOptions": {
				"show": { "operation": ["actions/re-run-workflow"], "resource": ["action"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "enable_debug_logging",
					"displayName": "Enable Debug Logging",
					"type": "boolean",
					"default": false,
					"description": "Whether to enable debug logging for the re-run",
					"routing": { "send": { "type": "body", "property": "enable_debug_logging" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["actions/re-run-workflow"], "resource": ["action"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["actions/re-run-workflow-failed-jobs"], "resource": ["action"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["actions/re-run-workflow-failed-jobs"], "resource": ["action"] }
			}
		},
		{
			"name": "run_id",
			"displayName": "Run ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the workflow run",
			"displayOptions": {
				"show": { "operation": ["actions/re-run-workflow-failed-jobs"], "resource": ["action"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "enable_debug_logging",
					"displayName": "Enable Debug Logging",
					"type": "boolean",
					"default": false,
					"description": "Whether to enable debug logging for the re-run",
					"routing": { "send": { "type": "body", "property": "enable_debug_logging" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["actions/re-run-workflow-failed-jobs"], "resource": ["action"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["actions/get-workflow-run-usage"], "resource": ["action"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["actions/get-workflow-run-usage"], "resource": ["action"] }
			}
		},
		{
			"name": "run_id",
			"displayName": "Run ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the workflow run",
			"displayOptions": {
				"show": { "operation": ["actions/get-workflow-run-usage"], "resource": ["action"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["actions/list-repo-secrets"], "resource": ["action"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["actions/list-repo-secrets"], "resource": ["action"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["actions/list-repo-secrets"], "resource": ["action"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["actions/get-repo-public-key"], "resource": ["action"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["actions/get-repo-public-key"], "resource": ["action"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["actions/delete-repo-secret"], "resource": ["action"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["actions/delete-repo-secret"], "resource": ["action"] }
			}
		},
		{
			"name": "secret_name",
			"displayName": "Secret Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the secret",
			"displayOptions": {
				"show": { "operation": ["actions/delete-repo-secret"], "resource": ["action"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["actions/get-repo-secret"], "resource": ["action"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["actions/get-repo-secret"], "resource": ["action"] }
			}
		},
		{
			"name": "secret_name",
			"displayName": "Secret Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the secret",
			"displayOptions": {
				"show": { "operation": ["actions/get-repo-secret"], "resource": ["action"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["actions/create-or-update-repo-secret"], "resource": ["action"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["actions/create-or-update-repo-secret"], "resource": ["action"] }
			}
		},
		{
			"name": "secret_name",
			"displayName": "Secret Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the secret",
			"displayOptions": {
				"show": { "operation": ["actions/create-or-update-repo-secret"], "resource": ["action"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "encrypted_value",
					"displayName": "Encrypted Value",
					"type": "string",
					"default": "",
					"description": "Value for your secret, encrypted with [LibSodium](https://libsodium.gitbook.io/doc/bindings_for_other_languages) using t...",
					"routing": { "send": { "type": "body", "property": "encrypted_value" } }
				},
				{
					"name": "key_id",
					"displayName": "Key ID",
					"type": "string",
					"default": "",
					"description": "ID of the key you used to encrypt the secret",
					"routing": { "send": { "type": "body", "property": "key_id" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["actions/create-or-update-repo-secret"], "resource": ["action"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["actions/list-repo-variables"], "resource": ["action"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["actions/list-repo-variables"], "resource": ["action"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 10,
					"description": "The number of results per page (max 30)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["actions/list-repo-variables"], "resource": ["action"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["actions/create-repo-variable"], "resource": ["action"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["actions/create-repo-variable"], "resource": ["action"] }
			}
		},
		{
			"name": "name",
			"displayName": "Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the variable",
			"routing": { "send": { "type": "body", "property": "name" } },
			"displayOptions": {
				"show": { "operation": ["actions/create-repo-variable"], "resource": ["action"] }
			}
		},
		{
			"name": "value",
			"displayName": "Value",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The value of the variable",
			"routing": { "send": { "type": "body", "property": "value" } },
			"displayOptions": {
				"show": { "operation": ["actions/create-repo-variable"], "resource": ["action"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["actions/delete-repo-variable"], "resource": ["action"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["actions/delete-repo-variable"], "resource": ["action"] }
			}
		},
		{
			"name": "name",
			"displayName": "Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the variable",
			"displayOptions": {
				"show": { "operation": ["actions/delete-repo-variable"], "resource": ["action"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["actions/get-repo-variable"], "resource": ["action"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["actions/get-repo-variable"], "resource": ["action"] }
			}
		},
		{
			"name": "name",
			"displayName": "Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the variable",
			"displayOptions": {
				"show": { "operation": ["actions/get-repo-variable"], "resource": ["action"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["actions/update-repo-variable"], "resource": ["action"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["actions/update-repo-variable"], "resource": ["action"] }
			}
		},
		{
			"name": "name",
			"displayName": "Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the variable",
			"displayOptions": {
				"show": { "operation": ["actions/update-repo-variable"], "resource": ["action"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "name",
					"displayName": "Name",
					"type": "string",
					"default": "",
					"description": "The name of the variable",
					"routing": { "send": { "type": "body", "property": "name" } }
				},
				{
					"name": "value",
					"displayName": "Value",
					"type": "string",
					"default": "",
					"description": "The value of the variable",
					"routing": { "send": { "type": "body", "property": "value" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["actions/update-repo-variable"], "resource": ["action"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["actions/list-repo-workflows"], "resource": ["action"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["actions/list-repo-workflows"], "resource": ["action"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["actions/list-repo-workflows"], "resource": ["action"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["actions/get-workflow"], "resource": ["action"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["actions/get-workflow"], "resource": ["action"] }
			}
		},
		{
			"name": "workflow_id",
			"displayName": "Workflow ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The ID of the workflow. You can also pass the workflow file name as a string",
			"displayOptions": {
				"show": { "operation": ["actions/get-workflow"], "resource": ["action"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["actions/disable-workflow"], "resource": ["action"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["actions/disable-workflow"], "resource": ["action"] }
			}
		},
		{
			"name": "workflow_id",
			"displayName": "Workflow ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The ID of the workflow. You can also pass the workflow file name as a string",
			"displayOptions": {
				"show": { "operation": ["actions/disable-workflow"], "resource": ["action"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["actions/create-workflow-dispatch"], "resource": ["action"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["actions/create-workflow-dispatch"], "resource": ["action"] }
			}
		},
		{
			"name": "workflow_id",
			"displayName": "Workflow ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The ID of the workflow. You can also pass the workflow file name as a string",
			"displayOptions": {
				"show": { "operation": ["actions/create-workflow-dispatch"], "resource": ["action"] }
			}
		},
		{
			"name": "ref",
			"displayName": "Ref",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The git reference for the workflow. The reference can be a branch or tag name",
			"routing": { "send": { "type": "body", "property": "ref" } },
			"displayOptions": {
				"show": { "operation": ["actions/create-workflow-dispatch"], "resource": ["action"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "inputs",
					"displayName": "Inputs",
					"type": "json",
					"default": "{}",
					"description": "Input keys and values configured in the workflow file. The maximum number of properties is 10. Any default properties co...",
					"routing": { "send": { "type": "body", "property": "inputs" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["actions/create-workflow-dispatch"], "resource": ["action"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["actions/enable-workflow"], "resource": ["action"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["actions/enable-workflow"], "resource": ["action"] }
			}
		},
		{
			"name": "workflow_id",
			"displayName": "Workflow ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The ID of the workflow. You can also pass the workflow file name as a string",
			"displayOptions": {
				"show": { "operation": ["actions/enable-workflow"], "resource": ["action"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["actions/list-workflow-runs"], "resource": ["action"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["actions/list-workflow-runs"], "resource": ["action"] }
			}
		},
		{
			"name": "workflow_id",
			"displayName": "Workflow ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The ID of the workflow. You can also pass the workflow file name as a string",
			"displayOptions": {
				"show": { "operation": ["actions/list-workflow-runs"], "resource": ["action"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "actor",
					"displayName": "Actor",
					"type": "string",
					"default": "",
					"description": "Returns someone's workflow runs. Use the login for the user who created the `push` associated with the check suite or wo...",
					"routing": { "send": { "type": "query", "property": "actor" } }
				},
				{
					"name": "branch",
					"displayName": "Branch",
					"type": "string",
					"default": "",
					"description": "Returns workflow runs associated with a branch. Use the name of the branch of the `push`",
					"routing": { "send": { "type": "query", "property": "branch" } }
				},
				{
					"name": "event",
					"displayName": "Event",
					"type": "string",
					"default": "",
					"description": "Returns workflow run triggered by the event you specify. For example, `push`, `pull_request` or `issue`. For more inform...",
					"routing": { "send": { "type": "query", "property": "event" } }
				},
				{
					"name": "status",
					"displayName": "Status",
					"type": "options",
					"default": "completed",
					"description": "Returns workflow runs with the check run `status` or `conclusion` that you specify. For example, a conclusion can be `su...",
					"options": [
						{ "name": "Completed", "value": "completed" },
						{ "name": "Action Required", "value": "action_required" },
						{ "name": "Cancelled", "value": "cancelled" },
						{ "name": "Failure", "value": "failure" },
						{ "name": "Neutral", "value": "neutral" },
						{ "name": "Skipped", "value": "skipped" },
						{ "name": "Stale", "value": "stale" },
						{ "name": "Success", "value": "success" },
						{ "name": "Timed Out", "value": "timed_out" },
						{ "name": "In Progress", "value": "in_progress" },
						{ "name": "Queued", "value": "queued" },
						{ "name": "Requested", "value": "requested" },
						{ "name": "Waiting", "value": "waiting" },
						{ "name": "Pending", "value": "pending" }
					],
					"routing": { "send": { "type": "query", "property": "status" } }
				},
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				},
				{
					"name": "created",
					"displayName": "Created",
					"type": "string",
					"default": "",
					"description": "Returns workflow runs created within the given date-time range. For more information on the syntax, see \"[Understanding ...",
					"routing": { "send": { "type": "query", "property": "created" } }
				},
				{
					"name": "exclude_pull_requests",
					"displayName": "Exclude Pull Requests",
					"type": "boolean",
					"default": false,
					"description": "If `true` pull requests are omitted from the response (empty array)",
					"routing": { "send": { "type": "query", "property": "exclude_pull_requests" } }
				},
				{
					"name": "check_suite_id",
					"displayName": "Check Suite ID",
					"type": "number",
					"default": 0,
					"description": "Returns workflow runs with the `check_suite_id` that you specify",
					"routing": { "send": { "type": "query", "property": "check_suite_id" } }
				},
				{
					"name": "head_sha",
					"displayName": "Head Sha",
					"type": "string",
					"default": "",
					"description": "Only returns workflow runs that are associated with the specified `head_sha`",
					"routing": { "send": { "type": "query", "property": "head_sha" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["actions/list-workflow-runs"], "resource": ["action"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["actions/get-workflow-usage"], "resource": ["action"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["actions/get-workflow-usage"], "resource": ["action"] }
			}
		},
		{
			"name": "workflow_id",
			"displayName": "Workflow ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The ID of the workflow. You can also pass the workflow file name as a string",
			"displayOptions": {
				"show": { "operation": ["actions/get-workflow-usage"], "resource": ["action"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["issues/list-assignees"], "resource": ["issue"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["issues/list-assignees"], "resource": ["issue"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["issues/list-assignees"], "resource": ["issue"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["issues/check-user-can-be-assigned"], "resource": ["issue"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["issues/check-user-can-be-assigned"], "resource": ["issue"] }
			}
		},
		{
			"name": "assignee",
			"displayName": "Assignee",
			"type": "string",
			"default": "",
			"required": true,
			"displayOptions": {
				"show": { "operation": ["issues/check-user-can-be-assigned"], "resource": ["issue"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["repos/list-autolinks"], "resource": ["repo"] } }
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["repos/list-autolinks"], "resource": ["repo"] } }
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": { "show": { "operation": ["repos/list-autolinks"], "resource": ["repo"] } }
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["repos/create-autolink"], "resource": ["repo"] } }
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["repos/create-autolink"], "resource": ["repo"] } }
		},
		{
			"name": "key_prefix",
			"displayName": "Key Prefix",
			"type": "string",
			"default": "",
			"required": true,
			"description": "This prefix appended by certain characters will generate a link any time it is found in an issue, pull request, or commi...",
			"routing": { "send": { "type": "body", "property": "key_prefix" } },
			"displayOptions": { "show": { "operation": ["repos/create-autolink"], "resource": ["repo"] } }
		},
		{
			"name": "url_template",
			"displayName": "URL Template",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The URL must contain `<num>` for the reference number. `<num>` matches different characters depending on the value of `i...",
			"routing": { "send": { "type": "body", "property": "url_template" } },
			"displayOptions": { "show": { "operation": ["repos/create-autolink"], "resource": ["repo"] } }
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "is_alphanumeric",
					"displayName": "Is Alphanumeric",
					"type": "boolean",
					"default": false,
					"description": "Whether this autolink reference matches alphanumeric characters. If true, the `<num>` parameter of the `url_template` ma...",
					"routing": { "send": { "type": "body", "property": "is_alphanumeric" } }
				}
			],
			"displayOptions": { "show": { "operation": ["repos/create-autolink"], "resource": ["repo"] } }
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["repos/delete-autolink"], "resource": ["repo"] } }
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["repos/delete-autolink"], "resource": ["repo"] } }
		},
		{
			"name": "autolink_id",
			"displayName": "Autolink ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the autolink",
			"displayOptions": { "show": { "operation": ["repos/delete-autolink"], "resource": ["repo"] } }
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["repos/get-autolink"], "resource": ["repo"] } }
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["repos/get-autolink"], "resource": ["repo"] } }
		},
		{
			"name": "autolink_id",
			"displayName": "Autolink ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the autolink",
			"displayOptions": { "show": { "operation": ["repos/get-autolink"], "resource": ["repo"] } }
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/disable-automated-security-fixes"], "resource": ["repo"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/disable-automated-security-fixes"], "resource": ["repo"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/enable-automated-security-fixes"], "resource": ["repo"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/enable-automated-security-fixes"], "resource": ["repo"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["repos/list-branches"], "resource": ["repo"] } }
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["repos/list-branches"], "resource": ["repo"] } }
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "protected",
					"displayName": "Protected",
					"type": "boolean",
					"default": false,
					"description": "Setting to `true` returns only protected branches. When set to `false`, only unprotected branches are returned. Omitting...",
					"routing": { "send": { "type": "query", "property": "protected" } }
				},
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": { "show": { "operation": ["repos/list-branches"], "resource": ["repo"] } }
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["repos/get-branch"], "resource": ["repo"] } }
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["repos/get-branch"], "resource": ["repo"] } }
		},
		{
			"name": "branch",
			"displayName": "Branch",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the branch. Cannot contain wildcard characters. To use wildcard characters in branch names, use [the GraphQL...",
			"displayOptions": { "show": { "operation": ["repos/get-branch"], "resource": ["repo"] } }
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/delete-branch-protection"], "resource": ["repo"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/delete-branch-protection"], "resource": ["repo"] }
			}
		},
		{
			"name": "branch",
			"displayName": "Branch",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the branch. Cannot contain wildcard characters. To use wildcard characters in branch names, use [the GraphQL...",
			"displayOptions": {
				"show": { "operation": ["repos/delete-branch-protection"], "resource": ["repo"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/get-branch-protection"], "resource": ["repo"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/get-branch-protection"], "resource": ["repo"] }
			}
		},
		{
			"name": "branch",
			"displayName": "Branch",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the branch. Cannot contain wildcard characters. To use wildcard characters in branch names, use [the GraphQL...",
			"displayOptions": {
				"show": { "operation": ["repos/get-branch-protection"], "resource": ["repo"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/update-branch-protection"], "resource": ["repo"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/update-branch-protection"], "resource": ["repo"] }
			}
		},
		{
			"name": "branch",
			"displayName": "Branch",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the branch. Cannot contain wildcard characters. To use wildcard characters in branch names, use [the GraphQL...",
			"displayOptions": {
				"show": { "operation": ["repos/update-branch-protection"], "resource": ["repo"] }
			}
		},
		{
			"name": "enforce_admins",
			"displayName": "Enforce Admins",
			"type": "boolean",
			"default": false,
			"required": true,
			"description": "Enforce all configured restrictions for administrators. Set to `true` to enforce required status checks for repository a...",
			"routing": { "send": { "type": "body", "property": "enforce_admins" } },
			"displayOptions": {
				"show": { "operation": ["repos/update-branch-protection"], "resource": ["repo"] }
			}
		},
		{
			"name": "required_pull_request_reviews",
			"displayName": "Required Pull Request Reviews",
			"type": "json",
			"default": "{}",
			"required": true,
			"description": "Require at least one approving review on a pull request, before merging. Set to `null` to disable",
			"routing": { "send": { "type": "body", "property": "required_pull_request_reviews" } },
			"displayOptions": {
				"show": { "operation": ["repos/update-branch-protection"], "resource": ["repo"] }
			}
		},
		{
			"name": "required_status_checks",
			"displayName": "Required Status Checks",
			"type": "json",
			"default": "{}",
			"required": true,
			"description": "Require status checks to pass before merging. Set to `null` to disable",
			"routing": { "send": { "type": "body", "property": "required_status_checks" } },
			"displayOptions": {
				"show": { "operation": ["repos/update-branch-protection"], "resource": ["repo"] }
			}
		},
		{
			"name": "restrictions",
			"displayName": "Restrictions",
			"type": "json",
			"default": "{}",
			"required": true,
			"description": "Restrict who can push to the protected branch. User, app, and team `restrictions` are only available for organization-ow...",
			"routing": { "send": { "type": "body", "property": "restrictions" } },
			"displayOptions": {
				"show": { "operation": ["repos/update-branch-protection"], "resource": ["repo"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "allow_deletions",
					"displayName": "Allow Deletions",
					"type": "boolean",
					"default": false,
					"description": "Allows deletion of the protected branch by anyone with write access to the repository. Set to `false` to prevent deletio...",
					"routing": { "send": { "type": "body", "property": "allow_deletions" } }
				},
				{
					"name": "allow_force_pushes",
					"displayName": "Allow Force Pushes",
					"type": "boolean",
					"default": false,
					"description": "Permits force pushes to the protected branch by anyone with write access to the repository. Set to `true` to allow force...",
					"routing": { "send": { "type": "body", "property": "allow_force_pushes" } }
				},
				{
					"name": "allow_fork_syncing",
					"displayName": "Allow Fork Syncing",
					"type": "boolean",
					"default": false,
					"description": "Whether users can pull changes from upstream when the branch is locked. Set to `true` to allow fork syncing. Set to `fal...",
					"routing": { "send": { "type": "body", "property": "allow_fork_syncing" } }
				},
				{
					"name": "block_creations",
					"displayName": "Block Creations",
					"type": "boolean",
					"default": false,
					"description": "If set to `true`, the `restrictions` branch protection settings which limits who can push will also block pushes which c...",
					"routing": { "send": { "type": "body", "property": "block_creations" } }
				},
				{
					"name": "lock_branch",
					"displayName": "Lock Branch",
					"type": "boolean",
					"default": false,
					"description": "Whether to set the branch as read-only. If this is true, users will not be able to push to the branch. Default: `false`",
					"routing": { "send": { "type": "body", "property": "lock_branch" } }
				},
				{
					"name": "required_conversation_resolution",
					"displayName": "Required Conversation Resolution",
					"type": "boolean",
					"default": false,
					"description": "Requires all conversations on code to be resolved before a pull request can be merged into a branch that matches this ru...",
					"routing": { "send": { "type": "body", "property": "required_conversation_resolution" } }
				},
				{
					"name": "required_linear_history",
					"displayName": "Required Linear History",
					"type": "boolean",
					"default": false,
					"description": "Enforces a linear commit Git history, which prevents anyone from pushing merge commits to a branch. Set to `true` to enf...",
					"routing": { "send": { "type": "body", "property": "required_linear_history" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["repos/update-branch-protection"], "resource": ["repo"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/delete-admin-branch-protection"], "resource": ["repo"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/delete-admin-branch-protection"], "resource": ["repo"] }
			}
		},
		{
			"name": "branch",
			"displayName": "Branch",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the branch. Cannot contain wildcard characters. To use wildcard characters in branch names, use [the GraphQL...",
			"displayOptions": {
				"show": { "operation": ["repos/delete-admin-branch-protection"], "resource": ["repo"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/get-admin-branch-protection"], "resource": ["repo"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/get-admin-branch-protection"], "resource": ["repo"] }
			}
		},
		{
			"name": "branch",
			"displayName": "Branch",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the branch. Cannot contain wildcard characters. To use wildcard characters in branch names, use [the GraphQL...",
			"displayOptions": {
				"show": { "operation": ["repos/get-admin-branch-protection"], "resource": ["repo"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/set-admin-branch-protection"], "resource": ["repo"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/set-admin-branch-protection"], "resource": ["repo"] }
			}
		},
		{
			"name": "branch",
			"displayName": "Branch",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the branch. Cannot contain wildcard characters. To use wildcard characters in branch names, use [the GraphQL...",
			"displayOptions": {
				"show": { "operation": ["repos/set-admin-branch-protection"], "resource": ["repo"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["repos/delete-pull-request-review-protection"],
					"resource": ["repo"]
				}
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["repos/delete-pull-request-review-protection"],
					"resource": ["repo"]
				}
			}
		},
		{
			"name": "branch",
			"displayName": "Branch",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the branch. Cannot contain wildcard characters. To use wildcard characters in branch names, use [the GraphQL...",
			"displayOptions": {
				"show": {
					"operation": ["repos/delete-pull-request-review-protection"],
					"resource": ["repo"]
				}
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/get-pull-request-review-protection"], "resource": ["repo"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/get-pull-request-review-protection"], "resource": ["repo"] }
			}
		},
		{
			"name": "branch",
			"displayName": "Branch",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the branch. Cannot contain wildcard characters. To use wildcard characters in branch names, use [the GraphQL...",
			"displayOptions": {
				"show": { "operation": ["repos/get-pull-request-review-protection"], "resource": ["repo"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["repos/update-pull-request-review-protection"],
					"resource": ["repo"]
				}
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["repos/update-pull-request-review-protection"],
					"resource": ["repo"]
				}
			}
		},
		{
			"name": "branch",
			"displayName": "Branch",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the branch. Cannot contain wildcard characters. To use wildcard characters in branch names, use [the GraphQL...",
			"displayOptions": {
				"show": {
					"operation": ["repos/update-pull-request-review-protection"],
					"resource": ["repo"]
				}
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "bypass_pull_request_allowances",
					"displayName": "Bypass Pull Request Allowances",
					"type": "json",
					"default": "{}",
					"description": "Allow specific users, teams, or apps to bypass pull request requirements",
					"routing": { "send": { "type": "body", "property": "bypass_pull_request_allowances" } }
				},
				{
					"name": "dismiss_stale_reviews",
					"displayName": "Dismiss Stale Reviews",
					"type": "boolean",
					"default": false,
					"description": "Set to `true` if you want to automatically dismiss approving reviews when someone pushes a new commit",
					"routing": { "send": { "type": "body", "property": "dismiss_stale_reviews" } }
				},
				{
					"name": "dismissal_restrictions",
					"displayName": "Dismissal Restrictions",
					"type": "json",
					"default": "{}",
					"description": "Specify which users, teams, and apps can dismiss pull request reviews. Pass an empty `dismissal_restrictions` object to ...",
					"routing": { "send": { "type": "body", "property": "dismissal_restrictions" } }
				},
				{
					"name": "require_code_owner_reviews",
					"displayName": "Require Code Owner Reviews",
					"type": "boolean",
					"default": false,
					"description": "Blocks merging pull requests until [code owners](https://docs.github.com/articles/about-code-owners/) have reviewed",
					"routing": { "send": { "type": "body", "property": "require_code_owner_reviews" } }
				},
				{
					"name": "require_last_push_approval",
					"displayName": "Require Last Push Approval",
					"type": "boolean",
					"default": false,
					"description": "Whether the most recent push must be approved by someone other than the person who pushed it. Default: `false`",
					"routing": { "send": { "type": "body", "property": "require_last_push_approval" } }
				},
				{
					"name": "required_approving_review_count",
					"displayName": "Required Approving Review Count",
					"type": "number",
					"default": 0,
					"description": "Specifies the number of reviewers required to approve pull requests. Use a number between 1 and 6 or 0 to not require re...",
					"routing": { "send": { "type": "body", "property": "required_approving_review_count" } }
				}
			],
			"displayOptions": {
				"show": {
					"operation": ["repos/update-pull-request-review-protection"],
					"resource": ["repo"]
				}
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/delete-commit-signature-protection"], "resource": ["repo"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/delete-commit-signature-protection"], "resource": ["repo"] }
			}
		},
		{
			"name": "branch",
			"displayName": "Branch",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the branch. Cannot contain wildcard characters. To use wildcard characters in branch names, use [the GraphQL...",
			"displayOptions": {
				"show": { "operation": ["repos/delete-commit-signature-protection"], "resource": ["repo"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/get-commit-signature-protection"], "resource": ["repo"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/get-commit-signature-protection"], "resource": ["repo"] }
			}
		},
		{
			"name": "branch",
			"displayName": "Branch",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the branch. Cannot contain wildcard characters. To use wildcard characters in branch names, use [the GraphQL...",
			"displayOptions": {
				"show": { "operation": ["repos/get-commit-signature-protection"], "resource": ["repo"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/create-commit-signature-protection"], "resource": ["repo"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/create-commit-signature-protection"], "resource": ["repo"] }
			}
		},
		{
			"name": "branch",
			"displayName": "Branch",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the branch. Cannot contain wildcard characters. To use wildcard characters in branch names, use [the GraphQL...",
			"displayOptions": {
				"show": { "operation": ["repos/create-commit-signature-protection"], "resource": ["repo"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/remove-status-check-protection"], "resource": ["repo"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/remove-status-check-protection"], "resource": ["repo"] }
			}
		},
		{
			"name": "branch",
			"displayName": "Branch",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the branch. Cannot contain wildcard characters. To use wildcard characters in branch names, use [the GraphQL...",
			"displayOptions": {
				"show": { "operation": ["repos/remove-status-check-protection"], "resource": ["repo"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/get-status-checks-protection"], "resource": ["repo"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/get-status-checks-protection"], "resource": ["repo"] }
			}
		},
		{
			"name": "branch",
			"displayName": "Branch",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the branch. Cannot contain wildcard characters. To use wildcard characters in branch names, use [the GraphQL...",
			"displayOptions": {
				"show": { "operation": ["repos/get-status-checks-protection"], "resource": ["repo"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/update-status-check-protection"], "resource": ["repo"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/update-status-check-protection"], "resource": ["repo"] }
			}
		},
		{
			"name": "branch",
			"displayName": "Branch",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the branch. Cannot contain wildcard characters. To use wildcard characters in branch names, use [the GraphQL...",
			"displayOptions": {
				"show": { "operation": ["repos/update-status-check-protection"], "resource": ["repo"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "checks",
					"displayName": "Checks",
					"type": "json",
					"default": "{}",
					"description": "The list of status checks to require in order to merge into this branch",
					"routing": { "send": { "type": "body", "property": "checks" } }
				},
				{
					"name": "contexts",
					"displayName": "Contexts",
					"type": "string",
					"default": "",
					"description": "**Deprecated**: The list of status checks to require in order to merge into this branch. If any of these checks have rec...",
					"routing": { "send": { "type": "body", "property": "contexts" } }
				},
				{
					"name": "strict",
					"displayName": "Strict",
					"type": "boolean",
					"default": false,
					"description": "Require branches to be up to date before merging",
					"routing": { "send": { "type": "body", "property": "strict" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["repos/update-status-check-protection"], "resource": ["repo"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/remove-status-check-contexts"], "resource": ["repo"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/remove-status-check-contexts"], "resource": ["repo"] }
			}
		},
		{
			"name": "branch",
			"displayName": "Branch",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the branch. Cannot contain wildcard characters. To use wildcard characters in branch names, use [the GraphQL...",
			"displayOptions": {
				"show": { "operation": ["repos/remove-status-check-contexts"], "resource": ["repo"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/get-all-status-check-contexts"], "resource": ["repo"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/get-all-status-check-contexts"], "resource": ["repo"] }
			}
		},
		{
			"name": "branch",
			"displayName": "Branch",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the branch. Cannot contain wildcard characters. To use wildcard characters in branch names, use [the GraphQL...",
			"displayOptions": {
				"show": { "operation": ["repos/get-all-status-check-contexts"], "resource": ["repo"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/add-status-check-contexts"], "resource": ["repo"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/add-status-check-contexts"], "resource": ["repo"] }
			}
		},
		{
			"name": "branch",
			"displayName": "Branch",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the branch. Cannot contain wildcard characters. To use wildcard characters in branch names, use [the GraphQL...",
			"displayOptions": {
				"show": { "operation": ["repos/add-status-check-contexts"], "resource": ["repo"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/set-status-check-contexts"], "resource": ["repo"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/set-status-check-contexts"], "resource": ["repo"] }
			}
		},
		{
			"name": "branch",
			"displayName": "Branch",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the branch. Cannot contain wildcard characters. To use wildcard characters in branch names, use [the GraphQL...",
			"displayOptions": {
				"show": { "operation": ["repos/set-status-check-contexts"], "resource": ["repo"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/delete-access-restrictions"], "resource": ["repo"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/delete-access-restrictions"], "resource": ["repo"] }
			}
		},
		{
			"name": "branch",
			"displayName": "Branch",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the branch. Cannot contain wildcard characters. To use wildcard characters in branch names, use [the GraphQL...",
			"displayOptions": {
				"show": { "operation": ["repos/delete-access-restrictions"], "resource": ["repo"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/get-access-restrictions"], "resource": ["repo"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/get-access-restrictions"], "resource": ["repo"] }
			}
		},
		{
			"name": "branch",
			"displayName": "Branch",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the branch. Cannot contain wildcard characters. To use wildcard characters in branch names, use [the GraphQL...",
			"displayOptions": {
				"show": { "operation": ["repos/get-access-restrictions"], "resource": ["repo"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/remove-app-access-restrictions"], "resource": ["repo"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/remove-app-access-restrictions"], "resource": ["repo"] }
			}
		},
		{
			"name": "branch",
			"displayName": "Branch",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the branch. Cannot contain wildcard characters. To use wildcard characters in branch names, use [the GraphQL...",
			"displayOptions": {
				"show": { "operation": ["repos/remove-app-access-restrictions"], "resource": ["repo"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["repos/get-apps-with-access-to-protected-branch"],
					"resource": ["repo"]
				}
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["repos/get-apps-with-access-to-protected-branch"],
					"resource": ["repo"]
				}
			}
		},
		{
			"name": "branch",
			"displayName": "Branch",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the branch. Cannot contain wildcard characters. To use wildcard characters in branch names, use [the GraphQL...",
			"displayOptions": {
				"show": {
					"operation": ["repos/get-apps-with-access-to-protected-branch"],
					"resource": ["repo"]
				}
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/add-app-access-restrictions"], "resource": ["repo"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/add-app-access-restrictions"], "resource": ["repo"] }
			}
		},
		{
			"name": "branch",
			"displayName": "Branch",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the branch. Cannot contain wildcard characters. To use wildcard characters in branch names, use [the GraphQL...",
			"displayOptions": {
				"show": { "operation": ["repos/add-app-access-restrictions"], "resource": ["repo"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/set-app-access-restrictions"], "resource": ["repo"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/set-app-access-restrictions"], "resource": ["repo"] }
			}
		},
		{
			"name": "branch",
			"displayName": "Branch",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the branch. Cannot contain wildcard characters. To use wildcard characters in branch names, use [the GraphQL...",
			"displayOptions": {
				"show": { "operation": ["repos/set-app-access-restrictions"], "resource": ["repo"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/remove-team-access-restrictions"], "resource": ["repo"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/remove-team-access-restrictions"], "resource": ["repo"] }
			}
		},
		{
			"name": "branch",
			"displayName": "Branch",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the branch. Cannot contain wildcard characters. To use wildcard characters in branch names, use [the GraphQL...",
			"displayOptions": {
				"show": { "operation": ["repos/remove-team-access-restrictions"], "resource": ["repo"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["repos/get-teams-with-access-to-protected-branch"],
					"resource": ["repo"]
				}
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["repos/get-teams-with-access-to-protected-branch"],
					"resource": ["repo"]
				}
			}
		},
		{
			"name": "branch",
			"displayName": "Branch",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the branch. Cannot contain wildcard characters. To use wildcard characters in branch names, use [the GraphQL...",
			"displayOptions": {
				"show": {
					"operation": ["repos/get-teams-with-access-to-protected-branch"],
					"resource": ["repo"]
				}
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/add-team-access-restrictions"], "resource": ["repo"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/add-team-access-restrictions"], "resource": ["repo"] }
			}
		},
		{
			"name": "branch",
			"displayName": "Branch",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the branch. Cannot contain wildcard characters. To use wildcard characters in branch names, use [the GraphQL...",
			"displayOptions": {
				"show": { "operation": ["repos/add-team-access-restrictions"], "resource": ["repo"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/set-team-access-restrictions"], "resource": ["repo"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/set-team-access-restrictions"], "resource": ["repo"] }
			}
		},
		{
			"name": "branch",
			"displayName": "Branch",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the branch. Cannot contain wildcard characters. To use wildcard characters in branch names, use [the GraphQL...",
			"displayOptions": {
				"show": { "operation": ["repos/set-team-access-restrictions"], "resource": ["repo"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/remove-user-access-restrictions"], "resource": ["repo"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/remove-user-access-restrictions"], "resource": ["repo"] }
			}
		},
		{
			"name": "branch",
			"displayName": "Branch",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the branch. Cannot contain wildcard characters. To use wildcard characters in branch names, use [the GraphQL...",
			"displayOptions": {
				"show": { "operation": ["repos/remove-user-access-restrictions"], "resource": ["repo"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["repos/get-users-with-access-to-protected-branch"],
					"resource": ["repo"]
				}
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["repos/get-users-with-access-to-protected-branch"],
					"resource": ["repo"]
				}
			}
		},
		{
			"name": "branch",
			"displayName": "Branch",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the branch. Cannot contain wildcard characters. To use wildcard characters in branch names, use [the GraphQL...",
			"displayOptions": {
				"show": {
					"operation": ["repos/get-users-with-access-to-protected-branch"],
					"resource": ["repo"]
				}
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/add-user-access-restrictions"], "resource": ["repo"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/add-user-access-restrictions"], "resource": ["repo"] }
			}
		},
		{
			"name": "branch",
			"displayName": "Branch",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the branch. Cannot contain wildcard characters. To use wildcard characters in branch names, use [the GraphQL...",
			"displayOptions": {
				"show": { "operation": ["repos/add-user-access-restrictions"], "resource": ["repo"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/set-user-access-restrictions"], "resource": ["repo"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/set-user-access-restrictions"], "resource": ["repo"] }
			}
		},
		{
			"name": "branch",
			"displayName": "Branch",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the branch. Cannot contain wildcard characters. To use wildcard characters in branch names, use [the GraphQL...",
			"displayOptions": {
				"show": { "operation": ["repos/set-user-access-restrictions"], "resource": ["repo"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["repos/rename-branch"], "resource": ["repo"] } }
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["repos/rename-branch"], "resource": ["repo"] } }
		},
		{
			"name": "branch",
			"displayName": "Branch",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the branch. Cannot contain wildcard characters. To use wildcard characters in branch names, use [the GraphQL...",
			"displayOptions": { "show": { "operation": ["repos/rename-branch"], "resource": ["repo"] } }
		},
		{
			"name": "new_name",
			"displayName": "New Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The new name of the branch",
			"routing": { "send": { "type": "body", "property": "new_name" } },
			"displayOptions": { "show": { "operation": ["repos/rename-branch"], "resource": ["repo"] } }
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["checks/create"], "resource": ["check"] } }
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["checks/create"], "resource": ["check"] } }
		},
		{
			"name": "head_sha",
			"displayName": "Head Sha",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The SHA of the commit",
			"routing": { "send": { "type": "body", "property": "head_sha" } },
			"displayOptions": { "show": { "operation": ["checks/create"], "resource": ["check"] } }
		},
		{
			"name": "name",
			"displayName": "Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the check. For example, \"code-coverage\"",
			"routing": { "send": { "type": "body", "property": "name" } },
			"displayOptions": { "show": { "operation": ["checks/create"], "resource": ["check"] } }
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "actions",
					"displayName": "Actions",
					"type": "json",
					"default": "{}",
					"description": "Displays a button on GitHub that can be clicked to alert your app to do additional tasks. For example, a code linting ap...",
					"routing": { "send": { "type": "body", "property": "actions" } }
				},
				{
					"name": "completed_at",
					"displayName": "Completed At",
					"type": "string",
					"default": "",
					"description": "The time the check completed. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM...",
					"routing": { "send": { "type": "body", "property": "completed_at" } }
				},
				{
					"name": "conclusion",
					"displayName": "Conclusion",
					"type": "string",
					"default": "",
					"description": "**Required if you provide `completed_at` or a `status` of `completed`**. The final conclusion of the check.  **Note:** P...",
					"routing": { "send": { "type": "body", "property": "conclusion" } }
				},
				{
					"name": "details_url",
					"displayName": "Details URL",
					"type": "string",
					"default": "",
					"description": "The URL of the integrator's site that has the full details of the check. If the integrator does not provide this, then t...",
					"routing": { "send": { "type": "body", "property": "details_url" } }
				},
				{
					"name": "external_id",
					"displayName": "External ID",
					"type": "string",
					"default": "",
					"description": "A reference for the run on the integrator's system",
					"routing": { "send": { "type": "body", "property": "external_id" } }
				},
				{
					"name": "output",
					"displayName": "Output",
					"type": "json",
					"default": "{}",
					"description": "Check runs can accept a variety of data in the `output` object, including a `title` and `summary` and can optionally pro...",
					"routing": { "send": { "type": "body", "property": "output" } }
				},
				{
					"name": "started_at",
					"displayName": "Started At",
					"type": "string",
					"default": "",
					"description": "The time that the check run began. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YY...",
					"routing": { "send": { "type": "body", "property": "started_at" } }
				},
				{
					"name": "status",
					"displayName": "Status",
					"type": "string",
					"default": "",
					"description": "The current status",
					"routing": { "send": { "type": "body", "property": "status" } }
				}
			],
			"displayOptions": { "show": { "operation": ["checks/create"], "resource": ["check"] } }
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["checks/get"], "resource": ["check"] } }
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["checks/get"], "resource": ["check"] } }
		},
		{
			"name": "check_run_id",
			"displayName": "Check Run ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the check run",
			"displayOptions": { "show": { "operation": ["checks/get"], "resource": ["check"] } }
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["checks/update"], "resource": ["check"] } }
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["checks/update"], "resource": ["check"] } }
		},
		{
			"name": "check_run_id",
			"displayName": "Check Run ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the check run",
			"displayOptions": { "show": { "operation": ["checks/update"], "resource": ["check"] } }
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "actions",
					"displayName": "Actions",
					"type": "json",
					"default": "{}",
					"description": "Possible further actions the integrator can perform, which a user may trigger. Each action includes a `label`, `identifi...",
					"routing": { "send": { "type": "body", "property": "actions" } }
				},
				{
					"name": "completed_at",
					"displayName": "Completed At",
					"type": "string",
					"default": "",
					"description": "The time the check completed. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM...",
					"routing": { "send": { "type": "body", "property": "completed_at" } }
				},
				{
					"name": "conclusion",
					"displayName": "Conclusion",
					"type": "string",
					"default": "",
					"description": "**Required if you provide `completed_at` or a `status` of `completed`**. The final conclusion of the check.  **Note:** P...",
					"routing": { "send": { "type": "body", "property": "conclusion" } }
				},
				{
					"name": "details_url",
					"displayName": "Details URL",
					"type": "string",
					"default": "",
					"description": "The URL of the integrator's site that has the full details of the check",
					"routing": { "send": { "type": "body", "property": "details_url" } }
				},
				{
					"name": "external_id",
					"displayName": "External ID",
					"type": "string",
					"default": "",
					"description": "A reference for the run on the integrator's system",
					"routing": { "send": { "type": "body", "property": "external_id" } }
				},
				{
					"name": "name",
					"displayName": "Name",
					"type": "string",
					"default": "",
					"description": "The name of the check. For example, \"code-coverage\"",
					"routing": { "send": { "type": "body", "property": "name" } }
				},
				{
					"name": "output",
					"displayName": "Output",
					"type": "json",
					"default": "{}",
					"description": "Check runs can accept a variety of data in the `output` object, including a `title` and `summary` and can optionally pro...",
					"routing": { "send": { "type": "body", "property": "output" } }
				},
				{
					"name": "started_at",
					"displayName": "Started At",
					"type": "string",
					"default": "",
					"description": "This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`",
					"routing": { "send": { "type": "body", "property": "started_at" } }
				},
				{
					"name": "status",
					"displayName": "Status",
					"type": "string",
					"default": "",
					"description": "The current status",
					"routing": { "send": { "type": "body", "property": "status" } }
				}
			],
			"displayOptions": { "show": { "operation": ["checks/update"], "resource": ["check"] } }
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["checks/list-annotations"], "resource": ["check"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["checks/list-annotations"], "resource": ["check"] }
			}
		},
		{
			"name": "check_run_id",
			"displayName": "Check Run ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the check run",
			"displayOptions": {
				"show": { "operation": ["checks/list-annotations"], "resource": ["check"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["checks/list-annotations"], "resource": ["check"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["checks/rerequest-run"], "resource": ["check"] } }
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["checks/rerequest-run"], "resource": ["check"] } }
		},
		{
			"name": "check_run_id",
			"displayName": "Check Run ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the check run",
			"displayOptions": { "show": { "operation": ["checks/rerequest-run"], "resource": ["check"] } }
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["checks/create-suite"], "resource": ["check"] } }
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["checks/create-suite"], "resource": ["check"] } }
		},
		{
			"name": "head_sha",
			"displayName": "Head Sha",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The sha of the head commit",
			"routing": { "send": { "type": "body", "property": "head_sha" } },
			"displayOptions": { "show": { "operation": ["checks/create-suite"], "resource": ["check"] } }
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["checks/set-suites-preferences"], "resource": ["check"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["checks/set-suites-preferences"], "resource": ["check"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "auto_trigger_checks",
					"displayName": "Auto Trigger Checks",
					"type": "json",
					"default": "{}",
					"description": "Enables or disables automatic creation of CheckSuite events upon pushes to the repository. Enabled by default",
					"routing": { "send": { "type": "body", "property": "auto_trigger_checks" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["checks/set-suites-preferences"], "resource": ["check"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["checks/get-suite"], "resource": ["check"] } }
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["checks/get-suite"], "resource": ["check"] } }
		},
		{
			"name": "check_suite_id",
			"displayName": "Check Suite ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the check suite",
			"displayOptions": { "show": { "operation": ["checks/get-suite"], "resource": ["check"] } }
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["checks/list-for-suite"], "resource": ["check"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["checks/list-for-suite"], "resource": ["check"] }
			}
		},
		{
			"name": "check_suite_id",
			"displayName": "Check Suite ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the check suite",
			"displayOptions": {
				"show": { "operation": ["checks/list-for-suite"], "resource": ["check"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "check_name",
					"displayName": "Check Name",
					"type": "string",
					"default": "",
					"description": "Returns check runs with the specified `name`",
					"routing": { "send": { "type": "query", "property": "check_name" } }
				},
				{
					"name": "status",
					"displayName": "Status",
					"type": "options",
					"default": "queued",
					"description": "Returns check runs with the specified `status`",
					"options": [
						{ "name": "Queued", "value": "queued" },
						{ "name": "In Progress", "value": "in_progress" },
						{ "name": "Completed", "value": "completed" }
					],
					"routing": { "send": { "type": "query", "property": "status" } }
				},
				{
					"name": "filter",
					"displayName": "Filter",
					"type": "options",
					"default": "latest",
					"description": "Filters check runs by their `completed_at` timestamp. `latest` returns the most recent check runs",
					"options": [{ "name": "Latest", "value": "latest" }, { "name": "All", "value": "all" }],
					"routing": { "send": { "type": "query", "property": "filter" } }
				},
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["checks/list-for-suite"], "resource": ["check"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["checks/rerequest-suite"], "resource": ["check"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["checks/rerequest-suite"], "resource": ["check"] }
			}
		},
		{
			"name": "check_suite_id",
			"displayName": "Check Suite ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the check suite",
			"displayOptions": {
				"show": { "operation": ["checks/rerequest-suite"], "resource": ["check"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["code-scanning/list-alerts-for-repo"],
					"resource": ["codeScanning"]
				}
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["code-scanning/list-alerts-for-repo"],
					"resource": ["codeScanning"]
				}
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "tool_name",
					"displayName": "Tool Name",
					"type": "string",
					"default": "",
					"description": "The name of a code scanning tool. Only results by this tool will be listed. You can specify the tool by using either `to...",
					"routing": { "send": { "type": "query", "property": "tool_name" } }
				},
				{
					"name": "tool_guid",
					"displayName": "Tool Guid",
					"type": "string",
					"default": "",
					"description": "The GUID of a code scanning tool. Only results by this tool will be listed. Note that some code scanning tools may not i...",
					"routing": { "send": { "type": "query", "property": "tool_guid" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				},
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "ref",
					"displayName": "Ref",
					"type": "string",
					"default": "",
					"description": "The Git reference for the results you want to list. The `ref` for a branch can be formatted either as `refs/heads/<branc...",
					"routing": { "send": { "type": "query", "property": "ref" } }
				},
				{
					"name": "direction",
					"displayName": "Direction",
					"type": "options",
					"default": "desc",
					"description": "The direction to sort the results by",
					"options": [{ "name": "Asc", "value": "asc" }, { "name": "Desc", "value": "desc" }],
					"routing": { "send": { "type": "query", "property": "direction" } }
				},
				{
					"name": "sort",
					"displayName": "Sort",
					"type": "options",
					"default": "created",
					"description": "The property by which to sort the results",
					"options": [
						{ "name": "Created", "value": "created" },
						{ "name": "Updated", "value": "updated" }
					],
					"routing": { "send": { "type": "query", "property": "sort" } }
				},
				{
					"name": "state",
					"displayName": "State",
					"type": "options",
					"default": "open",
					"description": "If specified, only code scanning alerts with this state will be returned",
					"options": [
						{ "name": "Open", "value": "open" },
						{ "name": "Closed", "value": "closed" },
						{ "name": "Dismissed", "value": "dismissed" },
						{ "name": "Fixed", "value": "fixed" }
					],
					"routing": { "send": { "type": "query", "property": "state" } }
				},
				{
					"name": "severity",
					"displayName": "Severity",
					"type": "options",
					"default": "critical",
					"description": "If specified, only code scanning alerts with this severity will be returned",
					"options": [
						{ "name": "Critical", "value": "critical" },
						{ "name": "High", "value": "high" },
						{ "name": "Medium", "value": "medium" },
						{ "name": "Low", "value": "low" },
						{ "name": "Warning", "value": "warning" },
						{ "name": "Note", "value": "note" },
						{ "name": "Error", "value": "error" }
					],
					"routing": { "send": { "type": "query", "property": "severity" } }
				}
			],
			"displayOptions": {
				"show": {
					"operation": ["code-scanning/list-alerts-for-repo"],
					"resource": ["codeScanning"]
				}
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["code-scanning/get-alert"], "resource": ["codeScanning"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["code-scanning/get-alert"], "resource": ["codeScanning"] }
			}
		},
		{
			"name": "alert_number",
			"displayName": "Alert Number",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The number that identifies an alert. You can find this at the end of the URL for a code scanning alert within GitHub, an...",
			"displayOptions": {
				"show": { "operation": ["code-scanning/get-alert"], "resource": ["codeScanning"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["code-scanning/update-alert"], "resource": ["codeScanning"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["code-scanning/update-alert"], "resource": ["codeScanning"] }
			}
		},
		{
			"name": "alert_number",
			"displayName": "Alert Number",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The number that identifies an alert. You can find this at the end of the URL for a code scanning alert within GitHub, an...",
			"displayOptions": {
				"show": { "operation": ["code-scanning/update-alert"], "resource": ["codeScanning"] }
			}
		},
		{
			"name": "state",
			"displayName": "State",
			"type": "string",
			"default": "",
			"required": true,
			"description": "Sets the state of the code scanning alert. You must provide `dismissed_reason` when you set the state to `dismissed`",
			"routing": { "send": { "type": "body", "property": "state" } },
			"displayOptions": {
				"show": { "operation": ["code-scanning/update-alert"], "resource": ["codeScanning"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "dismissed_comment",
					"displayName": "Dismissed Comment",
					"type": "string",
					"default": "",
					"description": "The dismissal comment associated with the dismissal of the alert",
					"routing": { "send": { "type": "body", "property": "dismissed_comment" } }
				},
				{
					"name": "dismissed_reason",
					"displayName": "Dismissed Reason",
					"type": "string",
					"default": "",
					"description": "**Required when the state is dismissed.** The reason for dismissing or closing the alert",
					"routing": { "send": { "type": "body", "property": "dismissed_reason" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["code-scanning/update-alert"], "resource": ["codeScanning"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["code-scanning/list-alert-instances"],
					"resource": ["codeScanning"]
				}
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["code-scanning/list-alert-instances"],
					"resource": ["codeScanning"]
				}
			}
		},
		{
			"name": "alert_number",
			"displayName": "Alert Number",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The number that identifies an alert. You can find this at the end of the URL for a code scanning alert within GitHub, an...",
			"displayOptions": {
				"show": {
					"operation": ["code-scanning/list-alert-instances"],
					"resource": ["codeScanning"]
				}
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				},
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "ref",
					"displayName": "Ref",
					"type": "string",
					"default": "",
					"description": "The Git reference for the results you want to list. The `ref` for a branch can be formatted either as `refs/heads/<branc...",
					"routing": { "send": { "type": "query", "property": "ref" } }
				}
			],
			"displayOptions": {
				"show": {
					"operation": ["code-scanning/list-alert-instances"],
					"resource": ["codeScanning"]
				}
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["code-scanning/list-recent-analyses"],
					"resource": ["codeScanning"]
				}
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["code-scanning/list-recent-analyses"],
					"resource": ["codeScanning"]
				}
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "tool_name",
					"displayName": "Tool Name",
					"type": "string",
					"default": "",
					"description": "The name of a code scanning tool. Only results by this tool will be listed. You can specify the tool by using either `to...",
					"routing": { "send": { "type": "query", "property": "tool_name" } }
				},
				{
					"name": "tool_guid",
					"displayName": "Tool Guid",
					"type": "string",
					"default": "",
					"description": "The GUID of a code scanning tool. Only results by this tool will be listed. Note that some code scanning tools may not i...",
					"routing": { "send": { "type": "query", "property": "tool_guid" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				},
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "ref",
					"displayName": "Ref",
					"type": "string",
					"default": "",
					"description": "The Git reference for the analyses you want to list. The `ref` for a branch can be formatted either as `refs/heads/<bran...",
					"routing": { "send": { "type": "query", "property": "ref" } }
				},
				{
					"name": "sarif_id",
					"displayName": "Sarif ID",
					"type": "string",
					"default": "",
					"description": "Filter analyses belonging to the same SARIF upload",
					"routing": { "send": { "type": "query", "property": "sarif_id" } }
				},
				{
					"name": "direction",
					"displayName": "Direction",
					"type": "options",
					"default": "desc",
					"description": "The direction to sort the results by",
					"options": [{ "name": "Asc", "value": "asc" }, { "name": "Desc", "value": "desc" }],
					"routing": { "send": { "type": "query", "property": "direction" } }
				},
				{
					"name": "sort",
					"displayName": "Sort",
					"type": "options",
					"default": "created",
					"description": "The property by which to sort the results",
					"options": [{ "name": "Created", "value": "created" }],
					"routing": { "send": { "type": "query", "property": "sort" } }
				}
			],
			"displayOptions": {
				"show": {
					"operation": ["code-scanning/list-recent-analyses"],
					"resource": ["codeScanning"]
				}
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["code-scanning/delete-analysis"], "resource": ["codeScanning"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["code-scanning/delete-analysis"], "resource": ["codeScanning"] }
			}
		},
		{
			"name": "analysis_id",
			"displayName": "Analysis ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The ID of the analysis, as returned from the `GET /repos/{owner}/{repo}/code-scanning/analyses` operation",
			"displayOptions": {
				"show": { "operation": ["code-scanning/delete-analysis"], "resource": ["codeScanning"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "confirm_delete",
					"displayName": "Confirm Delete",
					"type": "string",
					"default": "",
					"description": "Allow deletion if the specified analysis is the last in a set. If you attempt to delete the final analysis in a set with...",
					"routing": { "send": { "type": "query", "property": "confirm_delete" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["code-scanning/delete-analysis"], "resource": ["codeScanning"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["code-scanning/get-analysis"], "resource": ["codeScanning"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["code-scanning/get-analysis"], "resource": ["codeScanning"] }
			}
		},
		{
			"name": "analysis_id",
			"displayName": "Analysis ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The ID of the analysis, as returned from the `GET /repos/{owner}/{repo}/code-scanning/analyses` operation",
			"displayOptions": {
				"show": { "operation": ["code-scanning/get-analysis"], "resource": ["codeScanning"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["code-scanning/list-codeql-databases"],
					"resource": ["codeScanning"]
				}
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["code-scanning/list-codeql-databases"],
					"resource": ["codeScanning"]
				}
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["code-scanning/get-codeql-database"], "resource": ["codeScanning"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["code-scanning/get-codeql-database"], "resource": ["codeScanning"] }
			}
		},
		{
			"name": "language",
			"displayName": "Language",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The language of the CodeQL database",
			"displayOptions": {
				"show": { "operation": ["code-scanning/get-codeql-database"], "resource": ["codeScanning"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["code-scanning/upload-sarif"], "resource": ["codeScanning"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["code-scanning/upload-sarif"], "resource": ["codeScanning"] }
			}
		},
		{
			"name": "commit_sha",
			"displayName": "Commit Sha",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The SHA of the commit to which the analysis you are uploading relates",
			"routing": { "send": { "type": "body", "property": "commit_sha" } },
			"displayOptions": {
				"show": { "operation": ["code-scanning/upload-sarif"], "resource": ["codeScanning"] }
			}
		},
		{
			"name": "ref",
			"displayName": "Ref",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The full Git reference, formatted as `refs/heads/<branch name>`, `refs/pull/<number>/merge`, or `refs/pull/<number>/head...",
			"routing": { "send": { "type": "body", "property": "ref" } },
			"displayOptions": {
				"show": { "operation": ["code-scanning/upload-sarif"], "resource": ["codeScanning"] }
			}
		},
		{
			"name": "sarif",
			"displayName": "Sarif",
			"type": "string",
			"default": "",
			"required": true,
			"description": "A Base64 string representing the SARIF file to upload. You must first compress your SARIF file using [`gzip`](http://www...",
			"routing": { "send": { "type": "body", "property": "sarif" } },
			"displayOptions": {
				"show": { "operation": ["code-scanning/upload-sarif"], "resource": ["codeScanning"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "checkout_uri",
					"displayName": "Checkout Uri",
					"type": "string",
					"default": "",
					"description": "The base directory used in the analysis, as it appears in the SARIF file. This property is used to convert file paths fr...",
					"placeholder": "e.g. file:///github/workspace/",
					"routing": { "send": { "type": "body", "property": "checkout_uri" } }
				},
				{
					"name": "started_at",
					"displayName": "Started At",
					"type": "string",
					"default": "",
					"description": "The time that the analysis run began. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: ...",
					"routing": { "send": { "type": "body", "property": "started_at" } }
				},
				{
					"name": "tool_name",
					"displayName": "Tool Name",
					"type": "string",
					"default": "",
					"description": "The name of the tool used to generate the code scanning analysis. If this parameter is not used, the tool name defaults ...",
					"routing": { "send": { "type": "body", "property": "tool_name" } }
				},
				{
					"name": "validate",
					"displayName": "Validate",
					"type": "boolean",
					"default": false,
					"description": "Whether the SARIF file will be validated according to the code scanning specifications. This parameter is intended to he...",
					"routing": { "send": { "type": "body", "property": "validate" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["code-scanning/upload-sarif"], "resource": ["codeScanning"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["code-scanning/get-sarif"], "resource": ["codeScanning"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["code-scanning/get-sarif"], "resource": ["codeScanning"] }
			}
		},
		{
			"name": "sarif_id",
			"displayName": "Sarif ID",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The SARIF ID obtained after uploading",
			"displayOptions": {
				"show": { "operation": ["code-scanning/get-sarif"], "resource": ["codeScanning"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/codeowners-errors"], "resource": ["repo"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/codeowners-errors"], "resource": ["repo"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "ref",
					"displayName": "Ref",
					"type": "string",
					"default": "",
					"description": "A branch, tag or commit name used to determine which version of the CODEOWNERS file to use. Default: the repository's de...",
					"routing": { "send": { "type": "query", "property": "ref" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["repos/codeowners-errors"], "resource": ["repo"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["codespaces/list-in-repository-for-authenticated-user"],
					"resource": ["codespace"]
				}
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["codespaces/list-in-repository-for-authenticated-user"],
					"resource": ["codespace"]
				}
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": {
					"operation": ["codespaces/list-in-repository-for-authenticated-user"],
					"resource": ["codespace"]
				}
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["codespaces/create-with-repo-for-authenticated-user"],
					"resource": ["codespace"]
				}
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["codespaces/create-with-repo-for-authenticated-user"],
					"resource": ["codespace"]
				}
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "client_ip",
					"displayName": "Client IP",
					"type": "string",
					"default": "",
					"description": "IP for location auto-detection when proxying a request",
					"routing": { "send": { "type": "body", "property": "client_ip" } }
				},
				{
					"name": "devcontainer_path",
					"displayName": "Devcontainer Path",
					"type": "string",
					"default": "",
					"description": "Path to devcontainer.json config to use for this codespace",
					"routing": { "send": { "type": "body", "property": "devcontainer_path" } }
				},
				{
					"name": "display_name",
					"displayName": "Display Name",
					"type": "string",
					"default": "",
					"description": "Display name for this codespace",
					"routing": { "send": { "type": "body", "property": "display_name" } }
				},
				{
					"name": "idle_timeout_minutes",
					"displayName": "Idle Timeout Minutes",
					"type": "number",
					"default": 0,
					"description": "Time in minutes before codespace stops from inactivity",
					"routing": { "send": { "type": "body", "property": "idle_timeout_minutes" } }
				},
				{
					"name": "location",
					"displayName": "Location",
					"type": "string",
					"default": "",
					"description": "Location for this codespace. Assigned by IP if not provided",
					"routing": { "send": { "type": "body", "property": "location" } }
				},
				{
					"name": "machine",
					"displayName": "Machine",
					"type": "string",
					"default": "",
					"description": "Machine type to use for this codespace",
					"routing": { "send": { "type": "body", "property": "machine" } }
				},
				{
					"name": "multi_repo_permissions_opt_out",
					"displayName": "Multi Repo Permissions Opt Out",
					"type": "boolean",
					"default": false,
					"description": "Whether to authorize requested permissions from devcontainer.json",
					"routing": { "send": { "type": "body", "property": "multi_repo_permissions_opt_out" } }
				},
				{
					"name": "ref",
					"displayName": "Ref",
					"type": "string",
					"default": "",
					"description": "Git ref (typically a branch name) for this codespace",
					"routing": { "send": { "type": "body", "property": "ref" } }
				},
				{
					"name": "retention_period_minutes",
					"displayName": "Retention Period Minutes",
					"type": "number",
					"default": 0,
					"description": "Duration in minutes after codespace has gone idle in which it will be deleted. Must be integer minutes between 0 and 432...",
					"routing": { "send": { "type": "body", "property": "retention_period_minutes" } }
				},
				{
					"name": "working_directory",
					"displayName": "Working Directory",
					"type": "string",
					"default": "",
					"description": "Working directory for this codespace",
					"routing": { "send": { "type": "body", "property": "working_directory" } }
				}
			],
			"displayOptions": {
				"show": {
					"operation": ["codespaces/create-with-repo-for-authenticated-user"],
					"resource": ["codespace"]
				}
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["codespaces/list-devcontainers-in-repository-for-authenticated-user"],
					"resource": ["codespace"]
				}
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["codespaces/list-devcontainers-in-repository-for-authenticated-user"],
					"resource": ["codespace"]
				}
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": {
					"operation": ["codespaces/list-devcontainers-in-repository-for-authenticated-user"],
					"resource": ["codespace"]
				}
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["codespaces/repo-machines-for-authenticated-user"],
					"resource": ["codespace"]
				}
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["codespaces/repo-machines-for-authenticated-user"],
					"resource": ["codespace"]
				}
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "location",
					"displayName": "Location",
					"type": "string",
					"default": "",
					"description": "The location to check for available machines. Assigned by IP if not provided",
					"routing": { "send": { "type": "query", "property": "location" } }
				},
				{
					"name": "client_ip",
					"displayName": "Client IP",
					"type": "string",
					"default": "",
					"description": "IP for location auto-detection when proxying a request",
					"routing": { "send": { "type": "query", "property": "client_ip" } }
				}
			],
			"displayOptions": {
				"show": {
					"operation": ["codespaces/repo-machines-for-authenticated-user"],
					"resource": ["codespace"]
				}
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["codespaces/pre-flight-with-repo-for-authenticated-user"],
					"resource": ["codespace"]
				}
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["codespaces/pre-flight-with-repo-for-authenticated-user"],
					"resource": ["codespace"]
				}
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "ref",
					"displayName": "Ref",
					"type": "string",
					"default": "",
					"description": "The branch or commit to check for a default devcontainer path. If not specified, the default branch will be checked",
					"routing": { "send": { "type": "query", "property": "ref" } }
				},
				{
					"name": "client_ip",
					"displayName": "Client IP",
					"type": "string",
					"default": "",
					"description": "An alternative IP for default location auto-detection, such as when proxying a request",
					"routing": { "send": { "type": "query", "property": "client_ip" } }
				}
			],
			"displayOptions": {
				"show": {
					"operation": ["codespaces/pre-flight-with-repo-for-authenticated-user"],
					"resource": ["codespace"]
				}
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["codespaces/list-repo-secrets"], "resource": ["codespace"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["codespaces/list-repo-secrets"], "resource": ["codespace"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["codespaces/list-repo-secrets"], "resource": ["codespace"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["codespaces/get-repo-public-key"], "resource": ["codespace"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["codespaces/get-repo-public-key"], "resource": ["codespace"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["codespaces/delete-repo-secret"], "resource": ["codespace"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["codespaces/delete-repo-secret"], "resource": ["codespace"] }
			}
		},
		{
			"name": "secret_name",
			"displayName": "Secret Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the secret",
			"displayOptions": {
				"show": { "operation": ["codespaces/delete-repo-secret"], "resource": ["codespace"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["codespaces/get-repo-secret"], "resource": ["codespace"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["codespaces/get-repo-secret"], "resource": ["codespace"] }
			}
		},
		{
			"name": "secret_name",
			"displayName": "Secret Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the secret",
			"displayOptions": {
				"show": { "operation": ["codespaces/get-repo-secret"], "resource": ["codespace"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["codespaces/create-or-update-repo-secret"],
					"resource": ["codespace"]
				}
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["codespaces/create-or-update-repo-secret"],
					"resource": ["codespace"]
				}
			}
		},
		{
			"name": "secret_name",
			"displayName": "Secret Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the secret",
			"displayOptions": {
				"show": {
					"operation": ["codespaces/create-or-update-repo-secret"],
					"resource": ["codespace"]
				}
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "encrypted_value",
					"displayName": "Encrypted Value",
					"type": "string",
					"default": "",
					"description": "Value for your secret, encrypted with [LibSodium](https://libsodium.gitbook.io/doc/bindings_for_other_languages) using t...",
					"routing": { "send": { "type": "body", "property": "encrypted_value" } }
				},
				{
					"name": "key_id",
					"displayName": "Key ID",
					"type": "string",
					"default": "",
					"description": "ID of the key you used to encrypt the secret",
					"routing": { "send": { "type": "body", "property": "key_id" } }
				}
			],
			"displayOptions": {
				"show": {
					"operation": ["codespaces/create-or-update-repo-secret"],
					"resource": ["codespace"]
				}
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/list-collaborators"], "resource": ["repo"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/list-collaborators"], "resource": ["repo"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "affiliation",
					"displayName": "Affiliation",
					"type": "options",
					"default": "all",
					"description": "Filter collaborators returned by their affiliation. `outside` means all outside collaborators of an organization-owned r...",
					"options": [
						{ "name": "Outside", "value": "outside" },
						{ "name": "Direct", "value": "direct" },
						{ "name": "All", "value": "all" }
					],
					"routing": { "send": { "type": "query", "property": "affiliation" } }
				},
				{
					"name": "permission",
					"displayName": "Permission",
					"type": "options",
					"default": "pull",
					"description": "Filter collaborators by the permissions they have on the repository. If not specified, all collaborators will be returne...",
					"options": [
						{ "name": "Pull", "value": "pull" },
						{ "name": "Triage", "value": "triage" },
						{ "name": "Push", "value": "push" },
						{ "name": "Maintain", "value": "maintain" },
						{ "name": "Admin", "value": "admin" }
					],
					"routing": { "send": { "type": "query", "property": "permission" } }
				},
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["repos/list-collaborators"], "resource": ["repo"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/remove-collaborator"], "resource": ["repo"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/remove-collaborator"], "resource": ["repo"] }
			}
		},
		{
			"name": "username",
			"displayName": "Username",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The handle for the GitHub user account",
			"displayOptions": {
				"show": { "operation": ["repos/remove-collaborator"], "resource": ["repo"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/check-collaborator"], "resource": ["repo"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/check-collaborator"], "resource": ["repo"] }
			}
		},
		{
			"name": "username",
			"displayName": "Username",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The handle for the GitHub user account",
			"displayOptions": {
				"show": { "operation": ["repos/check-collaborator"], "resource": ["repo"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/add-collaborator"], "resource": ["repo"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/add-collaborator"], "resource": ["repo"] }
			}
		},
		{
			"name": "username",
			"displayName": "Username",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The handle for the GitHub user account",
			"displayOptions": {
				"show": { "operation": ["repos/add-collaborator"], "resource": ["repo"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "permission",
					"displayName": "Permission",
					"type": "string",
					"default": "",
					"description": "The permission to grant the collaborator. **Only valid on organization-owned repositories.** We accept the following per...",
					"routing": { "send": { "type": "body", "property": "permission" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["repos/add-collaborator"], "resource": ["repo"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/get-collaborator-permission-level"], "resource": ["repo"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/get-collaborator-permission-level"], "resource": ["repo"] }
			}
		},
		{
			"name": "username",
			"displayName": "Username",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The handle for the GitHub user account",
			"displayOptions": {
				"show": { "operation": ["repos/get-collaborator-permission-level"], "resource": ["repo"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/list-commit-comments-for-repo"], "resource": ["repo"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/list-commit-comments-for-repo"], "resource": ["repo"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["repos/list-commit-comments-for-repo"], "resource": ["repo"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/delete-commit-comment"], "resource": ["repo"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/delete-commit-comment"], "resource": ["repo"] }
			}
		},
		{
			"name": "comment_id",
			"displayName": "Comment ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the comment",
			"displayOptions": {
				"show": { "operation": ["repos/delete-commit-comment"], "resource": ["repo"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/get-commit-comment"], "resource": ["repo"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/get-commit-comment"], "resource": ["repo"] }
			}
		},
		{
			"name": "comment_id",
			"displayName": "Comment ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the comment",
			"displayOptions": {
				"show": { "operation": ["repos/get-commit-comment"], "resource": ["repo"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/update-commit-comment"], "resource": ["repo"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/update-commit-comment"], "resource": ["repo"] }
			}
		},
		{
			"name": "comment_id",
			"displayName": "Comment ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the comment",
			"displayOptions": {
				"show": { "operation": ["repos/update-commit-comment"], "resource": ["repo"] }
			}
		},
		{
			"name": "body",
			"displayName": "Body",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The contents of the comment",
			"routing": { "send": { "type": "body", "property": "body" } },
			"displayOptions": {
				"show": { "operation": ["repos/update-commit-comment"], "resource": ["repo"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["reactions/list-for-commit-comment"], "resource": ["reaction"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["reactions/list-for-commit-comment"], "resource": ["reaction"] }
			}
		},
		{
			"name": "comment_id",
			"displayName": "Comment ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the comment",
			"displayOptions": {
				"show": { "operation": ["reactions/list-for-commit-comment"], "resource": ["reaction"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "content",
					"displayName": "Content",
					"type": "options",
					"default": "+1",
					"description": "Returns a single [reaction type](https://docs.github.com/rest/reference/reactions#reaction-types). Omit this parameter t...",
					"options": [
						{ "name": "1", "value": "+1" },
						{ "name": "1", "value": "-1" },
						{ "name": "Laugh", "value": "laugh" },
						{ "name": "Confused", "value": "confused" },
						{ "name": "Heart", "value": "heart" },
						{ "name": "Hooray", "value": "hooray" },
						{ "name": "Rocket", "value": "rocket" },
						{ "name": "Eyes", "value": "eyes" }
					],
					"routing": { "send": { "type": "query", "property": "content" } }
				},
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["reactions/list-for-commit-comment"], "resource": ["reaction"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["reactions/create-for-commit-comment"], "resource": ["reaction"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["reactions/create-for-commit-comment"], "resource": ["reaction"] }
			}
		},
		{
			"name": "comment_id",
			"displayName": "Comment ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the comment",
			"displayOptions": {
				"show": { "operation": ["reactions/create-for-commit-comment"], "resource": ["reaction"] }
			}
		},
		{
			"name": "content",
			"displayName": "Content",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The [reaction type](https://docs.github.com/rest/reference/reactions#reaction-types) to add to the commit comment",
			"routing": { "send": { "type": "body", "property": "content" } },
			"displayOptions": {
				"show": { "operation": ["reactions/create-for-commit-comment"], "resource": ["reaction"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["reactions/delete-for-commit-comment"], "resource": ["reaction"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["reactions/delete-for-commit-comment"], "resource": ["reaction"] }
			}
		},
		{
			"name": "comment_id",
			"displayName": "Comment ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the comment",
			"displayOptions": {
				"show": { "operation": ["reactions/delete-for-commit-comment"], "resource": ["reaction"] }
			}
		},
		{
			"name": "reaction_id",
			"displayName": "Reaction ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the reaction",
			"displayOptions": {
				"show": { "operation": ["reactions/delete-for-commit-comment"], "resource": ["reaction"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["repos/list-commits"], "resource": ["repo"] } }
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["repos/list-commits"], "resource": ["repo"] } }
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "sha",
					"displayName": "Sha",
					"type": "string",
					"default": "",
					"description": "SHA or branch to start listing commits from. Default: the repository’s default branch (usually `main`)",
					"routing": { "send": { "type": "query", "property": "sha" } }
				},
				{
					"name": "path",
					"displayName": "Path",
					"type": "string",
					"default": "",
					"description": "Only commits containing this file path will be returned",
					"routing": { "send": { "type": "query", "property": "path" } }
				},
				{
					"name": "author",
					"displayName": "Author",
					"type": "string",
					"default": "",
					"description": "GitHub login or email address by which to filter by commit author",
					"routing": { "send": { "type": "query", "property": "author" } }
				},
				{
					"name": "since",
					"displayName": "Since",
					"type": "string",
					"default": "",
					"description": "Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/IS...",
					"routing": { "send": { "type": "query", "property": "since" } }
				},
				{
					"name": "until",
					"displayName": "Until",
					"type": "string",
					"default": "",
					"description": "Only commits before this date will be returned. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601...",
					"routing": { "send": { "type": "query", "property": "until" } }
				},
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": { "show": { "operation": ["repos/list-commits"], "resource": ["repo"] } }
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/list-branches-for-head-commit"], "resource": ["repo"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/list-branches-for-head-commit"], "resource": ["repo"] }
			}
		},
		{
			"name": "commit_sha",
			"displayName": "Commit Sha",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The SHA of the commit",
			"displayOptions": {
				"show": { "operation": ["repos/list-branches-for-head-commit"], "resource": ["repo"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/list-comments-for-commit"], "resource": ["repo"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/list-comments-for-commit"], "resource": ["repo"] }
			}
		},
		{
			"name": "commit_sha",
			"displayName": "Commit Sha",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The SHA of the commit",
			"displayOptions": {
				"show": { "operation": ["repos/list-comments-for-commit"], "resource": ["repo"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["repos/list-comments-for-commit"], "resource": ["repo"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/create-commit-comment"], "resource": ["repo"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/create-commit-comment"], "resource": ["repo"] }
			}
		},
		{
			"name": "commit_sha",
			"displayName": "Commit Sha",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The SHA of the commit",
			"displayOptions": {
				"show": { "operation": ["repos/create-commit-comment"], "resource": ["repo"] }
			}
		},
		{
			"name": "body",
			"displayName": "Body",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The contents of the comment",
			"routing": { "send": { "type": "body", "property": "body" } },
			"displayOptions": {
				"show": { "operation": ["repos/create-commit-comment"], "resource": ["repo"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "line",
					"displayName": "Line",
					"type": "number",
					"default": 0,
					"description": "**Deprecated**. Use **position** parameter instead. Line number in the file to comment on",
					"routing": { "send": { "type": "body", "property": "line" } }
				},
				{
					"name": "path",
					"displayName": "Path",
					"type": "string",
					"default": "",
					"description": "Relative path of the file to comment on",
					"routing": { "send": { "type": "body", "property": "path" } }
				},
				{
					"name": "position",
					"displayName": "Position",
					"type": "number",
					"default": 0,
					"description": "Line index in the diff to comment on",
					"routing": { "send": { "type": "body", "property": "position" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["repos/create-commit-comment"], "resource": ["repo"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["repos/list-pull-requests-associated-with-commit"],
					"resource": ["repo"]
				}
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["repos/list-pull-requests-associated-with-commit"],
					"resource": ["repo"]
				}
			}
		},
		{
			"name": "commit_sha",
			"displayName": "Commit Sha",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The SHA of the commit",
			"displayOptions": {
				"show": {
					"operation": ["repos/list-pull-requests-associated-with-commit"],
					"resource": ["repo"]
				}
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": {
					"operation": ["repos/list-pull-requests-associated-with-commit"],
					"resource": ["repo"]
				}
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["repos/get-commit"], "resource": ["repo"] } }
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["repos/get-commit"], "resource": ["repo"] } }
		},
		{
			"name": "ref",
			"displayName": "Ref",
			"type": "string",
			"default": "",
			"required": true,
			"description": "ref parameter",
			"displayOptions": { "show": { "operation": ["repos/get-commit"], "resource": ["repo"] } }
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				},
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				}
			],
			"displayOptions": { "show": { "operation": ["repos/get-commit"], "resource": ["repo"] } }
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["checks/list-for-ref"], "resource": ["check"] } }
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["checks/list-for-ref"], "resource": ["check"] } }
		},
		{
			"name": "ref",
			"displayName": "Ref",
			"type": "string",
			"default": "",
			"required": true,
			"description": "ref parameter",
			"displayOptions": { "show": { "operation": ["checks/list-for-ref"], "resource": ["check"] } }
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "check_name",
					"displayName": "Check Name",
					"type": "string",
					"default": "",
					"description": "Returns check runs with the specified `name`",
					"routing": { "send": { "type": "query", "property": "check_name" } }
				},
				{
					"name": "status",
					"displayName": "Status",
					"type": "options",
					"default": "queued",
					"description": "Returns check runs with the specified `status`",
					"options": [
						{ "name": "Queued", "value": "queued" },
						{ "name": "In Progress", "value": "in_progress" },
						{ "name": "Completed", "value": "completed" }
					],
					"routing": { "send": { "type": "query", "property": "status" } }
				},
				{
					"name": "filter",
					"displayName": "Filter",
					"type": "options",
					"default": "latest",
					"description": "Filters check runs by their `completed_at` timestamp. `latest` returns the most recent check runs",
					"options": [{ "name": "Latest", "value": "latest" }, { "name": "All", "value": "all" }],
					"routing": { "send": { "type": "query", "property": "filter" } }
				},
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				},
				{
					"name": "app_id",
					"displayName": "App ID",
					"type": "number",
					"default": 0,
					"routing": { "send": { "type": "query", "property": "app_id" } }
				}
			],
			"displayOptions": { "show": { "operation": ["checks/list-for-ref"], "resource": ["check"] } }
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["checks/list-suites-for-ref"], "resource": ["check"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["checks/list-suites-for-ref"], "resource": ["check"] }
			}
		},
		{
			"name": "ref",
			"displayName": "Ref",
			"type": "string",
			"default": "",
			"required": true,
			"description": "ref parameter",
			"displayOptions": {
				"show": { "operation": ["checks/list-suites-for-ref"], "resource": ["check"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "app_id",
					"displayName": "App ID",
					"type": "number",
					"default": 0,
					"description": "Filters check suites by GitHub App `id`",
					"routing": { "send": { "type": "query", "property": "app_id" } }
				},
				{
					"name": "check_name",
					"displayName": "Check Name",
					"type": "string",
					"default": "",
					"description": "Returns check runs with the specified `name`",
					"routing": { "send": { "type": "query", "property": "check_name" } }
				},
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["checks/list-suites-for-ref"], "resource": ["check"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/get-combined-status-for-ref"], "resource": ["repo"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/get-combined-status-for-ref"], "resource": ["repo"] }
			}
		},
		{
			"name": "ref",
			"displayName": "Ref",
			"type": "string",
			"default": "",
			"required": true,
			"description": "ref parameter",
			"displayOptions": {
				"show": { "operation": ["repos/get-combined-status-for-ref"], "resource": ["repo"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["repos/get-combined-status-for-ref"], "resource": ["repo"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/list-commit-statuses-for-ref"], "resource": ["repo"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/list-commit-statuses-for-ref"], "resource": ["repo"] }
			}
		},
		{
			"name": "ref",
			"displayName": "Ref",
			"type": "string",
			"default": "",
			"required": true,
			"description": "ref parameter",
			"displayOptions": {
				"show": { "operation": ["repos/list-commit-statuses-for-ref"], "resource": ["repo"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["repos/list-commit-statuses-for-ref"], "resource": ["repo"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/get-community-profile-metrics"], "resource": ["repo"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/get-community-profile-metrics"], "resource": ["repo"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["repos/compare-commits"], "resource": ["repo"] } }
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["repos/compare-commits"], "resource": ["repo"] } }
		},
		{
			"name": "basehead",
			"displayName": "Basehead",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The base branch and head branch to compare. This parameter expects the format `BASE...HEAD`. Both must be branch names i...",
			"displayOptions": { "show": { "operation": ["repos/compare-commits"], "resource": ["repo"] } }
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				},
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				}
			],
			"displayOptions": { "show": { "operation": ["repos/compare-commits"], "resource": ["repo"] } }
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["repos/delete-file"], "resource": ["repo"] } }
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["repos/delete-file"], "resource": ["repo"] } }
		},
		{
			"name": "path",
			"displayName": "Path",
			"type": "string",
			"default": "",
			"required": true,
			"description": "path parameter",
			"displayOptions": { "show": { "operation": ["repos/delete-file"], "resource": ["repo"] } }
		},
		{
			"name": "message",
			"displayName": "Message",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The commit message",
			"routing": { "send": { "type": "body", "property": "message" } },
			"displayOptions": { "show": { "operation": ["repos/delete-file"], "resource": ["repo"] } }
		},
		{
			"name": "sha",
			"displayName": "Sha",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The blob SHA of the file being deleted",
			"routing": { "send": { "type": "body", "property": "sha" } },
			"displayOptions": { "show": { "operation": ["repos/delete-file"], "resource": ["repo"] } }
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "author",
					"displayName": "Author",
					"type": "json",
					"default": "{}",
					"description": "object containing information about the author",
					"routing": { "send": { "type": "body", "property": "author" } }
				},
				{
					"name": "branch",
					"displayName": "Branch",
					"type": "string",
					"default": "",
					"description": "The branch name. Default: the repository’s default branch (usually `master`)",
					"routing": { "send": { "type": "body", "property": "branch" } }
				},
				{
					"name": "committer",
					"displayName": "Committer",
					"type": "json",
					"default": "{}",
					"description": "object containing information about the committer",
					"routing": { "send": { "type": "body", "property": "committer" } }
				}
			],
			"displayOptions": { "show": { "operation": ["repos/delete-file"], "resource": ["repo"] } }
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["repos/get-content"], "resource": ["repo"] } }
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["repos/get-content"], "resource": ["repo"] } }
		},
		{
			"name": "path",
			"displayName": "Path",
			"type": "string",
			"default": "",
			"required": true,
			"description": "path parameter",
			"displayOptions": { "show": { "operation": ["repos/get-content"], "resource": ["repo"] } }
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "ref",
					"displayName": "Ref",
					"type": "string",
					"default": "",
					"description": "The name of the commit/branch/tag. Default: the repository’s default branch (usually `master`)",
					"routing": { "send": { "type": "query", "property": "ref" } }
				}
			],
			"displayOptions": { "show": { "operation": ["repos/get-content"], "resource": ["repo"] } }
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/create-or-update-file-contents"], "resource": ["repo"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/create-or-update-file-contents"], "resource": ["repo"] }
			}
		},
		{
			"name": "path",
			"displayName": "Path",
			"type": "string",
			"default": "",
			"required": true,
			"description": "path parameter",
			"displayOptions": {
				"show": { "operation": ["repos/create-or-update-file-contents"], "resource": ["repo"] }
			}
		},
		{
			"name": "content",
			"displayName": "Content",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The new file content, using Base64 encoding",
			"routing": { "send": { "type": "body", "property": "content" } },
			"displayOptions": {
				"show": { "operation": ["repos/create-or-update-file-contents"], "resource": ["repo"] }
			}
		},
		{
			"name": "message",
			"displayName": "Message",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The commit message",
			"routing": { "send": { "type": "body", "property": "message" } },
			"displayOptions": {
				"show": { "operation": ["repos/create-or-update-file-contents"], "resource": ["repo"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "author",
					"displayName": "Author",
					"type": "json",
					"default": "{}",
					"description": "The author of the file. Default: The `committer` or the authenticated user if you omit `committer`",
					"routing": { "send": { "type": "body", "property": "author" } }
				},
				{
					"name": "branch",
					"displayName": "Branch",
					"type": "string",
					"default": "",
					"description": "The branch name. Default: the repository’s default branch (usually `master`)",
					"routing": { "send": { "type": "body", "property": "branch" } }
				},
				{
					"name": "committer",
					"displayName": "Committer",
					"type": "json",
					"default": "{}",
					"description": "The person that committed the file. Default: the authenticated user",
					"routing": { "send": { "type": "body", "property": "committer" } }
				},
				{
					"name": "sha",
					"displayName": "Sha",
					"type": "string",
					"default": "",
					"description": "**Required if you are updating a file**. The blob SHA of the file being replaced",
					"routing": { "send": { "type": "body", "property": "sha" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["repos/create-or-update-file-contents"], "resource": ["repo"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/list-contributors"], "resource": ["repo"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/list-contributors"], "resource": ["repo"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "anon",
					"displayName": "Anon",
					"type": "string",
					"default": "",
					"description": "Set to `1` or `true` to include anonymous contributors in results",
					"routing": { "send": { "type": "query", "property": "anon" } }
				},
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["repos/list-contributors"], "resource": ["repo"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["dependabot/list-alerts-for-repo"], "resource": ["dependabot"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["dependabot/list-alerts-for-repo"], "resource": ["dependabot"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "state",
					"displayName": "State",
					"type": "string",
					"default": "",
					"description": "A comma-separated list of states. If specified, only alerts with these states will be returned.  Can be: `dismissed`, `f...",
					"routing": { "send": { "type": "query", "property": "state" } }
				},
				{
					"name": "severity",
					"displayName": "Severity",
					"type": "string",
					"default": "",
					"description": "A comma-separated list of severities. If specified, only alerts with these severities will be returned.  Can be: `low`, ...",
					"routing": { "send": { "type": "query", "property": "severity" } }
				},
				{
					"name": "ecosystem",
					"displayName": "Ecosystem",
					"type": "string",
					"default": "",
					"description": "A comma-separated list of ecosystems. If specified, only alerts for these ecosystems will be returned.  Can be: `compose...",
					"routing": { "send": { "type": "query", "property": "ecosystem" } }
				},
				{
					"name": "package",
					"displayName": "Package",
					"type": "string",
					"default": "",
					"description": "A comma-separated list of package names. If specified, only alerts for these packages will be returned",
					"routing": { "send": { "type": "query", "property": "package" } }
				},
				{
					"name": "manifest",
					"displayName": "Manifest",
					"type": "string",
					"default": "",
					"description": "A comma-separated list of full manifest paths. If specified, only alerts for these manifests will be returned",
					"routing": { "send": { "type": "query", "property": "manifest" } }
				},
				{
					"name": "scope",
					"displayName": "Scope",
					"type": "options",
					"default": "development",
					"description": "The scope of the vulnerable dependency. If specified, only alerts with this scope will be returned",
					"options": [
						{ "name": "Development", "value": "development" },
						{ "name": "Runtime", "value": "runtime" }
					],
					"routing": { "send": { "type": "query", "property": "scope" } }
				},
				{
					"name": "sort",
					"displayName": "Sort",
					"type": "options",
					"default": "created",
					"description": "The property by which to sort the results. `created` means when the alert was created. `updated` means when the alert's ...",
					"options": [
						{ "name": "Created", "value": "created" },
						{ "name": "Updated", "value": "updated" }
					],
					"routing": { "send": { "type": "query", "property": "sort" } }
				},
				{
					"name": "direction",
					"displayName": "Direction",
					"type": "options",
					"default": "desc",
					"description": "The direction to sort the results by",
					"options": [{ "name": "Asc", "value": "asc" }, { "name": "Desc", "value": "desc" }],
					"routing": { "send": { "type": "query", "property": "direction" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "**Deprecated**. Page number of the results to fetch. Use cursor-based pagination with `before` or `after` instead",
					"routing": { "send": { "type": "query", "property": "page" } }
				},
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "before",
					"displayName": "Before",
					"type": "string",
					"default": "",
					"description": "A cursor, as given in the [Link header](https://docs.github.com/rest/overview/resources-in-the-rest-api#link-header). If...",
					"routing": { "send": { "type": "query", "property": "before" } }
				},
				{
					"name": "after",
					"displayName": "After",
					"type": "string",
					"default": "",
					"description": "A cursor, as given in the [Link header](https://docs.github.com/rest/overview/resources-in-the-rest-api#link-header). If...",
					"routing": { "send": { "type": "query", "property": "after" } }
				},
				{
					"name": "first",
					"displayName": "First",
					"type": "number",
					"default": 30,
					"description": "**Deprecated**. The number of results per page (max 100), starting from the first matching result. This parameter must n...",
					"routing": { "send": { "type": "query", "property": "first" } }
				},
				{
					"name": "last",
					"displayName": "Last",
					"type": "number",
					"default": 0,
					"description": "**Deprecated**. The number of results per page (max 100), starting from the last matching result. This parameter must no...",
					"routing": { "send": { "type": "query", "property": "last" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["dependabot/list-alerts-for-repo"], "resource": ["dependabot"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["dependabot/get-alert"], "resource": ["dependabot"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["dependabot/get-alert"], "resource": ["dependabot"] }
			}
		},
		{
			"name": "alert_number",
			"displayName": "Alert Number",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The number that identifies a Dependabot alert in its repository. You can find this at the end of the URL for a Dependabo...",
			"displayOptions": {
				"show": { "operation": ["dependabot/get-alert"], "resource": ["dependabot"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["dependabot/update-alert"], "resource": ["dependabot"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["dependabot/update-alert"], "resource": ["dependabot"] }
			}
		},
		{
			"name": "alert_number",
			"displayName": "Alert Number",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The number that identifies a Dependabot alert in its repository. You can find this at the end of the URL for a Dependabo...",
			"displayOptions": {
				"show": { "operation": ["dependabot/update-alert"], "resource": ["dependabot"] }
			}
		},
		{
			"name": "state",
			"displayName": "State",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The state of the Dependabot alert. A `dismissed_reason` must be provided when setting the state to `dismissed`",
			"routing": { "send": { "type": "body", "property": "state" } },
			"displayOptions": {
				"show": { "operation": ["dependabot/update-alert"], "resource": ["dependabot"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "dismissed_comment",
					"displayName": "Dismissed Comment",
					"type": "string",
					"default": "",
					"description": "An optional comment associated with dismissing the alert",
					"routing": { "send": { "type": "body", "property": "dismissed_comment" } }
				},
				{
					"name": "dismissed_reason",
					"displayName": "Dismissed Reason",
					"type": "string",
					"default": "",
					"description": "**Required when `state` is `dismissed`.** A reason for dismissing the alert",
					"routing": { "send": { "type": "body", "property": "dismissed_reason" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["dependabot/update-alert"], "resource": ["dependabot"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["dependabot/list-repo-secrets"], "resource": ["dependabot"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["dependabot/list-repo-secrets"], "resource": ["dependabot"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["dependabot/list-repo-secrets"], "resource": ["dependabot"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["dependabot/get-repo-public-key"], "resource": ["dependabot"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["dependabot/get-repo-public-key"], "resource": ["dependabot"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["dependabot/delete-repo-secret"], "resource": ["dependabot"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["dependabot/delete-repo-secret"], "resource": ["dependabot"] }
			}
		},
		{
			"name": "secret_name",
			"displayName": "Secret Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the secret",
			"displayOptions": {
				"show": { "operation": ["dependabot/delete-repo-secret"], "resource": ["dependabot"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["dependabot/get-repo-secret"], "resource": ["dependabot"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["dependabot/get-repo-secret"], "resource": ["dependabot"] }
			}
		},
		{
			"name": "secret_name",
			"displayName": "Secret Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the secret",
			"displayOptions": {
				"show": { "operation": ["dependabot/get-repo-secret"], "resource": ["dependabot"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["dependabot/create-or-update-repo-secret"],
					"resource": ["dependabot"]
				}
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["dependabot/create-or-update-repo-secret"],
					"resource": ["dependabot"]
				}
			}
		},
		{
			"name": "secret_name",
			"displayName": "Secret Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the secret",
			"displayOptions": {
				"show": {
					"operation": ["dependabot/create-or-update-repo-secret"],
					"resource": ["dependabot"]
				}
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "encrypted_value",
					"displayName": "Encrypted Value",
					"type": "string",
					"default": "",
					"description": "Value for your secret, encrypted with [LibSodium](https://libsodium.gitbook.io/doc/bindings_for_other_languages) using t...",
					"routing": { "send": { "type": "body", "property": "encrypted_value" } }
				},
				{
					"name": "key_id",
					"displayName": "Key ID",
					"type": "string",
					"default": "",
					"description": "ID of the key you used to encrypt the secret",
					"routing": { "send": { "type": "body", "property": "key_id" } }
				}
			],
			"displayOptions": {
				"show": {
					"operation": ["dependabot/create-or-update-repo-secret"],
					"resource": ["dependabot"]
				}
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["dependency-graph/diff-range"], "resource": ["dependencyGraph"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["dependency-graph/diff-range"], "resource": ["dependencyGraph"] }
			}
		},
		{
			"name": "basehead",
			"displayName": "Basehead",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The base and head Git revisions to compare. The Git revisions will be resolved to commit SHAs. Named revisions will be r...",
			"displayOptions": {
				"show": { "operation": ["dependency-graph/diff-range"], "resource": ["dependencyGraph"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "name",
					"displayName": "Name",
					"type": "string",
					"default": "",
					"description": "The full path, relative to the repository root, of the dependency manifest file",
					"routing": { "send": { "type": "query", "property": "name" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["dependency-graph/diff-range"], "resource": ["dependencyGraph"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["dependency-graph/create-repository-snapshot"],
					"resource": ["dependencyGraph"]
				}
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["dependency-graph/create-repository-snapshot"],
					"resource": ["dependencyGraph"]
				}
			}
		},
		{
			"name": "detector",
			"displayName": "Detector",
			"type": "json",
			"default": "{}",
			"required": true,
			"description": "A description of the detector used",
			"routing": { "send": { "type": "body", "property": "detector" } },
			"displayOptions": {
				"show": {
					"operation": ["dependency-graph/create-repository-snapshot"],
					"resource": ["dependencyGraph"]
				}
			}
		},
		{
			"name": "job",
			"displayName": "Job",
			"type": "json",
			"default": "{}",
			"required": true,
			"routing": { "send": { "type": "body", "property": "job" } },
			"displayOptions": {
				"show": {
					"operation": ["dependency-graph/create-repository-snapshot"],
					"resource": ["dependencyGraph"]
				}
			}
		},
		{
			"name": "ref",
			"displayName": "Ref",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The repository branch that triggered this snapshot",
			"placeholder": "e.g. refs/heads/main",
			"routing": { "send": { "type": "body", "property": "ref" } },
			"displayOptions": {
				"show": {
					"operation": ["dependency-graph/create-repository-snapshot"],
					"resource": ["dependencyGraph"]
				}
			}
		},
		{
			"name": "scanned",
			"displayName": "Scanned",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The time at which the snapshot was scanned",
			"placeholder": "e.g. 2020-06-13T14:52:50-05:00",
			"routing": { "send": { "type": "body", "property": "scanned" } },
			"displayOptions": {
				"show": {
					"operation": ["dependency-graph/create-repository-snapshot"],
					"resource": ["dependencyGraph"]
				}
			}
		},
		{
			"name": "sha",
			"displayName": "Sha",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The commit SHA associated with this dependency snapshot. Maximum length: 40 characters",
			"placeholder": "e.g. ddc951f4b1293222421f2c8df679786153acf689",
			"routing": { "send": { "type": "body", "property": "sha" } },
			"displayOptions": {
				"show": {
					"operation": ["dependency-graph/create-repository-snapshot"],
					"resource": ["dependencyGraph"]
				}
			}
		},
		{
			"name": "version",
			"displayName": "Version",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The version of the repository snapshot submission",
			"routing": { "send": { "type": "body", "property": "version" } },
			"displayOptions": {
				"show": {
					"operation": ["dependency-graph/create-repository-snapshot"],
					"resource": ["dependencyGraph"]
				}
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "manifests",
					"displayName": "Manifests",
					"type": "json",
					"default": "{}",
					"description": "A collection of package manifests, which are a collection of related dependencies declared in a file or representing a l...",
					"routing": { "send": { "type": "body", "property": "manifests" } }
				},
				{
					"name": "metadata",
					"displayName": "Metadata",
					"type": "json",
					"default": "{}",
					"description": "User-defined metadata to store domain-specific information limited to 8 keys with scalar values",
					"routing": { "send": { "type": "body", "property": "metadata" } }
				}
			],
			"displayOptions": {
				"show": {
					"operation": ["dependency-graph/create-repository-snapshot"],
					"resource": ["dependencyGraph"]
				}
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/list-deployments"], "resource": ["repo"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/list-deployments"], "resource": ["repo"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "sha",
					"displayName": "Sha",
					"type": "string",
					"default": "none",
					"description": "The SHA recorded at creation time",
					"routing": { "send": { "type": "query", "property": "sha" } }
				},
				{
					"name": "ref",
					"displayName": "Ref",
					"type": "string",
					"default": "none",
					"description": "The name of the ref. This can be a branch, tag, or SHA",
					"routing": { "send": { "type": "query", "property": "ref" } }
				},
				{
					"name": "task",
					"displayName": "Task",
					"type": "string",
					"default": "none",
					"description": "The name of the task for the deployment (e.g., `deploy` or `deploy:migrations`)",
					"routing": { "send": { "type": "query", "property": "task" } }
				},
				{
					"name": "environment",
					"displayName": "Environment",
					"type": "string",
					"default": "none",
					"description": "The name of the environment that was deployed to (e.g., `staging` or `production`)",
					"routing": { "send": { "type": "query", "property": "environment" } }
				},
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["repos/list-deployments"], "resource": ["repo"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/create-deployment"], "resource": ["repo"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/create-deployment"], "resource": ["repo"] }
			}
		},
		{
			"name": "ref",
			"displayName": "Ref",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The ref to deploy. This can be a branch, tag, or SHA",
			"routing": { "send": { "type": "body", "property": "ref" } },
			"displayOptions": {
				"show": { "operation": ["repos/create-deployment"], "resource": ["repo"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "auto_merge",
					"displayName": "Auto Merge",
					"type": "boolean",
					"default": false,
					"description": "Attempts to automatically merge the default branch into the requested ref, if it's behind the default branch",
					"routing": { "send": { "type": "body", "property": "auto_merge" } }
				},
				{
					"name": "description",
					"displayName": "Description",
					"type": "string",
					"default": "",
					"description": "Short description of the deployment",
					"routing": { "send": { "type": "body", "property": "description" } }
				},
				{
					"name": "environment",
					"displayName": "Environment",
					"type": "string",
					"default": "",
					"description": "Name for the target deployment environment (e.g., `production`, `staging`, `qa`)",
					"routing": { "send": { "type": "body", "property": "environment" } }
				},
				{
					"name": "payload",
					"displayName": "Payload",
					"type": "json",
					"default": "{}",
					"routing": { "send": { "type": "body", "property": "payload" } }
				},
				{
					"name": "production_environment",
					"displayName": "Production Environment",
					"type": "boolean",
					"default": false,
					"description": "Specifies if the given environment is one that end-users directly interact with. Default: `true` when `environment` is `...",
					"routing": { "send": { "type": "body", "property": "production_environment" } }
				},
				{
					"name": "required_contexts",
					"displayName": "Required Contexts",
					"type": "string",
					"default": "",
					"description": "The [status](https://docs.github.com/rest/commits/statuses) contexts to verify against commit status checks. If you omit...",
					"routing": { "send": { "type": "body", "property": "required_contexts" } }
				},
				{
					"name": "task",
					"displayName": "Task",
					"type": "string",
					"default": "",
					"description": "Specifies a task to execute (e.g., `deploy` or `deploy:migrations`)",
					"routing": { "send": { "type": "body", "property": "task" } }
				},
				{
					"name": "transient_environment",
					"displayName": "Transient Environment",
					"type": "boolean",
					"default": false,
					"description": "Specifies if the given environment is specific to the deployment and will no longer exist at some point in the future. D...",
					"routing": { "send": { "type": "body", "property": "transient_environment" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["repos/create-deployment"], "resource": ["repo"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/delete-deployment"], "resource": ["repo"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/delete-deployment"], "resource": ["repo"] }
			}
		},
		{
			"name": "deployment_id",
			"displayName": "Deployment ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "deployment_id parameter",
			"displayOptions": {
				"show": { "operation": ["repos/delete-deployment"], "resource": ["repo"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["repos/get-deployment"], "resource": ["repo"] } }
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["repos/get-deployment"], "resource": ["repo"] } }
		},
		{
			"name": "deployment_id",
			"displayName": "Deployment ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "deployment_id parameter",
			"displayOptions": { "show": { "operation": ["repos/get-deployment"], "resource": ["repo"] } }
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/list-deployment-statuses"], "resource": ["repo"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/list-deployment-statuses"], "resource": ["repo"] }
			}
		},
		{
			"name": "deployment_id",
			"displayName": "Deployment ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "deployment_id parameter",
			"displayOptions": {
				"show": { "operation": ["repos/list-deployment-statuses"], "resource": ["repo"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["repos/list-deployment-statuses"], "resource": ["repo"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/create-deployment-status"], "resource": ["repo"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/create-deployment-status"], "resource": ["repo"] }
			}
		},
		{
			"name": "deployment_id",
			"displayName": "Deployment ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "deployment_id parameter",
			"displayOptions": {
				"show": { "operation": ["repos/create-deployment-status"], "resource": ["repo"] }
			}
		},
		{
			"name": "state",
			"displayName": "State",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The state of the status. When you set a transient deployment to `inactive`, the deployment will be shown as `destroyed` ...",
			"routing": { "send": { "type": "body", "property": "state" } },
			"displayOptions": {
				"show": { "operation": ["repos/create-deployment-status"], "resource": ["repo"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "auto_inactive",
					"displayName": "Auto Inactive",
					"type": "boolean",
					"default": false,
					"description": "Adds a new `inactive` status to all prior non-transient, non-production environment deployments with the same repository...",
					"routing": { "send": { "type": "body", "property": "auto_inactive" } }
				},
				{
					"name": "description",
					"displayName": "Description",
					"type": "string",
					"default": "",
					"description": "A short description of the status. The maximum description length is 140 characters",
					"routing": { "send": { "type": "body", "property": "description" } }
				},
				{
					"name": "environment",
					"displayName": "Environment",
					"type": "string",
					"default": "",
					"description": "Name for the target deployment environment, which can be changed when setting a deploy status. For example, `production`...",
					"routing": { "send": { "type": "body", "property": "environment" } }
				},
				{
					"name": "environment_url",
					"displayName": "Environment URL",
					"type": "string",
					"default": "",
					"description": "Sets the URL for accessing your environment. Default: `\"\"`",
					"routing": { "send": { "type": "body", "property": "environment_url" } }
				},
				{
					"name": "log_url",
					"displayName": "Log URL",
					"type": "string",
					"default": "",
					"description": "The full URL of the deployment's output. This parameter replaces `target_url`. We will continue to accept `target_url` t...",
					"routing": { "send": { "type": "body", "property": "log_url" } }
				},
				{
					"name": "target_url",
					"displayName": "Target URL",
					"type": "string",
					"default": "",
					"description": "The target URL to associate with this status. This URL should contain output to keep the user updated while the task is ...",
					"routing": { "send": { "type": "body", "property": "target_url" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["repos/create-deployment-status"], "resource": ["repo"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/get-deployment-status"], "resource": ["repo"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/get-deployment-status"], "resource": ["repo"] }
			}
		},
		{
			"name": "deployment_id",
			"displayName": "Deployment ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "deployment_id parameter",
			"displayOptions": {
				"show": { "operation": ["repos/get-deployment-status"], "resource": ["repo"] }
			}
		},
		{
			"name": "status_id",
			"displayName": "Status ID",
			"type": "number",
			"default": 0,
			"required": true,
			"displayOptions": {
				"show": { "operation": ["repos/get-deployment-status"], "resource": ["repo"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/create-dispatch-event"], "resource": ["repo"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/create-dispatch-event"], "resource": ["repo"] }
			}
		},
		{
			"name": "event_type",
			"displayName": "Event Type",
			"type": "string",
			"default": "",
			"required": true,
			"description": "A custom webhook event name. Must be 100 characters or fewer",
			"routing": { "send": { "type": "body", "property": "event_type" } },
			"displayOptions": {
				"show": { "operation": ["repos/create-dispatch-event"], "resource": ["repo"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "client_payload",
					"displayName": "Client Payload",
					"type": "json",
					"default": "{}",
					"description": "JSON payload with extra information about the webhook event that your action or workflow may use. The maximum number of ...",
					"routing": { "send": { "type": "body", "property": "client_payload" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["repos/create-dispatch-event"], "resource": ["repo"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/get-all-environments"], "resource": ["repo"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/get-all-environments"], "resource": ["repo"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["repos/get-all-environments"], "resource": ["repo"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/delete-an-environment"], "resource": ["repo"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/delete-an-environment"], "resource": ["repo"] }
			}
		},
		{
			"name": "environment_name",
			"displayName": "Environment Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the environment",
			"displayOptions": {
				"show": { "operation": ["repos/delete-an-environment"], "resource": ["repo"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["repos/get-environment"], "resource": ["repo"] } }
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["repos/get-environment"], "resource": ["repo"] } }
		},
		{
			"name": "environment_name",
			"displayName": "Environment Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the environment",
			"displayOptions": { "show": { "operation": ["repos/get-environment"], "resource": ["repo"] } }
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/create-or-update-environment"], "resource": ["repo"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/create-or-update-environment"], "resource": ["repo"] }
			}
		},
		{
			"name": "environment_name",
			"displayName": "Environment Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the environment",
			"displayOptions": {
				"show": { "operation": ["repos/create-or-update-environment"], "resource": ["repo"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "deployment_branch_policy",
					"displayName": "Deployment Branch Policy",
					"type": "json",
					"default": "{}",
					"description": "The type of deployment branch policy for this environment. To allow all branches to deploy, set to `null`",
					"routing": { "send": { "type": "body", "property": "deployment_branch_policy" } }
				},
				{
					"name": "reviewers",
					"displayName": "Reviewers",
					"type": "json",
					"default": "{}",
					"description": "The people or teams that may review jobs that reference the environment. You can list up to six users or teams as review...",
					"routing": { "send": { "type": "body", "property": "reviewers" } }
				},
				{
					"name": "wait_timer",
					"displayName": "Wait Timer",
					"type": "number",
					"default": 0,
					"description": "The amount of time to delay a job after the job is initially triggered. The time (in minutes) must be an integer between...",
					"routing": { "send": { "type": "body", "property": "wait_timer" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["repos/create-or-update-environment"], "resource": ["repo"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/list-deployment-branch-policies"], "resource": ["repo"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/list-deployment-branch-policies"], "resource": ["repo"] }
			}
		},
		{
			"name": "environment_name",
			"displayName": "Environment Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the environment",
			"displayOptions": {
				"show": { "operation": ["repos/list-deployment-branch-policies"], "resource": ["repo"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["repos/list-deployment-branch-policies"], "resource": ["repo"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/create-deployment-branch-policy"], "resource": ["repo"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/create-deployment-branch-policy"], "resource": ["repo"] }
			}
		},
		{
			"name": "environment_name",
			"displayName": "Environment Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the environment",
			"displayOptions": {
				"show": { "operation": ["repos/create-deployment-branch-policy"], "resource": ["repo"] }
			}
		},
		{
			"name": "name",
			"displayName": "Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name pattern that branches must match in order to deploy to the environment.  Wildcard characters will not match `/`...",
			"placeholder": "e.g. release/*",
			"routing": { "send": { "type": "body", "property": "name" } },
			"displayOptions": {
				"show": { "operation": ["repos/create-deployment-branch-policy"], "resource": ["repo"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/delete-deployment-branch-policy"], "resource": ["repo"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/delete-deployment-branch-policy"], "resource": ["repo"] }
			}
		},
		{
			"name": "environment_name",
			"displayName": "Environment Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the environment",
			"displayOptions": {
				"show": { "operation": ["repos/delete-deployment-branch-policy"], "resource": ["repo"] }
			}
		},
		{
			"name": "branch_policy_id",
			"displayName": "Branch Policy ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the branch policy",
			"displayOptions": {
				"show": { "operation": ["repos/delete-deployment-branch-policy"], "resource": ["repo"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/get-deployment-branch-policy"], "resource": ["repo"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/get-deployment-branch-policy"], "resource": ["repo"] }
			}
		},
		{
			"name": "environment_name",
			"displayName": "Environment Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the environment",
			"displayOptions": {
				"show": { "operation": ["repos/get-deployment-branch-policy"], "resource": ["repo"] }
			}
		},
		{
			"name": "branch_policy_id",
			"displayName": "Branch Policy ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the branch policy",
			"displayOptions": {
				"show": { "operation": ["repos/get-deployment-branch-policy"], "resource": ["repo"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/update-deployment-branch-policy"], "resource": ["repo"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/update-deployment-branch-policy"], "resource": ["repo"] }
			}
		},
		{
			"name": "environment_name",
			"displayName": "Environment Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the environment",
			"displayOptions": {
				"show": { "operation": ["repos/update-deployment-branch-policy"], "resource": ["repo"] }
			}
		},
		{
			"name": "branch_policy_id",
			"displayName": "Branch Policy ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the branch policy",
			"displayOptions": {
				"show": { "operation": ["repos/update-deployment-branch-policy"], "resource": ["repo"] }
			}
		},
		{
			"name": "name",
			"displayName": "Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name pattern that branches must match in order to deploy to the environment.  Wildcard characters will not match `/`...",
			"placeholder": "e.g. release/*",
			"routing": { "send": { "type": "body", "property": "name" } },
			"displayOptions": {
				"show": { "operation": ["repos/update-deployment-branch-policy"], "resource": ["repo"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["activity/list-repo-events"], "resource": ["activity"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["activity/list-repo-events"], "resource": ["activity"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["activity/list-repo-events"], "resource": ["activity"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["repos/list-forks"], "resource": ["repo"] } }
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["repos/list-forks"], "resource": ["repo"] } }
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "sort",
					"displayName": "Sort",
					"type": "options",
					"default": "newest",
					"description": "The sort order. `stargazers` will sort by star count",
					"options": [
						{ "name": "Newest", "value": "newest" },
						{ "name": "Oldest", "value": "oldest" },
						{ "name": "Stargazers", "value": "stargazers" },
						{ "name": "Watchers", "value": "watchers" }
					],
					"routing": { "send": { "type": "query", "property": "sort" } }
				},
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": { "show": { "operation": ["repos/list-forks"], "resource": ["repo"] } }
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["repos/create-fork"], "resource": ["repo"] } }
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["repos/create-fork"], "resource": ["repo"] } }
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "default_branch_only",
					"displayName": "Default Branch Only",
					"type": "boolean",
					"default": false,
					"description": "When forking from an existing repository, fork with only the default branch",
					"routing": { "send": { "type": "body", "property": "default_branch_only" } }
				},
				{
					"name": "name",
					"displayName": "Name",
					"type": "string",
					"default": "",
					"description": "When forking from an existing repository, a new name for the fork",
					"routing": { "send": { "type": "body", "property": "name" } }
				},
				{
					"name": "organization",
					"displayName": "Organization",
					"type": "string",
					"default": "",
					"description": "Optional parameter to specify the organization name if forking into an organization",
					"routing": { "send": { "type": "body", "property": "organization" } }
				}
			],
			"displayOptions": { "show": { "operation": ["repos/create-fork"], "resource": ["repo"] } }
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["git/create-blob"], "resource": ["git"] } }
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["git/create-blob"], "resource": ["git"] } }
		},
		{
			"name": "content",
			"displayName": "Content",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The new blob's content",
			"routing": { "send": { "type": "body", "property": "content" } },
			"displayOptions": { "show": { "operation": ["git/create-blob"], "resource": ["git"] } }
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "encoding",
					"displayName": "Encoding",
					"type": "string",
					"default": "",
					"description": "The encoding used for `content`. Currently, `\"utf-8\"` and `\"base64\"` are supported",
					"routing": { "send": { "type": "body", "property": "encoding" } }
				}
			],
			"displayOptions": { "show": { "operation": ["git/create-blob"], "resource": ["git"] } }
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["git/get-blob"], "resource": ["git"] } }
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["git/get-blob"], "resource": ["git"] } }
		},
		{
			"name": "file_sha",
			"displayName": "File Sha",
			"type": "string",
			"default": "",
			"required": true,
			"displayOptions": { "show": { "operation": ["git/get-blob"], "resource": ["git"] } }
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["git/create-commit"], "resource": ["git"] } }
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["git/create-commit"], "resource": ["git"] } }
		},
		{
			"name": "message",
			"displayName": "Message",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The commit message",
			"routing": { "send": { "type": "body", "property": "message" } },
			"displayOptions": { "show": { "operation": ["git/create-commit"], "resource": ["git"] } }
		},
		{
			"name": "tree",
			"displayName": "Tree",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The SHA of the tree object this commit points to",
			"routing": { "send": { "type": "body", "property": "tree" } },
			"displayOptions": { "show": { "operation": ["git/create-commit"], "resource": ["git"] } }
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "author",
					"displayName": "Author",
					"type": "json",
					"default": "{}",
					"description": "Information about the author of the commit. By default, the `author` will be the authenticated user and the current date...",
					"routing": { "send": { "type": "body", "property": "author" } }
				},
				{
					"name": "committer",
					"displayName": "Committer",
					"type": "json",
					"default": "{}",
					"description": "Information about the person who is making the commit. By default, `committer` will use the information set in `author`....",
					"routing": { "send": { "type": "body", "property": "committer" } }
				},
				{
					"name": "parents",
					"displayName": "Parents",
					"type": "string",
					"default": "",
					"description": "The SHAs of the commits that were the parents of this commit. If omitted or empty, the commit will be written as a root ...",
					"routing": { "send": { "type": "body", "property": "parents" } }
				},
				{
					"name": "signature",
					"displayName": "Signature",
					"type": "string",
					"default": "",
					"description": "The [PGP signature](https://en.wikipedia.org/wiki/Pretty_Good_Privacy) of the commit. GitHub adds the signature to the `...",
					"routing": { "send": { "type": "body", "property": "signature" } }
				}
			],
			"displayOptions": { "show": { "operation": ["git/create-commit"], "resource": ["git"] } }
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["git/get-commit"], "resource": ["git"] } }
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["git/get-commit"], "resource": ["git"] } }
		},
		{
			"name": "commit_sha",
			"displayName": "Commit Sha",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The SHA of the commit",
			"displayOptions": { "show": { "operation": ["git/get-commit"], "resource": ["git"] } }
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["git/list-matching-refs"], "resource": ["git"] } }
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["git/list-matching-refs"], "resource": ["git"] } }
		},
		{
			"name": "ref",
			"displayName": "Ref",
			"type": "string",
			"default": "",
			"required": true,
			"description": "ref parameter",
			"displayOptions": { "show": { "operation": ["git/list-matching-refs"], "resource": ["git"] } }
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["git/get-ref"], "resource": ["git"] } }
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["git/get-ref"], "resource": ["git"] } }
		},
		{
			"name": "ref",
			"displayName": "Ref",
			"type": "string",
			"default": "",
			"required": true,
			"description": "ref parameter",
			"displayOptions": { "show": { "operation": ["git/get-ref"], "resource": ["git"] } }
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["git/create-ref"], "resource": ["git"] } }
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["git/create-ref"], "resource": ["git"] } }
		},
		{
			"name": "ref",
			"displayName": "Ref",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the fully qualified reference (ie: `refs/heads/master`). If it doesn't start with 'refs' and have at least t...",
			"routing": { "send": { "type": "body", "property": "ref" } },
			"displayOptions": { "show": { "operation": ["git/create-ref"], "resource": ["git"] } }
		},
		{
			"name": "sha",
			"displayName": "Sha",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The SHA1 value for this reference",
			"routing": { "send": { "type": "body", "property": "sha" } },
			"displayOptions": { "show": { "operation": ["git/create-ref"], "resource": ["git"] } }
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "key",
					"displayName": "Key",
					"type": "string",
					"default": "",
					"placeholder": "e.g. \"refs/heads/newbranch\"",
					"routing": { "send": { "type": "body", "property": "key" } }
				}
			],
			"displayOptions": { "show": { "operation": ["git/create-ref"], "resource": ["git"] } }
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["git/delete-ref"], "resource": ["git"] } }
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["git/delete-ref"], "resource": ["git"] } }
		},
		{
			"name": "ref",
			"displayName": "Ref",
			"type": "string",
			"default": "",
			"required": true,
			"description": "ref parameter",
			"displayOptions": { "show": { "operation": ["git/delete-ref"], "resource": ["git"] } }
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["git/update-ref"], "resource": ["git"] } }
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["git/update-ref"], "resource": ["git"] } }
		},
		{
			"name": "ref",
			"displayName": "Ref",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the fully qualified reference to update. For example, `refs/heads/master`. If the value doesn't start with `...",
			"placeholder": "e.g. refs/head/master",
			"displayOptions": { "show": { "operation": ["git/update-ref"], "resource": ["git"] } }
		},
		{
			"name": "sha",
			"displayName": "Sha",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The SHA1 value to set this reference to",
			"routing": { "send": { "type": "body", "property": "sha" } },
			"displayOptions": { "show": { "operation": ["git/update-ref"], "resource": ["git"] } }
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "force",
					"displayName": "Force",
					"type": "boolean",
					"default": false,
					"description": "Indicates whether to force the update or to make sure the update is a fast-forward update. Leaving this out or setting i...",
					"routing": { "send": { "type": "body", "property": "force" } }
				}
			],
			"displayOptions": { "show": { "operation": ["git/update-ref"], "resource": ["git"] } }
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["git/create-tag"], "resource": ["git"] } }
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["git/create-tag"], "resource": ["git"] } }
		},
		{
			"name": "message",
			"displayName": "Message",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The tag message",
			"routing": { "send": { "type": "body", "property": "message" } },
			"displayOptions": { "show": { "operation": ["git/create-tag"], "resource": ["git"] } }
		},
		{
			"name": "object",
			"displayName": "Object",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The SHA of the git object this is tagging",
			"routing": { "send": { "type": "body", "property": "object" } },
			"displayOptions": { "show": { "operation": ["git/create-tag"], "resource": ["git"] } }
		},
		{
			"name": "tag",
			"displayName": "Tag",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The tag's name. This is typically a version (e.g., \"v0.0.1\")",
			"routing": { "send": { "type": "body", "property": "tag" } },
			"displayOptions": { "show": { "operation": ["git/create-tag"], "resource": ["git"] } }
		},
		{
			"name": "type",
			"displayName": "Type",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The type of the object we're tagging. Normally this is a `commit` but it can also be a `tree` or a `blob`",
			"routing": { "send": { "type": "body", "property": "type" } },
			"displayOptions": { "show": { "operation": ["git/create-tag"], "resource": ["git"] } }
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "tagger",
					"displayName": "Tagger",
					"type": "json",
					"default": "{}",
					"description": "An object with information about the individual creating the tag",
					"routing": { "send": { "type": "body", "property": "tagger" } }
				}
			],
			"displayOptions": { "show": { "operation": ["git/create-tag"], "resource": ["git"] } }
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["git/get-tag"], "resource": ["git"] } }
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["git/get-tag"], "resource": ["git"] } }
		},
		{
			"name": "tag_sha",
			"displayName": "Tag Sha",
			"type": "string",
			"default": "",
			"required": true,
			"displayOptions": { "show": { "operation": ["git/get-tag"], "resource": ["git"] } }
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["git/create-tree"], "resource": ["git"] } }
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["git/create-tree"], "resource": ["git"] } }
		},
		{
			"name": "tree",
			"displayName": "Tree",
			"type": "json",
			"default": "{}",
			"required": true,
			"description": "Objects (of `path`, `mode`, `type`, and `sha`) specifying a tree structure",
			"routing": { "send": { "type": "body", "property": "tree" } },
			"displayOptions": { "show": { "operation": ["git/create-tree"], "resource": ["git"] } }
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "base_tree",
					"displayName": "Base Tree",
					"type": "string",
					"default": "",
					"description": "The SHA1 of an existing Git tree object which will be used as the base for the new tree. If provided, a new Git tree obj...",
					"routing": { "send": { "type": "body", "property": "base_tree" } }
				}
			],
			"displayOptions": { "show": { "operation": ["git/create-tree"], "resource": ["git"] } }
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["git/get-tree"], "resource": ["git"] } }
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["git/get-tree"], "resource": ["git"] } }
		},
		{
			"name": "tree_sha",
			"displayName": "Tree Sha",
			"type": "string",
			"default": "",
			"required": true,
			"displayOptions": { "show": { "operation": ["git/get-tree"], "resource": ["git"] } }
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "recursive",
					"displayName": "Recursive",
					"type": "string",
					"default": "",
					"description": "Setting this parameter to any value returns the objects or subtrees referenced by the tree specified in `:tree_sha`. For...",
					"routing": { "send": { "type": "query", "property": "recursive" } }
				}
			],
			"displayOptions": { "show": { "operation": ["git/get-tree"], "resource": ["git"] } }
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["repos/list-webhooks"], "resource": ["repo"] } }
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["repos/list-webhooks"], "resource": ["repo"] } }
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": { "show": { "operation": ["repos/list-webhooks"], "resource": ["repo"] } }
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["repos/create-webhook"], "resource": ["repo"] } }
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["repos/create-webhook"], "resource": ["repo"] } }
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "active",
					"displayName": "Active",
					"type": "boolean",
					"default": false,
					"description": "Determines if notifications are sent when the webhook is triggered. Set to `true` to send notifications",
					"routing": { "send": { "type": "body", "property": "active" } }
				},
				{
					"name": "config",
					"displayName": "Config",
					"type": "json",
					"default": "{}",
					"description": "Key/value pairs to provide settings for this webhook. [These are defined below](https://docs.github.com/rest/reference/r...",
					"routing": { "send": { "type": "body", "property": "config" } }
				},
				{
					"name": "events",
					"displayName": "Events",
					"type": "string",
					"default": "",
					"description": "Determines what [events](https://docs.github.com/webhooks/event-payloads) the hook is triggered for",
					"routing": { "send": { "type": "body", "property": "events" } }
				},
				{
					"name": "name",
					"displayName": "Name",
					"type": "string",
					"default": "",
					"description": "Use `web` to create a webhook. Default: `web`. This parameter only accepts the value `web`",
					"routing": { "send": { "type": "body", "property": "name" } }
				}
			],
			"displayOptions": { "show": { "operation": ["repos/create-webhook"], "resource": ["repo"] } }
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["repos/delete-webhook"], "resource": ["repo"] } }
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["repos/delete-webhook"], "resource": ["repo"] } }
		},
		{
			"name": "hook_id",
			"displayName": "Hook ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the hook",
			"displayOptions": { "show": { "operation": ["repos/delete-webhook"], "resource": ["repo"] } }
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["repos/get-webhook"], "resource": ["repo"] } }
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["repos/get-webhook"], "resource": ["repo"] } }
		},
		{
			"name": "hook_id",
			"displayName": "Hook ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the hook",
			"displayOptions": { "show": { "operation": ["repos/get-webhook"], "resource": ["repo"] } }
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["repos/update-webhook"], "resource": ["repo"] } }
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["repos/update-webhook"], "resource": ["repo"] } }
		},
		{
			"name": "hook_id",
			"displayName": "Hook ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the hook",
			"displayOptions": { "show": { "operation": ["repos/update-webhook"], "resource": ["repo"] } }
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "active",
					"displayName": "Active",
					"type": "boolean",
					"default": false,
					"description": "Determines if notifications are sent when the webhook is triggered. Set to `true` to send notifications",
					"routing": { "send": { "type": "body", "property": "active" } }
				},
				{
					"name": "add_events",
					"displayName": "Add Events",
					"type": "string",
					"default": "",
					"description": "Determines a list of events to be added to the list of events that the Hook triggers for",
					"routing": { "send": { "type": "body", "property": "add_events" } }
				},
				{
					"name": "config",
					"displayName": "Config",
					"type": "json",
					"default": "{}",
					"description": "Key/value pairs to provide settings for this webhook. [These are defined below](https://docs.github.com/rest/reference/r...",
					"routing": { "send": { "type": "body", "property": "config" } }
				},
				{
					"name": "events",
					"displayName": "Events",
					"type": "string",
					"default": "",
					"description": "Determines what [events](https://docs.github.com/webhooks/event-payloads) the hook is triggered for. This replaces the e...",
					"routing": { "send": { "type": "body", "property": "events" } }
				},
				{
					"name": "remove_events",
					"displayName": "Remove Events",
					"type": "string",
					"default": "",
					"description": "Determines a list of events to be removed from the list of events that the Hook triggers for",
					"routing": { "send": { "type": "body", "property": "remove_events" } }
				}
			],
			"displayOptions": { "show": { "operation": ["repos/update-webhook"], "resource": ["repo"] } }
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/get-webhook-config-for-repo"], "resource": ["repo"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/get-webhook-config-for-repo"], "resource": ["repo"] }
			}
		},
		{
			"name": "hook_id",
			"displayName": "Hook ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the hook",
			"displayOptions": {
				"show": { "operation": ["repos/get-webhook-config-for-repo"], "resource": ["repo"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/update-webhook-config-for-repo"], "resource": ["repo"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/update-webhook-config-for-repo"], "resource": ["repo"] }
			}
		},
		{
			"name": "hook_id",
			"displayName": "Hook ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the hook",
			"displayOptions": {
				"show": { "operation": ["repos/update-webhook-config-for-repo"], "resource": ["repo"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "content_type",
					"displayName": "Content Type",
					"type": "string",
					"default": "",
					"description": "The media type used to serialize the payloads. Supported values include `json` and `form`. The default is `form`",
					"placeholder": "e.g. \"json\"",
					"routing": { "send": { "type": "body", "property": "content_type" } }
				},
				{
					"name": "insecure_ssl",
					"displayName": "Insecure Ssl",
					"type": "string",
					"default": "",
					"description": "Determines whether the SSL certificate of the host for `url` will be verified when delivering payloads. Supported values...",
					"placeholder": "e.g. \"0\"",
					"routing": { "send": { "type": "body", "property": "insecure_ssl" } }
				},
				{
					"name": "secret",
					"displayName": "Secret",
					"type": "string",
					"default": "",
					"description": "If provided, the `secret` will be used as the `key` to generate the HMAC hex digest value for [delivery signature header...",
					"placeholder": "e.g. \"********\"",
					"routing": { "send": { "type": "body", "property": "secret" } }
				},
				{
					"name": "url",
					"displayName": "URL",
					"type": "string",
					"default": "",
					"description": "The URL to which the payloads will be delivered",
					"placeholder": "e.g. https://example.com/webhook",
					"routing": { "send": { "type": "body", "property": "url" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["repos/update-webhook-config-for-repo"], "resource": ["repo"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/list-webhook-deliveries"], "resource": ["repo"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/list-webhook-deliveries"], "resource": ["repo"] }
			}
		},
		{
			"name": "hook_id",
			"displayName": "Hook ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the hook",
			"displayOptions": {
				"show": { "operation": ["repos/list-webhook-deliveries"], "resource": ["repo"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "cursor",
					"displayName": "Cursor",
					"type": "string",
					"default": "",
					"description": "Used for pagination: the starting delivery from which the page of deliveries is fetched. Refer to the `link` header for ...",
					"routing": { "send": { "type": "query", "property": "cursor" } }
				},
				{
					"name": "redelivery",
					"displayName": "Redelivery",
					"type": "boolean",
					"default": false,
					"routing": { "send": { "type": "query", "property": "redelivery" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["repos/list-webhook-deliveries"], "resource": ["repo"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/get-webhook-delivery"], "resource": ["repo"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/get-webhook-delivery"], "resource": ["repo"] }
			}
		},
		{
			"name": "hook_id",
			"displayName": "Hook ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the hook",
			"displayOptions": {
				"show": { "operation": ["repos/get-webhook-delivery"], "resource": ["repo"] }
			}
		},
		{
			"name": "delivery_id",
			"displayName": "Delivery ID",
			"type": "number",
			"default": 0,
			"required": true,
			"displayOptions": {
				"show": { "operation": ["repos/get-webhook-delivery"], "resource": ["repo"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/redeliver-webhook-delivery"], "resource": ["repo"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/redeliver-webhook-delivery"], "resource": ["repo"] }
			}
		},
		{
			"name": "hook_id",
			"displayName": "Hook ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the hook",
			"displayOptions": {
				"show": { "operation": ["repos/redeliver-webhook-delivery"], "resource": ["repo"] }
			}
		},
		{
			"name": "delivery_id",
			"displayName": "Delivery ID",
			"type": "number",
			"default": 0,
			"required": true,
			"displayOptions": {
				"show": { "operation": ["repos/redeliver-webhook-delivery"], "resource": ["repo"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["repos/ping-webhook"], "resource": ["repo"] } }
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["repos/ping-webhook"], "resource": ["repo"] } }
		},
		{
			"name": "hook_id",
			"displayName": "Hook ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the hook",
			"displayOptions": { "show": { "operation": ["repos/ping-webhook"], "resource": ["repo"] } }
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/test-push-webhook"], "resource": ["repo"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/test-push-webhook"], "resource": ["repo"] }
			}
		},
		{
			"name": "hook_id",
			"displayName": "Hook ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the hook",
			"displayOptions": {
				"show": { "operation": ["repos/test-push-webhook"], "resource": ["repo"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["migrations/cancel-import"], "resource": ["migration"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["migrations/cancel-import"], "resource": ["migration"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["migrations/get-import-status"], "resource": ["migration"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["migrations/get-import-status"], "resource": ["migration"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["migrations/update-import"], "resource": ["migration"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["migrations/update-import"], "resource": ["migration"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "tfvc_project",
					"displayName": "Tfvc Project",
					"type": "string",
					"default": "",
					"description": "For a tfvc import, the name of the project that is being imported",
					"placeholder": "e.g. \"project1\"",
					"routing": { "send": { "type": "body", "property": "tfvc_project" } }
				},
				{
					"name": "vcs",
					"displayName": "Vcs",
					"type": "string",
					"default": "",
					"description": "The type of version control system you are migrating from",
					"placeholder": "e.g. \"git\"",
					"routing": { "send": { "type": "body", "property": "vcs" } }
				},
				{
					"name": "vcs_password",
					"displayName": "Vcs Password",
					"type": "string",
					"default": "",
					"description": "The password to provide to the originating repository",
					"routing": { "send": { "type": "body", "property": "vcs_password" } }
				},
				{
					"name": "vcs_username",
					"displayName": "Vcs Username",
					"type": "string",
					"default": "",
					"description": "The username to provide to the originating repository",
					"routing": { "send": { "type": "body", "property": "vcs_username" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["migrations/update-import"], "resource": ["migration"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["migrations/start-import"], "resource": ["migration"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["migrations/start-import"], "resource": ["migration"] }
			}
		},
		{
			"name": "vcs_url",
			"displayName": "Vcs URL",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The URL of the originating repository",
			"routing": { "send": { "type": "body", "property": "vcs_url" } },
			"displayOptions": {
				"show": { "operation": ["migrations/start-import"], "resource": ["migration"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "tfvc_project",
					"displayName": "Tfvc Project",
					"type": "string",
					"default": "",
					"description": "For a tfvc import, the name of the project that is being imported",
					"routing": { "send": { "type": "body", "property": "tfvc_project" } }
				},
				{
					"name": "vcs",
					"displayName": "Vcs",
					"type": "string",
					"default": "",
					"description": "The originating VCS type. Without this parameter, the import job will take additional time to detect the VCS type before...",
					"routing": { "send": { "type": "body", "property": "vcs" } }
				},
				{
					"name": "vcs_password",
					"displayName": "Vcs Password",
					"type": "string",
					"default": "",
					"description": "If authentication is required, the password to provide to `vcs_url`",
					"routing": { "send": { "type": "body", "property": "vcs_password" } }
				},
				{
					"name": "vcs_username",
					"displayName": "Vcs Username",
					"type": "string",
					"default": "",
					"description": "If authentication is required, the username to provide to `vcs_url`",
					"routing": { "send": { "type": "body", "property": "vcs_username" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["migrations/start-import"], "resource": ["migration"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["migrations/get-commit-authors"], "resource": ["migration"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["migrations/get-commit-authors"], "resource": ["migration"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "since",
					"displayName": "Since",
					"type": "number",
					"default": 0,
					"description": "A user ID. Only return users with an ID greater than this ID",
					"routing": { "send": { "type": "query", "property": "since" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["migrations/get-commit-authors"], "resource": ["migration"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["migrations/map-commit-author"], "resource": ["migration"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["migrations/map-commit-author"], "resource": ["migration"] }
			}
		},
		{
			"name": "author_id",
			"displayName": "Author ID",
			"type": "number",
			"default": 0,
			"required": true,
			"displayOptions": {
				"show": { "operation": ["migrations/map-commit-author"], "resource": ["migration"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "email",
					"displayName": "Email",
					"type": "string",
					"default": "",
					"description": "The new Git author email",
					"routing": { "send": { "type": "body", "property": "email" } }
				},
				{
					"name": "name",
					"displayName": "Name",
					"type": "string",
					"default": "",
					"description": "The new Git author name",
					"routing": { "send": { "type": "body", "property": "name" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["migrations/map-commit-author"], "resource": ["migration"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["migrations/get-large-files"], "resource": ["migration"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["migrations/get-large-files"], "resource": ["migration"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["migrations/set-lfs-preference"], "resource": ["migration"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["migrations/set-lfs-preference"], "resource": ["migration"] }
			}
		},
		{
			"name": "use_lfs",
			"displayName": "Use Lfs",
			"type": "string",
			"default": "",
			"required": true,
			"description": "Whether to store large files during the import. `opt_in` means large files will be stored using Git LFS. `opt_out` means...",
			"routing": { "send": { "type": "body", "property": "use_lfs" } },
			"displayOptions": {
				"show": { "operation": ["migrations/set-lfs-preference"], "resource": ["migration"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["apps/get-repo-installation"], "resource": ["app"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["apps/get-repo-installation"], "resource": ["app"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["interactions/remove-restrictions-for-repo"],
					"resource": ["interaction"]
				}
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["interactions/remove-restrictions-for-repo"],
					"resource": ["interaction"]
				}
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["interactions/get-restrictions-for-repo"],
					"resource": ["interaction"]
				}
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["interactions/get-restrictions-for-repo"],
					"resource": ["interaction"]
				}
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["interactions/set-restrictions-for-repo"],
					"resource": ["interaction"]
				}
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["interactions/set-restrictions-for-repo"],
					"resource": ["interaction"]
				}
			}
		},
		{
			"name": "limit",
			"displayName": "Limit",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The type of GitHub user that can comment, open issues, or create pull requests while the interaction limit is in effect",
			"placeholder": "e.g. collaborators_only",
			"routing": { "send": { "type": "body", "property": "limit" } },
			"displayOptions": {
				"show": {
					"operation": ["interactions/set-restrictions-for-repo"],
					"resource": ["interaction"]
				}
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "expiry",
					"displayName": "Expiry",
					"type": "string",
					"default": "",
					"description": "The duration of the interaction restriction. Default: `one_day`",
					"placeholder": "e.g. one_month",
					"routing": { "send": { "type": "body", "property": "expiry" } }
				}
			],
			"displayOptions": {
				"show": {
					"operation": ["interactions/set-restrictions-for-repo"],
					"resource": ["interaction"]
				}
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/list-invitations"], "resource": ["repo"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/list-invitations"], "resource": ["repo"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["repos/list-invitations"], "resource": ["repo"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/delete-invitation"], "resource": ["repo"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/delete-invitation"], "resource": ["repo"] }
			}
		},
		{
			"name": "invitation_id",
			"displayName": "Invitation ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the invitation",
			"displayOptions": {
				"show": { "operation": ["repos/delete-invitation"], "resource": ["repo"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/update-invitation"], "resource": ["repo"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/update-invitation"], "resource": ["repo"] }
			}
		},
		{
			"name": "invitation_id",
			"displayName": "Invitation ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the invitation",
			"displayOptions": {
				"show": { "operation": ["repos/update-invitation"], "resource": ["repo"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "permissions",
					"displayName": "Permissions",
					"type": "string",
					"default": "",
					"description": "The permissions that the associated user will have on the repository. Valid values are `read`, `write`, `maintain`, `tri...",
					"routing": { "send": { "type": "body", "property": "permissions" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["repos/update-invitation"], "resource": ["repo"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["issues/list-for-repo"], "resource": ["issue"] } }
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["issues/list-for-repo"], "resource": ["issue"] } }
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "milestone",
					"displayName": "Milestone",
					"type": "string",
					"default": "",
					"description": "If an `integer` is passed, it should refer to a milestone by its `number` field. If the string `*` is passed, issues wit...",
					"routing": { "send": { "type": "query", "property": "milestone" } }
				},
				{
					"name": "state",
					"displayName": "State",
					"type": "options",
					"default": "open",
					"description": "Indicates the state of the issues to return",
					"options": [
						{ "name": "Open", "value": "open" },
						{ "name": "Closed", "value": "closed" },
						{ "name": "All", "value": "all" }
					],
					"routing": { "send": { "type": "query", "property": "state" } }
				},
				{
					"name": "assignee",
					"displayName": "Assignee",
					"type": "string",
					"default": "",
					"description": "Can be the name of a user. Pass in `none` for issues with no assigned user, and `*` for issues assigned to any user",
					"routing": { "send": { "type": "query", "property": "assignee" } }
				},
				{
					"name": "creator",
					"displayName": "Creator",
					"type": "string",
					"default": "",
					"description": "The user that created the issue",
					"routing": { "send": { "type": "query", "property": "creator" } }
				},
				{
					"name": "mentioned",
					"displayName": "Mentioned",
					"type": "string",
					"default": "",
					"description": "A user that's mentioned in the issue",
					"routing": { "send": { "type": "query", "property": "mentioned" } }
				},
				{
					"name": "labels",
					"displayName": "Labels",
					"type": "string",
					"default": "",
					"description": "A list of comma separated label names. Example: `bug,ui,@high`",
					"routing": { "send": { "type": "query", "property": "labels" } }
				},
				{
					"name": "sort",
					"displayName": "Sort",
					"type": "options",
					"default": "created",
					"description": "What to sort results by",
					"options": [
						{ "name": "Created", "value": "created" },
						{ "name": "Updated", "value": "updated" },
						{ "name": "Comments", "value": "comments" }
					],
					"routing": { "send": { "type": "query", "property": "sort" } }
				},
				{
					"name": "direction",
					"displayName": "Direction",
					"type": "options",
					"default": "desc",
					"description": "The direction to sort the results by",
					"options": [{ "name": "Asc", "value": "asc" }, { "name": "Desc", "value": "desc" }],
					"routing": { "send": { "type": "query", "property": "direction" } }
				},
				{
					"name": "since",
					"displayName": "Since",
					"type": "string",
					"default": "",
					"description": "Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/IS...",
					"routing": { "send": { "type": "query", "property": "since" } }
				},
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": { "show": { "operation": ["issues/list-for-repo"], "resource": ["issue"] } }
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["issues/create"], "resource": ["issue"] } }
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["issues/create"], "resource": ["issue"] } }
		},
		{
			"name": "title",
			"displayName": "Title",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The title of the issue",
			"routing": { "send": { "type": "body", "property": "title" } },
			"displayOptions": { "show": { "operation": ["issues/create"], "resource": ["issue"] } }
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "assignee",
					"displayName": "Assignee",
					"type": "string",
					"default": "",
					"description": "Login for the user that this issue should be assigned to. _NOTE: Only users with push access can set the assignee for ne...",
					"routing": { "send": { "type": "body", "property": "assignee" } }
				},
				{
					"name": "assignees",
					"displayName": "Assignees",
					"type": "string",
					"default": "",
					"description": "Logins for Users to assign to this issue. _NOTE: Only users with push access can set assignees for new issues. Assignees...",
					"routing": { "send": { "type": "body", "property": "assignees" } }
				},
				{
					"name": "body",
					"displayName": "Body",
					"type": "string",
					"default": "",
					"description": "The contents of the issue",
					"routing": { "send": { "type": "body", "property": "body" } }
				},
				{
					"name": "labels",
					"displayName": "Labels",
					"type": "json",
					"default": "{}",
					"description": "Labels to associate with this issue. _NOTE: Only users with push access can set labels for new issues. Labels are silent...",
					"routing": { "send": { "type": "body", "property": "labels" } }
				},
				{
					"name": "milestone",
					"displayName": "Milestone",
					"type": "string",
					"default": "",
					"routing": { "send": { "type": "body", "property": "milestone" } }
				}
			],
			"displayOptions": { "show": { "operation": ["issues/create"], "resource": ["issue"] } }
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["issues/list-comments-for-repo"], "resource": ["issue"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["issues/list-comments-for-repo"], "resource": ["issue"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "sort",
					"displayName": "Sort",
					"type": "options",
					"default": "created",
					"description": "The property to sort the results by. `created` means when the repository was starred. `updated` means when the repositor...",
					"options": [
						{ "name": "Created", "value": "created" },
						{ "name": "Updated", "value": "updated" }
					],
					"routing": { "send": { "type": "query", "property": "sort" } }
				},
				{
					"name": "direction",
					"displayName": "Direction",
					"type": "options",
					"default": "asc",
					"description": "Either `asc` or `desc`. Ignored without the `sort` parameter",
					"options": [{ "name": "Asc", "value": "asc" }, { "name": "Desc", "value": "desc" }],
					"routing": { "send": { "type": "query", "property": "direction" } }
				},
				{
					"name": "since",
					"displayName": "Since",
					"type": "string",
					"default": "",
					"description": "Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/IS...",
					"routing": { "send": { "type": "query", "property": "since" } }
				},
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["issues/list-comments-for-repo"], "resource": ["issue"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["issues/delete-comment"], "resource": ["issue"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["issues/delete-comment"], "resource": ["issue"] }
			}
		},
		{
			"name": "comment_id",
			"displayName": "Comment ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the comment",
			"displayOptions": {
				"show": { "operation": ["issues/delete-comment"], "resource": ["issue"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["issues/get-comment"], "resource": ["issue"] } }
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["issues/get-comment"], "resource": ["issue"] } }
		},
		{
			"name": "comment_id",
			"displayName": "Comment ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the comment",
			"displayOptions": { "show": { "operation": ["issues/get-comment"], "resource": ["issue"] } }
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["issues/update-comment"], "resource": ["issue"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["issues/update-comment"], "resource": ["issue"] }
			}
		},
		{
			"name": "comment_id",
			"displayName": "Comment ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the comment",
			"displayOptions": {
				"show": { "operation": ["issues/update-comment"], "resource": ["issue"] }
			}
		},
		{
			"name": "body",
			"displayName": "Body",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The contents of the comment",
			"routing": { "send": { "type": "body", "property": "body" } },
			"displayOptions": {
				"show": { "operation": ["issues/update-comment"], "resource": ["issue"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["reactions/list-for-issue-comment"], "resource": ["reaction"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["reactions/list-for-issue-comment"], "resource": ["reaction"] }
			}
		},
		{
			"name": "comment_id",
			"displayName": "Comment ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the comment",
			"displayOptions": {
				"show": { "operation": ["reactions/list-for-issue-comment"], "resource": ["reaction"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "content",
					"displayName": "Content",
					"type": "options",
					"default": "+1",
					"description": "Returns a single [reaction type](https://docs.github.com/rest/reference/reactions#reaction-types). Omit this parameter t...",
					"options": [
						{ "name": "1", "value": "+1" },
						{ "name": "1", "value": "-1" },
						{ "name": "Laugh", "value": "laugh" },
						{ "name": "Confused", "value": "confused" },
						{ "name": "Heart", "value": "heart" },
						{ "name": "Hooray", "value": "hooray" },
						{ "name": "Rocket", "value": "rocket" },
						{ "name": "Eyes", "value": "eyes" }
					],
					"routing": { "send": { "type": "query", "property": "content" } }
				},
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["reactions/list-for-issue-comment"], "resource": ["reaction"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["reactions/create-for-issue-comment"], "resource": ["reaction"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["reactions/create-for-issue-comment"], "resource": ["reaction"] }
			}
		},
		{
			"name": "comment_id",
			"displayName": "Comment ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the comment",
			"displayOptions": {
				"show": { "operation": ["reactions/create-for-issue-comment"], "resource": ["reaction"] }
			}
		},
		{
			"name": "content",
			"displayName": "Content",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The [reaction type](https://docs.github.com/rest/reference/reactions#reaction-types) to add to the issue comment",
			"routing": { "send": { "type": "body", "property": "content" } },
			"displayOptions": {
				"show": { "operation": ["reactions/create-for-issue-comment"], "resource": ["reaction"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["reactions/delete-for-issue-comment"], "resource": ["reaction"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["reactions/delete-for-issue-comment"], "resource": ["reaction"] }
			}
		},
		{
			"name": "comment_id",
			"displayName": "Comment ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the comment",
			"displayOptions": {
				"show": { "operation": ["reactions/delete-for-issue-comment"], "resource": ["reaction"] }
			}
		},
		{
			"name": "reaction_id",
			"displayName": "Reaction ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the reaction",
			"displayOptions": {
				"show": { "operation": ["reactions/delete-for-issue-comment"], "resource": ["reaction"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["issues/list-events-for-repo"], "resource": ["issue"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["issues/list-events-for-repo"], "resource": ["issue"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["issues/list-events-for-repo"], "resource": ["issue"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["issues/get-event"], "resource": ["issue"] } }
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["issues/get-event"], "resource": ["issue"] } }
		},
		{
			"name": "event_id",
			"displayName": "Event ID",
			"type": "number",
			"default": 0,
			"required": true,
			"displayOptions": { "show": { "operation": ["issues/get-event"], "resource": ["issue"] } }
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["issues/get"], "resource": ["issue"] } }
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["issues/get"], "resource": ["issue"] } }
		},
		{
			"name": "issue_number",
			"displayName": "Issue Number",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The number that identifies the issue",
			"displayOptions": { "show": { "operation": ["issues/get"], "resource": ["issue"] } }
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["issues/update"], "resource": ["issue"] } }
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["issues/update"], "resource": ["issue"] } }
		},
		{
			"name": "issue_number",
			"displayName": "Issue Number",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The number that identifies the issue",
			"displayOptions": { "show": { "operation": ["issues/update"], "resource": ["issue"] } }
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "assignee",
					"displayName": "Assignee",
					"type": "string",
					"default": "",
					"description": "Username to assign to this issue. **This field is deprecated.**",
					"routing": { "send": { "type": "body", "property": "assignee" } }
				},
				{
					"name": "assignees",
					"displayName": "Assignees",
					"type": "string",
					"default": "",
					"description": "Usernames to assign to this issue. Pass one or more user logins to _replace_ the set of assignees on this issue. Send an...",
					"routing": { "send": { "type": "body", "property": "assignees" } }
				},
				{
					"name": "body",
					"displayName": "Body",
					"type": "string",
					"default": "",
					"description": "The contents of the issue",
					"routing": { "send": { "type": "body", "property": "body" } }
				},
				{
					"name": "labels",
					"displayName": "Labels",
					"type": "json",
					"default": "{}",
					"description": "Labels to associate with this issue. Pass one or more labels to _replace_ the set of labels on this issue. Send an empty...",
					"routing": { "send": { "type": "body", "property": "labels" } }
				},
				{
					"name": "milestone",
					"displayName": "Milestone",
					"type": "string",
					"default": "",
					"routing": { "send": { "type": "body", "property": "milestone" } }
				},
				{
					"name": "state",
					"displayName": "State",
					"type": "string",
					"default": "",
					"description": "The open or closed state of the issue",
					"routing": { "send": { "type": "body", "property": "state" } }
				},
				{
					"name": "state_reason",
					"displayName": "State Reason",
					"type": "string",
					"default": "",
					"description": "The reason for the state change. Ignored unless `state` is changed",
					"placeholder": "e.g. not_planned",
					"routing": { "send": { "type": "body", "property": "state_reason" } }
				},
				{
					"name": "title",
					"displayName": "Title",
					"type": "string",
					"default": "",
					"description": "The title of the issue",
					"routing": { "send": { "type": "body", "property": "title" } }
				}
			],
			"displayOptions": { "show": { "operation": ["issues/update"], "resource": ["issue"] } }
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["issues/remove-assignees"], "resource": ["issue"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["issues/remove-assignees"], "resource": ["issue"] }
			}
		},
		{
			"name": "issue_number",
			"displayName": "Issue Number",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The number that identifies the issue",
			"displayOptions": {
				"show": { "operation": ["issues/remove-assignees"], "resource": ["issue"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "assignees",
					"displayName": "Assignees",
					"type": "string",
					"default": "",
					"description": "Usernames of assignees to remove from an issue. _NOTE: Only users with push access can remove assignees from an issue. A...",
					"routing": { "send": { "type": "body", "property": "assignees" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["issues/remove-assignees"], "resource": ["issue"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["issues/add-assignees"], "resource": ["issue"] } }
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["issues/add-assignees"], "resource": ["issue"] } }
		},
		{
			"name": "issue_number",
			"displayName": "Issue Number",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The number that identifies the issue",
			"displayOptions": { "show": { "operation": ["issues/add-assignees"], "resource": ["issue"] } }
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "assignees",
					"displayName": "Assignees",
					"type": "string",
					"default": "",
					"description": "Usernames of people to assign this issue to. _NOTE: Only users with push access can add assignees to an issue. Assignees...",
					"routing": { "send": { "type": "body", "property": "assignees" } }
				}
			],
			"displayOptions": { "show": { "operation": ["issues/add-assignees"], "resource": ["issue"] } }
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["issues/check-user-can-be-assigned-to-issue"],
					"resource": ["issue"]
				}
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["issues/check-user-can-be-assigned-to-issue"],
					"resource": ["issue"]
				}
			}
		},
		{
			"name": "issue_number",
			"displayName": "Issue Number",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The number that identifies the issue",
			"displayOptions": {
				"show": {
					"operation": ["issues/check-user-can-be-assigned-to-issue"],
					"resource": ["issue"]
				}
			}
		},
		{
			"name": "assignee",
			"displayName": "Assignee",
			"type": "string",
			"default": "",
			"required": true,
			"displayOptions": {
				"show": {
					"operation": ["issues/check-user-can-be-assigned-to-issue"],
					"resource": ["issue"]
				}
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["issues/list-comments"], "resource": ["issue"] } }
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["issues/list-comments"], "resource": ["issue"] } }
		},
		{
			"name": "issue_number",
			"displayName": "Issue Number",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The number that identifies the issue",
			"displayOptions": { "show": { "operation": ["issues/list-comments"], "resource": ["issue"] } }
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "since",
					"displayName": "Since",
					"type": "string",
					"default": "",
					"description": "Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/IS...",
					"routing": { "send": { "type": "query", "property": "since" } }
				},
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": { "show": { "operation": ["issues/list-comments"], "resource": ["issue"] } }
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["issues/create-comment"], "resource": ["issue"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["issues/create-comment"], "resource": ["issue"] }
			}
		},
		{
			"name": "issue_number",
			"displayName": "Issue Number",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The number that identifies the issue",
			"displayOptions": {
				"show": { "operation": ["issues/create-comment"], "resource": ["issue"] }
			}
		},
		{
			"name": "body",
			"displayName": "Body",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The contents of the comment",
			"routing": { "send": { "type": "body", "property": "body" } },
			"displayOptions": {
				"show": { "operation": ["issues/create-comment"], "resource": ["issue"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["issues/list-events"], "resource": ["issue"] } }
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["issues/list-events"], "resource": ["issue"] } }
		},
		{
			"name": "issue_number",
			"displayName": "Issue Number",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The number that identifies the issue",
			"displayOptions": { "show": { "operation": ["issues/list-events"], "resource": ["issue"] } }
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": { "show": { "operation": ["issues/list-events"], "resource": ["issue"] } }
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["issues/remove-all-labels"], "resource": ["issue"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["issues/remove-all-labels"], "resource": ["issue"] }
			}
		},
		{
			"name": "issue_number",
			"displayName": "Issue Number",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The number that identifies the issue",
			"displayOptions": {
				"show": { "operation": ["issues/remove-all-labels"], "resource": ["issue"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["issues/list-labels-on-issue"], "resource": ["issue"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["issues/list-labels-on-issue"], "resource": ["issue"] }
			}
		},
		{
			"name": "issue_number",
			"displayName": "Issue Number",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The number that identifies the issue",
			"displayOptions": {
				"show": { "operation": ["issues/list-labels-on-issue"], "resource": ["issue"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["issues/list-labels-on-issue"], "resource": ["issue"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["issues/add-labels"], "resource": ["issue"] } }
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["issues/add-labels"], "resource": ["issue"] } }
		},
		{
			"name": "issue_number",
			"displayName": "Issue Number",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The number that identifies the issue",
			"displayOptions": { "show": { "operation": ["issues/add-labels"], "resource": ["issue"] } }
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["issues/set-labels"], "resource": ["issue"] } }
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["issues/set-labels"], "resource": ["issue"] } }
		},
		{
			"name": "issue_number",
			"displayName": "Issue Number",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The number that identifies the issue",
			"displayOptions": { "show": { "operation": ["issues/set-labels"], "resource": ["issue"] } }
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["issues/remove-label"], "resource": ["issue"] } }
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["issues/remove-label"], "resource": ["issue"] } }
		},
		{
			"name": "issue_number",
			"displayName": "Issue Number",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The number that identifies the issue",
			"displayOptions": { "show": { "operation": ["issues/remove-label"], "resource": ["issue"] } }
		},
		{
			"name": "name",
			"displayName": "Name",
			"type": "string",
			"default": "",
			"required": true,
			"displayOptions": { "show": { "operation": ["issues/remove-label"], "resource": ["issue"] } }
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["issues/unlock"], "resource": ["issue"] } }
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["issues/unlock"], "resource": ["issue"] } }
		},
		{
			"name": "issue_number",
			"displayName": "Issue Number",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The number that identifies the issue",
			"displayOptions": { "show": { "operation": ["issues/unlock"], "resource": ["issue"] } }
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["issues/lock"], "resource": ["issue"] } }
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["issues/lock"], "resource": ["issue"] } }
		},
		{
			"name": "issue_number",
			"displayName": "Issue Number",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The number that identifies the issue",
			"displayOptions": { "show": { "operation": ["issues/lock"], "resource": ["issue"] } }
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "lock_reason",
					"displayName": "Lock Reason",
					"type": "string",
					"default": "",
					"description": "The reason for locking the issue or pull request conversation. Lock will fail if you don't use one of these reasons:    ...",
					"routing": { "send": { "type": "body", "property": "lock_reason" } }
				}
			],
			"displayOptions": { "show": { "operation": ["issues/lock"], "resource": ["issue"] } }
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["reactions/list-for-issue"], "resource": ["reaction"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["reactions/list-for-issue"], "resource": ["reaction"] }
			}
		},
		{
			"name": "issue_number",
			"displayName": "Issue Number",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The number that identifies the issue",
			"displayOptions": {
				"show": { "operation": ["reactions/list-for-issue"], "resource": ["reaction"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "content",
					"displayName": "Content",
					"type": "options",
					"default": "+1",
					"description": "Returns a single [reaction type](https://docs.github.com/rest/reference/reactions#reaction-types). Omit this parameter t...",
					"options": [
						{ "name": "1", "value": "+1" },
						{ "name": "1", "value": "-1" },
						{ "name": "Laugh", "value": "laugh" },
						{ "name": "Confused", "value": "confused" },
						{ "name": "Heart", "value": "heart" },
						{ "name": "Hooray", "value": "hooray" },
						{ "name": "Rocket", "value": "rocket" },
						{ "name": "Eyes", "value": "eyes" }
					],
					"routing": { "send": { "type": "query", "property": "content" } }
				},
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["reactions/list-for-issue"], "resource": ["reaction"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["reactions/create-for-issue"], "resource": ["reaction"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["reactions/create-for-issue"], "resource": ["reaction"] }
			}
		},
		{
			"name": "issue_number",
			"displayName": "Issue Number",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The number that identifies the issue",
			"displayOptions": {
				"show": { "operation": ["reactions/create-for-issue"], "resource": ["reaction"] }
			}
		},
		{
			"name": "content",
			"displayName": "Content",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The [reaction type](https://docs.github.com/rest/reference/reactions#reaction-types) to add to the issue",
			"routing": { "send": { "type": "body", "property": "content" } },
			"displayOptions": {
				"show": { "operation": ["reactions/create-for-issue"], "resource": ["reaction"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["reactions/delete-for-issue"], "resource": ["reaction"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["reactions/delete-for-issue"], "resource": ["reaction"] }
			}
		},
		{
			"name": "issue_number",
			"displayName": "Issue Number",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The number that identifies the issue",
			"displayOptions": {
				"show": { "operation": ["reactions/delete-for-issue"], "resource": ["reaction"] }
			}
		},
		{
			"name": "reaction_id",
			"displayName": "Reaction ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the reaction",
			"displayOptions": {
				"show": { "operation": ["reactions/delete-for-issue"], "resource": ["reaction"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["issues/list-events-for-timeline"], "resource": ["issue"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["issues/list-events-for-timeline"], "resource": ["issue"] }
			}
		},
		{
			"name": "issue_number",
			"displayName": "Issue Number",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The number that identifies the issue",
			"displayOptions": {
				"show": { "operation": ["issues/list-events-for-timeline"], "resource": ["issue"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["issues/list-events-for-timeline"], "resource": ["issue"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/list-deploy-keys"], "resource": ["repo"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/list-deploy-keys"], "resource": ["repo"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["repos/list-deploy-keys"], "resource": ["repo"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/create-deploy-key"], "resource": ["repo"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/create-deploy-key"], "resource": ["repo"] }
			}
		},
		{
			"name": "key",
			"displayName": "Key",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The contents of the key",
			"routing": { "send": { "type": "body", "property": "key" } },
			"displayOptions": {
				"show": { "operation": ["repos/create-deploy-key"], "resource": ["repo"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "read_only",
					"displayName": "Read Only",
					"type": "boolean",
					"default": false,
					"description": "If `true`, the key will only be able to read repository contents. Otherwise, the key will be able to read and write.    ...",
					"routing": { "send": { "type": "body", "property": "read_only" } }
				},
				{
					"name": "title",
					"displayName": "Title",
					"type": "string",
					"default": "",
					"description": "A name for the key",
					"routing": { "send": { "type": "body", "property": "title" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["repos/create-deploy-key"], "resource": ["repo"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/delete-deploy-key"], "resource": ["repo"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/delete-deploy-key"], "resource": ["repo"] }
			}
		},
		{
			"name": "key_id",
			"displayName": "Key ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the key",
			"displayOptions": {
				"show": { "operation": ["repos/delete-deploy-key"], "resource": ["repo"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["repos/get-deploy-key"], "resource": ["repo"] } }
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["repos/get-deploy-key"], "resource": ["repo"] } }
		},
		{
			"name": "key_id",
			"displayName": "Key ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the key",
			"displayOptions": { "show": { "operation": ["repos/get-deploy-key"], "resource": ["repo"] } }
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["issues/list-labels-for-repo"], "resource": ["issue"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["issues/list-labels-for-repo"], "resource": ["issue"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["issues/list-labels-for-repo"], "resource": ["issue"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["issues/create-label"], "resource": ["issue"] } }
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["issues/create-label"], "resource": ["issue"] } }
		},
		{
			"name": "name",
			"displayName": "Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the label. Emoji can be added to label names, using either native emoji or colon-style markup. For example, ...",
			"routing": { "send": { "type": "body", "property": "name" } },
			"displayOptions": { "show": { "operation": ["issues/create-label"], "resource": ["issue"] } }
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "color",
					"displayName": "Color",
					"type": "string",
					"default": "",
					"description": "The [hexadecimal color code](http://www.color-hex.com/) for the label, without the leading `#`",
					"routing": { "send": { "type": "body", "property": "color" } }
				},
				{
					"name": "description",
					"displayName": "Description",
					"type": "string",
					"default": "",
					"description": "A short description of the label. Must be 100 characters or fewer",
					"routing": { "send": { "type": "body", "property": "description" } }
				}
			],
			"displayOptions": { "show": { "operation": ["issues/create-label"], "resource": ["issue"] } }
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["issues/delete-label"], "resource": ["issue"] } }
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["issues/delete-label"], "resource": ["issue"] } }
		},
		{
			"name": "name",
			"displayName": "Name",
			"type": "string",
			"default": "",
			"required": true,
			"displayOptions": { "show": { "operation": ["issues/delete-label"], "resource": ["issue"] } }
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["issues/get-label"], "resource": ["issue"] } }
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["issues/get-label"], "resource": ["issue"] } }
		},
		{
			"name": "name",
			"displayName": "Name",
			"type": "string",
			"default": "",
			"required": true,
			"displayOptions": { "show": { "operation": ["issues/get-label"], "resource": ["issue"] } }
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["issues/update-label"], "resource": ["issue"] } }
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["issues/update-label"], "resource": ["issue"] } }
		},
		{
			"name": "name",
			"displayName": "Name",
			"type": "string",
			"default": "",
			"required": true,
			"displayOptions": { "show": { "operation": ["issues/update-label"], "resource": ["issue"] } }
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "color",
					"displayName": "Color",
					"type": "string",
					"default": "",
					"description": "The [hexadecimal color code](http://www.color-hex.com/) for the label, without the leading `#`",
					"routing": { "send": { "type": "body", "property": "color" } }
				},
				{
					"name": "description",
					"displayName": "Description",
					"type": "string",
					"default": "",
					"description": "A short description of the label. Must be 100 characters or fewer",
					"routing": { "send": { "type": "body", "property": "description" } }
				},
				{
					"name": "new_name",
					"displayName": "New Name",
					"type": "string",
					"default": "",
					"description": "The new name of the label. Emoji can be added to label names, using either native emoji or colon-style markup. For examp...",
					"routing": { "send": { "type": "body", "property": "new_name" } }
				}
			],
			"displayOptions": { "show": { "operation": ["issues/update-label"], "resource": ["issue"] } }
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["repos/list-languages"], "resource": ["repo"] } }
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["repos/list-languages"], "resource": ["repo"] } }
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/disable-lfs-for-repo"], "resource": ["repo"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/disable-lfs-for-repo"], "resource": ["repo"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/enable-lfs-for-repo"], "resource": ["repo"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/enable-lfs-for-repo"], "resource": ["repo"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["licenses/get-for-repo"], "resource": ["license"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["licenses/get-for-repo"], "resource": ["license"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["repos/merge-upstream"], "resource": ["repo"] } }
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["repos/merge-upstream"], "resource": ["repo"] } }
		},
		{
			"name": "branch",
			"displayName": "Branch",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the branch which should be updated to match upstream",
			"routing": { "send": { "type": "body", "property": "branch" } },
			"displayOptions": { "show": { "operation": ["repos/merge-upstream"], "resource": ["repo"] } }
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["repos/merge"], "resource": ["repo"] } }
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["repos/merge"], "resource": ["repo"] } }
		},
		{
			"name": "base",
			"displayName": "Base",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the base branch that the head will be merged into",
			"routing": { "send": { "type": "body", "property": "base" } },
			"displayOptions": { "show": { "operation": ["repos/merge"], "resource": ["repo"] } }
		},
		{
			"name": "head",
			"displayName": "Head",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The head to merge. This can be a branch name or a commit SHA1",
			"routing": { "send": { "type": "body", "property": "head" } },
			"displayOptions": { "show": { "operation": ["repos/merge"], "resource": ["repo"] } }
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "commit_message",
					"displayName": "Commit Message",
					"type": "string",
					"default": "",
					"description": "Commit message to use for the merge commit. If omitted, a default message will be used",
					"routing": { "send": { "type": "body", "property": "commit_message" } }
				}
			],
			"displayOptions": { "show": { "operation": ["repos/merge"], "resource": ["repo"] } }
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["issues/list-milestones"], "resource": ["issue"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["issues/list-milestones"], "resource": ["issue"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "state",
					"displayName": "State",
					"type": "options",
					"default": "open",
					"description": "The state of the milestone. Either `open`, `closed`, or `all`",
					"options": [
						{ "name": "Open", "value": "open" },
						{ "name": "Closed", "value": "closed" },
						{ "name": "All", "value": "all" }
					],
					"routing": { "send": { "type": "query", "property": "state" } }
				},
				{
					"name": "sort",
					"displayName": "Sort",
					"type": "options",
					"default": "due_on",
					"description": "What to sort results by. Either `due_on` or `completeness`",
					"options": [
						{ "name": "Due On", "value": "due_on" },
						{ "name": "Completeness", "value": "completeness" }
					],
					"routing": { "send": { "type": "query", "property": "sort" } }
				},
				{
					"name": "direction",
					"displayName": "Direction",
					"type": "options",
					"default": "asc",
					"description": "The direction of the sort. Either `asc` or `desc`",
					"options": [{ "name": "Asc", "value": "asc" }, { "name": "Desc", "value": "desc" }],
					"routing": { "send": { "type": "query", "property": "direction" } }
				},
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["issues/list-milestones"], "resource": ["issue"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["issues/create-milestone"], "resource": ["issue"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["issues/create-milestone"], "resource": ["issue"] }
			}
		},
		{
			"name": "title",
			"displayName": "Title",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The title of the milestone",
			"routing": { "send": { "type": "body", "property": "title" } },
			"displayOptions": {
				"show": { "operation": ["issues/create-milestone"], "resource": ["issue"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "description",
					"displayName": "Description",
					"type": "string",
					"default": "",
					"description": "A description of the milestone",
					"routing": { "send": { "type": "body", "property": "description" } }
				},
				{
					"name": "due_on",
					"displayName": "Due On",
					"type": "string",
					"default": "",
					"description": "The milestone due date. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH...",
					"routing": { "send": { "type": "body", "property": "due_on" } }
				},
				{
					"name": "state",
					"displayName": "State",
					"type": "string",
					"default": "",
					"description": "The state of the milestone. Either `open` or `closed`",
					"routing": { "send": { "type": "body", "property": "state" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["issues/create-milestone"], "resource": ["issue"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["issues/delete-milestone"], "resource": ["issue"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["issues/delete-milestone"], "resource": ["issue"] }
			}
		},
		{
			"name": "milestone_number",
			"displayName": "Milestone Number",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The number that identifies the milestone",
			"displayOptions": {
				"show": { "operation": ["issues/delete-milestone"], "resource": ["issue"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["issues/get-milestone"], "resource": ["issue"] } }
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["issues/get-milestone"], "resource": ["issue"] } }
		},
		{
			"name": "milestone_number",
			"displayName": "Milestone Number",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The number that identifies the milestone",
			"displayOptions": { "show": { "operation": ["issues/get-milestone"], "resource": ["issue"] } }
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["issues/update-milestone"], "resource": ["issue"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["issues/update-milestone"], "resource": ["issue"] }
			}
		},
		{
			"name": "milestone_number",
			"displayName": "Milestone Number",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The number that identifies the milestone",
			"displayOptions": {
				"show": { "operation": ["issues/update-milestone"], "resource": ["issue"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "description",
					"displayName": "Description",
					"type": "string",
					"default": "",
					"description": "A description of the milestone",
					"routing": { "send": { "type": "body", "property": "description" } }
				},
				{
					"name": "due_on",
					"displayName": "Due On",
					"type": "string",
					"default": "",
					"description": "The milestone due date. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH...",
					"routing": { "send": { "type": "body", "property": "due_on" } }
				},
				{
					"name": "state",
					"displayName": "State",
					"type": "string",
					"default": "",
					"description": "The state of the milestone. Either `open` or `closed`",
					"routing": { "send": { "type": "body", "property": "state" } }
				},
				{
					"name": "title",
					"displayName": "Title",
					"type": "string",
					"default": "",
					"description": "The title of the milestone",
					"routing": { "send": { "type": "body", "property": "title" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["issues/update-milestone"], "resource": ["issue"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["issues/list-labels-for-milestone"], "resource": ["issue"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["issues/list-labels-for-milestone"], "resource": ["issue"] }
			}
		},
		{
			"name": "milestone_number",
			"displayName": "Milestone Number",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The number that identifies the milestone",
			"displayOptions": {
				"show": { "operation": ["issues/list-labels-for-milestone"], "resource": ["issue"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["issues/list-labels-for-milestone"], "resource": ["issue"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["activity/list-repo-notifications-for-authenticated-user"],
					"resource": ["activity"]
				}
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["activity/list-repo-notifications-for-authenticated-user"],
					"resource": ["activity"]
				}
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "all",
					"displayName": "All",
					"type": "boolean",
					"default": false,
					"description": "If `true`, show notifications marked as read",
					"routing": { "send": { "type": "query", "property": "all" } }
				},
				{
					"name": "participating",
					"displayName": "Participating",
					"type": "boolean",
					"default": false,
					"description": "If `true`, only shows notifications in which the user is directly participating or mentioned",
					"routing": { "send": { "type": "query", "property": "participating" } }
				},
				{
					"name": "since",
					"displayName": "Since",
					"type": "string",
					"default": "",
					"description": "Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/IS...",
					"routing": { "send": { "type": "query", "property": "since" } }
				},
				{
					"name": "before",
					"displayName": "Before",
					"type": "string",
					"default": "",
					"description": "Only show notifications updated before the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/I...",
					"routing": { "send": { "type": "query", "property": "before" } }
				},
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": {
					"operation": ["activity/list-repo-notifications-for-authenticated-user"],
					"resource": ["activity"]
				}
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["activity/mark-repo-notifications-as-read"],
					"resource": ["activity"]
				}
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["activity/mark-repo-notifications-as-read"],
					"resource": ["activity"]
				}
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "last_read_at",
					"displayName": "Last Read At",
					"type": "string",
					"default": "",
					"description": "Describes the last point that notifications were checked. Anything updated since this time will not be marked as read. I...",
					"routing": { "send": { "type": "body", "property": "last_read_at" } }
				}
			],
			"displayOptions": {
				"show": {
					"operation": ["activity/mark-repo-notifications-as-read"],
					"resource": ["activity"]
				}
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/delete-pages-site"], "resource": ["repo"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/delete-pages-site"], "resource": ["repo"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["repos/get-pages"], "resource": ["repo"] } }
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["repos/get-pages"], "resource": ["repo"] } }
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/create-pages-site"], "resource": ["repo"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/create-pages-site"], "resource": ["repo"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "build_type",
					"displayName": "Build Type",
					"type": "string",
					"default": "",
					"description": "The process in which the Page will be built. Possible values are `\"legacy\"` and `\"workflow\"`",
					"routing": { "send": { "type": "body", "property": "build_type" } }
				},
				{
					"name": "source",
					"displayName": "Source",
					"type": "json",
					"default": "{}",
					"description": "The source branch and directory used to publish your Pages site",
					"routing": { "send": { "type": "body", "property": "source" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["repos/create-pages-site"], "resource": ["repo"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/update-information-about-pages-site"], "resource": ["repo"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/update-information-about-pages-site"], "resource": ["repo"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "build_type",
					"displayName": "Build Type",
					"type": "string",
					"default": "",
					"description": "The process by which the GitHub Pages site will be built. `workflow` means that the site is built by a custom GitHub Act...",
					"routing": { "send": { "type": "body", "property": "build_type" } }
				},
				{
					"name": "cname",
					"displayName": "Cname",
					"type": "string",
					"default": "",
					"description": "Specify a custom domain for the repository. Sending a `null` value will remove the custom domain. For more about custom ...",
					"routing": { "send": { "type": "body", "property": "cname" } }
				},
				{
					"name": "https_enforced",
					"displayName": "Https Enforced",
					"type": "boolean",
					"default": false,
					"description": "Specify whether HTTPS should be enforced for the repository",
					"routing": { "send": { "type": "body", "property": "https_enforced" } }
				},
				{
					"name": "source",
					"displayName": "Source",
					"type": "string",
					"default": "",
					"description": "Update the source for the repository. Must include the branch name, and may optionally specify the subdirectory `/docs`....",
					"routing": { "send": { "type": "body", "property": "source" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["repos/update-information-about-pages-site"], "resource": ["repo"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/list-pages-builds"], "resource": ["repo"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/list-pages-builds"], "resource": ["repo"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["repos/list-pages-builds"], "resource": ["repo"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/request-pages-build"], "resource": ["repo"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/request-pages-build"], "resource": ["repo"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/get-latest-pages-build"], "resource": ["repo"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/get-latest-pages-build"], "resource": ["repo"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["repos/get-pages-build"], "resource": ["repo"] } }
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["repos/get-pages-build"], "resource": ["repo"] } }
		},
		{
			"name": "build_id",
			"displayName": "Build ID",
			"type": "number",
			"default": 0,
			"required": true,
			"displayOptions": { "show": { "operation": ["repos/get-pages-build"], "resource": ["repo"] } }
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/create-pages-deployment"], "resource": ["repo"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/create-pages-deployment"], "resource": ["repo"] }
			}
		},
		{
			"name": "artifact_url",
			"displayName": "Artifact URL",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The URL of an artifact that contains the .zip or .tar of static assets to deploy. The artifact belongs to the repository",
			"routing": { "send": { "type": "body", "property": "artifact_url" } },
			"displayOptions": {
				"show": { "operation": ["repos/create-pages-deployment"], "resource": ["repo"] }
			}
		},
		{
			"name": "oidc_token",
			"displayName": "Oidc Token",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The OIDC token issued by GitHub Actions certifying the origin of the deployment",
			"routing": { "send": { "type": "body", "property": "oidc_token" } },
			"displayOptions": {
				"show": { "operation": ["repos/create-pages-deployment"], "resource": ["repo"] }
			}
		},
		{
			"name": "pages_build_version",
			"displayName": "Pages Build Version",
			"type": "string",
			"default": "",
			"required": true,
			"description": "A unique string that represents the version of the build for this deployment",
			"routing": { "send": { "type": "body", "property": "pages_build_version" } },
			"displayOptions": {
				"show": { "operation": ["repos/create-pages-deployment"], "resource": ["repo"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "environment",
					"displayName": "Environment",
					"type": "string",
					"default": "",
					"description": "The target environment for this GitHub Pages deployment",
					"routing": { "send": { "type": "body", "property": "environment" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["repos/create-pages-deployment"], "resource": ["repo"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/get-pages-health-check"], "resource": ["repo"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/get-pages-health-check"], "resource": ["repo"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["projects/list-for-repo"], "resource": ["project"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["projects/list-for-repo"], "resource": ["project"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "state",
					"displayName": "State",
					"type": "options",
					"default": "open",
					"description": "Indicates the state of the projects to return",
					"options": [
						{ "name": "Open", "value": "open" },
						{ "name": "Closed", "value": "closed" },
						{ "name": "All", "value": "all" }
					],
					"routing": { "send": { "type": "query", "property": "state" } }
				},
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["projects/list-for-repo"], "resource": ["project"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["projects/create-for-repo"], "resource": ["project"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["projects/create-for-repo"], "resource": ["project"] }
			}
		},
		{
			"name": "name",
			"displayName": "Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the project",
			"routing": { "send": { "type": "body", "property": "name" } },
			"displayOptions": {
				"show": { "operation": ["projects/create-for-repo"], "resource": ["project"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "body",
					"displayName": "Body",
					"type": "string",
					"default": "",
					"description": "The description of the project",
					"routing": { "send": { "type": "body", "property": "body" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["projects/create-for-repo"], "resource": ["project"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["pulls/list"], "resource": ["pull"] } }
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["pulls/list"], "resource": ["pull"] } }
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "state",
					"displayName": "State",
					"type": "options",
					"default": "open",
					"description": "Either `open`, `closed`, or `all` to filter by state",
					"options": [
						{ "name": "Open", "value": "open" },
						{ "name": "Closed", "value": "closed" },
						{ "name": "All", "value": "all" }
					],
					"routing": { "send": { "type": "query", "property": "state" } }
				},
				{
					"name": "head",
					"displayName": "Head",
					"type": "string",
					"default": "",
					"description": "Filter pulls by head user or head organization and branch name in the format of `user:ref-name` or `organization:ref-nam...",
					"routing": { "send": { "type": "query", "property": "head" } }
				},
				{
					"name": "base",
					"displayName": "Base",
					"type": "string",
					"default": "",
					"description": "Filter pulls by base branch name. Example: `gh-pages`",
					"routing": { "send": { "type": "query", "property": "base" } }
				},
				{
					"name": "sort",
					"displayName": "Sort",
					"type": "options",
					"default": "created",
					"description": "What to sort results by. `popularity` will sort by the number of comments. `long-running` will sort by date created and ...",
					"options": [
						{ "name": "Created", "value": "created" },
						{ "name": "Updated", "value": "updated" },
						{ "name": "Popularity", "value": "popularity" },
						{ "name": "Long Running", "value": "long-running" }
					],
					"routing": { "send": { "type": "query", "property": "sort" } }
				},
				{
					"name": "direction",
					"displayName": "Direction",
					"type": "options",
					"default": "asc",
					"description": "The direction of the sort. Default: `desc` when sort is `created` or sort is not specified, otherwise `asc`",
					"options": [{ "name": "Asc", "value": "asc" }, { "name": "Desc", "value": "desc" }],
					"routing": { "send": { "type": "query", "property": "direction" } }
				},
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": { "show": { "operation": ["pulls/list"], "resource": ["pull"] } }
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["pulls/create"], "resource": ["pull"] } }
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["pulls/create"], "resource": ["pull"] } }
		},
		{
			"name": "base",
			"displayName": "Base",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the branch you want the changes pulled into. This should be an existing branch on the current repository. Yo...",
			"routing": { "send": { "type": "body", "property": "base" } },
			"displayOptions": { "show": { "operation": ["pulls/create"], "resource": ["pull"] } }
		},
		{
			"name": "head",
			"displayName": "Head",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the branch where your changes are implemented. For cross-repository pull requests in the same network, names...",
			"routing": { "send": { "type": "body", "property": "head" } },
			"displayOptions": { "show": { "operation": ["pulls/create"], "resource": ["pull"] } }
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "body",
					"displayName": "Body",
					"type": "string",
					"default": "",
					"description": "The contents of the pull request",
					"routing": { "send": { "type": "body", "property": "body" } }
				},
				{
					"name": "draft",
					"displayName": "Draft",
					"type": "boolean",
					"default": false,
					"description": "Indicates whether the pull request is a draft. See \"[Draft Pull Requests](https://docs.github.com/articles/about-pull-re...",
					"routing": { "send": { "type": "body", "property": "draft" } }
				},
				{
					"name": "head_repo",
					"displayName": "Head Repo",
					"type": "string",
					"default": "",
					"description": "The name of the repository where the changes in the pull request were made. This field is required for cross-repository ...",
					"placeholder": "e.g. octo-org/octo-repo",
					"routing": { "send": { "type": "body", "property": "head_repo" } }
				},
				{
					"name": "issue",
					"displayName": "Issue",
					"type": "number",
					"default": 0,
					"description": "An issue in the repository to convert to a pull request. The issue title, body, and comments will become the title, body...",
					"routing": { "send": { "type": "body", "property": "issue" } }
				},
				{
					"name": "maintainer_can_modify",
					"displayName": "Maintainer Can Modify",
					"type": "boolean",
					"default": false,
					"description": "Indicates whether [maintainers can modify](https://docs.github.com/articles/allowing-changes-to-a-pull-request-branch-cr...",
					"routing": { "send": { "type": "body", "property": "maintainer_can_modify" } }
				},
				{
					"name": "title",
					"displayName": "Title",
					"type": "string",
					"default": "",
					"description": "The title of the new pull request. Required unless `issue` is specified",
					"routing": { "send": { "type": "body", "property": "title" } }
				}
			],
			"displayOptions": { "show": { "operation": ["pulls/create"], "resource": ["pull"] } }
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["pulls/list-review-comments-for-repo"], "resource": ["pull"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["pulls/list-review-comments-for-repo"], "resource": ["pull"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "sort",
					"displayName": "Sort",
					"type": "options",
					"default": "created",
					"options": [
						{ "name": "Created", "value": "created" },
						{ "name": "Updated", "value": "updated" },
						{ "name": "Created At", "value": "created_at" }
					],
					"routing": { "send": { "type": "query", "property": "sort" } }
				},
				{
					"name": "direction",
					"displayName": "Direction",
					"type": "options",
					"default": "asc",
					"description": "The direction to sort results. Ignored without `sort` parameter",
					"options": [{ "name": "Asc", "value": "asc" }, { "name": "Desc", "value": "desc" }],
					"routing": { "send": { "type": "query", "property": "direction" } }
				},
				{
					"name": "since",
					"displayName": "Since",
					"type": "string",
					"default": "",
					"description": "Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/IS...",
					"routing": { "send": { "type": "query", "property": "since" } }
				},
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["pulls/list-review-comments-for-repo"], "resource": ["pull"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["pulls/delete-review-comment"], "resource": ["pull"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["pulls/delete-review-comment"], "resource": ["pull"] }
			}
		},
		{
			"name": "comment_id",
			"displayName": "Comment ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the comment",
			"displayOptions": {
				"show": { "operation": ["pulls/delete-review-comment"], "resource": ["pull"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["pulls/get-review-comment"], "resource": ["pull"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["pulls/get-review-comment"], "resource": ["pull"] }
			}
		},
		{
			"name": "comment_id",
			"displayName": "Comment ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the comment",
			"displayOptions": {
				"show": { "operation": ["pulls/get-review-comment"], "resource": ["pull"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["pulls/update-review-comment"], "resource": ["pull"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["pulls/update-review-comment"], "resource": ["pull"] }
			}
		},
		{
			"name": "comment_id",
			"displayName": "Comment ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the comment",
			"displayOptions": {
				"show": { "operation": ["pulls/update-review-comment"], "resource": ["pull"] }
			}
		},
		{
			"name": "body",
			"displayName": "Body",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The text of the reply to the review comment",
			"routing": { "send": { "type": "body", "property": "body" } },
			"displayOptions": {
				"show": { "operation": ["pulls/update-review-comment"], "resource": ["pull"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["reactions/list-for-pull-request-review-comment"],
					"resource": ["reaction"]
				}
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["reactions/list-for-pull-request-review-comment"],
					"resource": ["reaction"]
				}
			}
		},
		{
			"name": "comment_id",
			"displayName": "Comment ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the comment",
			"displayOptions": {
				"show": {
					"operation": ["reactions/list-for-pull-request-review-comment"],
					"resource": ["reaction"]
				}
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "content",
					"displayName": "Content",
					"type": "options",
					"default": "+1",
					"description": "Returns a single [reaction type](https://docs.github.com/rest/reference/reactions#reaction-types). Omit this parameter t...",
					"options": [
						{ "name": "1", "value": "+1" },
						{ "name": "1", "value": "-1" },
						{ "name": "Laugh", "value": "laugh" },
						{ "name": "Confused", "value": "confused" },
						{ "name": "Heart", "value": "heart" },
						{ "name": "Hooray", "value": "hooray" },
						{ "name": "Rocket", "value": "rocket" },
						{ "name": "Eyes", "value": "eyes" }
					],
					"routing": { "send": { "type": "query", "property": "content" } }
				},
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": {
					"operation": ["reactions/list-for-pull-request-review-comment"],
					"resource": ["reaction"]
				}
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["reactions/create-for-pull-request-review-comment"],
					"resource": ["reaction"]
				}
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["reactions/create-for-pull-request-review-comment"],
					"resource": ["reaction"]
				}
			}
		},
		{
			"name": "comment_id",
			"displayName": "Comment ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the comment",
			"displayOptions": {
				"show": {
					"operation": ["reactions/create-for-pull-request-review-comment"],
					"resource": ["reaction"]
				}
			}
		},
		{
			"name": "content",
			"displayName": "Content",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The [reaction type](https://docs.github.com/rest/reference/reactions#reaction-types) to add to the pull request review c...",
			"routing": { "send": { "type": "body", "property": "content" } },
			"displayOptions": {
				"show": {
					"operation": ["reactions/create-for-pull-request-review-comment"],
					"resource": ["reaction"]
				}
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["reactions/delete-for-pull-request-comment"],
					"resource": ["reaction"]
				}
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["reactions/delete-for-pull-request-comment"],
					"resource": ["reaction"]
				}
			}
		},
		{
			"name": "comment_id",
			"displayName": "Comment ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the comment",
			"displayOptions": {
				"show": {
					"operation": ["reactions/delete-for-pull-request-comment"],
					"resource": ["reaction"]
				}
			}
		},
		{
			"name": "reaction_id",
			"displayName": "Reaction ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the reaction",
			"displayOptions": {
				"show": {
					"operation": ["reactions/delete-for-pull-request-comment"],
					"resource": ["reaction"]
				}
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["pulls/get"], "resource": ["pull"] } }
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["pulls/get"], "resource": ["pull"] } }
		},
		{
			"name": "pull_number",
			"displayName": "Pull Number",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The number that identifies the pull request",
			"displayOptions": { "show": { "operation": ["pulls/get"], "resource": ["pull"] } }
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["pulls/update"], "resource": ["pull"] } }
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["pulls/update"], "resource": ["pull"] } }
		},
		{
			"name": "pull_number",
			"displayName": "Pull Number",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The number that identifies the pull request",
			"displayOptions": { "show": { "operation": ["pulls/update"], "resource": ["pull"] } }
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "base",
					"displayName": "Base",
					"type": "string",
					"default": "",
					"description": "The name of the branch you want your changes pulled into. This should be an existing branch on the current repository. Y...",
					"routing": { "send": { "type": "body", "property": "base" } }
				},
				{
					"name": "body",
					"displayName": "Body",
					"type": "string",
					"default": "",
					"description": "The contents of the pull request",
					"routing": { "send": { "type": "body", "property": "body" } }
				},
				{
					"name": "maintainer_can_modify",
					"displayName": "Maintainer Can Modify",
					"type": "boolean",
					"default": false,
					"description": "Indicates whether [maintainers can modify](https://docs.github.com/articles/allowing-changes-to-a-pull-request-branch-cr...",
					"routing": { "send": { "type": "body", "property": "maintainer_can_modify" } }
				},
				{
					"name": "state",
					"displayName": "State",
					"type": "string",
					"default": "",
					"description": "State of this Pull Request. Either `open` or `closed`",
					"routing": { "send": { "type": "body", "property": "state" } }
				},
				{
					"name": "title",
					"displayName": "Title",
					"type": "string",
					"default": "",
					"description": "The title of the pull request",
					"routing": { "send": { "type": "body", "property": "title" } }
				}
			],
			"displayOptions": { "show": { "operation": ["pulls/update"], "resource": ["pull"] } }
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["codespaces/create-with-pr-for-authenticated-user"],
					"resource": ["codespace"]
				}
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["codespaces/create-with-pr-for-authenticated-user"],
					"resource": ["codespace"]
				}
			}
		},
		{
			"name": "pull_number",
			"displayName": "Pull Number",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The number that identifies the pull request",
			"displayOptions": {
				"show": {
					"operation": ["codespaces/create-with-pr-for-authenticated-user"],
					"resource": ["codespace"]
				}
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "client_ip",
					"displayName": "Client IP",
					"type": "string",
					"default": "",
					"description": "IP for location auto-detection when proxying a request",
					"routing": { "send": { "type": "body", "property": "client_ip" } }
				},
				{
					"name": "devcontainer_path",
					"displayName": "Devcontainer Path",
					"type": "string",
					"default": "",
					"description": "Path to devcontainer.json config to use for this codespace",
					"routing": { "send": { "type": "body", "property": "devcontainer_path" } }
				},
				{
					"name": "display_name",
					"displayName": "Display Name",
					"type": "string",
					"default": "",
					"description": "Display name for this codespace",
					"routing": { "send": { "type": "body", "property": "display_name" } }
				},
				{
					"name": "idle_timeout_minutes",
					"displayName": "Idle Timeout Minutes",
					"type": "number",
					"default": 0,
					"description": "Time in minutes before codespace stops from inactivity",
					"routing": { "send": { "type": "body", "property": "idle_timeout_minutes" } }
				},
				{
					"name": "location",
					"displayName": "Location",
					"type": "string",
					"default": "",
					"description": "Location for this codespace. Assigned by IP if not provided",
					"routing": { "send": { "type": "body", "property": "location" } }
				},
				{
					"name": "machine",
					"displayName": "Machine",
					"type": "string",
					"default": "",
					"description": "Machine type to use for this codespace",
					"routing": { "send": { "type": "body", "property": "machine" } }
				},
				{
					"name": "multi_repo_permissions_opt_out",
					"displayName": "Multi Repo Permissions Opt Out",
					"type": "boolean",
					"default": false,
					"description": "Whether to authorize requested permissions from devcontainer.json",
					"routing": { "send": { "type": "body", "property": "multi_repo_permissions_opt_out" } }
				},
				{
					"name": "retention_period_minutes",
					"displayName": "Retention Period Minutes",
					"type": "number",
					"default": 0,
					"description": "Duration in minutes after codespace has gone idle in which it will be deleted. Must be integer minutes between 0 and 432...",
					"routing": { "send": { "type": "body", "property": "retention_period_minutes" } }
				},
				{
					"name": "working_directory",
					"displayName": "Working Directory",
					"type": "string",
					"default": "",
					"description": "Working directory for this codespace",
					"routing": { "send": { "type": "body", "property": "working_directory" } }
				}
			],
			"displayOptions": {
				"show": {
					"operation": ["codespaces/create-with-pr-for-authenticated-user"],
					"resource": ["codespace"]
				}
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["pulls/list-review-comments"], "resource": ["pull"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["pulls/list-review-comments"], "resource": ["pull"] }
			}
		},
		{
			"name": "pull_number",
			"displayName": "Pull Number",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The number that identifies the pull request",
			"displayOptions": {
				"show": { "operation": ["pulls/list-review-comments"], "resource": ["pull"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "sort",
					"displayName": "Sort",
					"type": "options",
					"default": "created",
					"description": "The property to sort the results by. `created` means when the repository was starred. `updated` means when the repositor...",
					"options": [
						{ "name": "Created", "value": "created" },
						{ "name": "Updated", "value": "updated" }
					],
					"routing": { "send": { "type": "query", "property": "sort" } }
				},
				{
					"name": "direction",
					"displayName": "Direction",
					"type": "options",
					"default": "asc",
					"description": "The direction to sort results. Ignored without `sort` parameter",
					"options": [{ "name": "Asc", "value": "asc" }, { "name": "Desc", "value": "desc" }],
					"routing": { "send": { "type": "query", "property": "direction" } }
				},
				{
					"name": "since",
					"displayName": "Since",
					"type": "string",
					"default": "",
					"description": "Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/IS...",
					"routing": { "send": { "type": "query", "property": "since" } }
				},
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["pulls/list-review-comments"], "resource": ["pull"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["pulls/create-review-comment"], "resource": ["pull"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["pulls/create-review-comment"], "resource": ["pull"] }
			}
		},
		{
			"name": "pull_number",
			"displayName": "Pull Number",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The number that identifies the pull request",
			"displayOptions": {
				"show": { "operation": ["pulls/create-review-comment"], "resource": ["pull"] }
			}
		},
		{
			"name": "body",
			"displayName": "Body",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The text of the review comment",
			"routing": { "send": { "type": "body", "property": "body" } },
			"displayOptions": {
				"show": { "operation": ["pulls/create-review-comment"], "resource": ["pull"] }
			}
		},
		{
			"name": "commit_id",
			"displayName": "Commit ID",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The SHA of the commit needing a comment. Not using the latest commit SHA may render your comment outdated if a subsequen...",
			"routing": { "send": { "type": "body", "property": "commit_id" } },
			"displayOptions": {
				"show": { "operation": ["pulls/create-review-comment"], "resource": ["pull"] }
			}
		},
		{
			"name": "line",
			"displayName": "Line",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The line of the blob in the pull request diff that the comment applies to. For a multi-line comment, the last line of th...",
			"routing": { "send": { "type": "body", "property": "line" } },
			"displayOptions": {
				"show": { "operation": ["pulls/create-review-comment"], "resource": ["pull"] }
			}
		},
		{
			"name": "path",
			"displayName": "Path",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The relative path to the file that necessitates a comment",
			"routing": { "send": { "type": "body", "property": "path" } },
			"displayOptions": {
				"show": { "operation": ["pulls/create-review-comment"], "resource": ["pull"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "in_reply_to",
					"displayName": "In Reply To",
					"type": "number",
					"default": 0,
					"description": "The ID of the review comment to reply to. To find the ID of a review comment with [\"List review comments on a pull reque...",
					"routing": { "send": { "type": "body", "property": "in_reply_to" } }
				},
				{
					"name": "position",
					"displayName": "Position",
					"type": "number",
					"default": 0,
					"description": "**This parameter is deprecated. Use `line` instead**. The position in the diff where you want to add a review comment. N...",
					"routing": { "send": { "type": "body", "property": "position" } }
				},
				{
					"name": "side",
					"displayName": "Side",
					"type": "string",
					"default": "",
					"description": "In a split diff view, the side of the diff that the pull request's changes appear on. Can be `LEFT` or `RIGHT`. Use `LEF...",
					"routing": { "send": { "type": "body", "property": "side" } }
				},
				{
					"name": "start_line",
					"displayName": "Start Line",
					"type": "number",
					"default": 0,
					"description": "**Required when using multi-line comments unless using `in_reply_to`**. The `start_line` is the first line in the pull r...",
					"routing": { "send": { "type": "body", "property": "start_line" } }
				},
				{
					"name": "start_side",
					"displayName": "Start Side",
					"type": "string",
					"default": "",
					"description": "**Required when using multi-line comments unless using `in_reply_to`**. The `start_side` is the starting side of the dif...",
					"routing": { "send": { "type": "body", "property": "start_side" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["pulls/create-review-comment"], "resource": ["pull"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["pulls/create-reply-for-review-comment"], "resource": ["pull"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["pulls/create-reply-for-review-comment"], "resource": ["pull"] }
			}
		},
		{
			"name": "pull_number",
			"displayName": "Pull Number",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The number that identifies the pull request",
			"displayOptions": {
				"show": { "operation": ["pulls/create-reply-for-review-comment"], "resource": ["pull"] }
			}
		},
		{
			"name": "comment_id",
			"displayName": "Comment ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the comment",
			"displayOptions": {
				"show": { "operation": ["pulls/create-reply-for-review-comment"], "resource": ["pull"] }
			}
		},
		{
			"name": "body",
			"displayName": "Body",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The text of the review comment",
			"routing": { "send": { "type": "body", "property": "body" } },
			"displayOptions": {
				"show": { "operation": ["pulls/create-reply-for-review-comment"], "resource": ["pull"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["pulls/list-commits"], "resource": ["pull"] } }
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["pulls/list-commits"], "resource": ["pull"] } }
		},
		{
			"name": "pull_number",
			"displayName": "Pull Number",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The number that identifies the pull request",
			"displayOptions": { "show": { "operation": ["pulls/list-commits"], "resource": ["pull"] } }
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": { "show": { "operation": ["pulls/list-commits"], "resource": ["pull"] } }
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["pulls/list-files"], "resource": ["pull"] } }
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["pulls/list-files"], "resource": ["pull"] } }
		},
		{
			"name": "pull_number",
			"displayName": "Pull Number",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The number that identifies the pull request",
			"displayOptions": { "show": { "operation": ["pulls/list-files"], "resource": ["pull"] } }
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": { "show": { "operation": ["pulls/list-files"], "resource": ["pull"] } }
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["pulls/check-if-merged"], "resource": ["pull"] } }
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["pulls/check-if-merged"], "resource": ["pull"] } }
		},
		{
			"name": "pull_number",
			"displayName": "Pull Number",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The number that identifies the pull request",
			"displayOptions": { "show": { "operation": ["pulls/check-if-merged"], "resource": ["pull"] } }
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["pulls/merge"], "resource": ["pull"] } }
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["pulls/merge"], "resource": ["pull"] } }
		},
		{
			"name": "pull_number",
			"displayName": "Pull Number",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The number that identifies the pull request",
			"displayOptions": { "show": { "operation": ["pulls/merge"], "resource": ["pull"] } }
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "commit_message",
					"displayName": "Commit Message",
					"type": "string",
					"default": "",
					"description": "Extra detail to append to automatic commit message",
					"routing": { "send": { "type": "body", "property": "commit_message" } }
				},
				{
					"name": "commit_title",
					"displayName": "Commit Title",
					"type": "string",
					"default": "",
					"description": "Title for the automatic commit message",
					"routing": { "send": { "type": "body", "property": "commit_title" } }
				},
				{
					"name": "merge_method",
					"displayName": "Merge Method",
					"type": "string",
					"default": "",
					"description": "The merge method to use",
					"routing": { "send": { "type": "body", "property": "merge_method" } }
				},
				{
					"name": "sha",
					"displayName": "Sha",
					"type": "string",
					"default": "",
					"description": "SHA that pull request head must match to allow merge",
					"routing": { "send": { "type": "body", "property": "sha" } }
				}
			],
			"displayOptions": { "show": { "operation": ["pulls/merge"], "resource": ["pull"] } }
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["pulls/remove-requested-reviewers"], "resource": ["pull"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["pulls/remove-requested-reviewers"], "resource": ["pull"] }
			}
		},
		{
			"name": "pull_number",
			"displayName": "Pull Number",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The number that identifies the pull request",
			"displayOptions": {
				"show": { "operation": ["pulls/remove-requested-reviewers"], "resource": ["pull"] }
			}
		},
		{
			"name": "reviewers",
			"displayName": "Reviewers",
			"type": "string",
			"default": "",
			"required": true,
			"description": "An array of user `login`s that will be removed",
			"routing": { "send": { "type": "body", "property": "reviewers" } },
			"displayOptions": {
				"show": { "operation": ["pulls/remove-requested-reviewers"], "resource": ["pull"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "team_reviewers",
					"displayName": "Team Reviewers",
					"type": "string",
					"default": "",
					"description": "An array of team `slug`s that will be removed",
					"routing": { "send": { "type": "body", "property": "team_reviewers" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["pulls/remove-requested-reviewers"], "resource": ["pull"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["pulls/list-requested-reviewers"], "resource": ["pull"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["pulls/list-requested-reviewers"], "resource": ["pull"] }
			}
		},
		{
			"name": "pull_number",
			"displayName": "Pull Number",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The number that identifies the pull request",
			"displayOptions": {
				"show": { "operation": ["pulls/list-requested-reviewers"], "resource": ["pull"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["pulls/request-reviewers"], "resource": ["pull"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["pulls/request-reviewers"], "resource": ["pull"] }
			}
		},
		{
			"name": "pull_number",
			"displayName": "Pull Number",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The number that identifies the pull request",
			"displayOptions": {
				"show": { "operation": ["pulls/request-reviewers"], "resource": ["pull"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "reviewers",
					"displayName": "Reviewers",
					"type": "string",
					"default": "",
					"description": "An array of user `login`s that will be requested",
					"routing": { "send": { "type": "body", "property": "reviewers" } }
				},
				{
					"name": "team_reviewers",
					"displayName": "Team Reviewers",
					"type": "string",
					"default": "",
					"description": "An array of team `slug`s that will be requested",
					"routing": { "send": { "type": "body", "property": "team_reviewers" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["pulls/request-reviewers"], "resource": ["pull"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["pulls/list-reviews"], "resource": ["pull"] } }
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["pulls/list-reviews"], "resource": ["pull"] } }
		},
		{
			"name": "pull_number",
			"displayName": "Pull Number",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The number that identifies the pull request",
			"displayOptions": { "show": { "operation": ["pulls/list-reviews"], "resource": ["pull"] } }
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": { "show": { "operation": ["pulls/list-reviews"], "resource": ["pull"] } }
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["pulls/create-review"], "resource": ["pull"] } }
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["pulls/create-review"], "resource": ["pull"] } }
		},
		{
			"name": "pull_number",
			"displayName": "Pull Number",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The number that identifies the pull request",
			"displayOptions": { "show": { "operation": ["pulls/create-review"], "resource": ["pull"] } }
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "body",
					"displayName": "Body",
					"type": "string",
					"default": "",
					"description": "**Required** when using `REQUEST_CHANGES` or `COMMENT` for the `event` parameter. The body text of the pull request revi...",
					"routing": { "send": { "type": "body", "property": "body" } }
				},
				{
					"name": "comments",
					"displayName": "Comments",
					"type": "json",
					"default": "{}",
					"description": "Use the following table to specify the location, destination, and contents of the draft review comment",
					"routing": { "send": { "type": "body", "property": "comments" } }
				},
				{
					"name": "commit_id",
					"displayName": "Commit ID",
					"type": "string",
					"default": "",
					"description": "The SHA of the commit that needs a review. Not using the latest commit SHA may render your review comment outdated if a ...",
					"routing": { "send": { "type": "body", "property": "commit_id" } }
				},
				{
					"name": "event",
					"displayName": "Event",
					"type": "string",
					"default": "",
					"description": "The review action you want to perform. The review actions include: `APPROVE`, `REQUEST_CHANGES`, or `COMMENT`. By leavin...",
					"routing": { "send": { "type": "body", "property": "event" } }
				}
			],
			"displayOptions": { "show": { "operation": ["pulls/create-review"], "resource": ["pull"] } }
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["pulls/delete-pending-review"], "resource": ["pull"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["pulls/delete-pending-review"], "resource": ["pull"] }
			}
		},
		{
			"name": "pull_number",
			"displayName": "Pull Number",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The number that identifies the pull request",
			"displayOptions": {
				"show": { "operation": ["pulls/delete-pending-review"], "resource": ["pull"] }
			}
		},
		{
			"name": "review_id",
			"displayName": "Review ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the review",
			"displayOptions": {
				"show": { "operation": ["pulls/delete-pending-review"], "resource": ["pull"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["pulls/get-review"], "resource": ["pull"] } }
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["pulls/get-review"], "resource": ["pull"] } }
		},
		{
			"name": "pull_number",
			"displayName": "Pull Number",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The number that identifies the pull request",
			"displayOptions": { "show": { "operation": ["pulls/get-review"], "resource": ["pull"] } }
		},
		{
			"name": "review_id",
			"displayName": "Review ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the review",
			"displayOptions": { "show": { "operation": ["pulls/get-review"], "resource": ["pull"] } }
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["pulls/update-review"], "resource": ["pull"] } }
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["pulls/update-review"], "resource": ["pull"] } }
		},
		{
			"name": "pull_number",
			"displayName": "Pull Number",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The number that identifies the pull request",
			"displayOptions": { "show": { "operation": ["pulls/update-review"], "resource": ["pull"] } }
		},
		{
			"name": "review_id",
			"displayName": "Review ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the review",
			"displayOptions": { "show": { "operation": ["pulls/update-review"], "resource": ["pull"] } }
		},
		{
			"name": "body",
			"displayName": "Body",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The body text of the pull request review",
			"routing": { "send": { "type": "body", "property": "body" } },
			"displayOptions": { "show": { "operation": ["pulls/update-review"], "resource": ["pull"] } }
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["pulls/list-comments-for-review"], "resource": ["pull"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["pulls/list-comments-for-review"], "resource": ["pull"] }
			}
		},
		{
			"name": "pull_number",
			"displayName": "Pull Number",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The number that identifies the pull request",
			"displayOptions": {
				"show": { "operation": ["pulls/list-comments-for-review"], "resource": ["pull"] }
			}
		},
		{
			"name": "review_id",
			"displayName": "Review ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the review",
			"displayOptions": {
				"show": { "operation": ["pulls/list-comments-for-review"], "resource": ["pull"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["pulls/list-comments-for-review"], "resource": ["pull"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["pulls/dismiss-review"], "resource": ["pull"] } }
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["pulls/dismiss-review"], "resource": ["pull"] } }
		},
		{
			"name": "pull_number",
			"displayName": "Pull Number",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The number that identifies the pull request",
			"displayOptions": { "show": { "operation": ["pulls/dismiss-review"], "resource": ["pull"] } }
		},
		{
			"name": "review_id",
			"displayName": "Review ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the review",
			"displayOptions": { "show": { "operation": ["pulls/dismiss-review"], "resource": ["pull"] } }
		},
		{
			"name": "message",
			"displayName": "Message",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The message for the pull request review dismissal",
			"routing": { "send": { "type": "body", "property": "message" } },
			"displayOptions": { "show": { "operation": ["pulls/dismiss-review"], "resource": ["pull"] } }
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "event",
					"displayName": "Event",
					"type": "string",
					"default": "",
					"placeholder": "e.g. \"DISMISS\"",
					"routing": { "send": { "type": "body", "property": "event" } }
				}
			],
			"displayOptions": { "show": { "operation": ["pulls/dismiss-review"], "resource": ["pull"] } }
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["pulls/submit-review"], "resource": ["pull"] } }
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["pulls/submit-review"], "resource": ["pull"] } }
		},
		{
			"name": "pull_number",
			"displayName": "Pull Number",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The number that identifies the pull request",
			"displayOptions": { "show": { "operation": ["pulls/submit-review"], "resource": ["pull"] } }
		},
		{
			"name": "review_id",
			"displayName": "Review ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the review",
			"displayOptions": { "show": { "operation": ["pulls/submit-review"], "resource": ["pull"] } }
		},
		{
			"name": "event",
			"displayName": "Event",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The review action you want to perform. The review actions include: `APPROVE`, `REQUEST_CHANGES`, or `COMMENT`. When you ...",
			"routing": { "send": { "type": "body", "property": "event" } },
			"displayOptions": { "show": { "operation": ["pulls/submit-review"], "resource": ["pull"] } }
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "body",
					"displayName": "Body",
					"type": "string",
					"default": "",
					"description": "The body text of the pull request review",
					"routing": { "send": { "type": "body", "property": "body" } }
				}
			],
			"displayOptions": { "show": { "operation": ["pulls/submit-review"], "resource": ["pull"] } }
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["pulls/update-branch"], "resource": ["pull"] } }
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["pulls/update-branch"], "resource": ["pull"] } }
		},
		{
			"name": "pull_number",
			"displayName": "Pull Number",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The number that identifies the pull request",
			"displayOptions": { "show": { "operation": ["pulls/update-branch"], "resource": ["pull"] } }
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "expected_head_sha",
					"displayName": "Expected Head Sha",
					"type": "string",
					"default": "",
					"description": "The expected SHA of the pull request's HEAD ref. This is the most recent commit on the pull request's branch. If the exp...",
					"routing": { "send": { "type": "body", "property": "expected_head_sha" } }
				}
			],
			"displayOptions": { "show": { "operation": ["pulls/update-branch"], "resource": ["pull"] } }
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["repos/get-readme"], "resource": ["repo"] } }
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["repos/get-readme"], "resource": ["repo"] } }
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "ref",
					"displayName": "Ref",
					"type": "string",
					"default": "",
					"description": "The name of the commit/branch/tag. Default: the repository’s default branch (usually `master`)",
					"routing": { "send": { "type": "query", "property": "ref" } }
				}
			],
			"displayOptions": { "show": { "operation": ["repos/get-readme"], "resource": ["repo"] } }
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/get-readme-in-directory"], "resource": ["repo"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/get-readme-in-directory"], "resource": ["repo"] }
			}
		},
		{
			"name": "dir",
			"displayName": "Dir",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The alternate path to look for a README file",
			"displayOptions": {
				"show": { "operation": ["repos/get-readme-in-directory"], "resource": ["repo"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "ref",
					"displayName": "Ref",
					"type": "string",
					"default": "",
					"description": "The name of the commit/branch/tag. Default: the repository’s default branch (usually `master`)",
					"routing": { "send": { "type": "query", "property": "ref" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["repos/get-readme-in-directory"], "resource": ["repo"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["repos/list-releases"], "resource": ["repo"] } }
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["repos/list-releases"], "resource": ["repo"] } }
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": { "show": { "operation": ["repos/list-releases"], "resource": ["repo"] } }
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["repos/create-release"], "resource": ["repo"] } }
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["repos/create-release"], "resource": ["repo"] } }
		},
		{
			"name": "tag_name",
			"displayName": "Tag Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the tag",
			"routing": { "send": { "type": "body", "property": "tag_name" } },
			"displayOptions": { "show": { "operation": ["repos/create-release"], "resource": ["repo"] } }
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "body",
					"displayName": "Body",
					"type": "string",
					"default": "",
					"description": "Text describing the contents of the tag",
					"routing": { "send": { "type": "body", "property": "body" } }
				},
				{
					"name": "discussion_category_name",
					"displayName": "Discussion Category Name",
					"type": "string",
					"default": "",
					"description": "If specified, a discussion of the specified category is created and linked to the release. The value must be a category ...",
					"routing": { "send": { "type": "body", "property": "discussion_category_name" } }
				},
				{
					"name": "draft",
					"displayName": "Draft",
					"type": "boolean",
					"default": false,
					"description": "`true` to create a draft (unpublished) release, `false` to create a published one",
					"routing": { "send": { "type": "body", "property": "draft" } }
				},
				{
					"name": "generate_release_notes",
					"displayName": "Generate Release Notes",
					"type": "boolean",
					"default": false,
					"description": "Whether to automatically generate the name and body for this release. If `name` is specified, the specified name will be...",
					"routing": { "send": { "type": "body", "property": "generate_release_notes" } }
				},
				{
					"name": "make_latest",
					"displayName": "Make Latest",
					"type": "string",
					"default": "",
					"description": "Specifies whether this release should be set as the latest release for the repository. Drafts and prereleases cannot be ...",
					"routing": { "send": { "type": "body", "property": "make_latest" } }
				},
				{
					"name": "name",
					"displayName": "Name",
					"type": "string",
					"default": "",
					"description": "The name of the release",
					"routing": { "send": { "type": "body", "property": "name" } }
				},
				{
					"name": "prerelease",
					"displayName": "Prerelease",
					"type": "boolean",
					"default": false,
					"description": "`true` to identify the release as a prerelease. `false` to identify the release as a full release",
					"routing": { "send": { "type": "body", "property": "prerelease" } }
				},
				{
					"name": "target_commitish",
					"displayName": "Target Commitish",
					"type": "string",
					"default": "",
					"description": "Specifies the commitish value that determines where the Git tag is created from. Can be any branch or commit SHA. Unused...",
					"routing": { "send": { "type": "body", "property": "target_commitish" } }
				}
			],
			"displayOptions": { "show": { "operation": ["repos/create-release"], "resource": ["repo"] } }
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/delete-release-asset"], "resource": ["repo"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/delete-release-asset"], "resource": ["repo"] }
			}
		},
		{
			"name": "asset_id",
			"displayName": "Asset ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the asset",
			"displayOptions": {
				"show": { "operation": ["repos/delete-release-asset"], "resource": ["repo"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/get-release-asset"], "resource": ["repo"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/get-release-asset"], "resource": ["repo"] }
			}
		},
		{
			"name": "asset_id",
			"displayName": "Asset ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the asset",
			"displayOptions": {
				"show": { "operation": ["repos/get-release-asset"], "resource": ["repo"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/update-release-asset"], "resource": ["repo"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/update-release-asset"], "resource": ["repo"] }
			}
		},
		{
			"name": "asset_id",
			"displayName": "Asset ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the asset",
			"displayOptions": {
				"show": { "operation": ["repos/update-release-asset"], "resource": ["repo"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "label",
					"displayName": "Label",
					"type": "string",
					"default": "",
					"description": "An alternate short description of the asset. Used in place of the filename",
					"routing": { "send": { "type": "body", "property": "label" } }
				},
				{
					"name": "name",
					"displayName": "Name",
					"type": "string",
					"default": "",
					"description": "The file name of the asset",
					"routing": { "send": { "type": "body", "property": "name" } }
				},
				{
					"name": "state",
					"displayName": "State",
					"type": "string",
					"default": "",
					"placeholder": "e.g. \"uploaded\"",
					"routing": { "send": { "type": "body", "property": "state" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["repos/update-release-asset"], "resource": ["repo"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/generate-release-notes"], "resource": ["repo"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/generate-release-notes"], "resource": ["repo"] }
			}
		},
		{
			"name": "tag_name",
			"displayName": "Tag Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The tag name for the release. This can be an existing tag or a new one",
			"routing": { "send": { "type": "body", "property": "tag_name" } },
			"displayOptions": {
				"show": { "operation": ["repos/generate-release-notes"], "resource": ["repo"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "configuration_file_path",
					"displayName": "Configuration File Path",
					"type": "string",
					"default": "",
					"description": "Specifies a path to a file in the repository containing configuration settings used for generating the release notes. If...",
					"routing": { "send": { "type": "body", "property": "configuration_file_path" } }
				},
				{
					"name": "previous_tag_name",
					"displayName": "Previous Tag Name",
					"type": "string",
					"default": "",
					"description": "The name of the previous tag to use as the starting point for the release notes. Use to manually specify the range for t...",
					"routing": { "send": { "type": "body", "property": "previous_tag_name" } }
				},
				{
					"name": "target_commitish",
					"displayName": "Target Commitish",
					"type": "string",
					"default": "",
					"description": "Specifies the commitish value that will be the target for the release's tag. Required if the supplied tag_name does not ...",
					"routing": { "send": { "type": "body", "property": "target_commitish" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["repos/generate-release-notes"], "resource": ["repo"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/get-latest-release"], "resource": ["repo"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/get-latest-release"], "resource": ["repo"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/get-release-by-tag"], "resource": ["repo"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/get-release-by-tag"], "resource": ["repo"] }
			}
		},
		{
			"name": "tag",
			"displayName": "Tag",
			"type": "string",
			"default": "",
			"required": true,
			"description": "tag parameter",
			"displayOptions": {
				"show": { "operation": ["repos/get-release-by-tag"], "resource": ["repo"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["repos/delete-release"], "resource": ["repo"] } }
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["repos/delete-release"], "resource": ["repo"] } }
		},
		{
			"name": "release_id",
			"displayName": "Release ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the release",
			"displayOptions": { "show": { "operation": ["repos/delete-release"], "resource": ["repo"] } }
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["repos/get-release"], "resource": ["repo"] } }
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["repos/get-release"], "resource": ["repo"] } }
		},
		{
			"name": "release_id",
			"displayName": "Release ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the release",
			"displayOptions": { "show": { "operation": ["repos/get-release"], "resource": ["repo"] } }
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["repos/update-release"], "resource": ["repo"] } }
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["repos/update-release"], "resource": ["repo"] } }
		},
		{
			"name": "release_id",
			"displayName": "Release ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the release",
			"displayOptions": { "show": { "operation": ["repos/update-release"], "resource": ["repo"] } }
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "body",
					"displayName": "Body",
					"type": "string",
					"default": "",
					"description": "Text describing the contents of the tag",
					"routing": { "send": { "type": "body", "property": "body" } }
				},
				{
					"name": "discussion_category_name",
					"displayName": "Discussion Category Name",
					"type": "string",
					"default": "",
					"description": "If specified, a discussion of the specified category is created and linked to the release. The value must be a category ...",
					"routing": { "send": { "type": "body", "property": "discussion_category_name" } }
				},
				{
					"name": "draft",
					"displayName": "Draft",
					"type": "boolean",
					"default": false,
					"description": "`true` makes the release a draft, and `false` publishes the release",
					"routing": { "send": { "type": "body", "property": "draft" } }
				},
				{
					"name": "make_latest",
					"displayName": "Make Latest",
					"type": "string",
					"default": "",
					"description": "Specifies whether this release should be set as the latest release for the repository. Drafts and prereleases cannot be ...",
					"routing": { "send": { "type": "body", "property": "make_latest" } }
				},
				{
					"name": "name",
					"displayName": "Name",
					"type": "string",
					"default": "",
					"description": "The name of the release",
					"routing": { "send": { "type": "body", "property": "name" } }
				},
				{
					"name": "prerelease",
					"displayName": "Prerelease",
					"type": "boolean",
					"default": false,
					"description": "`true` to identify the release as a prerelease, `false` to identify the release as a full release",
					"routing": { "send": { "type": "body", "property": "prerelease" } }
				},
				{
					"name": "tag_name",
					"displayName": "Tag Name",
					"type": "string",
					"default": "",
					"description": "The name of the tag",
					"routing": { "send": { "type": "body", "property": "tag_name" } }
				},
				{
					"name": "target_commitish",
					"displayName": "Target Commitish",
					"type": "string",
					"default": "",
					"description": "Specifies the commitish value that determines where the Git tag is created from. Can be any branch or commit SHA. Unused...",
					"routing": { "send": { "type": "body", "property": "target_commitish" } }
				}
			],
			"displayOptions": { "show": { "operation": ["repos/update-release"], "resource": ["repo"] } }
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/list-release-assets"], "resource": ["repo"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/list-release-assets"], "resource": ["repo"] }
			}
		},
		{
			"name": "release_id",
			"displayName": "Release ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the release",
			"displayOptions": {
				"show": { "operation": ["repos/list-release-assets"], "resource": ["repo"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["repos/list-release-assets"], "resource": ["repo"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/upload-release-asset"], "resource": ["repo"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/upload-release-asset"], "resource": ["repo"] }
			}
		},
		{
			"name": "release_id",
			"displayName": "Release ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the release",
			"displayOptions": {
				"show": { "operation": ["repos/upload-release-asset"], "resource": ["repo"] }
			}
		},
		{
			"name": "name",
			"displayName": "Name",
			"type": "string",
			"default": "",
			"required": true,
			"routing": { "send": { "type": "query", "property": "name" } },
			"displayOptions": {
				"show": { "operation": ["repos/upload-release-asset"], "resource": ["repo"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "label",
					"displayName": "Label",
					"type": "string",
					"default": "",
					"routing": { "send": { "type": "query", "property": "label" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["repos/upload-release-asset"], "resource": ["repo"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["reactions/list-for-release"], "resource": ["reaction"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["reactions/list-for-release"], "resource": ["reaction"] }
			}
		},
		{
			"name": "release_id",
			"displayName": "Release ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the release",
			"displayOptions": {
				"show": { "operation": ["reactions/list-for-release"], "resource": ["reaction"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "content",
					"displayName": "Content",
					"type": "options",
					"default": "+1",
					"description": "Returns a single [reaction type](https://docs.github.com/rest/reference/reactions#reaction-types). Omit this parameter t...",
					"options": [
						{ "name": "1", "value": "+1" },
						{ "name": "Laugh", "value": "laugh" },
						{ "name": "Heart", "value": "heart" },
						{ "name": "Hooray", "value": "hooray" },
						{ "name": "Rocket", "value": "rocket" },
						{ "name": "Eyes", "value": "eyes" }
					],
					"routing": { "send": { "type": "query", "property": "content" } }
				},
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["reactions/list-for-release"], "resource": ["reaction"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["reactions/create-for-release"], "resource": ["reaction"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["reactions/create-for-release"], "resource": ["reaction"] }
			}
		},
		{
			"name": "release_id",
			"displayName": "Release ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the release",
			"displayOptions": {
				"show": { "operation": ["reactions/create-for-release"], "resource": ["reaction"] }
			}
		},
		{
			"name": "content",
			"displayName": "Content",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The [reaction type](https://docs.github.com/rest/reference/reactions#reaction-types) to add to the release",
			"routing": { "send": { "type": "body", "property": "content" } },
			"displayOptions": {
				"show": { "operation": ["reactions/create-for-release"], "resource": ["reaction"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["reactions/delete-for-release"], "resource": ["reaction"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["reactions/delete-for-release"], "resource": ["reaction"] }
			}
		},
		{
			"name": "release_id",
			"displayName": "Release ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the release",
			"displayOptions": {
				"show": { "operation": ["reactions/delete-for-release"], "resource": ["reaction"] }
			}
		},
		{
			"name": "reaction_id",
			"displayName": "Reaction ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the reaction",
			"displayOptions": {
				"show": { "operation": ["reactions/delete-for-release"], "resource": ["reaction"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["secret-scanning/list-alerts-for-repo"],
					"resource": ["secretScanning"]
				}
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["secret-scanning/list-alerts-for-repo"],
					"resource": ["secretScanning"]
				}
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "state",
					"displayName": "State",
					"type": "options",
					"default": "open",
					"description": "Set to `open` or `resolved` to only list secret scanning alerts in a specific state",
					"options": [
						{ "name": "Open", "value": "open" },
						{ "name": "Resolved", "value": "resolved" }
					],
					"routing": { "send": { "type": "query", "property": "state" } }
				},
				{
					"name": "secret_type",
					"displayName": "Secret Type",
					"type": "string",
					"default": "",
					"description": "A comma-separated list of secret types to return. By default all secret types are returned. See \"[Secret scanning patter...",
					"routing": { "send": { "type": "query", "property": "secret_type" } }
				},
				{
					"name": "resolution",
					"displayName": "Resolution",
					"type": "string",
					"default": "",
					"description": "A comma-separated list of resolutions. Only secret scanning alerts with one of these resolutions are listed. Valid resol...",
					"routing": { "send": { "type": "query", "property": "resolution" } }
				},
				{
					"name": "sort",
					"displayName": "Sort",
					"type": "options",
					"default": "created",
					"description": "The property to sort the results by. `created` means when the alert was created. `updated` means when the alert was upda...",
					"options": [
						{ "name": "Created", "value": "created" },
						{ "name": "Updated", "value": "updated" }
					],
					"routing": { "send": { "type": "query", "property": "sort" } }
				},
				{
					"name": "direction",
					"displayName": "Direction",
					"type": "options",
					"default": "desc",
					"description": "The direction to sort the results by",
					"options": [{ "name": "Asc", "value": "asc" }, { "name": "Desc", "value": "desc" }],
					"routing": { "send": { "type": "query", "property": "direction" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				},
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "before",
					"displayName": "Before",
					"type": "string",
					"default": "",
					"description": "A cursor, as given in the [Link header](https://docs.github.com/rest/overview/resources-in-the-rest-api#link-header). If...",
					"routing": { "send": { "type": "query", "property": "before" } }
				},
				{
					"name": "after",
					"displayName": "After",
					"type": "string",
					"default": "",
					"description": "A cursor, as given in the [Link header](https://docs.github.com/rest/overview/resources-in-the-rest-api#link-header). If...",
					"routing": { "send": { "type": "query", "property": "after" } }
				}
			],
			"displayOptions": {
				"show": {
					"operation": ["secret-scanning/list-alerts-for-repo"],
					"resource": ["secretScanning"]
				}
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["secret-scanning/get-alert"], "resource": ["secretScanning"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["secret-scanning/get-alert"], "resource": ["secretScanning"] }
			}
		},
		{
			"name": "alert_number",
			"displayName": "Alert Number",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The number that identifies an alert. You can find this at the end of the URL for a code scanning alert within GitHub, an...",
			"displayOptions": {
				"show": { "operation": ["secret-scanning/get-alert"], "resource": ["secretScanning"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["secret-scanning/update-alert"], "resource": ["secretScanning"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["secret-scanning/update-alert"], "resource": ["secretScanning"] }
			}
		},
		{
			"name": "alert_number",
			"displayName": "Alert Number",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The number that identifies an alert. You can find this at the end of the URL for a code scanning alert within GitHub, an...",
			"displayOptions": {
				"show": { "operation": ["secret-scanning/update-alert"], "resource": ["secretScanning"] }
			}
		},
		{
			"name": "state",
			"displayName": "State",
			"type": "string",
			"default": "",
			"required": true,
			"description": "Sets the state of the secret scanning alert. You must provide `resolution` when you set the state to `resolved`",
			"routing": { "send": { "type": "body", "property": "state" } },
			"displayOptions": {
				"show": { "operation": ["secret-scanning/update-alert"], "resource": ["secretScanning"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "resolution",
					"displayName": "Resolution",
					"type": "string",
					"default": "",
					"description": "**Required when the `state` is `resolved`.** The reason for resolving the alert",
					"routing": { "send": { "type": "body", "property": "resolution" } }
				},
				{
					"name": "resolution_comment",
					"displayName": "Resolution Comment",
					"type": "string",
					"default": "",
					"description": "An optional comment when closing an alert. Cannot be updated or deleted. Must be `null` when changing `state` to `open`",
					"routing": { "send": { "type": "body", "property": "resolution_comment" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["secret-scanning/update-alert"], "resource": ["secretScanning"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["secret-scanning/list-locations-for-alert"],
					"resource": ["secretScanning"]
				}
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["secret-scanning/list-locations-for-alert"],
					"resource": ["secretScanning"]
				}
			}
		},
		{
			"name": "alert_number",
			"displayName": "Alert Number",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The number that identifies an alert. You can find this at the end of the URL for a code scanning alert within GitHub, an...",
			"displayOptions": {
				"show": {
					"operation": ["secret-scanning/list-locations-for-alert"],
					"resource": ["secretScanning"]
				}
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				},
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				}
			],
			"displayOptions": {
				"show": {
					"operation": ["secret-scanning/list-locations-for-alert"],
					"resource": ["secretScanning"]
				}
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["activity/list-stargazers-for-repo"], "resource": ["activity"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["activity/list-stargazers-for-repo"], "resource": ["activity"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["activity/list-stargazers-for-repo"], "resource": ["activity"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/get-code-frequency-stats"], "resource": ["repo"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/get-code-frequency-stats"], "resource": ["repo"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/get-commit-activity-stats"], "resource": ["repo"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/get-commit-activity-stats"], "resource": ["repo"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/get-contributors-stats"], "resource": ["repo"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/get-contributors-stats"], "resource": ["repo"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/get-participation-stats"], "resource": ["repo"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/get-participation-stats"], "resource": ["repo"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/get-punch-card-stats"], "resource": ["repo"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/get-punch-card-stats"], "resource": ["repo"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/create-commit-status"], "resource": ["repo"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/create-commit-status"], "resource": ["repo"] }
			}
		},
		{
			"name": "sha",
			"displayName": "Sha",
			"type": "string",
			"default": "",
			"required": true,
			"displayOptions": {
				"show": { "operation": ["repos/create-commit-status"], "resource": ["repo"] }
			}
		},
		{
			"name": "state",
			"displayName": "State",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The state of the status",
			"routing": { "send": { "type": "body", "property": "state" } },
			"displayOptions": {
				"show": { "operation": ["repos/create-commit-status"], "resource": ["repo"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "context",
					"displayName": "Context",
					"type": "string",
					"default": "",
					"description": "A string label to differentiate this status from the status of other systems. This field is case-insensitive",
					"routing": { "send": { "type": "body", "property": "context" } }
				},
				{
					"name": "description",
					"displayName": "Description",
					"type": "string",
					"default": "",
					"description": "A short description of the status",
					"routing": { "send": { "type": "body", "property": "description" } }
				},
				{
					"name": "target_url",
					"displayName": "Target URL",
					"type": "string",
					"default": "",
					"description": "The target URL to associate with this status. This URL will be linked from the GitHub UI to allow users to easily see th...",
					"routing": { "send": { "type": "body", "property": "target_url" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["repos/create-commit-status"], "resource": ["repo"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["activity/list-watchers-for-repo"], "resource": ["activity"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["activity/list-watchers-for-repo"], "resource": ["activity"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["activity/list-watchers-for-repo"], "resource": ["activity"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["activity/delete-repo-subscription"], "resource": ["activity"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["activity/delete-repo-subscription"], "resource": ["activity"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["activity/get-repo-subscription"], "resource": ["activity"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["activity/get-repo-subscription"], "resource": ["activity"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["activity/set-repo-subscription"], "resource": ["activity"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["activity/set-repo-subscription"], "resource": ["activity"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "ignored",
					"displayName": "Ignored",
					"type": "boolean",
					"default": false,
					"description": "Determines if all notifications should be blocked from this repository",
					"routing": { "send": { "type": "body", "property": "ignored" } }
				},
				{
					"name": "subscribed",
					"displayName": "Subscribed",
					"type": "boolean",
					"default": false,
					"description": "Determines if notifications should be received from this repository",
					"routing": { "send": { "type": "body", "property": "subscribed" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["activity/set-repo-subscription"], "resource": ["activity"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["repos/list-tags"], "resource": ["repo"] } }
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["repos/list-tags"], "resource": ["repo"] } }
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": { "show": { "operation": ["repos/list-tags"], "resource": ["repo"] } }
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/list-tag-protection"], "resource": ["repo"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/list-tag-protection"], "resource": ["repo"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/create-tag-protection"], "resource": ["repo"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/create-tag-protection"], "resource": ["repo"] }
			}
		},
		{
			"name": "pattern",
			"displayName": "Pattern",
			"type": "string",
			"default": "",
			"required": true,
			"description": "An optional glob pattern to match against when enforcing tag protection",
			"routing": { "send": { "type": "body", "property": "pattern" } },
			"displayOptions": {
				"show": { "operation": ["repos/create-tag-protection"], "resource": ["repo"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/delete-tag-protection"], "resource": ["repo"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/delete-tag-protection"], "resource": ["repo"] }
			}
		},
		{
			"name": "tag_protection_id",
			"displayName": "Tag Protection ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the tag protection",
			"displayOptions": {
				"show": { "operation": ["repos/delete-tag-protection"], "resource": ["repo"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/download-tarball-archive"], "resource": ["repo"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/download-tarball-archive"], "resource": ["repo"] }
			}
		},
		{
			"name": "ref",
			"displayName": "Ref",
			"type": "string",
			"default": "",
			"required": true,
			"displayOptions": {
				"show": { "operation": ["repos/download-tarball-archive"], "resource": ["repo"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["repos/list-teams"], "resource": ["repo"] } }
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["repos/list-teams"], "resource": ["repo"] } }
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": { "show": { "operation": ["repos/list-teams"], "resource": ["repo"] } }
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["repos/get-all-topics"], "resource": ["repo"] } }
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["repos/get-all-topics"], "resource": ["repo"] } }
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				},
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				}
			],
			"displayOptions": { "show": { "operation": ["repos/get-all-topics"], "resource": ["repo"] } }
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/replace-all-topics"], "resource": ["repo"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/replace-all-topics"], "resource": ["repo"] }
			}
		},
		{
			"name": "names",
			"displayName": "Names",
			"type": "string",
			"default": "",
			"required": true,
			"description": "An array of topics to add to the repository. Pass one or more topics to _replace_ the set of existing topics. Send an em...",
			"routing": { "send": { "type": "body", "property": "names" } },
			"displayOptions": {
				"show": { "operation": ["repos/replace-all-topics"], "resource": ["repo"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["repos/get-clones"], "resource": ["repo"] } }
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["repos/get-clones"], "resource": ["repo"] } }
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "per",
					"displayName": "Per",
					"type": "options",
					"default": "day",
					"description": "The time frame to display results for",
					"options": [{ "name": "Day", "value": "day" }, { "name": "Week", "value": "week" }],
					"routing": { "send": { "type": "query", "property": "per" } }
				}
			],
			"displayOptions": { "show": { "operation": ["repos/get-clones"], "resource": ["repo"] } }
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["repos/get-top-paths"], "resource": ["repo"] } }
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["repos/get-top-paths"], "resource": ["repo"] } }
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/get-top-referrers"], "resource": ["repo"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/get-top-referrers"], "resource": ["repo"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["repos/get-views"], "resource": ["repo"] } }
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["repos/get-views"], "resource": ["repo"] } }
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "per",
					"displayName": "Per",
					"type": "options",
					"default": "day",
					"description": "The time frame to display results for",
					"options": [{ "name": "Day", "value": "day" }, { "name": "Week", "value": "week" }],
					"routing": { "send": { "type": "query", "property": "per" } }
				}
			],
			"displayOptions": { "show": { "operation": ["repos/get-views"], "resource": ["repo"] } }
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["repos/transfer"], "resource": ["repo"] } }
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": { "show": { "operation": ["repos/transfer"], "resource": ["repo"] } }
		},
		{
			"name": "new_owner",
			"displayName": "New Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The username or organization name the repository will be transferred to",
			"routing": { "send": { "type": "body", "property": "new_owner" } },
			"displayOptions": { "show": { "operation": ["repos/transfer"], "resource": ["repo"] } }
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "new_name",
					"displayName": "New Name",
					"type": "string",
					"default": "",
					"description": "The new name to be given to the repository",
					"routing": { "send": { "type": "body", "property": "new_name" } }
				},
				{
					"name": "team_ids",
					"displayName": "Team IDs",
					"type": "json",
					"default": "{}",
					"description": "ID of the team or teams to add to the repository. Teams can only be added to organization-owned repositories",
					"routing": { "send": { "type": "body", "property": "team_ids" } }
				}
			],
			"displayOptions": { "show": { "operation": ["repos/transfer"], "resource": ["repo"] } }
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/disable-vulnerability-alerts"], "resource": ["repo"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/disable-vulnerability-alerts"], "resource": ["repo"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/check-vulnerability-alerts"], "resource": ["repo"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/check-vulnerability-alerts"], "resource": ["repo"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/enable-vulnerability-alerts"], "resource": ["repo"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/enable-vulnerability-alerts"], "resource": ["repo"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/download-zipball-archive"], "resource": ["repo"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["repos/download-zipball-archive"], "resource": ["repo"] }
			}
		},
		{
			"name": "ref",
			"displayName": "Ref",
			"type": "string",
			"default": "",
			"required": true,
			"displayOptions": {
				"show": { "operation": ["repos/download-zipball-archive"], "resource": ["repo"] }
			}
		},
		{
			"name": "template_owner",
			"displayName": "Template Owner",
			"type": "string",
			"default": "",
			"required": true,
			"displayOptions": {
				"show": { "operation": ["repos/create-using-template"], "resource": ["repo"] }
			}
		},
		{
			"name": "template_repo",
			"displayName": "Template Repo",
			"type": "string",
			"default": "",
			"required": true,
			"displayOptions": {
				"show": { "operation": ["repos/create-using-template"], "resource": ["repo"] }
			}
		},
		{
			"name": "name",
			"displayName": "Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the new repository",
			"routing": { "send": { "type": "body", "property": "name" } },
			"displayOptions": {
				"show": { "operation": ["repos/create-using-template"], "resource": ["repo"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "description",
					"displayName": "Description",
					"type": "string",
					"default": "",
					"description": "A short description of the new repository",
					"routing": { "send": { "type": "body", "property": "description" } }
				},
				{
					"name": "include_all_branches",
					"displayName": "Include All Branches",
					"type": "boolean",
					"default": false,
					"description": "Set to `true` to include the directory structure and files from all branches in the template repository, and not just th...",
					"routing": { "send": { "type": "body", "property": "include_all_branches" } }
				},
				{
					"name": "owner",
					"displayName": "Owner",
					"type": "string",
					"default": "",
					"description": "The organization or person who will own the new repository. To create a new repository in an organization, the authentic...",
					"routing": { "send": { "type": "body", "property": "owner" } }
				},
				{
					"name": "private",
					"displayName": "Private",
					"type": "boolean",
					"default": false,
					"description": "Either `true` to create a new private repository or `false` to create a new public one",
					"routing": { "send": { "type": "body", "property": "private" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["repos/create-using-template"], "resource": ["repo"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "since",
					"displayName": "Since",
					"type": "number",
					"default": 0,
					"description": "A repository ID. Only return repositories with an ID greater than this ID",
					"routing": { "send": { "type": "query", "property": "since" } }
				}
			],
			"displayOptions": { "show": { "operation": ["repos/list-public"], "resource": ["repo"] } }
		},
		{
			"name": "repository_id",
			"displayName": "Repository ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the repository",
			"displayOptions": {
				"show": { "operation": ["actions/list-environment-secrets"], "resource": ["action"] }
			}
		},
		{
			"name": "environment_name",
			"displayName": "Environment Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the environment",
			"displayOptions": {
				"show": { "operation": ["actions/list-environment-secrets"], "resource": ["action"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["actions/list-environment-secrets"], "resource": ["action"] }
			}
		},
		{
			"name": "repository_id",
			"displayName": "Repository ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the repository",
			"displayOptions": {
				"show": { "operation": ["actions/get-environment-public-key"], "resource": ["action"] }
			}
		},
		{
			"name": "environment_name",
			"displayName": "Environment Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the environment",
			"displayOptions": {
				"show": { "operation": ["actions/get-environment-public-key"], "resource": ["action"] }
			}
		},
		{
			"name": "repository_id",
			"displayName": "Repository ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the repository",
			"displayOptions": {
				"show": { "operation": ["actions/delete-environment-secret"], "resource": ["action"] }
			}
		},
		{
			"name": "environment_name",
			"displayName": "Environment Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the environment",
			"displayOptions": {
				"show": { "operation": ["actions/delete-environment-secret"], "resource": ["action"] }
			}
		},
		{
			"name": "secret_name",
			"displayName": "Secret Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the secret",
			"displayOptions": {
				"show": { "operation": ["actions/delete-environment-secret"], "resource": ["action"] }
			}
		},
		{
			"name": "repository_id",
			"displayName": "Repository ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the repository",
			"displayOptions": {
				"show": { "operation": ["actions/get-environment-secret"], "resource": ["action"] }
			}
		},
		{
			"name": "environment_name",
			"displayName": "Environment Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the environment",
			"displayOptions": {
				"show": { "operation": ["actions/get-environment-secret"], "resource": ["action"] }
			}
		},
		{
			"name": "secret_name",
			"displayName": "Secret Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the secret",
			"displayOptions": {
				"show": { "operation": ["actions/get-environment-secret"], "resource": ["action"] }
			}
		},
		{
			"name": "repository_id",
			"displayName": "Repository ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the repository",
			"displayOptions": {
				"show": {
					"operation": ["actions/create-or-update-environment-secret"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "environment_name",
			"displayName": "Environment Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the environment",
			"displayOptions": {
				"show": {
					"operation": ["actions/create-or-update-environment-secret"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "secret_name",
			"displayName": "Secret Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the secret",
			"displayOptions": {
				"show": {
					"operation": ["actions/create-or-update-environment-secret"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "encrypted_value",
			"displayName": "Encrypted Value",
			"type": "string",
			"default": "",
			"required": true,
			"description": "Value for your secret, encrypted with [LibSodium](https://libsodium.gitbook.io/doc/bindings_for_other_languages) using t...",
			"routing": { "send": { "type": "body", "property": "encrypted_value" } },
			"displayOptions": {
				"show": {
					"operation": ["actions/create-or-update-environment-secret"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "key_id",
			"displayName": "Key ID",
			"type": "string",
			"default": "",
			"required": true,
			"description": "ID of the key you used to encrypt the secret",
			"routing": { "send": { "type": "body", "property": "key_id" } },
			"displayOptions": {
				"show": {
					"operation": ["actions/create-or-update-environment-secret"],
					"resource": ["action"]
				}
			}
		},
		{
			"name": "repository_id",
			"displayName": "Repository ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the repository",
			"displayOptions": {
				"show": { "operation": ["actions/list-environment-variables"], "resource": ["action"] }
			}
		},
		{
			"name": "environment_name",
			"displayName": "Environment Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the environment",
			"displayOptions": {
				"show": { "operation": ["actions/list-environment-variables"], "resource": ["action"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 10,
					"description": "The number of results per page (max 30)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["actions/list-environment-variables"], "resource": ["action"] }
			}
		},
		{
			"name": "repository_id",
			"displayName": "Repository ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the repository",
			"displayOptions": {
				"show": { "operation": ["actions/create-environment-variable"], "resource": ["action"] }
			}
		},
		{
			"name": "environment_name",
			"displayName": "Environment Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the environment",
			"displayOptions": {
				"show": { "operation": ["actions/create-environment-variable"], "resource": ["action"] }
			}
		},
		{
			"name": "name",
			"displayName": "Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the variable",
			"routing": { "send": { "type": "body", "property": "name" } },
			"displayOptions": {
				"show": { "operation": ["actions/create-environment-variable"], "resource": ["action"] }
			}
		},
		{
			"name": "value",
			"displayName": "Value",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The value of the variable",
			"routing": { "send": { "type": "body", "property": "value" } },
			"displayOptions": {
				"show": { "operation": ["actions/create-environment-variable"], "resource": ["action"] }
			}
		},
		{
			"name": "repository_id",
			"displayName": "Repository ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the repository",
			"displayOptions": {
				"show": { "operation": ["actions/delete-environment-variable"], "resource": ["action"] }
			}
		},
		{
			"name": "name",
			"displayName": "Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the variable",
			"displayOptions": {
				"show": { "operation": ["actions/delete-environment-variable"], "resource": ["action"] }
			}
		},
		{
			"name": "environment_name",
			"displayName": "Environment Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the environment",
			"displayOptions": {
				"show": { "operation": ["actions/delete-environment-variable"], "resource": ["action"] }
			}
		},
		{
			"name": "repository_id",
			"displayName": "Repository ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the repository",
			"displayOptions": {
				"show": { "operation": ["actions/get-environment-variable"], "resource": ["action"] }
			}
		},
		{
			"name": "environment_name",
			"displayName": "Environment Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the environment",
			"displayOptions": {
				"show": { "operation": ["actions/get-environment-variable"], "resource": ["action"] }
			}
		},
		{
			"name": "name",
			"displayName": "Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the variable",
			"displayOptions": {
				"show": { "operation": ["actions/get-environment-variable"], "resource": ["action"] }
			}
		},
		{
			"name": "repository_id",
			"displayName": "Repository ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the repository",
			"displayOptions": {
				"show": { "operation": ["actions/update-environment-variable"], "resource": ["action"] }
			}
		},
		{
			"name": "name",
			"displayName": "Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the variable",
			"displayOptions": {
				"show": { "operation": ["actions/update-environment-variable"], "resource": ["action"] }
			}
		},
		{
			"name": "environment_name",
			"displayName": "Environment Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the environment",
			"displayOptions": {
				"show": { "operation": ["actions/update-environment-variable"], "resource": ["action"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "name",
					"displayName": "Name",
					"type": "string",
					"default": "",
					"description": "The name of the variable",
					"routing": { "send": { "type": "body", "property": "name" } }
				},
				{
					"name": "value",
					"displayName": "Value",
					"type": "string",
					"default": "",
					"description": "The value of the variable",
					"routing": { "send": { "type": "body", "property": "value" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["actions/update-environment-variable"], "resource": ["action"] }
			}
		},
		{
			"name": "q",
			"displayName": "Q",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The query contains one or more search keywords and qualifiers. Qualifiers allow you to limit your search to specific are...",
			"routing": { "send": { "type": "query", "property": "q" } },
			"displayOptions": { "show": { "operation": ["search/code"], "resource": ["search"] } }
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "sort",
					"displayName": "Sort",
					"type": "options",
					"default": "indexed",
					"description": "Sorts the results of your query. Can only be `indexed`, which indicates how recently a file has been indexed by the GitH...",
					"options": [{ "name": "Indexed", "value": "indexed" }],
					"routing": { "send": { "type": "query", "property": "sort" } }
				},
				{
					"name": "order",
					"displayName": "Order",
					"type": "options",
					"default": "desc",
					"description": "Determines whether the first search result returned is the highest number of matches (`desc`) or lowest number of matche...",
					"options": [{ "name": "Desc", "value": "desc" }, { "name": "Asc", "value": "asc" }],
					"routing": { "send": { "type": "query", "property": "order" } }
				},
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": { "show": { "operation": ["search/code"], "resource": ["search"] } }
		},
		{
			"name": "q",
			"displayName": "Q",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The query contains one or more search keywords and qualifiers. Qualifiers allow you to limit your search to specific are...",
			"routing": { "send": { "type": "query", "property": "q" } },
			"displayOptions": { "show": { "operation": ["search/commits"], "resource": ["search"] } }
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "sort",
					"displayName": "Sort",
					"type": "options",
					"default": "author-date",
					"description": "Sorts the results of your query by `author-date` or `committer-date`. Default: [best match](https://docs.github.com/rest...",
					"options": [
						{ "name": "Author Date", "value": "author-date" },
						{ "name": "Committer Date", "value": "committer-date" }
					],
					"routing": { "send": { "type": "query", "property": "sort" } }
				},
				{
					"name": "order",
					"displayName": "Order",
					"type": "options",
					"default": "desc",
					"description": "Determines whether the first search result returned is the highest number of matches (`desc`) or lowest number of matche...",
					"options": [{ "name": "Desc", "value": "desc" }, { "name": "Asc", "value": "asc" }],
					"routing": { "send": { "type": "query", "property": "order" } }
				},
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": { "show": { "operation": ["search/commits"], "resource": ["search"] } }
		},
		{
			"name": "q",
			"displayName": "Q",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The query contains one or more search keywords and qualifiers. Qualifiers allow you to limit your search to specific are...",
			"routing": { "send": { "type": "query", "property": "q" } },
			"displayOptions": {
				"show": { "operation": ["search/issues-and-pull-requests"], "resource": ["search"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "sort",
					"displayName": "Sort",
					"type": "options",
					"default": "comments",
					"description": "Sorts the results of your query by the number of `comments`, `reactions`, `reactions-+1`, `reactions--1`, `reactions-smi...",
					"options": [
						{ "name": "Comments", "value": "comments" },
						{ "name": "Reactions", "value": "reactions" },
						{ "name": "Reactions 1", "value": "reactions-+1" },
						{ "name": "Reactions 1", "value": "reactions--1" },
						{ "name": "Reactions Smile", "value": "reactions-smile" },
						{ "name": "Reactions Thinking Face", "value": "reactions-thinking_face" },
						{ "name": "Reactions Heart", "value": "reactions-heart" },
						{ "name": "Reactions Tada", "value": "reactions-tada" },
						{ "name": "Interactions", "value": "interactions" },
						{ "name": "Created", "value": "created" },
						{ "name": "Updated", "value": "updated" }
					],
					"routing": { "send": { "type": "query", "property": "sort" } }
				},
				{
					"name": "order",
					"displayName": "Order",
					"type": "options",
					"default": "desc",
					"description": "Determines whether the first search result returned is the highest number of matches (`desc`) or lowest number of matche...",
					"options": [{ "name": "Desc", "value": "desc" }, { "name": "Asc", "value": "asc" }],
					"routing": { "send": { "type": "query", "property": "order" } }
				},
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["search/issues-and-pull-requests"], "resource": ["search"] }
			}
		},
		{
			"name": "repository_id",
			"displayName": "Repository ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The id of the repository",
			"routing": { "send": { "type": "query", "property": "repository_id" } },
			"displayOptions": { "show": { "operation": ["search/labels"], "resource": ["search"] } }
		},
		{
			"name": "q",
			"displayName": "Q",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The search keywords. This endpoint does not accept qualifiers in the query. To learn more about the format of the query,...",
			"routing": { "send": { "type": "query", "property": "q" } },
			"displayOptions": { "show": { "operation": ["search/labels"], "resource": ["search"] } }
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "sort",
					"displayName": "Sort",
					"type": "options",
					"default": "created",
					"description": "Sorts the results of your query by when the label was `created` or `updated`. Default: [best match](https://docs.github....",
					"options": [
						{ "name": "Created", "value": "created" },
						{ "name": "Updated", "value": "updated" }
					],
					"routing": { "send": { "type": "query", "property": "sort" } }
				},
				{
					"name": "order",
					"displayName": "Order",
					"type": "options",
					"default": "desc",
					"description": "Determines whether the first search result returned is the highest number of matches (`desc`) or lowest number of matche...",
					"options": [{ "name": "Desc", "value": "desc" }, { "name": "Asc", "value": "asc" }],
					"routing": { "send": { "type": "query", "property": "order" } }
				},
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": { "show": { "operation": ["search/labels"], "resource": ["search"] } }
		},
		{
			"name": "q",
			"displayName": "Q",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The query contains one or more search keywords and qualifiers. Qualifiers allow you to limit your search to specific are...",
			"routing": { "send": { "type": "query", "property": "q" } },
			"displayOptions": { "show": { "operation": ["search/repos"], "resource": ["search"] } }
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "sort",
					"displayName": "Sort",
					"type": "options",
					"default": "stars",
					"description": "Sorts the results of your query by number of `stars`, `forks`, or `help-wanted-issues` or how recently the items were `u...",
					"options": [
						{ "name": "Stars", "value": "stars" },
						{ "name": "Forks", "value": "forks" },
						{ "name": "Help Wanted Issues", "value": "help-wanted-issues" },
						{ "name": "Updated", "value": "updated" }
					],
					"routing": { "send": { "type": "query", "property": "sort" } }
				},
				{
					"name": "order",
					"displayName": "Order",
					"type": "options",
					"default": "desc",
					"description": "Determines whether the first search result returned is the highest number of matches (`desc`) or lowest number of matche...",
					"options": [{ "name": "Desc", "value": "desc" }, { "name": "Asc", "value": "asc" }],
					"routing": { "send": { "type": "query", "property": "order" } }
				},
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": { "show": { "operation": ["search/repos"], "resource": ["search"] } }
		},
		{
			"name": "q",
			"displayName": "Q",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The query contains one or more search keywords and qualifiers. Qualifiers allow you to limit your search to specific are...",
			"routing": { "send": { "type": "query", "property": "q" } },
			"displayOptions": { "show": { "operation": ["search/topics"], "resource": ["search"] } }
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": { "show": { "operation": ["search/topics"], "resource": ["search"] } }
		},
		{
			"name": "q",
			"displayName": "Q",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The query contains one or more search keywords and qualifiers. Qualifiers allow you to limit your search to specific are...",
			"routing": { "send": { "type": "query", "property": "q" } },
			"displayOptions": { "show": { "operation": ["search/users"], "resource": ["search"] } }
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "sort",
					"displayName": "Sort",
					"type": "options",
					"default": "followers",
					"description": "Sorts the results of your query by number of `followers` or `repositories`, or when the person `joined` GitHub. Default:...",
					"options": [
						{ "name": "Followers", "value": "followers" },
						{ "name": "Repositories", "value": "repositories" },
						{ "name": "Joined", "value": "joined" }
					],
					"routing": { "send": { "type": "query", "property": "sort" } }
				},
				{
					"name": "order",
					"displayName": "Order",
					"type": "options",
					"default": "desc",
					"description": "Determines whether the first search result returned is the highest number of matches (`desc`) or lowest number of matche...",
					"options": [{ "name": "Desc", "value": "desc" }, { "name": "Asc", "value": "asc" }],
					"routing": { "send": { "type": "query", "property": "order" } }
				},
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": { "show": { "operation": ["search/users"], "resource": ["search"] } }
		},
		{
			"name": "team_id",
			"displayName": "Team ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the team",
			"displayOptions": { "show": { "operation": ["teams/delete-legacy"], "resource": ["team"] } }
		},
		{
			"name": "team_id",
			"displayName": "Team ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the team",
			"displayOptions": { "show": { "operation": ["teams/get-legacy"], "resource": ["team"] } }
		},
		{
			"name": "team_id",
			"displayName": "Team ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the team",
			"displayOptions": { "show": { "operation": ["teams/update-legacy"], "resource": ["team"] } }
		},
		{
			"name": "name",
			"displayName": "Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the team",
			"routing": { "send": { "type": "body", "property": "name" } },
			"displayOptions": { "show": { "operation": ["teams/update-legacy"], "resource": ["team"] } }
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "description",
					"displayName": "Description",
					"type": "string",
					"default": "",
					"description": "The description of the team",
					"routing": { "send": { "type": "body", "property": "description" } }
				},
				{
					"name": "parent_team_id",
					"displayName": "Parent Team ID",
					"type": "number",
					"default": 0,
					"description": "The ID of a team to set as the parent team",
					"routing": { "send": { "type": "body", "property": "parent_team_id" } }
				},
				{
					"name": "permission",
					"displayName": "Permission",
					"type": "string",
					"default": "",
					"description": "**Deprecated**. The permission that new repositories will be added to the team with when none is specified",
					"routing": { "send": { "type": "body", "property": "permission" } }
				},
				{
					"name": "privacy",
					"displayName": "Privacy",
					"type": "string",
					"default": "",
					"description": "The level of privacy this team should have. Editing teams without specifying this parameter leaves `privacy` intact. The...",
					"routing": { "send": { "type": "body", "property": "privacy" } }
				}
			],
			"displayOptions": { "show": { "operation": ["teams/update-legacy"], "resource": ["team"] } }
		},
		{
			"name": "team_id",
			"displayName": "Team ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the team",
			"displayOptions": {
				"show": { "operation": ["teams/list-discussions-legacy"], "resource": ["team"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "direction",
					"displayName": "Direction",
					"type": "options",
					"default": "desc",
					"description": "The direction to sort the results by",
					"options": [{ "name": "Asc", "value": "asc" }, { "name": "Desc", "value": "desc" }],
					"routing": { "send": { "type": "query", "property": "direction" } }
				},
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["teams/list-discussions-legacy"], "resource": ["team"] }
			}
		},
		{
			"name": "team_id",
			"displayName": "Team ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the team",
			"displayOptions": {
				"show": { "operation": ["teams/create-discussion-legacy"], "resource": ["team"] }
			}
		},
		{
			"name": "body",
			"displayName": "Body",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The discussion post's body text",
			"routing": { "send": { "type": "body", "property": "body" } },
			"displayOptions": {
				"show": { "operation": ["teams/create-discussion-legacy"], "resource": ["team"] }
			}
		},
		{
			"name": "title",
			"displayName": "Title",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The discussion post's title",
			"routing": { "send": { "type": "body", "property": "title" } },
			"displayOptions": {
				"show": { "operation": ["teams/create-discussion-legacy"], "resource": ["team"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "private",
					"displayName": "Private",
					"type": "boolean",
					"default": false,
					"description": "Private posts are only visible to team members, organization owners, and team maintainers. Public posts are visible to a...",
					"routing": { "send": { "type": "body", "property": "private" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["teams/create-discussion-legacy"], "resource": ["team"] }
			}
		},
		{
			"name": "team_id",
			"displayName": "Team ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the team",
			"displayOptions": {
				"show": { "operation": ["teams/delete-discussion-legacy"], "resource": ["team"] }
			}
		},
		{
			"name": "discussion_number",
			"displayName": "Discussion Number",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The number that identifies the discussion",
			"displayOptions": {
				"show": { "operation": ["teams/delete-discussion-legacy"], "resource": ["team"] }
			}
		},
		{
			"name": "team_id",
			"displayName": "Team ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the team",
			"displayOptions": {
				"show": { "operation": ["teams/get-discussion-legacy"], "resource": ["team"] }
			}
		},
		{
			"name": "discussion_number",
			"displayName": "Discussion Number",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The number that identifies the discussion",
			"displayOptions": {
				"show": { "operation": ["teams/get-discussion-legacy"], "resource": ["team"] }
			}
		},
		{
			"name": "team_id",
			"displayName": "Team ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the team",
			"displayOptions": {
				"show": { "operation": ["teams/update-discussion-legacy"], "resource": ["team"] }
			}
		},
		{
			"name": "discussion_number",
			"displayName": "Discussion Number",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The number that identifies the discussion",
			"displayOptions": {
				"show": { "operation": ["teams/update-discussion-legacy"], "resource": ["team"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "body",
					"displayName": "Body",
					"type": "string",
					"default": "",
					"description": "The discussion post's body text",
					"routing": { "send": { "type": "body", "property": "body" } }
				},
				{
					"name": "title",
					"displayName": "Title",
					"type": "string",
					"default": "",
					"description": "The discussion post's title",
					"routing": { "send": { "type": "body", "property": "title" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["teams/update-discussion-legacy"], "resource": ["team"] }
			}
		},
		{
			"name": "team_id",
			"displayName": "Team ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the team",
			"displayOptions": {
				"show": { "operation": ["teams/list-discussion-comments-legacy"], "resource": ["team"] }
			}
		},
		{
			"name": "discussion_number",
			"displayName": "Discussion Number",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The number that identifies the discussion",
			"displayOptions": {
				"show": { "operation": ["teams/list-discussion-comments-legacy"], "resource": ["team"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "direction",
					"displayName": "Direction",
					"type": "options",
					"default": "desc",
					"description": "The direction to sort the results by",
					"options": [{ "name": "Asc", "value": "asc" }, { "name": "Desc", "value": "desc" }],
					"routing": { "send": { "type": "query", "property": "direction" } }
				},
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["teams/list-discussion-comments-legacy"], "resource": ["team"] }
			}
		},
		{
			"name": "team_id",
			"displayName": "Team ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the team",
			"displayOptions": {
				"show": { "operation": ["teams/create-discussion-comment-legacy"], "resource": ["team"] }
			}
		},
		{
			"name": "discussion_number",
			"displayName": "Discussion Number",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The number that identifies the discussion",
			"displayOptions": {
				"show": { "operation": ["teams/create-discussion-comment-legacy"], "resource": ["team"] }
			}
		},
		{
			"name": "body",
			"displayName": "Body",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The discussion comment's body text",
			"routing": { "send": { "type": "body", "property": "body" } },
			"displayOptions": {
				"show": { "operation": ["teams/create-discussion-comment-legacy"], "resource": ["team"] }
			}
		},
		{
			"name": "team_id",
			"displayName": "Team ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the team",
			"displayOptions": {
				"show": { "operation": ["teams/delete-discussion-comment-legacy"], "resource": ["team"] }
			}
		},
		{
			"name": "discussion_number",
			"displayName": "Discussion Number",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The number that identifies the discussion",
			"displayOptions": {
				"show": { "operation": ["teams/delete-discussion-comment-legacy"], "resource": ["team"] }
			}
		},
		{
			"name": "comment_number",
			"displayName": "Comment Number",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The number that identifies the comment",
			"displayOptions": {
				"show": { "operation": ["teams/delete-discussion-comment-legacy"], "resource": ["team"] }
			}
		},
		{
			"name": "team_id",
			"displayName": "Team ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the team",
			"displayOptions": {
				"show": { "operation": ["teams/get-discussion-comment-legacy"], "resource": ["team"] }
			}
		},
		{
			"name": "discussion_number",
			"displayName": "Discussion Number",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The number that identifies the discussion",
			"displayOptions": {
				"show": { "operation": ["teams/get-discussion-comment-legacy"], "resource": ["team"] }
			}
		},
		{
			"name": "comment_number",
			"displayName": "Comment Number",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The number that identifies the comment",
			"displayOptions": {
				"show": { "operation": ["teams/get-discussion-comment-legacy"], "resource": ["team"] }
			}
		},
		{
			"name": "team_id",
			"displayName": "Team ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the team",
			"displayOptions": {
				"show": { "operation": ["teams/update-discussion-comment-legacy"], "resource": ["team"] }
			}
		},
		{
			"name": "discussion_number",
			"displayName": "Discussion Number",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The number that identifies the discussion",
			"displayOptions": {
				"show": { "operation": ["teams/update-discussion-comment-legacy"], "resource": ["team"] }
			}
		},
		{
			"name": "comment_number",
			"displayName": "Comment Number",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The number that identifies the comment",
			"displayOptions": {
				"show": { "operation": ["teams/update-discussion-comment-legacy"], "resource": ["team"] }
			}
		},
		{
			"name": "body",
			"displayName": "Body",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The discussion comment's body text",
			"routing": { "send": { "type": "body", "property": "body" } },
			"displayOptions": {
				"show": { "operation": ["teams/update-discussion-comment-legacy"], "resource": ["team"] }
			}
		},
		{
			"name": "team_id",
			"displayName": "Team ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the team",
			"displayOptions": {
				"show": {
					"operation": ["reactions/list-for-team-discussion-comment-legacy"],
					"resource": ["reaction"]
				}
			}
		},
		{
			"name": "discussion_number",
			"displayName": "Discussion Number",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The number that identifies the discussion",
			"displayOptions": {
				"show": {
					"operation": ["reactions/list-for-team-discussion-comment-legacy"],
					"resource": ["reaction"]
				}
			}
		},
		{
			"name": "comment_number",
			"displayName": "Comment Number",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The number that identifies the comment",
			"displayOptions": {
				"show": {
					"operation": ["reactions/list-for-team-discussion-comment-legacy"],
					"resource": ["reaction"]
				}
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "content",
					"displayName": "Content",
					"type": "options",
					"default": "+1",
					"description": "Returns a single [reaction type](https://docs.github.com/rest/reference/reactions#reaction-types). Omit this parameter t...",
					"options": [
						{ "name": "1", "value": "+1" },
						{ "name": "1", "value": "-1" },
						{ "name": "Laugh", "value": "laugh" },
						{ "name": "Confused", "value": "confused" },
						{ "name": "Heart", "value": "heart" },
						{ "name": "Hooray", "value": "hooray" },
						{ "name": "Rocket", "value": "rocket" },
						{ "name": "Eyes", "value": "eyes" }
					],
					"routing": { "send": { "type": "query", "property": "content" } }
				},
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": {
					"operation": ["reactions/list-for-team-discussion-comment-legacy"],
					"resource": ["reaction"]
				}
			}
		},
		{
			"name": "team_id",
			"displayName": "Team ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the team",
			"displayOptions": {
				"show": {
					"operation": ["reactions/create-for-team-discussion-comment-legacy"],
					"resource": ["reaction"]
				}
			}
		},
		{
			"name": "discussion_number",
			"displayName": "Discussion Number",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The number that identifies the discussion",
			"displayOptions": {
				"show": {
					"operation": ["reactions/create-for-team-discussion-comment-legacy"],
					"resource": ["reaction"]
				}
			}
		},
		{
			"name": "comment_number",
			"displayName": "Comment Number",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The number that identifies the comment",
			"displayOptions": {
				"show": {
					"operation": ["reactions/create-for-team-discussion-comment-legacy"],
					"resource": ["reaction"]
				}
			}
		},
		{
			"name": "content",
			"displayName": "Content",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The [reaction type](https://docs.github.com/rest/reference/reactions#reaction-types) to add to the team discussion comme...",
			"routing": { "send": { "type": "body", "property": "content" } },
			"displayOptions": {
				"show": {
					"operation": ["reactions/create-for-team-discussion-comment-legacy"],
					"resource": ["reaction"]
				}
			}
		},
		{
			"name": "team_id",
			"displayName": "Team ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the team",
			"displayOptions": {
				"show": {
					"operation": ["reactions/list-for-team-discussion-legacy"],
					"resource": ["reaction"]
				}
			}
		},
		{
			"name": "discussion_number",
			"displayName": "Discussion Number",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The number that identifies the discussion",
			"displayOptions": {
				"show": {
					"operation": ["reactions/list-for-team-discussion-legacy"],
					"resource": ["reaction"]
				}
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "content",
					"displayName": "Content",
					"type": "options",
					"default": "+1",
					"description": "Returns a single [reaction type](https://docs.github.com/rest/reference/reactions#reaction-types). Omit this parameter t...",
					"options": [
						{ "name": "1", "value": "+1" },
						{ "name": "1", "value": "-1" },
						{ "name": "Laugh", "value": "laugh" },
						{ "name": "Confused", "value": "confused" },
						{ "name": "Heart", "value": "heart" },
						{ "name": "Hooray", "value": "hooray" },
						{ "name": "Rocket", "value": "rocket" },
						{ "name": "Eyes", "value": "eyes" }
					],
					"routing": { "send": { "type": "query", "property": "content" } }
				},
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": {
					"operation": ["reactions/list-for-team-discussion-legacy"],
					"resource": ["reaction"]
				}
			}
		},
		{
			"name": "team_id",
			"displayName": "Team ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the team",
			"displayOptions": {
				"show": {
					"operation": ["reactions/create-for-team-discussion-legacy"],
					"resource": ["reaction"]
				}
			}
		},
		{
			"name": "discussion_number",
			"displayName": "Discussion Number",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The number that identifies the discussion",
			"displayOptions": {
				"show": {
					"operation": ["reactions/create-for-team-discussion-legacy"],
					"resource": ["reaction"]
				}
			}
		},
		{
			"name": "content",
			"displayName": "Content",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The [reaction type](https://docs.github.com/rest/reference/reactions#reaction-types) to add to the team discussion",
			"routing": { "send": { "type": "body", "property": "content" } },
			"displayOptions": {
				"show": {
					"operation": ["reactions/create-for-team-discussion-legacy"],
					"resource": ["reaction"]
				}
			}
		},
		{
			"name": "team_id",
			"displayName": "Team ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the team",
			"displayOptions": {
				"show": { "operation": ["teams/list-pending-invitations-legacy"], "resource": ["team"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["teams/list-pending-invitations-legacy"], "resource": ["team"] }
			}
		},
		{
			"name": "team_id",
			"displayName": "Team ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the team",
			"displayOptions": {
				"show": { "operation": ["teams/list-members-legacy"], "resource": ["team"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "role",
					"displayName": "Role",
					"type": "options",
					"default": "all",
					"description": "Filters members returned by their role in the team",
					"options": [
						{ "name": "Member", "value": "member" },
						{ "name": "Maintainer", "value": "maintainer" },
						{ "name": "All", "value": "all" }
					],
					"routing": { "send": { "type": "query", "property": "role" } }
				},
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["teams/list-members-legacy"], "resource": ["team"] }
			}
		},
		{
			"name": "team_id",
			"displayName": "Team ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the team",
			"displayOptions": {
				"show": { "operation": ["teams/remove-member-legacy"], "resource": ["team"] }
			}
		},
		{
			"name": "username",
			"displayName": "Username",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The handle for the GitHub user account",
			"displayOptions": {
				"show": { "operation": ["teams/remove-member-legacy"], "resource": ["team"] }
			}
		},
		{
			"name": "team_id",
			"displayName": "Team ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the team",
			"displayOptions": {
				"show": { "operation": ["teams/get-member-legacy"], "resource": ["team"] }
			}
		},
		{
			"name": "username",
			"displayName": "Username",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The handle for the GitHub user account",
			"displayOptions": {
				"show": { "operation": ["teams/get-member-legacy"], "resource": ["team"] }
			}
		},
		{
			"name": "team_id",
			"displayName": "Team ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the team",
			"displayOptions": {
				"show": { "operation": ["teams/add-member-legacy"], "resource": ["team"] }
			}
		},
		{
			"name": "username",
			"displayName": "Username",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The handle for the GitHub user account",
			"displayOptions": {
				"show": { "operation": ["teams/add-member-legacy"], "resource": ["team"] }
			}
		},
		{
			"name": "team_id",
			"displayName": "Team ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the team",
			"displayOptions": {
				"show": { "operation": ["teams/remove-membership-for-user-legacy"], "resource": ["team"] }
			}
		},
		{
			"name": "username",
			"displayName": "Username",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The handle for the GitHub user account",
			"displayOptions": {
				"show": { "operation": ["teams/remove-membership-for-user-legacy"], "resource": ["team"] }
			}
		},
		{
			"name": "team_id",
			"displayName": "Team ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the team",
			"displayOptions": {
				"show": { "operation": ["teams/get-membership-for-user-legacy"], "resource": ["team"] }
			}
		},
		{
			"name": "username",
			"displayName": "Username",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The handle for the GitHub user account",
			"displayOptions": {
				"show": { "operation": ["teams/get-membership-for-user-legacy"], "resource": ["team"] }
			}
		},
		{
			"name": "team_id",
			"displayName": "Team ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the team",
			"displayOptions": {
				"show": {
					"operation": ["teams/add-or-update-membership-for-user-legacy"],
					"resource": ["team"]
				}
			}
		},
		{
			"name": "username",
			"displayName": "Username",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The handle for the GitHub user account",
			"displayOptions": {
				"show": {
					"operation": ["teams/add-or-update-membership-for-user-legacy"],
					"resource": ["team"]
				}
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "role",
					"displayName": "Role",
					"type": "string",
					"default": "",
					"description": "The role that this user should have in the team",
					"routing": { "send": { "type": "body", "property": "role" } }
				}
			],
			"displayOptions": {
				"show": {
					"operation": ["teams/add-or-update-membership-for-user-legacy"],
					"resource": ["team"]
				}
			}
		},
		{
			"name": "team_id",
			"displayName": "Team ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the team",
			"displayOptions": {
				"show": { "operation": ["teams/list-projects-legacy"], "resource": ["team"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["teams/list-projects-legacy"], "resource": ["team"] }
			}
		},
		{
			"name": "team_id",
			"displayName": "Team ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the team",
			"displayOptions": {
				"show": { "operation": ["teams/remove-project-legacy"], "resource": ["team"] }
			}
		},
		{
			"name": "project_id",
			"displayName": "Project ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the project",
			"displayOptions": {
				"show": { "operation": ["teams/remove-project-legacy"], "resource": ["team"] }
			}
		},
		{
			"name": "team_id",
			"displayName": "Team ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the team",
			"displayOptions": {
				"show": {
					"operation": ["teams/check-permissions-for-project-legacy"],
					"resource": ["team"]
				}
			}
		},
		{
			"name": "project_id",
			"displayName": "Project ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the project",
			"displayOptions": {
				"show": {
					"operation": ["teams/check-permissions-for-project-legacy"],
					"resource": ["team"]
				}
			}
		},
		{
			"name": "team_id",
			"displayName": "Team ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the team",
			"displayOptions": {
				"show": {
					"operation": ["teams/add-or-update-project-permissions-legacy"],
					"resource": ["team"]
				}
			}
		},
		{
			"name": "project_id",
			"displayName": "Project ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the project",
			"displayOptions": {
				"show": {
					"operation": ["teams/add-or-update-project-permissions-legacy"],
					"resource": ["team"]
				}
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "permission",
					"displayName": "Permission",
					"type": "string",
					"default": "",
					"description": "The permission to grant to the team for this project. Default: the team's `permission` attribute will be used to determi...",
					"routing": { "send": { "type": "body", "property": "permission" } }
				}
			],
			"displayOptions": {
				"show": {
					"operation": ["teams/add-or-update-project-permissions-legacy"],
					"resource": ["team"]
				}
			}
		},
		{
			"name": "team_id",
			"displayName": "Team ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the team",
			"displayOptions": {
				"show": { "operation": ["teams/list-repos-legacy"], "resource": ["team"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["teams/list-repos-legacy"], "resource": ["team"] }
			}
		},
		{
			"name": "team_id",
			"displayName": "Team ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the team",
			"displayOptions": {
				"show": { "operation": ["teams/remove-repo-legacy"], "resource": ["team"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["teams/remove-repo-legacy"], "resource": ["team"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["teams/remove-repo-legacy"], "resource": ["team"] }
			}
		},
		{
			"name": "team_id",
			"displayName": "Team ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the team",
			"displayOptions": {
				"show": { "operation": ["teams/check-permissions-for-repo-legacy"], "resource": ["team"] }
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["teams/check-permissions-for-repo-legacy"], "resource": ["team"] }
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["teams/check-permissions-for-repo-legacy"], "resource": ["team"] }
			}
		},
		{
			"name": "team_id",
			"displayName": "Team ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the team",
			"displayOptions": {
				"show": {
					"operation": ["teams/add-or-update-repo-permissions-legacy"],
					"resource": ["team"]
				}
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["teams/add-or-update-repo-permissions-legacy"],
					"resource": ["team"]
				}
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["teams/add-or-update-repo-permissions-legacy"],
					"resource": ["team"]
				}
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "permission",
					"displayName": "Permission",
					"type": "string",
					"default": "",
					"description": "The permission to grant the team on this repository. If no permission is specified, the team's `permission` attribute wi...",
					"routing": { "send": { "type": "body", "property": "permission" } }
				}
			],
			"displayOptions": {
				"show": {
					"operation": ["teams/add-or-update-repo-permissions-legacy"],
					"resource": ["team"]
				}
			}
		},
		{
			"name": "team_id",
			"displayName": "Team ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the team",
			"displayOptions": {
				"show": { "operation": ["teams/list-child-legacy"], "resource": ["team"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["teams/list-child-legacy"], "resource": ["team"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "bio",
					"displayName": "Bio",
					"type": "string",
					"default": "",
					"description": "The new short biography of the user",
					"routing": { "send": { "type": "body", "property": "bio" } }
				},
				{
					"name": "blog",
					"displayName": "Blog",
					"type": "string",
					"default": "",
					"description": "The new blog URL of the user",
					"placeholder": "e.g. blog.example.com",
					"routing": { "send": { "type": "body", "property": "blog" } }
				},
				{
					"name": "company",
					"displayName": "Company",
					"type": "string",
					"default": "",
					"description": "The new company of the user",
					"placeholder": "e.g. Acme corporation",
					"routing": { "send": { "type": "body", "property": "company" } }
				},
				{
					"name": "email",
					"displayName": "Email",
					"type": "string",
					"default": "",
					"description": "The publicly visible email address of the user",
					"placeholder": "e.g. omar@example.com",
					"routing": { "send": { "type": "body", "property": "email" } }
				},
				{
					"name": "hireable",
					"displayName": "Hireable",
					"type": "boolean",
					"default": false,
					"description": "The new hiring availability of the user",
					"routing": { "send": { "type": "body", "property": "hireable" } }
				},
				{
					"name": "location",
					"displayName": "Location",
					"type": "string",
					"default": "",
					"description": "The new location of the user",
					"placeholder": "e.g. Berlin, Germany",
					"routing": { "send": { "type": "body", "property": "location" } }
				},
				{
					"name": "name",
					"displayName": "Name",
					"type": "string",
					"default": "",
					"description": "The new name of the user",
					"placeholder": "e.g. Omar Jahandar",
					"routing": { "send": { "type": "body", "property": "name" } }
				},
				{
					"name": "twitter_username",
					"displayName": "Twitter Username",
					"type": "string",
					"default": "",
					"description": "The new Twitter username of the user",
					"placeholder": "e.g. therealomarj",
					"routing": { "send": { "type": "body", "property": "twitter_username" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["users/update-authenticated"], "resource": ["user"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["users/list-blocked-by-authenticated-user"], "resource": ["user"] }
			}
		},
		{
			"name": "username",
			"displayName": "Username",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The handle for the GitHub user account",
			"displayOptions": { "show": { "operation": ["users/unblock"], "resource": ["user"] } }
		},
		{
			"name": "username",
			"displayName": "Username",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The handle for the GitHub user account",
			"displayOptions": { "show": { "operation": ["users/check-blocked"], "resource": ["user"] } }
		},
		{
			"name": "username",
			"displayName": "Username",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The handle for the GitHub user account",
			"displayOptions": { "show": { "operation": ["users/block"], "resource": ["user"] } }
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				},
				{
					"name": "repository_id",
					"displayName": "Repository ID",
					"type": "number",
					"default": 0,
					"description": "ID of the Repository to filter on",
					"routing": { "send": { "type": "query", "property": "repository_id" } }
				}
			],
			"displayOptions": {
				"show": {
					"operation": ["codespaces/list-for-authenticated-user"],
					"resource": ["codespace"]
				}
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": {
					"operation": ["codespaces/list-secrets-for-authenticated-user"],
					"resource": ["codespace"]
				}
			}
		},
		{
			"name": "secret_name",
			"displayName": "Secret Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the secret",
			"displayOptions": {
				"show": {
					"operation": ["codespaces/delete-secret-for-authenticated-user"],
					"resource": ["codespace"]
				}
			}
		},
		{
			"name": "secret_name",
			"displayName": "Secret Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the secret",
			"displayOptions": {
				"show": {
					"operation": ["codespaces/get-secret-for-authenticated-user"],
					"resource": ["codespace"]
				}
			}
		},
		{
			"name": "secret_name",
			"displayName": "Secret Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the secret",
			"displayOptions": {
				"show": {
					"operation": ["codespaces/create-or-update-secret-for-authenticated-user"],
					"resource": ["codespace"]
				}
			}
		},
		{
			"name": "key_id",
			"displayName": "Key ID",
			"type": "string",
			"default": "",
			"required": true,
			"description": "ID of the key you used to encrypt the secret",
			"routing": { "send": { "type": "body", "property": "key_id" } },
			"displayOptions": {
				"show": {
					"operation": ["codespaces/create-or-update-secret-for-authenticated-user"],
					"resource": ["codespace"]
				}
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "encrypted_value",
					"displayName": "Encrypted Value",
					"type": "string",
					"default": "",
					"description": "Value for your secret, encrypted with [LibSodium](https://libsodium.gitbook.io/doc/bindings_for_other_languages) using t...",
					"routing": { "send": { "type": "body", "property": "encrypted_value" } }
				},
				{
					"name": "selected_repository_ids",
					"displayName": "Selected Repository IDs",
					"type": "json",
					"default": "{}",
					"description": "An array of repository ids that can access the user secret. You can manage the list of selected repositories using the [...",
					"routing": { "send": { "type": "body", "property": "selected_repository_ids" } }
				}
			],
			"displayOptions": {
				"show": {
					"operation": ["codespaces/create-or-update-secret-for-authenticated-user"],
					"resource": ["codespace"]
				}
			}
		},
		{
			"name": "secret_name",
			"displayName": "Secret Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the secret",
			"displayOptions": {
				"show": {
					"operation": ["codespaces/list-repositories-for-secret-for-authenticated-user"],
					"resource": ["codespace"]
				}
			}
		},
		{
			"name": "secret_name",
			"displayName": "Secret Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the secret",
			"displayOptions": {
				"show": {
					"operation": ["codespaces/set-repositories-for-secret-for-authenticated-user"],
					"resource": ["codespace"]
				}
			}
		},
		{
			"name": "selected_repository_ids",
			"displayName": "Selected Repository IDs",
			"type": "json",
			"default": "{}",
			"required": true,
			"description": "An array of repository ids for which a codespace can access the secret. You can manage the list of selected repositories...",
			"routing": { "send": { "type": "body", "property": "selected_repository_ids" } },
			"displayOptions": {
				"show": {
					"operation": ["codespaces/set-repositories-for-secret-for-authenticated-user"],
					"resource": ["codespace"]
				}
			}
		},
		{
			"name": "secret_name",
			"displayName": "Secret Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the secret",
			"displayOptions": {
				"show": {
					"operation": ["codespaces/remove-repository-for-secret-for-authenticated-user"],
					"resource": ["codespace"]
				}
			}
		},
		{
			"name": "repository_id",
			"displayName": "Repository ID",
			"type": "number",
			"default": 0,
			"required": true,
			"displayOptions": {
				"show": {
					"operation": ["codespaces/remove-repository-for-secret-for-authenticated-user"],
					"resource": ["codespace"]
				}
			}
		},
		{
			"name": "secret_name",
			"displayName": "Secret Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the secret",
			"displayOptions": {
				"show": {
					"operation": ["codespaces/add-repository-for-secret-for-authenticated-user"],
					"resource": ["codespace"]
				}
			}
		},
		{
			"name": "repository_id",
			"displayName": "Repository ID",
			"type": "number",
			"default": 0,
			"required": true,
			"displayOptions": {
				"show": {
					"operation": ["codespaces/add-repository-for-secret-for-authenticated-user"],
					"resource": ["codespace"]
				}
			}
		},
		{
			"name": "codespace_name",
			"displayName": "Codespace Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the codespace",
			"displayOptions": {
				"show": {
					"operation": ["codespaces/delete-for-authenticated-user"],
					"resource": ["codespace"]
				}
			}
		},
		{
			"name": "codespace_name",
			"displayName": "Codespace Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the codespace",
			"displayOptions": {
				"show": {
					"operation": ["codespaces/get-for-authenticated-user"],
					"resource": ["codespace"]
				}
			}
		},
		{
			"name": "codespace_name",
			"displayName": "Codespace Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the codespace",
			"displayOptions": {
				"show": {
					"operation": ["codespaces/update-for-authenticated-user"],
					"resource": ["codespace"]
				}
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "display_name",
					"displayName": "Display Name",
					"type": "string",
					"default": "",
					"description": "Display name for this codespace",
					"routing": { "send": { "type": "body", "property": "display_name" } }
				},
				{
					"name": "machine",
					"displayName": "Machine",
					"type": "string",
					"default": "",
					"description": "A valid machine to transition this codespace to",
					"routing": { "send": { "type": "body", "property": "machine" } }
				},
				{
					"name": "recent_folders",
					"displayName": "Recent Folders",
					"type": "string",
					"default": "",
					"description": "Recently opened folders inside the codespace. It is currently used by the clients to determine the folder path to load t...",
					"routing": { "send": { "type": "body", "property": "recent_folders" } }
				}
			],
			"displayOptions": {
				"show": {
					"operation": ["codespaces/update-for-authenticated-user"],
					"resource": ["codespace"]
				}
			}
		},
		{
			"name": "codespace_name",
			"displayName": "Codespace Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the codespace",
			"displayOptions": {
				"show": {
					"operation": ["codespaces/export-for-authenticated-user"],
					"resource": ["codespace"]
				}
			}
		},
		{
			"name": "codespace_name",
			"displayName": "Codespace Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the codespace",
			"displayOptions": {
				"show": {
					"operation": ["codespaces/get-export-details-for-authenticated-user"],
					"resource": ["codespace"]
				}
			}
		},
		{
			"name": "export_id",
			"displayName": "Export ID",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The ID of the export operation, or `latest`. Currently only `latest` is currently supported",
			"displayOptions": {
				"show": {
					"operation": ["codespaces/get-export-details-for-authenticated-user"],
					"resource": ["codespace"]
				}
			}
		},
		{
			"name": "codespace_name",
			"displayName": "Codespace Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the codespace",
			"displayOptions": {
				"show": {
					"operation": ["codespaces/codespace-machines-for-authenticated-user"],
					"resource": ["codespace"]
				}
			}
		},
		{
			"name": "codespace_name",
			"displayName": "Codespace Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the codespace",
			"displayOptions": {
				"show": {
					"operation": ["codespaces/publish-for-authenticated-user"],
					"resource": ["codespace"]
				}
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "name",
					"displayName": "Name",
					"type": "string",
					"default": "",
					"description": "A name for the new repository",
					"routing": { "send": { "type": "body", "property": "name" } }
				},
				{
					"name": "private",
					"displayName": "Private",
					"type": "boolean",
					"default": false,
					"description": "Whether the new repository should be private",
					"routing": { "send": { "type": "body", "property": "private" } }
				}
			],
			"displayOptions": {
				"show": {
					"operation": ["codespaces/publish-for-authenticated-user"],
					"resource": ["codespace"]
				}
			}
		},
		{
			"name": "codespace_name",
			"displayName": "Codespace Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the codespace",
			"displayOptions": {
				"show": {
					"operation": ["codespaces/start-for-authenticated-user"],
					"resource": ["codespace"]
				}
			}
		},
		{
			"name": "codespace_name",
			"displayName": "Codespace Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the codespace",
			"displayOptions": {
				"show": {
					"operation": ["codespaces/stop-for-authenticated-user"],
					"resource": ["codespace"]
				}
			}
		},
		{
			"name": "visibility",
			"displayName": "Visibility",
			"type": "string",
			"default": "",
			"required": true,
			"description": "Denotes whether an email is publicly visible",
			"routing": { "send": { "type": "body", "property": "visibility" } },
			"displayOptions": {
				"show": {
					"operation": ["users/set-primary-email-visibility-for-authenticated-user"],
					"resource": ["user"]
				}
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["users/list-emails-for-authenticated-user"], "resource": ["user"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": {
					"operation": ["users/list-followers-for-authenticated-user"],
					"resource": ["user"]
				}
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["users/list-followed-by-authenticated-user"], "resource": ["user"] }
			}
		},
		{
			"name": "username",
			"displayName": "Username",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The handle for the GitHub user account",
			"displayOptions": { "show": { "operation": ["users/unfollow"], "resource": ["user"] } }
		},
		{
			"name": "username",
			"displayName": "Username",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The handle for the GitHub user account",
			"displayOptions": {
				"show": {
					"operation": ["users/check-person-is-followed-by-authenticated"],
					"resource": ["user"]
				}
			}
		},
		{
			"name": "username",
			"displayName": "Username",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The handle for the GitHub user account",
			"displayOptions": { "show": { "operation": ["users/follow"], "resource": ["user"] } }
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": {
					"operation": ["users/list-gpg-keys-for-authenticated-user"],
					"resource": ["user"]
				}
			}
		},
		{
			"name": "armored_public_key",
			"displayName": "Armored Public Key",
			"type": "string",
			"default": "",
			"required": true,
			"description": "A GPG key in ASCII-armored format",
			"routing": { "send": { "type": "body", "property": "armored_public_key" } },
			"displayOptions": {
				"show": {
					"operation": ["users/create-gpg-key-for-authenticated-user"],
					"resource": ["user"]
				}
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "name",
					"displayName": "Name",
					"type": "string",
					"default": "",
					"description": "A descriptive name for the new key",
					"routing": { "send": { "type": "body", "property": "name" } }
				}
			],
			"displayOptions": {
				"show": {
					"operation": ["users/create-gpg-key-for-authenticated-user"],
					"resource": ["user"]
				}
			}
		},
		{
			"name": "gpg_key_id",
			"displayName": "Gpg Key ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the GPG key",
			"displayOptions": {
				"show": {
					"operation": ["users/delete-gpg-key-for-authenticated-user"],
					"resource": ["user"]
				}
			}
		},
		{
			"name": "gpg_key_id",
			"displayName": "Gpg Key ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the GPG key",
			"displayOptions": {
				"show": { "operation": ["users/get-gpg-key-for-authenticated-user"], "resource": ["user"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": {
					"operation": ["apps/list-installations-for-authenticated-user"],
					"resource": ["app"]
				}
			}
		},
		{
			"name": "installation_id",
			"displayName": "Installation ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the installation",
			"displayOptions": {
				"show": {
					"operation": ["apps/list-installation-repos-for-authenticated-user"],
					"resource": ["app"]
				}
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": {
					"operation": ["apps/list-installation-repos-for-authenticated-user"],
					"resource": ["app"]
				}
			}
		},
		{
			"name": "installation_id",
			"displayName": "Installation ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the installation",
			"displayOptions": {
				"show": {
					"operation": ["apps/remove-repo-from-installation-for-authenticated-user"],
					"resource": ["app"]
				}
			}
		},
		{
			"name": "repository_id",
			"displayName": "Repository ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the repository",
			"displayOptions": {
				"show": {
					"operation": ["apps/remove-repo-from-installation-for-authenticated-user"],
					"resource": ["app"]
				}
			}
		},
		{
			"name": "installation_id",
			"displayName": "Installation ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the installation",
			"displayOptions": {
				"show": {
					"operation": ["apps/add-repo-to-installation-for-authenticated-user"],
					"resource": ["app"]
				}
			}
		},
		{
			"name": "repository_id",
			"displayName": "Repository ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the repository",
			"displayOptions": {
				"show": {
					"operation": ["apps/add-repo-to-installation-for-authenticated-user"],
					"resource": ["app"]
				}
			}
		},
		{
			"name": "limit",
			"displayName": "Limit",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The type of GitHub user that can comment, open issues, or create pull requests while the interaction limit is in effect",
			"placeholder": "e.g. collaborators_only",
			"routing": { "send": { "type": "body", "property": "limit" } },
			"displayOptions": {
				"show": {
					"operation": ["interactions/set-restrictions-for-authenticated-user"],
					"resource": ["interaction"]
				}
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "expiry",
					"displayName": "Expiry",
					"type": "string",
					"default": "",
					"description": "The duration of the interaction restriction. Default: `one_day`",
					"placeholder": "e.g. one_month",
					"routing": { "send": { "type": "body", "property": "expiry" } }
				}
			],
			"displayOptions": {
				"show": {
					"operation": ["interactions/set-restrictions-for-authenticated-user"],
					"resource": ["interaction"]
				}
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "filter",
					"displayName": "Filter",
					"type": "options",
					"default": "assigned",
					"description": "Indicates which sorts of issues to return. `assigned` means issues assigned to you. `created` means issues created by yo...",
					"options": [
						{ "name": "Assigned", "value": "assigned" },
						{ "name": "Created", "value": "created" },
						{ "name": "Mentioned", "value": "mentioned" },
						{ "name": "Subscribed", "value": "subscribed" },
						{ "name": "Repos", "value": "repos" },
						{ "name": "All", "value": "all" }
					],
					"routing": { "send": { "type": "query", "property": "filter" } }
				},
				{
					"name": "state",
					"displayName": "State",
					"type": "options",
					"default": "open",
					"description": "Indicates the state of the issues to return",
					"options": [
						{ "name": "Open", "value": "open" },
						{ "name": "Closed", "value": "closed" },
						{ "name": "All", "value": "all" }
					],
					"routing": { "send": { "type": "query", "property": "state" } }
				},
				{
					"name": "labels",
					"displayName": "Labels",
					"type": "string",
					"default": "",
					"description": "A list of comma separated label names. Example: `bug,ui,@high`",
					"routing": { "send": { "type": "query", "property": "labels" } }
				},
				{
					"name": "sort",
					"displayName": "Sort",
					"type": "options",
					"default": "created",
					"description": "What to sort results by",
					"options": [
						{ "name": "Created", "value": "created" },
						{ "name": "Updated", "value": "updated" },
						{ "name": "Comments", "value": "comments" }
					],
					"routing": { "send": { "type": "query", "property": "sort" } }
				},
				{
					"name": "direction",
					"displayName": "Direction",
					"type": "options",
					"default": "desc",
					"description": "The direction to sort the results by",
					"options": [{ "name": "Asc", "value": "asc" }, { "name": "Desc", "value": "desc" }],
					"routing": { "send": { "type": "query", "property": "direction" } }
				},
				{
					"name": "since",
					"displayName": "Since",
					"type": "string",
					"default": "",
					"description": "Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/IS...",
					"routing": { "send": { "type": "query", "property": "since" } }
				},
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["issues/list-for-authenticated-user"], "resource": ["issue"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": {
					"operation": ["users/list-public-ssh-keys-for-authenticated-user"],
					"resource": ["user"]
				}
			}
		},
		{
			"name": "key",
			"displayName": "Key",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The public SSH key to add to your GitHub account",
			"routing": { "send": { "type": "body", "property": "key" } },
			"displayOptions": {
				"show": {
					"operation": ["users/create-public-ssh-key-for-authenticated-user"],
					"resource": ["user"]
				}
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "title",
					"displayName": "Title",
					"type": "string",
					"default": "",
					"description": "A descriptive name for the new key",
					"placeholder": "e.g. Personal MacBook Air",
					"routing": { "send": { "type": "body", "property": "title" } }
				}
			],
			"displayOptions": {
				"show": {
					"operation": ["users/create-public-ssh-key-for-authenticated-user"],
					"resource": ["user"]
				}
			}
		},
		{
			"name": "key_id",
			"displayName": "Key ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the key",
			"displayOptions": {
				"show": {
					"operation": ["users/delete-public-ssh-key-for-authenticated-user"],
					"resource": ["user"]
				}
			}
		},
		{
			"name": "key_id",
			"displayName": "Key ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the key",
			"displayOptions": {
				"show": {
					"operation": ["users/get-public-ssh-key-for-authenticated-user"],
					"resource": ["user"]
				}
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": {
					"operation": ["apps/list-subscriptions-for-authenticated-user"],
					"resource": ["app"]
				}
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": {
					"operation": ["apps/list-subscriptions-for-authenticated-user-stubbed"],
					"resource": ["app"]
				}
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "state",
					"displayName": "State",
					"type": "options",
					"default": "active",
					"description": "Indicates the state of the memberships to return. If not specified, the API returns both active and pending memberships",
					"options": [
						{ "name": "Active", "value": "active" },
						{ "name": "Pending", "value": "pending" }
					],
					"routing": { "send": { "type": "query", "property": "state" } }
				},
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": {
					"operation": ["orgs/list-memberships-for-authenticated-user"],
					"resource": ["org"]
				}
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": { "operation": ["orgs/get-membership-for-authenticated-user"], "resource": ["org"] }
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["orgs/update-membership-for-authenticated-user"],
					"resource": ["org"]
				}
			}
		},
		{
			"name": "state",
			"displayName": "State",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The state that the membership should be in. Only `\"active\"` will be accepted",
			"routing": { "send": { "type": "body", "property": "state" } },
			"displayOptions": {
				"show": {
					"operation": ["orgs/update-membership-for-authenticated-user"],
					"resource": ["org"]
				}
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": {
					"operation": ["migrations/list-for-authenticated-user"],
					"resource": ["migration"]
				}
			}
		},
		{
			"name": "repositories",
			"displayName": "Repositories",
			"type": "string",
			"default": "",
			"required": true,
			"routing": { "send": { "type": "body", "property": "repositories" } },
			"displayOptions": {
				"show": {
					"operation": ["migrations/start-for-authenticated-user"],
					"resource": ["migration"]
				}
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "exclude",
					"displayName": "Exclude",
					"type": "string",
					"default": "",
					"description": "Exclude attributes from the API response to improve performance",
					"routing": { "send": { "type": "body", "property": "exclude" } }
				},
				{
					"name": "exclude_attachments",
					"displayName": "Exclude Attachments",
					"type": "boolean",
					"default": false,
					"description": "Do not include attachments in the migration",
					"routing": { "send": { "type": "body", "property": "exclude_attachments" } }
				},
				{
					"name": "exclude_git_data",
					"displayName": "Exclude Git Data",
					"type": "boolean",
					"default": false,
					"description": "Indicates whether the repository git data should be excluded from the migration",
					"routing": { "send": { "type": "body", "property": "exclude_git_data" } }
				},
				{
					"name": "exclude_metadata",
					"displayName": "Exclude Metadata",
					"type": "boolean",
					"default": false,
					"description": "Indicates whether metadata should be excluded and only git source should be included for the migration",
					"routing": { "send": { "type": "body", "property": "exclude_metadata" } }
				},
				{
					"name": "exclude_owner_projects",
					"displayName": "Exclude Owner Projects",
					"type": "boolean",
					"default": false,
					"description": "Indicates whether projects owned by the organization or users should be excluded",
					"routing": { "send": { "type": "body", "property": "exclude_owner_projects" } }
				},
				{
					"name": "exclude_releases",
					"displayName": "Exclude Releases",
					"type": "boolean",
					"default": false,
					"description": "Do not include releases in the migration",
					"routing": { "send": { "type": "body", "property": "exclude_releases" } }
				},
				{
					"name": "lock_repositories",
					"displayName": "Lock Repositories",
					"type": "boolean",
					"default": false,
					"description": "Lock the repositories being migrated at the start of the migration",
					"routing": { "send": { "type": "body", "property": "lock_repositories" } }
				},
				{
					"name": "org_metadata_only",
					"displayName": "Org Metadata Only",
					"type": "boolean",
					"default": false,
					"description": "Indicates whether this should only include organization metadata (repositories array should be empty and will ignore oth...",
					"routing": { "send": { "type": "body", "property": "org_metadata_only" } }
				}
			],
			"displayOptions": {
				"show": {
					"operation": ["migrations/start-for-authenticated-user"],
					"resource": ["migration"]
				}
			}
		},
		{
			"name": "migration_id",
			"displayName": "Migration ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the migration",
			"displayOptions": {
				"show": {
					"operation": ["migrations/get-status-for-authenticated-user"],
					"resource": ["migration"]
				}
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "exclude",
					"displayName": "Exclude",
					"type": "string",
					"default": "",
					"routing": { "send": { "type": "query", "property": "exclude" } }
				}
			],
			"displayOptions": {
				"show": {
					"operation": ["migrations/get-status-for-authenticated-user"],
					"resource": ["migration"]
				}
			}
		},
		{
			"name": "migration_id",
			"displayName": "Migration ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the migration",
			"displayOptions": {
				"show": {
					"operation": ["migrations/delete-archive-for-authenticated-user"],
					"resource": ["migration"]
				}
			}
		},
		{
			"name": "migration_id",
			"displayName": "Migration ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the migration",
			"displayOptions": {
				"show": {
					"operation": ["migrations/get-archive-for-authenticated-user"],
					"resource": ["migration"]
				}
			}
		},
		{
			"name": "migration_id",
			"displayName": "Migration ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the migration",
			"displayOptions": {
				"show": {
					"operation": ["migrations/unlock-repo-for-authenticated-user"],
					"resource": ["migration"]
				}
			}
		},
		{
			"name": "repo_name",
			"displayName": "Repo Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "repo_name parameter",
			"displayOptions": {
				"show": {
					"operation": ["migrations/unlock-repo-for-authenticated-user"],
					"resource": ["migration"]
				}
			}
		},
		{
			"name": "migration_id",
			"displayName": "Migration ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the migration",
			"displayOptions": {
				"show": {
					"operation": ["migrations/list-repos-for-authenticated-user"],
					"resource": ["migration"]
				}
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": {
					"operation": ["migrations/list-repos-for-authenticated-user"],
					"resource": ["migration"]
				}
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["orgs/list-for-authenticated-user"], "resource": ["org"] }
			}
		},
		{
			"name": "package_type",
			"displayName": "Package Type",
			"type": "options",
			"default": "npm",
			"required": true,
			"description": "The type of supported package. Packages in GitHub's Gradle registry have the type `maven`. Docker images pushed to GitHu...",
			"options": [
				{ "name": "Npm", "value": "npm" },
				{ "name": "Maven", "value": "maven" },
				{ "name": "Rubygems", "value": "rubygems" },
				{ "name": "Docker", "value": "docker" },
				{ "name": "Nuget", "value": "nuget" },
				{ "name": "Container", "value": "container" }
			],
			"routing": { "send": { "type": "query", "property": "package_type" } },
			"displayOptions": {
				"show": {
					"operation": ["packages/list-packages-for-authenticated-user"],
					"resource": ["package"]
				}
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "visibility",
					"displayName": "Visibility",
					"type": "options",
					"default": "public",
					"description": "The selected visibility of the packages.  This parameter is optional and only filters an existing result set.  The `inte...",
					"options": [
						{ "name": "Public", "value": "public" },
						{ "name": "Private", "value": "private" },
						{ "name": "Internal", "value": "internal" }
					],
					"routing": { "send": { "type": "query", "property": "visibility" } }
				}
			],
			"displayOptions": {
				"show": {
					"operation": ["packages/list-packages-for-authenticated-user"],
					"resource": ["package"]
				}
			}
		},
		{
			"name": "package_type",
			"displayName": "Package Type",
			"type": "options",
			"default": "npm",
			"required": true,
			"description": "The type of supported package. Packages in GitHub's Gradle registry have the type `maven`. Docker images pushed to GitHu...",
			"options": [
				{ "name": "Npm", "value": "npm" },
				{ "name": "Maven", "value": "maven" },
				{ "name": "Rubygems", "value": "rubygems" },
				{ "name": "Docker", "value": "docker" },
				{ "name": "Nuget", "value": "nuget" },
				{ "name": "Container", "value": "container" }
			],
			"displayOptions": {
				"show": {
					"operation": ["packages/delete-package-for-authenticated-user"],
					"resource": ["package"]
				}
			}
		},
		{
			"name": "package_name",
			"displayName": "Package Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the package",
			"displayOptions": {
				"show": {
					"operation": ["packages/delete-package-for-authenticated-user"],
					"resource": ["package"]
				}
			}
		},
		{
			"name": "package_type",
			"displayName": "Package Type",
			"type": "options",
			"default": "npm",
			"required": true,
			"description": "The type of supported package. Packages in GitHub's Gradle registry have the type `maven`. Docker images pushed to GitHu...",
			"options": [
				{ "name": "Npm", "value": "npm" },
				{ "name": "Maven", "value": "maven" },
				{ "name": "Rubygems", "value": "rubygems" },
				{ "name": "Docker", "value": "docker" },
				{ "name": "Nuget", "value": "nuget" },
				{ "name": "Container", "value": "container" }
			],
			"displayOptions": {
				"show": {
					"operation": ["packages/get-package-for-authenticated-user"],
					"resource": ["package"]
				}
			}
		},
		{
			"name": "package_name",
			"displayName": "Package Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the package",
			"displayOptions": {
				"show": {
					"operation": ["packages/get-package-for-authenticated-user"],
					"resource": ["package"]
				}
			}
		},
		{
			"name": "package_type",
			"displayName": "Package Type",
			"type": "options",
			"default": "npm",
			"required": true,
			"description": "The type of supported package. Packages in GitHub's Gradle registry have the type `maven`. Docker images pushed to GitHu...",
			"options": [
				{ "name": "Npm", "value": "npm" },
				{ "name": "Maven", "value": "maven" },
				{ "name": "Rubygems", "value": "rubygems" },
				{ "name": "Docker", "value": "docker" },
				{ "name": "Nuget", "value": "nuget" },
				{ "name": "Container", "value": "container" }
			],
			"displayOptions": {
				"show": {
					"operation": ["packages/restore-package-for-authenticated-user"],
					"resource": ["package"]
				}
			}
		},
		{
			"name": "package_name",
			"displayName": "Package Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the package",
			"displayOptions": {
				"show": {
					"operation": ["packages/restore-package-for-authenticated-user"],
					"resource": ["package"]
				}
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "token",
					"displayName": "Token",
					"type": "string",
					"default": "",
					"description": "package token",
					"routing": { "send": { "type": "query", "property": "token" } }
				}
			],
			"displayOptions": {
				"show": {
					"operation": ["packages/restore-package-for-authenticated-user"],
					"resource": ["package"]
				}
			}
		},
		{
			"name": "package_type",
			"displayName": "Package Type",
			"type": "options",
			"default": "npm",
			"required": true,
			"description": "The type of supported package. Packages in GitHub's Gradle registry have the type `maven`. Docker images pushed to GitHu...",
			"options": [
				{ "name": "Npm", "value": "npm" },
				{ "name": "Maven", "value": "maven" },
				{ "name": "Rubygems", "value": "rubygems" },
				{ "name": "Docker", "value": "docker" },
				{ "name": "Nuget", "value": "nuget" },
				{ "name": "Container", "value": "container" }
			],
			"displayOptions": {
				"show": {
					"operation": [
						"packages/get-all-package-versions-for-package-owned-by-authenticated-user"
					],
					"resource": ["package"]
				}
			}
		},
		{
			"name": "package_name",
			"displayName": "Package Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the package",
			"displayOptions": {
				"show": {
					"operation": [
						"packages/get-all-package-versions-for-package-owned-by-authenticated-user"
					],
					"resource": ["package"]
				}
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				},
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "state",
					"displayName": "State",
					"type": "options",
					"default": "active",
					"description": "The state of the package, either active or deleted",
					"options": [
						{ "name": "Active", "value": "active" },
						{ "name": "Deleted", "value": "deleted" }
					],
					"routing": { "send": { "type": "query", "property": "state" } }
				}
			],
			"displayOptions": {
				"show": {
					"operation": [
						"packages/get-all-package-versions-for-package-owned-by-authenticated-user"
					],
					"resource": ["package"]
				}
			}
		},
		{
			"name": "package_type",
			"displayName": "Package Type",
			"type": "options",
			"default": "npm",
			"required": true,
			"description": "The type of supported package. Packages in GitHub's Gradle registry have the type `maven`. Docker images pushed to GitHu...",
			"options": [
				{ "name": "Npm", "value": "npm" },
				{ "name": "Maven", "value": "maven" },
				{ "name": "Rubygems", "value": "rubygems" },
				{ "name": "Docker", "value": "docker" },
				{ "name": "Nuget", "value": "nuget" },
				{ "name": "Container", "value": "container" }
			],
			"displayOptions": {
				"show": {
					"operation": ["packages/delete-package-version-for-authenticated-user"],
					"resource": ["package"]
				}
			}
		},
		{
			"name": "package_name",
			"displayName": "Package Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the package",
			"displayOptions": {
				"show": {
					"operation": ["packages/delete-package-version-for-authenticated-user"],
					"resource": ["package"]
				}
			}
		},
		{
			"name": "package_version_id",
			"displayName": "Package Version ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "Unique identifier of the package version",
			"displayOptions": {
				"show": {
					"operation": ["packages/delete-package-version-for-authenticated-user"],
					"resource": ["package"]
				}
			}
		},
		{
			"name": "package_type",
			"displayName": "Package Type",
			"type": "options",
			"default": "npm",
			"required": true,
			"description": "The type of supported package. Packages in GitHub's Gradle registry have the type `maven`. Docker images pushed to GitHu...",
			"options": [
				{ "name": "Npm", "value": "npm" },
				{ "name": "Maven", "value": "maven" },
				{ "name": "Rubygems", "value": "rubygems" },
				{ "name": "Docker", "value": "docker" },
				{ "name": "Nuget", "value": "nuget" },
				{ "name": "Container", "value": "container" }
			],
			"displayOptions": {
				"show": {
					"operation": ["packages/get-package-version-for-authenticated-user"],
					"resource": ["package"]
				}
			}
		},
		{
			"name": "package_name",
			"displayName": "Package Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the package",
			"displayOptions": {
				"show": {
					"operation": ["packages/get-package-version-for-authenticated-user"],
					"resource": ["package"]
				}
			}
		},
		{
			"name": "package_version_id",
			"displayName": "Package Version ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "Unique identifier of the package version",
			"displayOptions": {
				"show": {
					"operation": ["packages/get-package-version-for-authenticated-user"],
					"resource": ["package"]
				}
			}
		},
		{
			"name": "package_type",
			"displayName": "Package Type",
			"type": "options",
			"default": "npm",
			"required": true,
			"description": "The type of supported package. Packages in GitHub's Gradle registry have the type `maven`. Docker images pushed to GitHu...",
			"options": [
				{ "name": "Npm", "value": "npm" },
				{ "name": "Maven", "value": "maven" },
				{ "name": "Rubygems", "value": "rubygems" },
				{ "name": "Docker", "value": "docker" },
				{ "name": "Nuget", "value": "nuget" },
				{ "name": "Container", "value": "container" }
			],
			"displayOptions": {
				"show": {
					"operation": ["packages/restore-package-version-for-authenticated-user"],
					"resource": ["package"]
				}
			}
		},
		{
			"name": "package_name",
			"displayName": "Package Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the package",
			"displayOptions": {
				"show": {
					"operation": ["packages/restore-package-version-for-authenticated-user"],
					"resource": ["package"]
				}
			}
		},
		{
			"name": "package_version_id",
			"displayName": "Package Version ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "Unique identifier of the package version",
			"displayOptions": {
				"show": {
					"operation": ["packages/restore-package-version-for-authenticated-user"],
					"resource": ["package"]
				}
			}
		},
		{
			"name": "name",
			"displayName": "Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "Name of the project",
			"placeholder": "e.g. Week One Sprint",
			"routing": { "send": { "type": "body", "property": "name" } },
			"displayOptions": {
				"show": { "operation": ["projects/create-for-authenticated-user"], "resource": ["project"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "body",
					"displayName": "Body",
					"type": "string",
					"default": "",
					"description": "Body of the project",
					"placeholder": "e.g. This project represents the sprint of the first week in January",
					"routing": { "send": { "type": "body", "property": "body" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["projects/create-for-authenticated-user"], "resource": ["project"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": {
					"operation": ["users/list-public-emails-for-authenticated-user"],
					"resource": ["user"]
				}
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "visibility",
					"displayName": "Visibility",
					"type": "options",
					"default": "all",
					"description": "Limit results to repositories with the specified visibility",
					"options": [
						{ "name": "All", "value": "all" },
						{ "name": "Public", "value": "public" },
						{ "name": "Private", "value": "private" }
					],
					"routing": { "send": { "type": "query", "property": "visibility" } }
				},
				{
					"name": "affiliation",
					"displayName": "Affiliation",
					"type": "string",
					"default": "owner,collaborator,organization_member",
					"description": "Comma-separated list of values. Can include:    * `owner`: Repositories that are owned by the authenticated user.    * `...",
					"routing": { "send": { "type": "query", "property": "affiliation" } }
				},
				{
					"name": "type",
					"displayName": "Type",
					"type": "options",
					"default": "all",
					"description": "Limit results to repositories of the specified type. Will cause a `422` error if used in the same request as **visibilit...",
					"options": [
						{ "name": "All", "value": "all" },
						{ "name": "Owner", "value": "owner" },
						{ "name": "Public", "value": "public" },
						{ "name": "Private", "value": "private" },
						{ "name": "Member", "value": "member" }
					],
					"routing": { "send": { "type": "query", "property": "type" } }
				},
				{
					"name": "sort",
					"displayName": "Sort",
					"type": "options",
					"default": "full_name",
					"description": "The property to sort the results by",
					"options": [
						{ "name": "Created", "value": "created" },
						{ "name": "Updated", "value": "updated" },
						{ "name": "Pushed", "value": "pushed" },
						{ "name": "Full Name", "value": "full_name" }
					],
					"routing": { "send": { "type": "query", "property": "sort" } }
				},
				{
					"name": "direction",
					"displayName": "Direction",
					"type": "options",
					"default": "asc",
					"description": "The order to sort by. Default: `asc` when using `full_name`, otherwise `desc`",
					"options": [{ "name": "Asc", "value": "asc" }, { "name": "Desc", "value": "desc" }],
					"routing": { "send": { "type": "query", "property": "direction" } }
				},
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				},
				{
					"name": "since",
					"displayName": "Since",
					"type": "string",
					"default": "",
					"description": "Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/IS...",
					"routing": { "send": { "type": "query", "property": "since" } }
				},
				{
					"name": "before",
					"displayName": "Before",
					"type": "string",
					"default": "",
					"description": "Only show notifications updated before the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/I...",
					"routing": { "send": { "type": "query", "property": "before" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["repos/list-for-authenticated-user"], "resource": ["repo"] }
			}
		},
		{
			"name": "name",
			"displayName": "Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository",
			"placeholder": "e.g. Team Environment",
			"routing": { "send": { "type": "body", "property": "name" } },
			"displayOptions": {
				"show": { "operation": ["repos/create-for-authenticated-user"], "resource": ["repo"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "allow_auto_merge",
					"displayName": "Allow Auto Merge",
					"type": "boolean",
					"default": false,
					"description": "Whether to allow Auto-merge to be used on pull requests",
					"routing": { "send": { "type": "body", "property": "allow_auto_merge" } }
				},
				{
					"name": "allow_merge_commit",
					"displayName": "Allow Merge Commit",
					"type": "boolean",
					"default": false,
					"description": "Whether to allow merge commits for pull requests",
					"routing": { "send": { "type": "body", "property": "allow_merge_commit" } }
				},
				{
					"name": "allow_rebase_merge",
					"displayName": "Allow Rebase Merge",
					"type": "boolean",
					"default": false,
					"description": "Whether to allow rebase merges for pull requests",
					"routing": { "send": { "type": "body", "property": "allow_rebase_merge" } }
				},
				{
					"name": "allow_squash_merge",
					"displayName": "Allow Squash Merge",
					"type": "boolean",
					"default": false,
					"description": "Whether to allow squash merges for pull requests",
					"routing": { "send": { "type": "body", "property": "allow_squash_merge" } }
				},
				{
					"name": "auto_init",
					"displayName": "Auto Init",
					"type": "boolean",
					"default": false,
					"description": "Whether the repository is initialized with a minimal README",
					"routing": { "send": { "type": "body", "property": "auto_init" } }
				},
				{
					"name": "delete_branch_on_merge",
					"displayName": "Delete Branch On Merge",
					"type": "boolean",
					"default": false,
					"description": "Whether to delete head branches when pull requests are merged",
					"routing": { "send": { "type": "body", "property": "delete_branch_on_merge" } }
				},
				{
					"name": "description",
					"displayName": "Description",
					"type": "string",
					"default": "",
					"description": "A short description of the repository",
					"routing": { "send": { "type": "body", "property": "description" } }
				},
				{
					"name": "gitignore_template",
					"displayName": "Gitignore Template",
					"type": "string",
					"default": "",
					"description": "The desired language or platform to apply to the .gitignore",
					"placeholder": "e.g. Haskell",
					"routing": { "send": { "type": "body", "property": "gitignore_template" } }
				},
				{
					"name": "has_discussions",
					"displayName": "Has Discussions",
					"type": "boolean",
					"default": false,
					"description": "Whether discussions are enabled",
					"routing": { "send": { "type": "body", "property": "has_discussions" } }
				},
				{
					"name": "has_downloads",
					"displayName": "Has Downloads",
					"type": "boolean",
					"default": false,
					"description": "Whether downloads are enabled",
					"routing": { "send": { "type": "body", "property": "has_downloads" } }
				},
				{
					"name": "has_issues",
					"displayName": "Has Issues",
					"type": "boolean",
					"default": false,
					"description": "Whether issues are enabled",
					"routing": { "send": { "type": "body", "property": "has_issues" } }
				},
				{
					"name": "has_projects",
					"displayName": "Has Projects",
					"type": "boolean",
					"default": false,
					"description": "Whether projects are enabled",
					"routing": { "send": { "type": "body", "property": "has_projects" } }
				},
				{
					"name": "has_wiki",
					"displayName": "Has Wiki",
					"type": "boolean",
					"default": false,
					"description": "Whether the wiki is enabled",
					"routing": { "send": { "type": "body", "property": "has_wiki" } }
				},
				{
					"name": "homepage",
					"displayName": "Homepage",
					"type": "string",
					"default": "",
					"description": "A URL with more information about the repository",
					"routing": { "send": { "type": "body", "property": "homepage" } }
				},
				{
					"name": "is_template",
					"displayName": "Is Template",
					"type": "boolean",
					"default": false,
					"description": "Whether this repository acts as a template that can be used to generate new repositories",
					"routing": { "send": { "type": "body", "property": "is_template" } }
				},
				{
					"name": "license_template",
					"displayName": "License Template",
					"type": "string",
					"default": "",
					"description": "The license keyword of the open source license for this repository",
					"placeholder": "e.g. mit",
					"routing": { "send": { "type": "body", "property": "license_template" } }
				},
				{
					"name": "merge_commit_message",
					"displayName": "Merge Commit Message",
					"type": "string",
					"default": "",
					"description": "The default value for a merge commit message.  - `PR_TITLE` - default to the pull request's title. - `PR_BODY` - default...",
					"routing": { "send": { "type": "body", "property": "merge_commit_message" } }
				},
				{
					"name": "merge_commit_title",
					"displayName": "Merge Commit Title",
					"type": "string",
					"default": "",
					"description": "The default value for a merge commit title.  - `PR_TITLE` - default to the pull request's title. - `MERGE_MESSAGE` - def...",
					"routing": { "send": { "type": "body", "property": "merge_commit_title" } }
				},
				{
					"name": "private",
					"displayName": "Private",
					"type": "boolean",
					"default": false,
					"description": "Whether the repository is private",
					"routing": { "send": { "type": "body", "property": "private" } }
				},
				{
					"name": "squash_merge_commit_message",
					"displayName": "Squash Merge Commit Message",
					"type": "string",
					"default": "",
					"description": "The default value for a squash merge commit message:  - `PR_BODY` - default to the pull request's body. - `COMMIT_MESSAG...",
					"routing": { "send": { "type": "body", "property": "squash_merge_commit_message" } }
				},
				{
					"name": "squash_merge_commit_title",
					"displayName": "Squash Merge Commit Title",
					"type": "string",
					"default": "",
					"description": "The default value for a squash merge commit title:  - `PR_TITLE` - default to the pull request's title. - `COMMIT_OR_PR_...",
					"routing": { "send": { "type": "body", "property": "squash_merge_commit_title" } }
				},
				{
					"name": "team_id",
					"displayName": "Team ID",
					"type": "number",
					"default": 0,
					"description": "The id of the team that will be granted access to this repository. This is only valid when creating a repository in an o...",
					"routing": { "send": { "type": "body", "property": "team_id" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["repos/create-for-authenticated-user"], "resource": ["repo"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": {
					"operation": ["repos/list-invitations-for-authenticated-user"],
					"resource": ["repo"]
				}
			}
		},
		{
			"name": "invitation_id",
			"displayName": "Invitation ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the invitation",
			"displayOptions": {
				"show": {
					"operation": ["repos/decline-invitation-for-authenticated-user"],
					"resource": ["repo"]
				}
			}
		},
		{
			"name": "invitation_id",
			"displayName": "Invitation ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the invitation",
			"displayOptions": {
				"show": {
					"operation": ["repos/accept-invitation-for-authenticated-user"],
					"resource": ["repo"]
				}
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": {
					"operation": ["users/list-ssh-signing-keys-for-authenticated-user"],
					"resource": ["user"]
				}
			}
		},
		{
			"name": "key",
			"displayName": "Key",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The public SSH key to add to your GitHub account. For more information, see \"[Checking for existing SSH keys](https://do...",
			"routing": { "send": { "type": "body", "property": "key" } },
			"displayOptions": {
				"show": {
					"operation": ["users/create-ssh-signing-key-for-authenticated-user"],
					"resource": ["user"]
				}
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "title",
					"displayName": "Title",
					"type": "string",
					"default": "",
					"description": "A descriptive name for the new key",
					"placeholder": "e.g. Personal MacBook Air",
					"routing": { "send": { "type": "body", "property": "title" } }
				}
			],
			"displayOptions": {
				"show": {
					"operation": ["users/create-ssh-signing-key-for-authenticated-user"],
					"resource": ["user"]
				}
			}
		},
		{
			"name": "ssh_signing_key_id",
			"displayName": "Ssh Signing Key ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the SSH signing key",
			"displayOptions": {
				"show": {
					"operation": ["users/delete-ssh-signing-key-for-authenticated-user"],
					"resource": ["user"]
				}
			}
		},
		{
			"name": "ssh_signing_key_id",
			"displayName": "Ssh Signing Key ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "The unique identifier of the SSH signing key",
			"displayOptions": {
				"show": {
					"operation": ["users/get-ssh-signing-key-for-authenticated-user"],
					"resource": ["user"]
				}
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "sort",
					"displayName": "Sort",
					"type": "options",
					"default": "created",
					"description": "The property to sort the results by. `created` means when the repository was starred. `updated` means when the repositor...",
					"options": [
						{ "name": "Created", "value": "created" },
						{ "name": "Updated", "value": "updated" }
					],
					"routing": { "send": { "type": "query", "property": "sort" } }
				},
				{
					"name": "direction",
					"displayName": "Direction",
					"type": "options",
					"default": "desc",
					"description": "The direction to sort the results by",
					"options": [{ "name": "Asc", "value": "asc" }, { "name": "Desc", "value": "desc" }],
					"routing": { "send": { "type": "query", "property": "direction" } }
				},
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": {
					"operation": ["activity/list-repos-starred-by-authenticated-user"],
					"resource": ["activity"]
				}
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["activity/unstar-repo-for-authenticated-user"],
					"resource": ["activity"]
				}
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["activity/unstar-repo-for-authenticated-user"],
					"resource": ["activity"]
				}
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["activity/check-repo-is-starred-by-authenticated-user"],
					"resource": ["activity"]
				}
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["activity/check-repo-is-starred-by-authenticated-user"],
					"resource": ["activity"]
				}
			}
		},
		{
			"name": "owner",
			"displayName": "Owner",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The account owner of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["activity/star-repo-for-authenticated-user"],
					"resource": ["activity"]
				}
			}
		},
		{
			"name": "repo",
			"displayName": "Repo",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the repository. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["activity/star-repo-for-authenticated-user"],
					"resource": ["activity"]
				}
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": {
					"operation": ["activity/list-watched-repos-for-authenticated-user"],
					"resource": ["activity"]
				}
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["teams/list-for-authenticated-user"], "resource": ["team"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "since",
					"displayName": "Since",
					"type": "number",
					"default": 0,
					"description": "A user ID. Only return users with an ID greater than this ID",
					"routing": { "send": { "type": "query", "property": "since" } }
				},
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				}
			],
			"displayOptions": { "show": { "operation": ["users/list"], "resource": ["user"] } }
		},
		{
			"name": "username",
			"displayName": "Username",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The handle for the GitHub user account",
			"displayOptions": { "show": { "operation": ["users/get-by-username"], "resource": ["user"] } }
		},
		{
			"name": "username",
			"displayName": "Username",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The handle for the GitHub user account",
			"displayOptions": {
				"show": {
					"operation": ["activity/list-events-for-authenticated-user"],
					"resource": ["activity"]
				}
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": {
					"operation": ["activity/list-events-for-authenticated-user"],
					"resource": ["activity"]
				}
			}
		},
		{
			"name": "username",
			"displayName": "Username",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The handle for the GitHub user account",
			"displayOptions": {
				"show": {
					"operation": ["activity/list-org-events-for-authenticated-user"],
					"resource": ["activity"]
				}
			}
		},
		{
			"name": "org",
			"displayName": "Org",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The organization name. The name is not case sensitive",
			"displayOptions": {
				"show": {
					"operation": ["activity/list-org-events-for-authenticated-user"],
					"resource": ["activity"]
				}
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": {
					"operation": ["activity/list-org-events-for-authenticated-user"],
					"resource": ["activity"]
				}
			}
		},
		{
			"name": "username",
			"displayName": "Username",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The handle for the GitHub user account",
			"displayOptions": {
				"show": { "operation": ["activity/list-public-events-for-user"], "resource": ["activity"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["activity/list-public-events-for-user"], "resource": ["activity"] }
			}
		},
		{
			"name": "username",
			"displayName": "Username",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The handle for the GitHub user account",
			"displayOptions": {
				"show": { "operation": ["users/list-followers-for-user"], "resource": ["user"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["users/list-followers-for-user"], "resource": ["user"] }
			}
		},
		{
			"name": "username",
			"displayName": "Username",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The handle for the GitHub user account",
			"displayOptions": {
				"show": { "operation": ["users/list-following-for-user"], "resource": ["user"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["users/list-following-for-user"], "resource": ["user"] }
			}
		},
		{
			"name": "username",
			"displayName": "Username",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The handle for the GitHub user account",
			"displayOptions": {
				"show": { "operation": ["users/check-following-for-user"], "resource": ["user"] }
			}
		},
		{
			"name": "target_user",
			"displayName": "Target User",
			"type": "string",
			"default": "",
			"required": true,
			"displayOptions": {
				"show": { "operation": ["users/check-following-for-user"], "resource": ["user"] }
			}
		},
		{
			"name": "username",
			"displayName": "Username",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The handle for the GitHub user account",
			"displayOptions": { "show": { "operation": ["gists/list-for-user"], "resource": ["gist"] } }
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "since",
					"displayName": "Since",
					"type": "string",
					"default": "",
					"description": "Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/IS...",
					"routing": { "send": { "type": "query", "property": "since" } }
				},
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": { "show": { "operation": ["gists/list-for-user"], "resource": ["gist"] } }
		},
		{
			"name": "username",
			"displayName": "Username",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The handle for the GitHub user account",
			"displayOptions": {
				"show": { "operation": ["users/list-gpg-keys-for-user"], "resource": ["user"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["users/list-gpg-keys-for-user"], "resource": ["user"] }
			}
		},
		{
			"name": "username",
			"displayName": "Username",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The handle for the GitHub user account",
			"displayOptions": {
				"show": { "operation": ["users/get-context-for-user"], "resource": ["user"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "subject_type",
					"displayName": "Subject Type",
					"type": "options",
					"default": "organization",
					"description": "Identifies which additional information you'd like to receive about the person's hovercard. Can be `organization`, `repo...",
					"options": [
						{ "name": "Organization", "value": "organization" },
						{ "name": "Repository", "value": "repository" },
						{ "name": "Issue", "value": "issue" },
						{ "name": "Pull Request", "value": "pull_request" }
					],
					"routing": { "send": { "type": "query", "property": "subject_type" } }
				},
				{
					"name": "subject_id",
					"displayName": "Subject ID",
					"type": "string",
					"default": "",
					"description": "Uses the ID for the `subject_type` you specified. **Required** when using `subject_type`",
					"routing": { "send": { "type": "query", "property": "subject_id" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["users/get-context-for-user"], "resource": ["user"] }
			}
		},
		{
			"name": "username",
			"displayName": "Username",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The handle for the GitHub user account",
			"displayOptions": {
				"show": { "operation": ["apps/get-user-installation"], "resource": ["app"] }
			}
		},
		{
			"name": "username",
			"displayName": "Username",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The handle for the GitHub user account",
			"displayOptions": {
				"show": { "operation": ["users/list-public-keys-for-user"], "resource": ["user"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["users/list-public-keys-for-user"], "resource": ["user"] }
			}
		},
		{
			"name": "username",
			"displayName": "Username",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The handle for the GitHub user account",
			"displayOptions": { "show": { "operation": ["orgs/list-for-user"], "resource": ["org"] } }
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": { "show": { "operation": ["orgs/list-for-user"], "resource": ["org"] } }
		},
		{
			"name": "package_type",
			"displayName": "Package Type",
			"type": "options",
			"default": "npm",
			"required": true,
			"description": "The type of supported package. Packages in GitHub's Gradle registry have the type `maven`. Docker images pushed to GitHu...",
			"options": [
				{ "name": "Npm", "value": "npm" },
				{ "name": "Maven", "value": "maven" },
				{ "name": "Rubygems", "value": "rubygems" },
				{ "name": "Docker", "value": "docker" },
				{ "name": "Nuget", "value": "nuget" },
				{ "name": "Container", "value": "container" }
			],
			"routing": { "send": { "type": "query", "property": "package_type" } },
			"displayOptions": {
				"show": { "operation": ["packages/list-packages-for-user"], "resource": ["package"] }
			}
		},
		{
			"name": "username",
			"displayName": "Username",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The handle for the GitHub user account",
			"displayOptions": {
				"show": { "operation": ["packages/list-packages-for-user"], "resource": ["package"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "visibility",
					"displayName": "Visibility",
					"type": "options",
					"default": "public",
					"description": "The selected visibility of the packages.  This parameter is optional and only filters an existing result set.  The `inte...",
					"options": [
						{ "name": "Public", "value": "public" },
						{ "name": "Private", "value": "private" },
						{ "name": "Internal", "value": "internal" }
					],
					"routing": { "send": { "type": "query", "property": "visibility" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["packages/list-packages-for-user"], "resource": ["package"] }
			}
		},
		{
			"name": "package_type",
			"displayName": "Package Type",
			"type": "options",
			"default": "npm",
			"required": true,
			"description": "The type of supported package. Packages in GitHub's Gradle registry have the type `maven`. Docker images pushed to GitHu...",
			"options": [
				{ "name": "Npm", "value": "npm" },
				{ "name": "Maven", "value": "maven" },
				{ "name": "Rubygems", "value": "rubygems" },
				{ "name": "Docker", "value": "docker" },
				{ "name": "Nuget", "value": "nuget" },
				{ "name": "Container", "value": "container" }
			],
			"displayOptions": {
				"show": { "operation": ["packages/delete-package-for-user"], "resource": ["package"] }
			}
		},
		{
			"name": "package_name",
			"displayName": "Package Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the package",
			"displayOptions": {
				"show": { "operation": ["packages/delete-package-for-user"], "resource": ["package"] }
			}
		},
		{
			"name": "username",
			"displayName": "Username",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The handle for the GitHub user account",
			"displayOptions": {
				"show": { "operation": ["packages/delete-package-for-user"], "resource": ["package"] }
			}
		},
		{
			"name": "package_type",
			"displayName": "Package Type",
			"type": "options",
			"default": "npm",
			"required": true,
			"description": "The type of supported package. Packages in GitHub's Gradle registry have the type `maven`. Docker images pushed to GitHu...",
			"options": [
				{ "name": "Npm", "value": "npm" },
				{ "name": "Maven", "value": "maven" },
				{ "name": "Rubygems", "value": "rubygems" },
				{ "name": "Docker", "value": "docker" },
				{ "name": "Nuget", "value": "nuget" },
				{ "name": "Container", "value": "container" }
			],
			"displayOptions": {
				"show": { "operation": ["packages/get-package-for-user"], "resource": ["package"] }
			}
		},
		{
			"name": "package_name",
			"displayName": "Package Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the package",
			"displayOptions": {
				"show": { "operation": ["packages/get-package-for-user"], "resource": ["package"] }
			}
		},
		{
			"name": "username",
			"displayName": "Username",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The handle for the GitHub user account",
			"displayOptions": {
				"show": { "operation": ["packages/get-package-for-user"], "resource": ["package"] }
			}
		},
		{
			"name": "package_type",
			"displayName": "Package Type",
			"type": "options",
			"default": "npm",
			"required": true,
			"description": "The type of supported package. Packages in GitHub's Gradle registry have the type `maven`. Docker images pushed to GitHu...",
			"options": [
				{ "name": "Npm", "value": "npm" },
				{ "name": "Maven", "value": "maven" },
				{ "name": "Rubygems", "value": "rubygems" },
				{ "name": "Docker", "value": "docker" },
				{ "name": "Nuget", "value": "nuget" },
				{ "name": "Container", "value": "container" }
			],
			"displayOptions": {
				"show": { "operation": ["packages/restore-package-for-user"], "resource": ["package"] }
			}
		},
		{
			"name": "package_name",
			"displayName": "Package Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the package",
			"displayOptions": {
				"show": { "operation": ["packages/restore-package-for-user"], "resource": ["package"] }
			}
		},
		{
			"name": "username",
			"displayName": "Username",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The handle for the GitHub user account",
			"displayOptions": {
				"show": { "operation": ["packages/restore-package-for-user"], "resource": ["package"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "token",
					"displayName": "Token",
					"type": "string",
					"default": "",
					"description": "package token",
					"routing": { "send": { "type": "query", "property": "token" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["packages/restore-package-for-user"], "resource": ["package"] }
			}
		},
		{
			"name": "package_type",
			"displayName": "Package Type",
			"type": "options",
			"default": "npm",
			"required": true,
			"description": "The type of supported package. Packages in GitHub's Gradle registry have the type `maven`. Docker images pushed to GitHu...",
			"options": [
				{ "name": "Npm", "value": "npm" },
				{ "name": "Maven", "value": "maven" },
				{ "name": "Rubygems", "value": "rubygems" },
				{ "name": "Docker", "value": "docker" },
				{ "name": "Nuget", "value": "nuget" },
				{ "name": "Container", "value": "container" }
			],
			"displayOptions": {
				"show": {
					"operation": ["packages/get-all-package-versions-for-package-owned-by-user"],
					"resource": ["package"]
				}
			}
		},
		{
			"name": "package_name",
			"displayName": "Package Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the package",
			"displayOptions": {
				"show": {
					"operation": ["packages/get-all-package-versions-for-package-owned-by-user"],
					"resource": ["package"]
				}
			}
		},
		{
			"name": "username",
			"displayName": "Username",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The handle for the GitHub user account",
			"displayOptions": {
				"show": {
					"operation": ["packages/get-all-package-versions-for-package-owned-by-user"],
					"resource": ["package"]
				}
			}
		},
		{
			"name": "package_type",
			"displayName": "Package Type",
			"type": "options",
			"default": "npm",
			"required": true,
			"description": "The type of supported package. Packages in GitHub's Gradle registry have the type `maven`. Docker images pushed to GitHu...",
			"options": [
				{ "name": "Npm", "value": "npm" },
				{ "name": "Maven", "value": "maven" },
				{ "name": "Rubygems", "value": "rubygems" },
				{ "name": "Docker", "value": "docker" },
				{ "name": "Nuget", "value": "nuget" },
				{ "name": "Container", "value": "container" }
			],
			"displayOptions": {
				"show": {
					"operation": ["packages/delete-package-version-for-user"],
					"resource": ["package"]
				}
			}
		},
		{
			"name": "package_name",
			"displayName": "Package Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the package",
			"displayOptions": {
				"show": {
					"operation": ["packages/delete-package-version-for-user"],
					"resource": ["package"]
				}
			}
		},
		{
			"name": "username",
			"displayName": "Username",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The handle for the GitHub user account",
			"displayOptions": {
				"show": {
					"operation": ["packages/delete-package-version-for-user"],
					"resource": ["package"]
				}
			}
		},
		{
			"name": "package_version_id",
			"displayName": "Package Version ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "Unique identifier of the package version",
			"displayOptions": {
				"show": {
					"operation": ["packages/delete-package-version-for-user"],
					"resource": ["package"]
				}
			}
		},
		{
			"name": "package_type",
			"displayName": "Package Type",
			"type": "options",
			"default": "npm",
			"required": true,
			"description": "The type of supported package. Packages in GitHub's Gradle registry have the type `maven`. Docker images pushed to GitHu...",
			"options": [
				{ "name": "Npm", "value": "npm" },
				{ "name": "Maven", "value": "maven" },
				{ "name": "Rubygems", "value": "rubygems" },
				{ "name": "Docker", "value": "docker" },
				{ "name": "Nuget", "value": "nuget" },
				{ "name": "Container", "value": "container" }
			],
			"displayOptions": {
				"show": { "operation": ["packages/get-package-version-for-user"], "resource": ["package"] }
			}
		},
		{
			"name": "package_name",
			"displayName": "Package Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the package",
			"displayOptions": {
				"show": { "operation": ["packages/get-package-version-for-user"], "resource": ["package"] }
			}
		},
		{
			"name": "package_version_id",
			"displayName": "Package Version ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "Unique identifier of the package version",
			"displayOptions": {
				"show": { "operation": ["packages/get-package-version-for-user"], "resource": ["package"] }
			}
		},
		{
			"name": "username",
			"displayName": "Username",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The handle for the GitHub user account",
			"displayOptions": {
				"show": { "operation": ["packages/get-package-version-for-user"], "resource": ["package"] }
			}
		},
		{
			"name": "package_type",
			"displayName": "Package Type",
			"type": "options",
			"default": "npm",
			"required": true,
			"description": "The type of supported package. Packages in GitHub's Gradle registry have the type `maven`. Docker images pushed to GitHu...",
			"options": [
				{ "name": "Npm", "value": "npm" },
				{ "name": "Maven", "value": "maven" },
				{ "name": "Rubygems", "value": "rubygems" },
				{ "name": "Docker", "value": "docker" },
				{ "name": "Nuget", "value": "nuget" },
				{ "name": "Container", "value": "container" }
			],
			"displayOptions": {
				"show": {
					"operation": ["packages/restore-package-version-for-user"],
					"resource": ["package"]
				}
			}
		},
		{
			"name": "package_name",
			"displayName": "Package Name",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The name of the package",
			"displayOptions": {
				"show": {
					"operation": ["packages/restore-package-version-for-user"],
					"resource": ["package"]
				}
			}
		},
		{
			"name": "username",
			"displayName": "Username",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The handle for the GitHub user account",
			"displayOptions": {
				"show": {
					"operation": ["packages/restore-package-version-for-user"],
					"resource": ["package"]
				}
			}
		},
		{
			"name": "package_version_id",
			"displayName": "Package Version ID",
			"type": "number",
			"default": 0,
			"required": true,
			"description": "Unique identifier of the package version",
			"displayOptions": {
				"show": {
					"operation": ["packages/restore-package-version-for-user"],
					"resource": ["package"]
				}
			}
		},
		{
			"name": "username",
			"displayName": "Username",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The handle for the GitHub user account",
			"displayOptions": {
				"show": { "operation": ["projects/list-for-user"], "resource": ["project"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "state",
					"displayName": "State",
					"type": "options",
					"default": "open",
					"description": "Indicates the state of the projects to return",
					"options": [
						{ "name": "Open", "value": "open" },
						{ "name": "Closed", "value": "closed" },
						{ "name": "All", "value": "all" }
					],
					"routing": { "send": { "type": "query", "property": "state" } }
				},
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["projects/list-for-user"], "resource": ["project"] }
			}
		},
		{
			"name": "username",
			"displayName": "Username",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The handle for the GitHub user account",
			"displayOptions": {
				"show": {
					"operation": ["activity/list-received-events-for-user"],
					"resource": ["activity"]
				}
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": {
					"operation": ["activity/list-received-events-for-user"],
					"resource": ["activity"]
				}
			}
		},
		{
			"name": "username",
			"displayName": "Username",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The handle for the GitHub user account",
			"displayOptions": {
				"show": {
					"operation": ["activity/list-received-public-events-for-user"],
					"resource": ["activity"]
				}
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": {
					"operation": ["activity/list-received-public-events-for-user"],
					"resource": ["activity"]
				}
			}
		},
		{
			"name": "username",
			"displayName": "Username",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The handle for the GitHub user account",
			"displayOptions": { "show": { "operation": ["repos/list-for-user"], "resource": ["repo"] } }
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "type",
					"displayName": "Type",
					"type": "options",
					"default": "owner",
					"description": "Limit results to repositories of the specified type",
					"options": [
						{ "name": "All", "value": "all" },
						{ "name": "Owner", "value": "owner" },
						{ "name": "Member", "value": "member" }
					],
					"routing": { "send": { "type": "query", "property": "type" } }
				},
				{
					"name": "sort",
					"displayName": "Sort",
					"type": "options",
					"default": "full_name",
					"description": "The property to sort the results by",
					"options": [
						{ "name": "Created", "value": "created" },
						{ "name": "Updated", "value": "updated" },
						{ "name": "Pushed", "value": "pushed" },
						{ "name": "Full Name", "value": "full_name" }
					],
					"routing": { "send": { "type": "query", "property": "sort" } }
				},
				{
					"name": "direction",
					"displayName": "Direction",
					"type": "options",
					"default": "asc",
					"description": "The order to sort by. Default: `asc` when using `full_name`, otherwise `desc`",
					"options": [{ "name": "Asc", "value": "asc" }, { "name": "Desc", "value": "desc" }],
					"routing": { "send": { "type": "query", "property": "direction" } }
				},
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": { "show": { "operation": ["repos/list-for-user"], "resource": ["repo"] } }
		},
		{
			"name": "username",
			"displayName": "Username",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The handle for the GitHub user account",
			"displayOptions": {
				"show": {
					"operation": ["billing/get-github-actions-billing-user"],
					"resource": ["billing"]
				}
			}
		},
		{
			"name": "username",
			"displayName": "Username",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The handle for the GitHub user account",
			"displayOptions": {
				"show": {
					"operation": ["billing/get-github-packages-billing-user"],
					"resource": ["billing"]
				}
			}
		},
		{
			"name": "username",
			"displayName": "Username",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The handle for the GitHub user account",
			"displayOptions": {
				"show": {
					"operation": ["billing/get-shared-storage-billing-user"],
					"resource": ["billing"]
				}
			}
		},
		{
			"name": "username",
			"displayName": "Username",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The handle for the GitHub user account",
			"displayOptions": {
				"show": { "operation": ["users/list-ssh-signing-keys-for-user"], "resource": ["user"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["users/list-ssh-signing-keys-for-user"], "resource": ["user"] }
			}
		},
		{
			"name": "username",
			"displayName": "Username",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The handle for the GitHub user account",
			"displayOptions": {
				"show": { "operation": ["activity/list-repos-starred-by-user"], "resource": ["activity"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "sort",
					"displayName": "Sort",
					"type": "options",
					"default": "created",
					"description": "The property to sort the results by. `created` means when the repository was starred. `updated` means when the repositor...",
					"options": [
						{ "name": "Created", "value": "created" },
						{ "name": "Updated", "value": "updated" }
					],
					"routing": { "send": { "type": "query", "property": "sort" } }
				},
				{
					"name": "direction",
					"displayName": "Direction",
					"type": "options",
					"default": "desc",
					"description": "The direction to sort the results by",
					"options": [{ "name": "Asc", "value": "asc" }, { "name": "Desc", "value": "desc" }],
					"routing": { "send": { "type": "query", "property": "direction" } }
				},
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["activity/list-repos-starred-by-user"], "resource": ["activity"] }
			}
		},
		{
			"name": "username",
			"displayName": "Username",
			"type": "string",
			"default": "",
			"required": true,
			"description": "The handle for the GitHub user account",
			"displayOptions": {
				"show": { "operation": ["activity/list-repos-watched-by-user"], "resource": ["activity"] }
			}
		},
		{
			"displayName": "Additional Options",
			"name": "additionalOptions",
			"type": "collection",
			"placeholder": "Add Option",
			"default": {},
			"options": [
				{
					"name": "per_page",
					"displayName": "Per Page",
					"type": "number",
					"default": 30,
					"description": "The number of results per page (max 100)",
					"routing": { "send": { "type": "query", "property": "per_page" } }
				},
				{
					"name": "page",
					"displayName": "Page",
					"type": "number",
					"default": 1,
					"description": "Page number of the results to fetch",
					"routing": { "send": { "type": "query", "property": "page" } }
				}
			],
			"displayOptions": {
				"show": { "operation": ["activity/list-repos-watched-by-user"], "resource": ["activity"] }
			}
		}
	]
}